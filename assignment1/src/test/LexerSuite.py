import unittest
from TestUtils import TestLexer

class LexerSuite(unittest.TestCase):
    def test_0(self):
        self.assertTrue(TestLexer.test('''Class _:n{Constructor (Z_:Boolean ;_8,h:String ){Break ;}Constructor (Z,_:Array [Boolean ,053];_,x6:y){Break ;{} }Var z:PL;}Class r{Val _3:Array [Array [String ,03],0b100000];$_Q(){}Val aAH_2O3,ftYz:Array [Array [Int ,0xD],0X2C];}''','''Class,_,:,n,{,Constructor,(,Z_,:,Boolean,;,_8,,,h,:,String,),{,Break,;,},Constructor,(,Z,,,_,:,Array,[,Boolean,,,053,],;,_,,,x6,:,y,),{,Break,;,{,},},Var,z,:,PL,;,},Class,r,{,Val,_3,:,Array,[,Array,[,String,,,03,],,,0b100000,],;,$_Q,(,),{,},Val,aAH_2O3,,,ftYz,:,Array,[,Array,[,Int,,,0xD,],,,0X2C,],;,},<EOF>''',101))

    def test_1(self):
        self.assertTrue(TestLexer.test('''Class G{_N(_,_:Array [Float ,0117];_3816,L,_,_6,m16e,_:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,7],0x63],0X59],0117],0X59],0b1000],0b1],0117],0117]){Break ;Return ;} }Class RI77{Val $6,$8,$1l:Boolean ;}''','''Class,G,{,_N,(,_,,,_,:,Array,[,Float,,,0117,],;,_3816,,,L,,,_,,,_6,,,m16e,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,7,],,,0x63,],,,0X59,],,,0117,],,,0X59,],,,0b1000,],,,0b1,],,,0117,],,,0117,],),{,Break,;,Return,;,},},Class,RI77,{,Val,$6,,,$8,,,$1l,:,Boolean,;,},<EOF>''',101))

    def test_2(self):
        self.assertTrue(TestLexer.test('''Class C:y_{}Class _o_{M(E:Float ;_,_:Jp){}Val $IX,$__,$V_1,_:Array [Array [Array [Array [Array [Float ,0XE],0X30],0b1_1],0B111111],15];}Class _{$_J(){ {}{Val _:_69V;}{}{}{} }}Class __:H{}Class _c{}Class rw{}''','''Class,C,:,y_,{,},Class,_o_,{,M,(,E,:,Float,;,_,,,_,:,Jp,),{,},Val,$IX,,,$__,,,$V_1,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0XE,],,,0X30,],,,0b11,],,,0B111111,],,,15,],;,},Class,_,{,$_J,(,),{,{,},{,Val,_,:,_69V,;,},{,},{,},{,},},},Class,__,:,H,{,},Class,_c,{,},Class,rw,{,},<EOF>''',101))

    def test_3(self):
        self.assertTrue(TestLexer.test('''Class c:by{}Class _{Val $a:Array [Array [Array [Float ,0x97],06],3];}Class Q:ck9{$z(bms,M0_:_;__:Array [Boolean ,0B10000];s_7,_,__1:Int ){}Val v65:Array [Array [String ,0x4],04];}Class u:_{}Class _5:_{Val bu:L___;}''','''Class,c,:,by,{,},Class,_,{,Val,$a,:,Array,[,Array,[,Array,[,Float,,,0x97,],,,06,],,,3,],;,},Class,Q,:,ck9,{,$z,(,bms,,,M0_,:,_,;,__,:,Array,[,Boolean,,,0B10000,],;,s_7,,,_,,,__1,:,Int,),{,},Val,v65,:,Array,[,Array,[,String,,,0x4,],,,04,],;,},Class,u,:,_,{,},Class,_5,:,_,{,Val,bu,:,L___,;,},<EOF>''',101))

    def test_4(self):
        self.assertTrue(TestLexer.test('''Class v:N{}Class k{Var $_2_y:V;}Class _{Destructor (){}Val $_gI,$_V,u_m:Array [Array [Array [Array [Int ,0x8_7_4EB],0b1110],05_51],0b1];}Class dP{}''','''Class,v,:,N,{,},Class,k,{,Var,$_2_y,:,V,;,},Class,_,{,Destructor,(,),{,},Val,$_gI,,,$_V,,,u_m,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x874EB,],,,0b1110,],,,0551,],,,0b1,],;,},Class,dP,{,},<EOF>''',101))

    def test_5(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _R{_A_(_,_:Float ){Break ;} }Class _:_{Constructor (Q:String ){} }Class KC_{}Class _{Constructor (l_4:Float ){} }''','''Class,_,{,},Class,_R,{,_A_,(,_,,,_,:,Float,),{,Break,;,},},Class,_,:,_,{,Constructor,(,Q,:,String,),{,},},Class,KC_,{,},Class,_,{,Constructor,(,l_4,:,Float,),{,},},<EOF>''',101))

    def test_6(self):
        self.assertTrue(TestLexer.test('''Class _:d5{}Class _:_J{}Class _z6M:_{Var $_7Z9_7w:W;Constructor (){Var v:Array [String ,0b1_1];}_(){}Val r___z5_:F;Val O,$_d,_,$_i_1a_:Boolean ;}Class _:_{}Class X{Constructor (){Continue ;}Constructor (X:E9;_8:String ;__:Array [Array [Array [Float ,18],0b11],0b110100]){} }''','''Class,_,:,d5,{,},Class,_,:,_J,{,},Class,_z6M,:,_,{,Var,$_7Z9_7w,:,W,;,Constructor,(,),{,Var,v,:,Array,[,String,,,0b11,],;,},_,(,),{,},Val,r___z5_,:,F,;,Val,O,,,$_d,,,_,,,$_i_1a_,:,Boolean,;,},Class,_,:,_,{,},Class,X,{,Constructor,(,),{,Continue,;,},Constructor,(,X,:,E9,;,_8,:,String,;,__,:,Array,[,Array,[,Array,[,Float,,,18,],,,0b11,],,,0b110100,],),{,},},<EOF>''',101))

    def test_7(self):
        self.assertTrue(TestLexer.test('''Class g2X{$__(_,H,z1__x:Array [Array [Int ,076],0XC];_,Q:Int ;h:_3_;bw7Y:Array [Int ,0b100000];a:Array [Array [Array [Int ,01],34],076];q_:_){}Var _:String ;}''','''Class,g2X,{,$__,(,_,,,H,,,z1__x,:,Array,[,Array,[,Int,,,076,],,,0XC,],;,_,,,Q,:,Int,;,h,:,_3_,;,bw7Y,:,Array,[,Int,,,0b100000,],;,a,:,Array,[,Array,[,Array,[,Int,,,01,],,,34,],,,076,],;,q_,:,_,),{,},Var,_,:,String,;,},<EOF>''',101))

    def test_8(self):
        self.assertTrue(TestLexer.test('''Class __4{Constructor (_67S,zq,g,z:_8____B){Val _,Fe:H;Continue ;Return ;}Var $__:Float ;}Class _:a{L(B:W0){Break ;Continue ;} }Class W3__{}''','''Class,__4,{,Constructor,(,_67S,,,zq,,,g,,,z,:,_8____B,),{,Val,_,,,Fe,:,H,;,Continue,;,Return,;,},Var,$__,:,Float,;,},Class,_,:,a,{,L,(,B,:,W0,),{,Break,;,Continue,;,},},Class,W3__,{,},<EOF>''',101))

    def test_9(self):
        self.assertTrue(TestLexer.test('''Class U:_____7{Val $6,R:Array [Array [Boolean ,0X39_64],0B1110];}Class _2{}Class _J5:_Dqq{Constructor (k_:Array [Array [String ,04],0B1110]){} }''','''Class,U,:,_____7,{,Val,$6,,,R,:,Array,[,Array,[,Boolean,,,0X3964,],,,0B1110,],;,},Class,_2,{,},Class,_J5,:,_Dqq,{,Constructor,(,k_,:,Array,[,Array,[,String,,,04,],,,0B1110,],),{,},},<EOF>''',101))

    def test_10(self):
        self.assertTrue(TestLexer.test('''Class N1{Constructor (_,_6__6:Array [Array [Array [Array [Array [Int ,0B1],7],05],0X1A],18]){} }Class _1{}Class _{}''','''Class,N1,{,Constructor,(,_,,,_6__6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,7,],,,05,],,,0X1A,],,,18,],),{,},},Class,_1,{,},Class,_,{,},<EOF>''',101))

    def test_11(self):
        self.assertTrue(TestLexer.test('''Class T:_6{Constructor (X8,b_:Array [Array [Array [Float ,0x4F],0b1_0],023];LMLgN,_,N:String ;_,_:Boolean ;_i:Array [Array [Array [String ,0b11_0_10_1],023],023]){Break ;Val f:Int ;Break ;}_(Jww,_2__7:String ;_:Array [Float ,0X3]){Break ;}Var $I,$l:Array [Boolean ,0x4F];}''','''Class,T,:,_6,{,Constructor,(,X8,,,b_,:,Array,[,Array,[,Array,[,Float,,,0x4F,],,,0b10,],,,023,],;,LMLgN,,,_,,,N,:,String,;,_,,,_,:,Boolean,;,_i,:,Array,[,Array,[,Array,[,String,,,0b110101,],,,023,],,,023,],),{,Break,;,Val,f,:,Int,;,Break,;,},_,(,Jww,,,_2__7,:,String,;,_,:,Array,[,Float,,,0X3,],),{,Break,;,},Var,$I,,,$l,:,Array,[,Boolean,,,0x4F,],;,},<EOF>''',101))

    def test_12(self):
        self.assertTrue(TestLexer.test('''Class __{$i(_,_,X,_0:Int ;_:Array [Array [Array [Array [Array [Float ,03],0110],81],0b1],0b1000100]){} }Class _:_{Constructor (){} }''','''Class,__,{,$i,(,_,,,_,,,X,,,_0,:,Int,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,03,],,,0110,],,,81,],,,0b1,],,,0b1000100,],),{,},},Class,_,:,_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_13(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){}$N(_:_g6;____3,_,_,_,_:_R;v,kdl4:Boolean ;O,t,L,l,_0:O;_:_U){} }Class _{_434p(t8,dr,D66i2_m_1Vs_7:Float ;_LrN:J;_,_,K,gf,I_4__,h:Cvu;_R:Array [String ,0x1];J:Array [Array [Float ,0B1010],1]){} }''','''Class,_,{,Constructor,(,),{,},$N,(,_,:,_g6,;,____3,,,_,,,_,,,_,,,_,:,_R,;,v,,,kdl4,:,Boolean,;,O,,,t,,,L,,,l,,,_0,:,O,;,_,:,_U,),{,},},Class,_,{,_434p,(,t8,,,dr,,,D66i2_m_1Vs_7,:,Float,;,_LrN,:,J,;,_,,,_,,,K,,,gf,,,I_4__,,,h,:,Cvu,;,_R,:,Array,[,String,,,0x1,],;,J,:,Array,[,Array,[,Float,,,0B1010,],,,1,],),{,},},<EOF>''',101))

    def test_14(self):
        self.assertTrue(TestLexer.test('''Class _:Ie{Var Dp,H,$3z,$b_88:Array [Array [Boolean ,0B1_0011],01];}Class _:b{Constructor (){}Constructor (){} }Class __{_l1_88(x_,__:__){} }''','''Class,_,:,Ie,{,Var,Dp,,,H,,,$3z,,,$b_88,:,Array,[,Array,[,Boolean,,,0B10011,],,,01,],;,},Class,_,:,b,{,Constructor,(,),{,},Constructor,(,),{,},},Class,__,{,_l1_88,(,x_,,,__,:,__,),{,},},<EOF>''',101))

    def test_15(self):
        self.assertTrue(TestLexer.test('''Class G1_3{Constructor (_,MmC_,D:_;_,__P_,__,_:Y_){Break ;} }Class _{Constructor (OP2h1b:__;N:m_B;_4:_3z;h:Int ){} }''','''Class,G1_3,{,Constructor,(,_,,,MmC_,,,D,:,_,;,_,,,__P_,,,__,,,_,:,Y_,),{,Break,;,},},Class,_,{,Constructor,(,OP2h1b,:,__,;,N,:,m_B,;,_4,:,_3z,;,h,:,Int,),{,},},<EOF>''',101))

    def test_16(self):
        self.assertTrue(TestLexer.test('''Class _:xN{}Class _U:_Q5{Var pi_:Array [Array [Float ,042],0b1];}Class _:__C{_i(e,Ys,k:Array [Array [Int ,042],042];_2_3:Array [Array [Boolean ,29],8]){} }''','''Class,_,:,xN,{,},Class,_U,:,_Q5,{,Var,pi_,:,Array,[,Array,[,Float,,,042,],,,0b1,],;,},Class,_,:,__C,{,_i,(,e,,,Ys,,,k,:,Array,[,Array,[,Int,,,042,],,,042,],;,_2_3,:,Array,[,Array,[,Boolean,,,29,],,,8,],),{,},},<EOF>''',101))

    def test_17(self):
        self.assertTrue(TestLexer.test('''Class e:_9{Val $p:M;__07(){Val __:Array [Array [Array [String ,0b1],032],0x38];}Constructor (){} }Class __{}Class c2u:_7{}''','''Class,e,:,_9,{,Val,$p,:,M,;,__07,(,),{,Val,__,:,Array,[,Array,[,Array,[,String,,,0b1,],,,032,],,,0x38,],;,},Constructor,(,),{,},},Class,__,{,},Class,c2u,:,_7,{,},<EOF>''',101))

    def test_18(self):
        self.assertTrue(TestLexer.test('''Class r{$1(_X25,__O_b:_;_48,_,g1:Int ;_:_4_Hlc){Break ;} }Class _{Var Y_:Float ;Destructor (){ {} }}Class v_{}Class K{}''','''Class,r,{,$1,(,_X25,,,__O_b,:,_,;,_48,,,_,,,g1,:,Int,;,_,:,_4_Hlc,),{,Break,;,},},Class,_,{,Var,Y_,:,Float,;,Destructor,(,),{,{,},},},Class,v_,{,},Class,K,{,},<EOF>''',101))

    def test_19(self):
        self.assertTrue(TestLexer.test('''Class uK{$2(_,_:Boolean ){Break ;}Destructor (){}Destructor (){} }Class _J:N2{Var $yo4:Array [Array [Int ,0B1101],0B1];}''','''Class,uK,{,$2,(,_,,,_,:,Boolean,),{,Break,;,},Destructor,(,),{,},Destructor,(,),{,},},Class,_J,:,N2,{,Var,$yo4,:,Array,[,Array,[,Int,,,0B1101,],,,0B1,],;,},<EOF>''',101))

    def test_20(self):
        self.assertTrue(TestLexer.test('''Class v64_E{}Class _Tj146:_{Constructor (g6I09_:Array [Array [Array [String ,0X21],27],70];J7_:Array [Int ,0B10010]){} }''','''Class,v64_E,{,},Class,_Tj146,:,_,{,Constructor,(,g6I09_,:,Array,[,Array,[,Array,[,String,,,0X21,],,,27,],,,70,],;,J7_,:,Array,[,Int,,,0B10010,],),{,},},<EOF>''',101))

    def test_21(self):
        self.assertTrue(TestLexer.test('''Class C45_:_{}Class FW_{Destructor (){Return ;}Val E_,$H_x,_A,N:Array [Array [Array [Array [Array [Array [Boolean ,0B1110],0x33],6],023],0b110110],023];}Class __:_M{Var $_,Q02wo2b_,D_:Float ;}''','''Class,C45_,:,_,{,},Class,FW_,{,Destructor,(,),{,Return,;,},Val,E_,,,$H_x,,,_A,,,N,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1110,],,,0x33,],,,6,],,,023,],,,0b110110,],,,023,],;,},Class,__,:,_M,{,Var,$_,,,Q02wo2b_,,,D_,:,Float,;,},<EOF>''',101))

    def test_22(self):
        self.assertTrue(TestLexer.test('''Class OB{}Class __9__{Val $NuR:Array [Array [Array [Array [Int ,0b1],75],0b1_0],75];Constructor (Q9s,Y,L:Array [Array [Float ,9],0B110];i:Array [Float ,0b1]){} }''','''Class,OB,{,},Class,__9__,{,Val,$NuR,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,75,],,,0b10,],,,75,],;,Constructor,(,Q9s,,,Y,,,L,:,Array,[,Array,[,Float,,,9,],,,0B110,],;,i,:,Array,[,Float,,,0b1,],),{,},},<EOF>''',101))

    def test_23(self):
        self.assertTrue(TestLexer.test('''Class __{}Class __{}Class _h{Constructor (){} }Class _s:T{Destructor (){} }Class m_:_{}Class h{Val $2,r,$2:C;Val _,TA:Array [Int ,0B101_11_10];Var l__n:Float ;Var $16,C_0:Array [Int ,0xB9];Destructor (){} }''','''Class,__,{,},Class,__,{,},Class,_h,{,Constructor,(,),{,},},Class,_s,:,T,{,Destructor,(,),{,},},Class,m_,:,_,{,},Class,h,{,Val,$2,,,r,,,$2,:,C,;,Val,_,,,TA,:,Array,[,Int,,,0B1011110,],;,Var,l__n,:,Float,;,Var,$16,,,C_0,:,Array,[,Int,,,0xB9,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_24(self):
        self.assertTrue(TestLexer.test('''Class W__C1:t_Y{}Class _UP_A56{Constructor (q5,us:Boolean ;N_,C_,_,f8,_e,_:e;_L_:Array [Boolean ,0X27];Mv:Array [Array [Float ,03_7],60];VBv,i9__,_u_:a;H_:Di){Break ;} }''','''Class,W__C1,:,t_Y,{,},Class,_UP_A56,{,Constructor,(,q5,,,us,:,Boolean,;,N_,,,C_,,,_,,,f8,,,_e,,,_,:,e,;,_L_,:,Array,[,Boolean,,,0X27,],;,Mv,:,Array,[,Array,[,Float,,,037,],,,60,],;,VBv,,,i9__,,,_u_,:,a,;,H_,:,Di,),{,Break,;,},},<EOF>''',101))

    def test_25(self):
        self.assertTrue(TestLexer.test('''Class _{$T_1(){} }Class _{Val _,n79,q:Array [Array [Int ,0x1E],036];}Class ___4{Var $_,_2_:Array [Int ,036];Destructor (){} }Class B__:_{}Class k:d{}Class i{}''','''Class,_,{,$T_1,(,),{,},},Class,_,{,Val,_,,,n79,,,q,:,Array,[,Array,[,Int,,,0x1E,],,,036,],;,},Class,___4,{,Var,$_,,,_2_,:,Array,[,Int,,,036,],;,Destructor,(,),{,},},Class,B__,:,_,{,},Class,k,:,d,{,},Class,i,{,},<EOF>''',101))

    def test_26(self):
        self.assertTrue(TestLexer.test('''Class _0{Constructor (z:Array [Array [Array [Array [Array [Float ,0X6],0x16],0x7],64],64];_d6t_2,_,_,J_r8,x:_;_:z__24;p_:Boolean ){Break ;}$_(){ {} }}''','''Class,_0,{,Constructor,(,z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X6,],,,0x16,],,,0x7,],,,64,],,,64,],;,_d6t_2,,,_,,,_,,,J_r8,,,x,:,_,;,_,:,z__24,;,p_,:,Boolean,),{,Break,;,},$_,(,),{,{,},},},<EOF>''',101))

    def test_27(self):
        self.assertTrue(TestLexer.test('''Class d:nY{}Class _02{Val $9,_:_7;Destructor (){_::$___();}Constructor (){} }Class _{}Class W:_{Var $_:Boolean ;Destructor (){} }''','''Class,d,:,nY,{,},Class,_02,{,Val,$9,,,_,:,_7,;,Destructor,(,),{,_,::,$___,(,),;,},Constructor,(,),{,},},Class,_,{,},Class,W,:,_,{,Var,$_,:,Boolean,;,Destructor,(,),{,},},<EOF>''',101))

    def test_28(self):
        self.assertTrue(TestLexer.test('''Class _:_r3Gy8_59YI{Constructor (I:Array [Array [Array [Array [Array [Boolean ,0106],03_6],0B100_1],55],0B1000111]){} }''','''Class,_,:,_r3Gy8_59YI,{,Constructor,(,I,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0106,],,,036,],,,0B1001,],,,55,],,,0B1000111,],),{,},},<EOF>''',101))

    def test_29(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class T{Q(){}Constructor (){}Var $0:Array [Array [Array [Array [String ,0X2_4],36_7_9],0x27],0X9_D];__(){} }''','''Class,_,:,_,{,},Class,T,{,Q,(,),{,},Constructor,(,),{,},Var,$0,:,Array,[,Array,[,Array,[,Array,[,String,,,0X24,],,,3679,],,,0x27,],,,0X9D,],;,__,(,),{,},},<EOF>''',101))

    def test_30(self):
        self.assertTrue(TestLexer.test('''Class l:_{Var $_,$3:Boolean ;}Class j{Constructor (B,g4y,_:_;x6_,M:_PN5;_,W,_G__m,_9__,o:l83;e5,__4__,_,L,_:A){Var _,WM9:_;} }Class _M__M{}Class B:_2c{}''','''Class,l,:,_,{,Var,$_,,,$3,:,Boolean,;,},Class,j,{,Constructor,(,B,,,g4y,,,_,:,_,;,x6_,,,M,:,_PN5,;,_,,,W,,,_G__m,,,_9__,,,o,:,l83,;,e5,,,__4__,,,_,,,L,,,_,:,A,),{,Var,_,,,WM9,:,_,;,},},Class,_M__M,{,},Class,B,:,_2c,{,},<EOF>''',101))

    def test_31(self):
        self.assertTrue(TestLexer.test('''Class _o:_6{Constructor (){}Val _1_,$a:Array [Array [Array [Boolean ,0b1],0b1_0_0_10],0B1];Val $6,$nu:Float ;}''','''Class,_o,:,_6,{,Constructor,(,),{,},Val,_1_,,,$a,:,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,0b10010,],,,0B1,],;,Val,$6,,,$nu,:,Float,;,},<EOF>''',101))

    def test_32(self):
        self.assertTrue(TestLexer.test('''Class g:Z{__(i:Array [Array [Array [Array [Float ,0B1100000],0B1100000],72],6]){Continue ;Continue ;} }Class R:_{_y(){_::$0_()._1();Continue ;} }''','''Class,g,:,Z,{,__,(,i,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B1100000,],,,0B1100000,],,,72,],,,6,],),{,Continue,;,Continue,;,},},Class,R,:,_,{,_y,(,),{,_,::,$0_,(,),.,_1,(,),;,Continue,;,},},<EOF>''',101))

    def test_33(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class I__8s:xG{Constructor (Qn9:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0X73_E],0x4E],7_516],0120],11],0b1010100],0X8],6]){} }''','''Class,_,:,_,{,},Class,I__8s,:,xG,{,Constructor,(,Qn9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X73E,],,,0x4E,],,,7516,],,,0120,],,,11,],,,0b1010100,],,,0X8,],,,6,],),{,},},<EOF>''',101))

    def test_34(self):
        self.assertTrue(TestLexer.test('''Class X6:_9{Constructor (r6z:Float ;g3_G_3V,____,a5_,i,t3,E_:Array [Float ,0B1_0]){}Destructor (){Break ;} }Class _:_{Destructor (){}Destructor (){Break ;} }''','''Class,X6,:,_9,{,Constructor,(,r6z,:,Float,;,g3_G_3V,,,____,,,a5_,,,i,,,t3,,,E_,:,Array,[,Float,,,0B10,],),{,},Destructor,(,),{,Break,;,},},Class,_,:,_,{,Destructor,(,),{,},Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_35(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (n,D1,fqg,__,nch,R,t:Array [Array [Array [Boolean ,89],0X5],6];a:String ){Return ;}$1____(qa:Float ;_3_,_:Array [Array [Array [Array [String ,0B1_0],9],0123],89];_:Array [Array [Array [Int ,07],0X7],03]){} }''','''Class,_,{,Constructor,(,n,,,D1,,,fqg,,,__,,,nch,,,R,,,t,:,Array,[,Array,[,Array,[,Boolean,,,89,],,,0X5,],,,6,],;,a,:,String,),{,Return,;,},$1____,(,qa,:,Float,;,_3_,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0B10,],,,9,],,,0123,],,,89,],;,_,:,Array,[,Array,[,Array,[,Int,,,07,],,,0X7,],,,03,],),{,},},<EOF>''',101))

    def test_36(self):
        self.assertTrue(TestLexer.test('''Class _1_:_vr{Var v:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,2_574],0b100001],05_4],0B1_0],1],062],5],062];}''','''Class,_1_,:,_vr,{,Var,v,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,2574,],,,0b100001,],,,054,],,,0B10,],,,1,],,,062,],,,5,],,,062,],;,},<EOF>''',101))

    def test_37(self):
        self.assertTrue(TestLexer.test('''Class ___{Var J,$4,$L:Int ;Constructor (A,b__l1_:Array [Int ,067];m,V_c__,Q4,_,__,_5:String ){}Constructor (_v_:Boolean ){Var _:Array [Array [Array [Array [Array [Int ,16],0B1],0xE],0b1],0B110110];}Var _7,$__:_;}Class _{}''','''Class,___,{,Var,J,,,$4,,,$L,:,Int,;,Constructor,(,A,,,b__l1_,:,Array,[,Int,,,067,],;,m,,,V_c__,,,Q4,,,_,,,__,,,_5,:,String,),{,},Constructor,(,_v_,:,Boolean,),{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,16,],,,0B1,],,,0xE,],,,0b1,],,,0B110110,],;,},Var,_7,,,$__,:,_,;,},Class,_,{,},<EOF>''',101))

    def test_38(self):
        self.assertTrue(TestLexer.test('''Class _398t{}Class _:_k{Constructor (){Break ;} }Class _2_:__{$s(_R,g1,M___,_o:Array [String ,0B10101]){}Val $v:Array [Float ,0b1];Val $74,$Y:String ;}''','''Class,_398t,{,},Class,_,:,_k,{,Constructor,(,),{,Break,;,},},Class,_2_,:,__,{,$s,(,_R,,,g1,,,M___,,,_o,:,Array,[,String,,,0B10101,],),{,},Val,$v,:,Array,[,Float,,,0b1,],;,Val,$74,,,$Y,:,String,;,},<EOF>''',101))

    def test_39(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (F,u,V:Int ;_,I,_,q,mi:Array [Float ,04_3_043];_9:_;_:Array [Array [Array [Boolean ,0112],0b1],07_700];Sp__,ku,__:Int ;_,j0_w23,_5D,H:Array [String ,6];G,_A6q,_,O62,_8,_,_K4:Boolean ;_3:_){} }Class u_{$_(t8E_,q,I_,__,_,_:b;NU_E:String ;a_,k_7:_5;O_0,W_:Float ){} }''','''Class,_,{,Constructor,(,F,,,u,,,V,:,Int,;,_,,,I,,,_,,,q,,,mi,:,Array,[,Float,,,043043,],;,_9,:,_,;,_,:,Array,[,Array,[,Array,[,Boolean,,,0112,],,,0b1,],,,07700,],;,Sp__,,,ku,,,__,:,Int,;,_,,,j0_w23,,,_5D,,,H,:,Array,[,String,,,6,],;,G,,,_A6q,,,_,,,O62,,,_8,,,_,,,_K4,:,Boolean,;,_3,:,_,),{,},},Class,u_,{,$_,(,t8E_,,,q,,,I_,,,__,,,_,,,_,:,b,;,NU_E,:,String,;,a_,,,k_7,:,_5,;,O_0,,,W_,:,Float,),{,},},<EOF>''',101))

    def test_40(self):
        self.assertTrue(TestLexer.test('''Class _:G{Val z:Float ;$37_(_:String ;_:Array [Array [Array [Array [Int ,68],041],15],0B1_11]){}Destructor (){}Constructor (_:_C){} }''','''Class,_,:,G,{,Val,z,:,Float,;,$37_,(,_,:,String,;,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,68,],,,041,],,,15,],,,0B111,],),{,},Destructor,(,),{,},Constructor,(,_,:,_C,),{,},},<EOF>''',101))

    def test_41(self):
        self.assertTrue(TestLexer.test('''Class _e:C{Destructor (){} }Class _mwk{}Class NKQ:Rc1{$9(S7:__i;O:Array [Boolean ,0110]){}Val __:_;Destructor (){}Var $_,__1:e;}Class _k{Val $O,D,_:NU1_6_770;}''','''Class,_e,:,C,{,Destructor,(,),{,},},Class,_mwk,{,},Class,NKQ,:,Rc1,{,$9,(,S7,:,__i,;,O,:,Array,[,Boolean,,,0110,],),{,},Val,__,:,_,;,Destructor,(,),{,},Var,$_,,,__1,:,e,;,},Class,_k,{,Val,$O,,,D,,,_,:,NU1_6_770,;,},<EOF>''',101))

    def test_42(self):
        self.assertTrue(TestLexer.test('''Class _{}Class K_O{Val v8,A:_u_;}Class __{Constructor (_T3Z_4:x3H){}Constructor (){}Destructor (){ {} }Destructor (){ {{Break ;}ri::$Y_9();} }}Class _:G{}''','''Class,_,{,},Class,K_O,{,Val,v8,,,A,:,_u_,;,},Class,__,{,Constructor,(,_T3Z_4,:,x3H,),{,},Constructor,(,),{,},Destructor,(,),{,{,},},Destructor,(,),{,{,{,Break,;,},ri,::,$Y_9,(,),;,},},},Class,_,:,G,{,},<EOF>''',101))

    def test_43(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{__(_H5E_Z_,_,I:Float ;q:Array [Array [Float ,05],9_42];___64_,__p:Boolean ;Z:Array [Array [Float ,7_6_2],03];_,_:Array [Int ,63]){} }Class _{_(){ {} }Destructor (){Continue ;Continue ;} }''','''Class,_,{,},Class,_,{,__,(,_H5E_Z_,,,_,,,I,:,Float,;,q,:,Array,[,Array,[,Float,,,05,],,,942,],;,___64_,,,__p,:,Boolean,;,Z,:,Array,[,Array,[,Float,,,762,],,,03,],;,_,,,_,:,Array,[,Int,,,63,],),{,},},Class,_,{,_,(,),{,{,},},Destructor,(,),{,Continue,;,Continue,;,},},<EOF>''',101))

    def test_44(self):
        self.assertTrue(TestLexer.test('''Class _1__7{}Class zCFi:____{Destructor (){g_::$4_();}Val _1,$T3:Float ;Val W,$_9:Array [Int ,0X34];}Class _:Y{Constructor (_,c9,o_9:J){} }Class N:__{}''','''Class,_1__7,{,},Class,zCFi,:,____,{,Destructor,(,),{,g_,::,$4_,(,),;,},Val,_1,,,$T3,:,Float,;,Val,W,,,$_9,:,Array,[,Int,,,0X34,],;,},Class,_,:,Y,{,Constructor,(,_,,,c9,,,o_9,:,J,),{,},},Class,N,:,__,{,},<EOF>''',101))

    def test_45(self):
        self.assertTrue(TestLexer.test('''Class _4_{Constructor (_,__,_,v__,H,d:__;_,nL19_,mL_,D_u7l,T,_n:Array [Array [Array [Array [Float ,0x5D],013],87],0x1]){} }Class q{_l_(){} }Class _{}Class _:_{Val _:Array [Array [Boolean ,5],0x5D];}Class _8{Constructor (i:Array [Array [Array [Array [Array [Array [String ,047],0B1],047],0xA],0XD9_9D_C_8_0_F],7];jd:Array [Array [Array [Float ,0X5E],87],047];_5:Array [Array [Boolean ,6],0X5E];_T,S,_:String ;_x,E_57:_){} }''','''Class,_4_,{,Constructor,(,_,,,__,,,_,,,v__,,,H,,,d,:,__,;,_,,,nL19_,,,mL_,,,D_u7l,,,T,,,_n,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x5D,],,,013,],,,87,],,,0x1,],),{,},},Class,q,{,_l_,(,),{,},},Class,_,{,},Class,_,:,_,{,Val,_,:,Array,[,Array,[,Boolean,,,5,],,,0x5D,],;,},Class,_8,{,Constructor,(,i,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,047,],,,0B1,],,,047,],,,0xA,],,,0XD99DC80F,],,,7,],;,jd,:,Array,[,Array,[,Array,[,Float,,,0X5E,],,,87,],,,047,],;,_5,:,Array,[,Array,[,Boolean,,,6,],,,0X5E,],;,_T,,,S,,,_,:,String,;,_x,,,E_57,:,_,),{,},},<EOF>''',101))

    def test_46(self):
        self.assertTrue(TestLexer.test('''Class __{Constructor (o_,_,t4N:Boolean ;__,S_:Array [Array [Float ,0X25],62];o__,H,R,i_96_,_,eO,m0:F8;H:Array [Array [Float ,0x3A],0X6B_6]){}Val r:Array [Int ,0x3A];}''','''Class,__,{,Constructor,(,o_,,,_,,,t4N,:,Boolean,;,__,,,S_,:,Array,[,Array,[,Float,,,0X25,],,,62,],;,o__,,,H,,,R,,,i_96_,,,_,,,eO,,,m0,:,F8,;,H,:,Array,[,Array,[,Float,,,0x3A,],,,0X6B6,],),{,},Val,r,:,Array,[,Int,,,0x3A,],;,},<EOF>''',101))

    def test_47(self):
        self.assertTrue(TestLexer.test('''Class s:R{Constructor (n:Float ){}_(){}Constructor (v2,c__7,i2:Int ;_j,v:Array [Array [String ,0x5D],2_67]){} }Class __JmE:y_4_6{Var $Z__5:Array [Array [Float ,55],0X35];}''','''Class,s,:,R,{,Constructor,(,n,:,Float,),{,},_,(,),{,},Constructor,(,v2,,,c__7,,,i2,:,Int,;,_j,,,v,:,Array,[,Array,[,String,,,0x5D,],,,267,],),{,},},Class,__JmE,:,y_4_6,{,Var,$Z__5,:,Array,[,Array,[,Float,,,55,],,,0X35,],;,},<EOF>''',101))

    def test_48(self):
        self.assertTrue(TestLexer.test('''Class _{L_(I6LL:e;__0_,h__,_:__){}Constructor (){}Destructor (){} }Class Oam:_4{}Class _{Val V:c;Destructor (){} }Class _1{}''','''Class,_,{,L_,(,I6LL,:,e,;,__0_,,,h__,,,_,:,__,),{,},Constructor,(,),{,},Destructor,(,),{,},},Class,Oam,:,_4,{,},Class,_,{,Val,V,:,c,;,Destructor,(,),{,},},Class,_1,{,},<EOF>''',101))

    def test_49(self):
        self.assertTrue(TestLexer.test('''Class _:_A{}Class A_{Var L:Array [Array [Array [Float ,40_4],1],6_9];Constructor (){Break ;}Var __,_,_iX:E;$9(){} }''','''Class,_,:,_A,{,},Class,A_,{,Var,L,:,Array,[,Array,[,Array,[,Float,,,404,],,,1,],,,69,],;,Constructor,(,),{,Break,;,},Var,__,,,_,,,_iX,:,E,;,$9,(,),{,},},<EOF>''',101))

    def test_50(self):
        self.assertTrue(TestLexer.test('''Class _8078:__{Destructor (){}Bv9(g,_U,_Vao,Kw,_,_M13B62_,bv:O){} }Class j{}Class _392_78:_35{Var _:_;Destructor (){Return ;} }Class _2:_{$47_b6(){} }''','''Class,_8078,:,__,{,Destructor,(,),{,},Bv9,(,g,,,_U,,,_Vao,,,Kw,,,_,,,_M13B62_,,,bv,:,O,),{,},},Class,j,{,},Class,_392_78,:,_35,{,Var,_,:,_,;,Destructor,(,),{,Return,;,},},Class,_2,:,_,{,$47_b6,(,),{,},},<EOF>''',101))

    def test_51(self):
        self.assertTrue(TestLexer.test('''Class _:G{}Class D9A:_{}Class _H9_2_{Destructor (){}_(){Return ;}Constructor (__P_4,w96,p_8:Int ;dm,O,_Z23Y77Y:_;B,T_:String ){} }''','''Class,_,:,G,{,},Class,D9A,:,_,{,},Class,_H9_2_,{,Destructor,(,),{,},_,(,),{,Return,;,},Constructor,(,__P_4,,,w96,,,p_8,:,Int,;,dm,,,O,,,_Z23Y77Y,:,_,;,B,,,T_,:,String,),{,},},<EOF>''',101))

    def test_52(self):
        self.assertTrue(TestLexer.test('''Class l{}Class S{}Class _{Val $_11__,$d,$X:Array [Array [Array [Array [Array [Array [Float ,0X6],0b11100],05],0B11_11],0B1],0x18];Destructor (){Break ;}Var _02_I_:e;}Class kN{}''','''Class,l,{,},Class,S,{,},Class,_,{,Val,$_11__,,,$d,,,$X,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X6,],,,0b11100,],,,05,],,,0B1111,],,,0B1,],,,0x18,],;,Destructor,(,),{,Break,;,},Var,_02_I_,:,e,;,},Class,kN,{,},<EOF>''',101))

    def test_53(self):
        self.assertTrue(TestLexer.test('''Class _:t{Constructor (){} }Class _:_{Destructor (){Return ;}$_8(ew,Z:Boolean ;J:e;_5F_8_69_G:Array [Array [String ,0b1],0B1011111]){} }Class gv_:_0{}Class _:d_{}Class e_{}Class _{}Class L:_{}''','''Class,_,:,t,{,Constructor,(,),{,},},Class,_,:,_,{,Destructor,(,),{,Return,;,},$_8,(,ew,,,Z,:,Boolean,;,J,:,e,;,_5F_8_69_G,:,Array,[,Array,[,String,,,0b1,],,,0B1011111,],),{,},},Class,gv_,:,_0,{,},Class,_,:,d_,{,},Class,e_,{,},Class,_,{,},Class,L,:,_,{,},<EOF>''',101))

    def test_54(self):
        self.assertTrue(TestLexer.test('''Class _:_7{Constructor (L:_3g;S__,__:Array [Array [Array [Boolean ,0xD8_F],0b1100000],042]){}Constructor (a:String ){Return ;O::$q();} }''','''Class,_,:,_7,{,Constructor,(,L,:,_3g,;,S__,,,__,:,Array,[,Array,[,Array,[,Boolean,,,0xD8F,],,,0b1100000,],,,042,],),{,},Constructor,(,a,:,String,),{,Return,;,O,::,$q,(,),;,},},<EOF>''',101))

    def test_55(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class __2{}Class _w:qv{}Class b{}Class _Z{Constructor (_Qb_7:__73_N;_,_0_6,Z:_){}Destructor (){} }''','''Class,_,:,_,{,},Class,__2,{,},Class,_w,:,qv,{,},Class,b,{,},Class,_Z,{,Constructor,(,_Qb_7,:,__73_N,;,_,,,_0_6,,,Z,:,_,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_56(self):
        self.assertTrue(TestLexer.test('''Class ls___{Constructor (){}Val E:_;Destructor (){}_(A2:Int ;_5:_;_,F,_z,j_:_6;_E_6:Array [Array [String ,0x6_1],0b1001];_u1,_:_){ {} }}Class _D{}Class _{}''','''Class,ls___,{,Constructor,(,),{,},Val,E,:,_,;,Destructor,(,),{,},_,(,A2,:,Int,;,_5,:,_,;,_,,,F,,,_z,,,j_,:,_6,;,_E_6,:,Array,[,Array,[,String,,,0x61,],,,0b1001,],;,_u1,,,_,:,_,),{,{,},},},Class,_D,{,},Class,_,{,},<EOF>''',101))

    def test_57(self):
        self.assertTrue(TestLexer.test('''Class _q{Destructor (){}Var J_9,__:W_3RW;Destructor (){} }Class _V{Var $587:String ;D1(_S:_){Return ;Continue ;} }Class Q{}''','''Class,_q,{,Destructor,(,),{,},Var,J_9,,,__,:,W_3RW,;,Destructor,(,),{,},},Class,_V,{,Var,$587,:,String,;,D1,(,_S,:,_,),{,Return,;,Continue,;,},},Class,Q,{,},<EOF>''',101))

    def test_58(self):
        self.assertTrue(TestLexer.test('''Class _V4{Constructor (){.79E1._75._._h();} }Class m{Var $s,r,$_T,__,_:_;Constructor (){} }Class a:_z5{}Class h_9__z{}Class _751:_{}''','''Class,_V4,{,Constructor,(,),{,.79E1,.,_75,.,_,.,_h,(,),;,},},Class,m,{,Var,$s,,,r,,,$_T,,,__,,,_,:,_,;,Constructor,(,),{,},},Class,a,:,_z5,{,},Class,h_9__z,{,},Class,_751,:,_,{,},<EOF>''',101))

    def test_59(self):
        self.assertTrue(TestLexer.test('''Class _o{Var $_5:Array [Int ,5];Val A:Float ;}Class _:H{Var $__9:_Q;Var $Z3b:Array [Array [Boolean ,0b100_1_1],0b1];Val $6:String ;Var x0:Boolean ;___(z,t:Float ;X,_P,M:Int ){} }''','''Class,_o,{,Var,$_5,:,Array,[,Int,,,5,],;,Val,A,:,Float,;,},Class,_,:,H,{,Var,$__9,:,_Q,;,Var,$Z3b,:,Array,[,Array,[,Boolean,,,0b10011,],,,0b1,],;,Val,$6,:,String,;,Var,x0,:,Boolean,;,___,(,z,,,t,:,Float,;,X,,,_P,,,M,:,Int,),{,},},<EOF>''',101))

    def test_60(self):
        self.assertTrue(TestLexer.test('''Class v{Val $2r,i5,$3_2,$6:Array [Array [String ,1_8],07];$8(_0695,_32_:_){} }Class J_3b0:_{Constructor (){}Constructor (V:Array [Array [String ,0xF_D_5],03];L:Int ;_r,ij,_:O;T:String ){Continue ;}Destructor (){} }''','''Class,v,{,Val,$2r,,,i5,,,$3_2,,,$6,:,Array,[,Array,[,String,,,18,],,,07,],;,$8,(,_0695,,,_32_,:,_,),{,},},Class,J_3b0,:,_,{,Constructor,(,),{,},Constructor,(,V,:,Array,[,Array,[,String,,,0xFD5,],,,03,],;,L,:,Int,;,_r,,,ij,,,_,:,O,;,T,:,String,),{,Continue,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_61(self):
        self.assertTrue(TestLexer.test('''Class _:p{Val _x:Float ;Constructor (){}Var _78,P4020:Boolean ;}Class _:v{Val N,$_:Array [Boolean ,03];}Class B_q:H6_{}''','''Class,_,:,p,{,Val,_x,:,Float,;,Constructor,(,),{,},Var,_78,,,P4020,:,Boolean,;,},Class,_,:,v,{,Val,N,,,$_,:,Array,[,Boolean,,,03,],;,},Class,B_q,:,H6_,{,},<EOF>''',101))

    def test_62(self):
        self.assertTrue(TestLexer.test('''Class _75_{Constructor (){ {} }Constructor (_5_wF:__){}Z(_3,_:Array [Array [Array [Array [Array [Int ,16],03],0x9],0x9F],0x2F];_:_;_g2G,E6_46_T:String ){}Val _:Float ;}Class G8{}''','''Class,_75_,{,Constructor,(,),{,{,},},Constructor,(,_5_wF,:,__,),{,},Z,(,_3,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,16,],,,03,],,,0x9,],,,0x9F,],,,0x2F,],;,_,:,_,;,_g2G,,,E6_46_T,:,String,),{,},Val,_,:,Float,;,},Class,G8,{,},<EOF>''',101))

    def test_63(self):
        self.assertTrue(TestLexer.test('''Class __{Constructor (){} }Class c_:Y_n7a{Destructor (){} }Class _:N5__{Val $_,$0_:Int ;Constructor (g,_2mMI,_,i:_9C){}I(){_4::$8();}Val $719e:Float ;}''','''Class,__,{,Constructor,(,),{,},},Class,c_,:,Y_n7a,{,Destructor,(,),{,},},Class,_,:,N5__,{,Val,$_,,,$0_,:,Int,;,Constructor,(,g,,,_2mMI,,,_,,,i,:,_9C,),{,},I,(,),{,_4,::,$8,(,),;,},Val,$719e,:,Float,;,},<EOF>''',101))

    def test_64(self):
        self.assertTrue(TestLexer.test('''Class W{Val $8,_5WZ17,_:Boolean ;d(){} }Class c:h{Constructor (W,_9_,tS__,I:Int ;I,i_9gD,_7_H:Int ;Q:Ef;_,X:Array [Array [Array [Boolean ,0xC0],0x1],48];D0,E,__4,U__5_:Array [Float ,8_9]){}Var _6K_:Float ;}Class NVc{Val $M:Boolean ;}''','''Class,W,{,Val,$8,,,_5WZ17,,,_,:,Boolean,;,d,(,),{,},},Class,c,:,h,{,Constructor,(,W,,,_9_,,,tS__,,,I,:,Int,;,I,,,i_9gD,,,_7_H,:,Int,;,Q,:,Ef,;,_,,,X,:,Array,[,Array,[,Array,[,Boolean,,,0xC0,],,,0x1,],,,48,],;,D0,,,E,,,__4,,,U__5_,:,Array,[,Float,,,89,],),{,},Var,_6K_,:,Float,;,},Class,NVc,{,Val,$M,:,Boolean,;,},<EOF>''',101))

    def test_65(self):
        self.assertTrue(TestLexer.test('''Class __:_e{$0_(y49_4:Array [Array [Array [Array [Boolean ,02],055],0B1001010],0B1_0]){}Var _Z9__:Array [Array [Array [Boolean ,0B1001010],0b10_0],81];}''','''Class,__,:,_e,{,$0_,(,y49_4,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,02,],,,055,],,,0B1001010,],,,0B10,],),{,},Var,_Z9__,:,Array,[,Array,[,Array,[,Boolean,,,0B1001010,],,,0b100,],,,81,],;,},<EOF>''',101))

    def test_66(self):
        self.assertTrue(TestLexer.test('''Class _:_K8{Destructor (){} }Class ji:j{Val $u:Array [Array [Array [Array [Float ,07],0B1],0b1_0],5];}Class _87:E7{}Class X9A{Val _n1E:v_;}''','''Class,_,:,_K8,{,Destructor,(,),{,},},Class,ji,:,j,{,Val,$u,:,Array,[,Array,[,Array,[,Array,[,Float,,,07,],,,0B1,],,,0b10,],,,5,],;,},Class,_87,:,E7,{,},Class,X9A,{,Val,_n1E,:,v_,;,},<EOF>''',101))

    def test_67(self):
        self.assertTrue(TestLexer.test('''Class J_7C:b{Val y333,b,VG_4:Array [Array [Boolean ,0B1010111],0x22];Constructor (___:Array [Array [Boolean ,0xA_A],1_8_7];_S_:_Jp){Val C_1T:Int ;Continue ;} }''','''Class,J_7C,:,b,{,Val,y333,,,b,,,VG_4,:,Array,[,Array,[,Boolean,,,0B1010111,],,,0x22,],;,Constructor,(,___,:,Array,[,Array,[,Boolean,,,0xAA,],,,187,],;,_S_,:,_Jp,),{,Val,C_1T,:,Int,;,Continue,;,},},<EOF>''',101))

    def test_68(self):
        self.assertTrue(TestLexer.test('''Class c_7:_t{Var _JB:_f;Val $4p:_;Var _,$_O8,$Q_,y:String ;}Class _:__{Constructor (iBk:Array [Array [Array [Array [Int ,41],0B11],8],0B111100]){} }Class __:_4{}''','''Class,c_7,:,_t,{,Var,_JB,:,_f,;,Val,$4p,:,_,;,Var,_,,,$_O8,,,$Q_,,,y,:,String,;,},Class,_,:,__,{,Constructor,(,iBk,:,Array,[,Array,[,Array,[,Array,[,Int,,,41,],,,0B11,],,,8,],,,0B111100,],),{,},},Class,__,:,_4,{,},<EOF>''',101))

    def test_69(self):
        self.assertTrue(TestLexer.test('''Class Y99_:y_6{Destructor (){}Constructor (q6Rw:Float ){_K::$6_();}Constructor (J:V8_;_v1_p,X_:String ;___,_Z:Array [Array [Float ,0x16],0X52]){} }Class ___n6{}''','''Class,Y99_,:,y_6,{,Destructor,(,),{,},Constructor,(,q6Rw,:,Float,),{,_K,::,$6_,(,),;,},Constructor,(,J,:,V8_,;,_v1_p,,,X_,:,String,;,___,,,_Z,:,Array,[,Array,[,Float,,,0x16,],,,0X52,],),{,},},Class,___n6,{,},<EOF>''',101))

    def test_70(self):
        self.assertTrue(TestLexer.test('''Class Qk:__{___(_M,_,__t_,n:Int ;_,j:Array [Float ,0b1];g_9m_:Array [Array [Float ,10],0b1];_,B:Float ;__:Float ){Break ;} }''','''Class,Qk,:,__,{,___,(,_M,,,_,,,__t_,,,n,:,Int,;,_,,,j,:,Array,[,Float,,,0b1,],;,g_9m_,:,Array,[,Array,[,Float,,,10,],,,0b1,],;,_,,,B,:,Float,;,__,:,Float,),{,Break,;,},},<EOF>''',101))

    def test_71(self):
        self.assertTrue(TestLexer.test('''Class I{}Class C{X_B4_H(H:_;_,__:Float ){Break ;}Constructor (__:String ;_,ly,_,_,__k__1,Q:_W_47){}Var z_sx_,$_:Float ;}''','''Class,I,{,},Class,C,{,X_B4_H,(,H,:,_,;,_,,,__,:,Float,),{,Break,;,},Constructor,(,__,:,String,;,_,,,ly,,,_,,,_,,,__k__1,,,Q,:,_W_47,),{,},Var,z_sx_,,,$_,:,Float,;,},<EOF>''',101))

    def test_72(self):
        self.assertTrue(TestLexer.test('''Class Z{Var C:Boolean ;}Class _{}Class _Fw_2v:_{Var $t13:Float ;U66_(){}Val $b_,I:_;}Class _8:E{}Class ___T32rZZ:__2{Var __r,$Jv:Array [Int ,0B1100100];}Class R2:d67e{}Class _{___4A(){} }''','''Class,Z,{,Var,C,:,Boolean,;,},Class,_,{,},Class,_Fw_2v,:,_,{,Var,$t13,:,Float,;,U66_,(,),{,},Val,$b_,,,I,:,_,;,},Class,_8,:,E,{,},Class,___T32rZZ,:,__2,{,Var,__r,,,$Jv,:,Array,[,Int,,,0B1100100,],;,},Class,R2,:,d67e,{,},Class,_,{,___4A,(,),{,},},<EOF>''',101))

    def test_73(self):
        self.assertTrue(TestLexer.test('''Class t{Destructor (){}Constructor (_,_,N__,_:Array [Array [Array [Array [Boolean ,03],20],0XC6],067];_8m:_9){}Val $0:Int ;}''','''Class,t,{,Destructor,(,),{,},Constructor,(,_,,,_,,,N__,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,03,],,,20,],,,0XC6,],,,067,],;,_8m,:,_9,),{,},Val,$0,:,Int,;,},<EOF>''',101))

    def test_74(self):
        self.assertTrue(TestLexer.test('''Class _{Var $__7:Array [Int ,42];Var $628,$_7D:Array [Array [Int ,0x3D],0X57D7B];}Class b{}Class l:z{z7_1(_,p_,K3Y0:Array [Int ,1_7_8_7]){} }Class _2kw{}''','''Class,_,{,Var,$__7,:,Array,[,Int,,,42,],;,Var,$628,,,$_7D,:,Array,[,Array,[,Int,,,0x3D,],,,0X57D7B,],;,},Class,b,{,},Class,l,:,z,{,z7_1,(,_,,,p_,,,K3Y0,:,Array,[,Int,,,1787,],),{,},},Class,_2kw,{,},<EOF>''',101))

    def test_75(self):
        self.assertTrue(TestLexer.test('''Class A_:x{Destructor (){ {_::$68t_();Break ;} }Val $ld,$y,W:Array [Array [Array [Array [Boolean ,4],0X3B],02_5],0B1011000];}Class Pq{}''','''Class,A_,:,x,{,Destructor,(,),{,{,_,::,$68t_,(,),;,Break,;,},},Val,$ld,,,$y,,,W,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,4,],,,0X3B,],,,025,],,,0B1011000,],;,},Class,Pq,{,},<EOF>''',101))

    def test_76(self):
        self.assertTrue(TestLexer.test('''Class _{}Class krD_{Destructor (){}Var $B_,v1_:Array [Array [String ,025],025];}Class _{_5I(){} }Class _0J_B_:o{Constructor (_,_,o_,__:Array [Array [String ,9],0XA]){Continue ;Return ;}Var $_,g,_1,p:Int ;}''','''Class,_,{,},Class,krD_,{,Destructor,(,),{,},Var,$B_,,,v1_,:,Array,[,Array,[,String,,,025,],,,025,],;,},Class,_,{,_5I,(,),{,},},Class,_0J_B_,:,o,{,Constructor,(,_,,,_,,,o_,,,__,:,Array,[,Array,[,String,,,9,],,,0XA,],),{,Continue,;,Return,;,},Var,$_,,,g,,,_1,,,p,:,Int,;,},<EOF>''',101))

    def test_77(self):
        self.assertTrue(TestLexer.test('''Class N_{}Class g:D_Y_{Val $N_Dd,K7:Array [Array [Int ,5_13],36];Destructor (){} }Class Z:__5{Var $NMA_O__:Rjy9BUq;}Class M{}''','''Class,N_,{,},Class,g,:,D_Y_,{,Val,$N_Dd,,,K7,:,Array,[,Array,[,Int,,,513,],,,36,],;,Destructor,(,),{,},},Class,Z,:,__5,{,Var,$NMA_O__,:,Rjy9BUq,;,},Class,M,{,},<EOF>''',101))

    def test_78(self):
        self.assertTrue(TestLexer.test('''Class _:H{Destructor (){} }Class x:_{Constructor (_:w;_,___1,_:T;_:k4;_:Array [Array [Boolean ,0B1000100],0b1_0]){} }''','''Class,_,:,H,{,Destructor,(,),{,},},Class,x,:,_,{,Constructor,(,_,:,w,;,_,,,___1,,,_,:,T,;,_,:,k4,;,_,:,Array,[,Array,[,Boolean,,,0B1000100,],,,0b10,],),{,},},<EOF>''',101))

    def test_79(self):
        self.assertTrue(TestLexer.test('''Class _a_{}Class T{}Class cS:n2{Destructor (){} }Class _{}Class K_{}Class _:__l0_27{}Class x:_6{Val $9:String ;}Class m7{}Class _{}''','''Class,_a_,{,},Class,T,{,},Class,cS,:,n2,{,Destructor,(,),{,},},Class,_,{,},Class,K_,{,},Class,_,:,__l0_27,{,},Class,x,:,_6,{,Val,$9,:,String,;,},Class,m7,{,},Class,_,{,},<EOF>''',101))

    def test_80(self):
        self.assertTrue(TestLexer.test('''Class _:_{Destructor (){} }Class _{}Class __{Val $__:Array [Array [Array [Array [Int ,0b1010010],03],07],0XE];Val $4:Q;}''','''Class,_,:,_,{,Destructor,(,),{,},},Class,_,{,},Class,__,{,Val,$__,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1010010,],,,03,],,,07,],,,0XE,],;,Val,$4,:,Q,;,},<EOF>''',101))

    def test_81(self):
        self.assertTrue(TestLexer.test('''Class _0{Val $24:Array [Array [String ,34],011];Destructor (){} }Class W_{Val _A:Array [Array [Int ,26],26];}Class _U:__t_{}''','''Class,_0,{,Val,$24,:,Array,[,Array,[,String,,,34,],,,011,],;,Destructor,(,),{,},},Class,W_,{,Val,_A,:,Array,[,Array,[,Int,,,26,],,,26,],;,},Class,_U,:,__t_,{,},<EOF>''',101))

    def test_82(self):
        self.assertTrue(TestLexer.test('''Class b:__{Var U__2,_,$U,_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0B1000010],0X56],39],0x9],90],9],043_2],0XE_F],0X56];}''','''Class,b,:,__,{,Var,U__2,,,_,,,$U,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1000010,],,,0X56,],,,39,],,,0x9,],,,90,],,,9,],,,0432,],,,0XEF,],,,0X56,],;,},<EOF>''',101))

    def test_83(self):
        self.assertTrue(TestLexer.test('''Class C6{Constructor (_,_,q7__,L,v_,__Q:Array [Array [Array [Float ,0b101111],7_9_5],0b1_1];n73,_:Array [String ,0x48];__4,_,_7,_,v:String ){e::$jg();} }Class a:_Q_{}''','''Class,C6,{,Constructor,(,_,,,_,,,q7__,,,L,,,v_,,,__Q,:,Array,[,Array,[,Array,[,Float,,,0b101111,],,,795,],,,0b11,],;,n73,,,_,:,Array,[,String,,,0x48,],;,__4,,,_,,,_7,,,_,,,v,:,String,),{,e,::,$jg,(,),;,},},Class,a,:,_Q_,{,},<EOF>''',101))

    def test_84(self):
        self.assertTrue(TestLexer.test('''Class _:_7{Constructor (){A_88::$l();} }Class _:_{Constructor (___e,_:_){} }Class __0:k{Destructor (){}Var _:Array [Array [Boolean ,0x69_9],0B1001100];}Class xq{Destructor (){} }Class Q_{}Class _z0_z{Constructor (){} }''','''Class,_,:,_7,{,Constructor,(,),{,A_88,::,$l,(,),;,},},Class,_,:,_,{,Constructor,(,___e,,,_,:,_,),{,},},Class,__0,:,k,{,Destructor,(,),{,},Var,_,:,Array,[,Array,[,Boolean,,,0x699,],,,0B1001100,],;,},Class,xq,{,Destructor,(,),{,},},Class,Q_,{,},Class,_z0_z,{,Constructor,(,),{,},},<EOF>''',101))

    def test_85(self):
        self.assertTrue(TestLexer.test('''Class _3:f{Val _,Nc_3:Array [Array [Array [Array [Array [Array [Array [Int ,0114],0b1],0b1000111],0b11_1],0B1_1],4],0114];}''','''Class,_3,:,f,{,Val,_,,,Nc_3,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0114,],,,0b1,],,,0b1000111,],,,0b111,],,,0B11,],,,4,],,,0114,],;,},<EOF>''',101))

    def test_86(self):
        self.assertTrue(TestLexer.test('''Class X:l2{_9(){}Constructor (){.0E+8._7._.l.a();Break ;}Constructor (E_I37Z:Array [Float ,4];GZ_:Array [Array [Array [Int ,0X61],1],0B100];R:Array [Int ,046];s40__:Int ){}Constructor (){} }''','''Class,X,:,l2,{,_9,(,),{,},Constructor,(,),{,.0E+8,.,_7,.,_,.,l,.,a,(,),;,Break,;,},Constructor,(,E_I37Z,:,Array,[,Float,,,4,],;,GZ_,:,Array,[,Array,[,Array,[,Int,,,0X61,],,,1,],,,0B100,],;,R,:,Array,[,Int,,,046,],;,s40__,:,Int,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_87(self):
        self.assertTrue(TestLexer.test('''Class Rb_{d(X,l:Array [Array [Array [Array [String ,0X3],0B11100],68],0B11100]){}w6L(){}Constructor (__y:_){}Var v:Int ;}''','''Class,Rb_,{,d,(,X,,,l,:,Array,[,Array,[,Array,[,Array,[,String,,,0X3,],,,0B11100,],,,68,],,,0B11100,],),{,},w6L,(,),{,},Constructor,(,__y,:,_,),{,},Var,v,:,Int,;,},<EOF>''',101))

    def test_88(self):
        self.assertTrue(TestLexer.test('''Class __4{Constructor (P,_0:Array [Array [Array [Array [Int ,0b10001],0X55],4_554_1],02]){_nQ::$__();} }Class A:F{}Class _i:__Z{}''','''Class,__4,{,Constructor,(,P,,,_0,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b10001,],,,0X55,],,,45541,],,,02,],),{,_nQ,::,$__,(,),;,},},Class,A,:,F,{,},Class,_i,:,__Z,{,},<EOF>''',101))

    def test_89(self):
        self.assertTrue(TestLexer.test('''Class P51_{Val $9O,c,_:Array [Boolean ,032];}Class _R_q5_:_{Destructor (){}Val $0__:String ;Constructor (N,_:_5){Return ;} }''','''Class,P51_,{,Val,$9O,,,c,,,_,:,Array,[,Boolean,,,032,],;,},Class,_R_q5_,:,_,{,Destructor,(,),{,},Val,$0__,:,String,;,Constructor,(,N,,,_,:,_5,),{,Return,;,},},<EOF>''',101))

    def test_90(self):
        self.assertTrue(TestLexer.test('''Class R_:A{Constructor (N:O8F){} }Class _W_{Constructor (f,Q_35,g6__:_;A:g;_2_:String ;n_9:v_){Continue ;Break ;} }''','''Class,R_,:,A,{,Constructor,(,N,:,O8F,),{,},},Class,_W_,{,Constructor,(,f,,,Q_35,,,g6__,:,_,;,A,:,g,;,_2_,:,String,;,n_9,:,v_,),{,Continue,;,Break,;,},},<EOF>''',101))

    def test_91(self):
        self.assertTrue(TestLexer.test('''Class _Q_7:G4v{Constructor (_i,_:Array [String ,0X1A];H:Float ;r,x:Array [Array [Boolean ,0134],36];_z:Boolean ){} }''','''Class,_Q_7,:,G4v,{,Constructor,(,_i,,,_,:,Array,[,String,,,0X1A,],;,H,:,Float,;,r,,,x,:,Array,[,Array,[,Boolean,,,0134,],,,36,],;,_z,:,Boolean,),{,},},<EOF>''',101))

    def test_92(self):
        self.assertTrue(TestLexer.test('''Class _:Q6{Constructor (O,_____,_,_0_:Array [Array [Float ,026],0B1000];__:String ;__,O8,swO_:Array [Boolean ,0B1000];T8_9Z:_;S_,U,a3_B_2:Array [Array [Array [Array [Boolean ,6],31],0X23],0x8]){} }''','''Class,_,:,Q6,{,Constructor,(,O,,,_____,,,_,,,_0_,:,Array,[,Array,[,Float,,,026,],,,0B1000,],;,__,:,String,;,__,,,O8,,,swO_,:,Array,[,Boolean,,,0B1000,],;,T8_9Z,:,_,;,S_,,,U,,,a3_B_2,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,6,],,,31,],,,0X23,],,,0x8,],),{,},},<EOF>''',101))

    def test_93(self):
        self.assertTrue(TestLexer.test('''Class _:E{}Class U:Ow__{$8(_9n,k:Int ;__,__H,c:wb){} }Class ____v4_K:w6{Var _,C_:Array [Array [Int ,31],067];Val $Z,$_:Float ;}Class _x:_6{}''','''Class,_,:,E,{,},Class,U,:,Ow__,{,$8,(,_9n,,,k,:,Int,;,__,,,__H,,,c,:,wb,),{,},},Class,____v4_K,:,w6,{,Var,_,,,C_,:,Array,[,Array,[,Int,,,31,],,,067,],;,Val,$Z,,,$_,:,Float,;,},Class,_x,:,_6,{,},<EOF>''',101))

    def test_94(self):
        self.assertTrue(TestLexer.test('''Class _{Var _,U,I4:Array [Array [Array [Boolean ,50],020],0X9];Val $o:Array [String ,0b1];Var $_:K7_o3;Destructor (){}Val Z2_,_,U4a:Array [Float ,06];Constructor (){}Var $53,z_:_7;}''','''Class,_,{,Var,_,,,U,,,I4,:,Array,[,Array,[,Array,[,Boolean,,,50,],,,020,],,,0X9,],;,Val,$o,:,Array,[,String,,,0b1,],;,Var,$_,:,K7_o3,;,Destructor,(,),{,},Val,Z2_,,,_,,,U4a,:,Array,[,Float,,,06,],;,Constructor,(,),{,},Var,$53,,,z_,:,_7,;,},<EOF>''',101))

    def test_95(self):
        self.assertTrue(TestLexer.test('''Class Y{$_(_,__u12_:_;y5:Array [Array [Array [Int ,76],053_1635_2_7],0B110001];__:_;U:_59;_r8,___k:Boolean ){Break ;} }''','''Class,Y,{,$_,(,_,,,__u12_,:,_,;,y5,:,Array,[,Array,[,Array,[,Int,,,76,],,,053163527,],,,0B110001,],;,__,:,_,;,U,:,_59,;,_r8,,,___k,:,Boolean,),{,Break,;,},},<EOF>''',101))

    def test_96(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _:_{Constructor (m,h_,_,f9U:Array [String ,0X4E];_,_Xp:Array [Array [Array [Float ,88],05],0B11_1_0];_,_:__;X,T:String ){}Val $M_:String ;Destructor (){} }''','''Class,_,{,},Class,_,:,_,{,Constructor,(,m,,,h_,,,_,,,f9U,:,Array,[,String,,,0X4E,],;,_,,,_Xp,:,Array,[,Array,[,Array,[,Float,,,88,],,,05,],,,0B1110,],;,_,,,_,:,__,;,X,,,T,:,String,),{,},Val,$M_,:,String,;,Destructor,(,),{,},},<EOF>''',101))

    def test_97(self):
        self.assertTrue(TestLexer.test('''Class X{Constructor (_c:B;Q,_VSc,t1w0,Cx_,m,__iL,wUP,_1,bb,_7__,_a,_:Array [Int ,0B101110];V,__:Array [Array [Float ,05],055];_,_,_j,r:Array [Float ,2_3_8];_c:_){}__(_J2q:Float ;k:Boolean ){} }''','''Class,X,{,Constructor,(,_c,:,B,;,Q,,,_VSc,,,t1w0,,,Cx_,,,m,,,__iL,,,wUP,,,_1,,,bb,,,_7__,,,_a,,,_,:,Array,[,Int,,,0B101110,],;,V,,,__,:,Array,[,Array,[,Float,,,05,],,,055,],;,_,,,_,,,_j,,,r,:,Array,[,Float,,,238,],;,_c,:,_,),{,},__,(,_J2q,:,Float,;,k,:,Boolean,),{,},},<EOF>''',101))

    def test_98(self):
        self.assertTrue(TestLexer.test('''Class j_r{}Class a{Val M__01,$_,s:Array [Array [Boolean ,0XDC_9],070];Var $fx:Array [Int ,010];K9(_1_5:y4D__w){} }Class pW_:VB8{}''','''Class,j_r,{,},Class,a,{,Val,M__01,,,$_,,,s,:,Array,[,Array,[,Boolean,,,0XDC9,],,,070,],;,Var,$fx,:,Array,[,Int,,,010,],;,K9,(,_1_5,:,y4D__w,),{,},},Class,pW_,:,VB8,{,},<EOF>''',101))

    def test_99(self):
        self.assertTrue(TestLexer.test('''Class _:D_{$98_2(_K,_:vI){} }Class __{Destructor (){Return ;__4::$8();}Var a0,$ST:Boolean ;}Class S:f4{}Class V5{}''','''Class,_,:,D_,{,$98_2,(,_K,,,_,:,vI,),{,},},Class,__,{,Destructor,(,),{,Return,;,__4,::,$8,(,),;,},Var,a0,,,$ST,:,Boolean,;,},Class,S,:,f4,{,},Class,V5,{,},<EOF>''',101))

    def test_100(self):
        self.assertTrue(TestLexer.test('''Class BDi:f{r4B(s_,_,__:Array [Array [Int ,025],2];f,_Z:Int ;_Fo_,_,_:Array [Array [Array [Boolean ,025],2],025];__:r){} }''','''Class,BDi,:,f,{,r4B,(,s_,,,_,,,__,:,Array,[,Array,[,Int,,,025,],,,2,],;,f,,,_Z,:,Int,;,_Fo_,,,_,,,_,:,Array,[,Array,[,Array,[,Boolean,,,025,],,,2,],,,025,],;,__,:,r,),{,},},<EOF>''',101))

    def test_101(self):
        self.assertTrue(TestLexer.test('''Class _:Fiw1{Constructor (JMd_:__;__Va:String ;d___:_;_:Boolean ;__GV197L,U8,_:String ;l,O:Array [Boolean ,035];a,s:Boolean ){} }''','''Class,_,:,Fiw1,{,Constructor,(,JMd_,:,__,;,__Va,:,String,;,d___,:,_,;,_,:,Boolean,;,__GV197L,,,U8,,,_,:,String,;,l,,,O,:,Array,[,Boolean,,,035,],;,a,,,s,:,Boolean,),{,},},<EOF>''',101))

    def test_102(self):
        self.assertTrue(TestLexer.test('''Class s{Constructor (_:_;ro:Array [Array [Boolean ,0b1_0],0B100100]){Continue ;}$e(){Var _9_,Y_,j,_,_:_8;} }Class _A:__6_{}Class v{Var $24g_____,$__M:Array [Array [Float ,0B100100],0b110101];}''','''Class,s,{,Constructor,(,_,:,_,;,ro,:,Array,[,Array,[,Boolean,,,0b10,],,,0B100100,],),{,Continue,;,},$e,(,),{,Var,_9_,,,Y_,,,j,,,_,,,_,:,_8,;,},},Class,_A,:,__6_,{,},Class,v,{,Var,$24g_____,,,$__M,:,Array,[,Array,[,Float,,,0B100100,],,,0b110101,],;,},<EOF>''',101))

    def test_103(self):
        self.assertTrue(TestLexer.test('''Class _4i_A:_{Constructor (){}Constructor (Dj6_,_,_:Float ;n5,__X_9g4:Array [String ,0X1D]){Val _:Array [Array [Array [Array [String ,0B1_01],0X8],052],66_54_217];} }Class _{$V46o_D(){} }''','''Class,_4i_A,:,_,{,Constructor,(,),{,},Constructor,(,Dj6_,,,_,,,_,:,Float,;,n5,,,__X_9g4,:,Array,[,String,,,0X1D,],),{,Val,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0B101,],,,0X8,],,,052,],,,6654217,],;,},},Class,_,{,$V46o_D,(,),{,},},<EOF>''',101))

    def test_104(self):
        self.assertTrue(TestLexer.test('''Class XN{}Class W{QS58(W:_C;_hgq:_S){} }Class s_s:_0{Constructor (Y,_p_N_:Array [String ,0B10]){} }Class _6I:_{Val W___:Float ;}''','''Class,XN,{,},Class,W,{,QS58,(,W,:,_C,;,_hgq,:,_S,),{,},},Class,s_s,:,_0,{,Constructor,(,Y,,,_p_N_,:,Array,[,String,,,0B10,],),{,},},Class,_6I,:,_,{,Val,W___,:,Float,;,},<EOF>''',101))

    def test_105(self):
        self.assertTrue(TestLexer.test('''Class S{}Class j_:M_{Val $A8cn5,$4:Array [Array [Array [Array [Float ,0B1_10],36],1],035];Destructor (){} }Class z{}Class x:_{}''','''Class,S,{,},Class,j_,:,M_,{,Val,$A8cn5,,,$4,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B110,],,,36,],,,1,],,,035,],;,Destructor,(,),{,},},Class,z,{,},Class,x,:,_,{,},<EOF>''',101))

    def test_106(self):
        self.assertTrue(TestLexer.test('''Class _{Val $J1_,$Hv2:_;Val _,B,Pf4,_:Boolean ;Constructor (_8U4,_:Boolean ;J,__:Array [Array [Array [Array [String ,040],040],50],0b1011101];_:String ){} }''','''Class,_,{,Val,$J1_,,,$Hv2,:,_,;,Val,_,,,B,,,Pf4,,,_,:,Boolean,;,Constructor,(,_8U4,,,_,:,Boolean,;,J,,,__,:,Array,[,Array,[,Array,[,Array,[,String,,,040,],,,040,],,,50,],,,0b1011101,],;,_,:,String,),{,},},<EOF>''',101))

    def test_107(self):
        self.assertTrue(TestLexer.test('''Class __5{$95(z,tEs,R6:_b){} }Class M:___0{Destructor (){}Constructor (m_XP5,r:_){Return ;}Var $_,_:Float ;}Class __:__{Var _,s_b2_:Float ;}Class _{}''','''Class,__5,{,$95,(,z,,,tEs,,,R6,:,_b,),{,},},Class,M,:,___0,{,Destructor,(,),{,},Constructor,(,m_XP5,,,r,:,_,),{,Return,;,},Var,$_,,,_,:,Float,;,},Class,__,:,__,{,Var,_,,,s_b2_,:,Float,;,},Class,_,{,},<EOF>''',101))

    def test_108(self):
        self.assertTrue(TestLexer.test('''Class VP95__:K1_{}Class d:_0{Constructor (_:e;f3_,_7:Array [Array [Array [Array [Float ,0x4E],3_2],5],07_6]){} }Class _{}Class ___5{Constructor (){} }''','''Class,VP95__,:,K1_,{,},Class,d,:,_0,{,Constructor,(,_,:,e,;,f3_,,,_7,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x4E,],,,32,],,,5,],,,076,],),{,},},Class,_,{,},Class,___5,{,Constructor,(,),{,},},<EOF>''',101))

    def test_109(self):
        self.assertTrue(TestLexer.test('''Class __9:b{_(_7,_4:Array [Array [Array [Float ,37],37],1]){} }Class _:Cx{Var _:Array [Int ,0X1];}Class y_:_4{Destructor (){} }''','''Class,__9,:,b,{,_,(,_7,,,_4,:,Array,[,Array,[,Array,[,Float,,,37,],,,37,],,,1,],),{,},},Class,_,:,Cx,{,Var,_,:,Array,[,Int,,,0X1,],;,},Class,y_,:,_4,{,Destructor,(,),{,},},<EOF>''',101))

    def test_110(self):
        self.assertTrue(TestLexer.test('''Class _k:_{}Class h236R{}Class _1:_x_Zz_{Constructor (){}Destructor (){}Destructor (){Continue ;}Var $m,$_0__,$22:Array [Array [Array [Int ,0x20],0B1],0B111001];Var DG_,$U:Boolean ;}''','''Class,_k,:,_,{,},Class,h236R,{,},Class,_1,:,_x_Zz_,{,Constructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,Continue,;,},Var,$m,,,$_0__,,,$22,:,Array,[,Array,[,Array,[,Int,,,0x20,],,,0B1,],,,0B111001,],;,Var,DG_,,,$U,:,Boolean,;,},<EOF>''',101))

    def test_111(self):
        self.assertTrue(TestLexer.test('''Class _M{Var h:Float ;}Class o:q__{}Class w{Val k_ONM:Array [Boolean ,0x5_1];}Class O_{}Class UF__:_6{Destructor (){} }''','''Class,_M,{,Var,h,:,Float,;,},Class,o,:,q__,{,},Class,w,{,Val,k_ONM,:,Array,[,Boolean,,,0x51,],;,},Class,O_,{,},Class,UF__,:,_6,{,Destructor,(,),{,},},<EOF>''',101))

    def test_112(self):
        self.assertTrue(TestLexer.test('''Class __:N{Constructor (__:Array [Int ,0b1011111]){Continue ;}Val T,$6:Float ;Constructor (o:_;bL,EU,_:_){} }Class _j_3:_r{}Class e:z{}''','''Class,__,:,N,{,Constructor,(,__,:,Array,[,Int,,,0b1011111,],),{,Continue,;,},Val,T,,,$6,:,Float,;,Constructor,(,o,:,_,;,bL,,,EU,,,_,:,_,),{,},},Class,_j_3,:,_r,{,},Class,e,:,z,{,},<EOF>''',101))

    def test_113(self):
        self.assertTrue(TestLexer.test('''Class B0BU_{}Class h_{}Class _:C{}Class _:___4H{$__687(){Continue ;}Val $_h:w;Val $1wP5,_,B_,_:Array [Array [Float ,0X4F],90];}''','''Class,B0BU_,{,},Class,h_,{,},Class,_,:,C,{,},Class,_,:,___4H,{,$__687,(,),{,Continue,;,},Val,$_h,:,w,;,Val,$1wP5,,,_,,,B_,,,_,:,Array,[,Array,[,Float,,,0X4F,],,,90,],;,},<EOF>''',101))

    def test_114(self):
        self.assertTrue(TestLexer.test('''Class U_{}Class Z_{}Class A:H{Var $_,k_,$_,$3q3,$H:Array [String ,0136];}Class _{Constructor (E:W0GE;A,Z8:_2;F9_:b11_t){} }''','''Class,U_,{,},Class,Z_,{,},Class,A,:,H,{,Var,$_,,,k_,,,$_,,,$3q3,,,$H,:,Array,[,String,,,0136,],;,},Class,_,{,Constructor,(,E,:,W0GE,;,A,,,Z8,:,_2,;,F9_,:,b11_t,),{,},},<EOF>''',101))

    def test_115(self):
        self.assertTrue(TestLexer.test('''Class _9_:_{Destructor (){} }Class _{}Class _:qY_{_(){}_L__(){}$3(){}Var __5L7,_N:c_;}Class _P:T{}Class N:__{}''','''Class,_9_,:,_,{,Destructor,(,),{,},},Class,_,{,},Class,_,:,qY_,{,_,(,),{,},_L__,(,),{,},$3,(,),{,},Var,__5L7,,,_N,:,c_,;,},Class,_P,:,T,{,},Class,N,:,__,{,},<EOF>''',101))

    def test_116(self):
        self.assertTrue(TestLexer.test('''Class _:_p{Constructor (yZt3:p_;Z7_:Boolean ;_:Array [Int ,0134];_,tE:Array [Array [Array [String ,07],94],5];__:___;R:String ){Break ;} }''','''Class,_,:,_p,{,Constructor,(,yZt3,:,p_,;,Z7_,:,Boolean,;,_,:,Array,[,Int,,,0134,],;,_,,,tE,:,Array,[,Array,[,Array,[,String,,,07,],,,94,],,,5,],;,__,:,___,;,R,:,String,),{,Break,;,},},<EOF>''',101))

    def test_117(self):
        self.assertTrue(TestLexer.test('''Class m{Val $NF,_S8_,w,A_s_,$_5__5_0o:_;Destructor (){}_59__4(){}Constructor (Q:Array [Boolean ,0X7];_9:String ){} }''','''Class,m,{,Val,$NF,,,_S8_,,,w,,,A_s_,,,$_5__5_0o,:,_,;,Destructor,(,),{,},_59__4,(,),{,},Constructor,(,Q,:,Array,[,Boolean,,,0X7,],;,_9,:,String,),{,},},<EOF>''',101))

    def test_118(self):
        self.assertTrue(TestLexer.test('''Class H_:_3{Val $s,v,$BV_:d;}Class F_{}Class m7{}Class __D62{}Class __{}Class __{}Class __9:_{Var A0,$__:Array [String ,0X6A8F2_D];}Class n__y_:V{}''','''Class,H_,:,_3,{,Val,$s,,,v,,,$BV_,:,d,;,},Class,F_,{,},Class,m7,{,},Class,__D62,{,},Class,__,{,},Class,__,{,},Class,__9,:,_,{,Var,A0,,,$__,:,Array,[,String,,,0X6A8F2D,],;,},Class,n__y_,:,V,{,},<EOF>''',101))

    def test_119(self):
        self.assertTrue(TestLexer.test('''Class _:c{Constructor (V__g_:Float ){Var _,_:Int ;rU::$O()._231();} }Class e{}Class _{Var _7_:Int ;Constructor (){} }Class n{Val DX,$3,j,$__,$d__A3,_:Float ;}''','''Class,_,:,c,{,Constructor,(,V__g_,:,Float,),{,Var,_,,,_,:,Int,;,rU,::,$O,(,),.,_231,(,),;,},},Class,e,{,},Class,_,{,Var,_7_,:,Int,;,Constructor,(,),{,},},Class,n,{,Val,DX,,,$3,,,j,,,$__,,,$d__A3,,,_,:,Float,;,},<EOF>''',101))

    def test_120(self):
        self.assertTrue(TestLexer.test('''Class _:_{Val $_:Array [Array [Array [Boolean ,0b1_0_0],0b1010010],0704];}Class __q3_{Destructor (){}_(_56,_,o_R6:String ;M6_O,w0,_:__;F___2Y5_:Float ;T_,_9,D,u7:lT){} }Class y5:K{}Class I:_{Val Q_e16_s,_:Array [Float ,0x4B];}''','''Class,_,:,_,{,Val,$_,:,Array,[,Array,[,Array,[,Boolean,,,0b100,],,,0b1010010,],,,0704,],;,},Class,__q3_,{,Destructor,(,),{,},_,(,_56,,,_,,,o_R6,:,String,;,M6_O,,,w0,,,_,:,__,;,F___2Y5_,:,Float,;,T_,,,_9,,,D,,,u7,:,lT,),{,},},Class,y5,:,K,{,},Class,I,:,_,{,Val,Q_e16_s,,,_,:,Array,[,Float,,,0x4B,],;,},<EOF>''',101))

    def test_121(self):
        self.assertTrue(TestLexer.test('''Class _{_(O9v4,F:G){} }Class _5I:_{}Class _{R_(M:N;iJ:__;ac9,c:_){}Var $_,$J2Gg_:nC9;H(E9,_,_:Array [Boolean ,7]){}I(){} }Class __b3_{}''','''Class,_,{,_,(,O9v4,,,F,:,G,),{,},},Class,_5I,:,_,{,},Class,_,{,R_,(,M,:,N,;,iJ,:,__,;,ac9,,,c,:,_,),{,},Var,$_,,,$J2Gg_,:,nC9,;,H,(,E9,,,_,,,_,:,Array,[,Boolean,,,7,],),{,},I,(,),{,},},Class,__b3_,{,},<EOF>''',101))

    def test_122(self):
        self.assertTrue(TestLexer.test('''Class __:x{Destructor (){}Constructor (){}$_6(){}$d5(_:_;h,_X,__:Array [Array [Array [Float ,0xD_E],0B1_0_0],0B111111]){}Constructor (_:String ;_67,yp4,_,_,_gX_,O:Float ){}_6G(){} }''','''Class,__,:,x,{,Destructor,(,),{,},Constructor,(,),{,},$_6,(,),{,},$d5,(,_,:,_,;,h,,,_X,,,__,:,Array,[,Array,[,Array,[,Float,,,0xDE,],,,0B100,],,,0B111111,],),{,},Constructor,(,_,:,String,;,_67,,,yp4,,,_,,,_,,,_gX_,,,O,:,Float,),{,},_6G,(,),{,},},<EOF>''',101))

    def test_123(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){} }Class _:Y{Constructor (_,__,_63,__:Array [String ,5];q,_:Array [Int ,0X27_8];_:Array [String ,0X34];vrP3,_82,_:w_){} }''','''Class,_,{,Destructor,(,),{,},},Class,_,:,Y,{,Constructor,(,_,,,__,,,_63,,,__,:,Array,[,String,,,5,],;,q,,,_,:,Array,[,Int,,,0X278,],;,_,:,Array,[,String,,,0X34,],;,vrP3,,,_82,,,_,:,w_,),{,},},<EOF>''',101))

    def test_124(self):
        self.assertTrue(TestLexer.test('''Class F_{}Class _:__{Constructor (V_,_,_:Boolean ;_Akd,Q:Array [Array [Float ,0b1],22];_,_b__:String ;u,X2G,I_:Array [Array [Int ,04],0XFF_FD]){} }''','''Class,F_,{,},Class,_,:,__,{,Constructor,(,V_,,,_,,,_,:,Boolean,;,_Akd,,,Q,:,Array,[,Array,[,Float,,,0b1,],,,22,],;,_,,,_b__,:,String,;,u,,,X2G,,,I_,:,Array,[,Array,[,Int,,,04,],,,0XFFFD,],),{,},},<EOF>''',101))

    def test_125(self):
        self.assertTrue(TestLexer.test('''Class Z{Constructor (_,D8v,Hs,Y,_1:Array [String ,83];b1,d_:Float ){}Val $_a,$9F7805I_:Array [Array [Array [Int ,0b1_00_10_0],0B1],0b101110];}''','''Class,Z,{,Constructor,(,_,,,D8v,,,Hs,,,Y,,,_1,:,Array,[,String,,,83,],;,b1,,,d_,:,Float,),{,},Val,$_a,,,$9F7805I_,:,Array,[,Array,[,Array,[,Int,,,0b100100,],,,0B1,],,,0b101110,],;,},<EOF>''',101))

    def test_126(self):
        self.assertTrue(TestLexer.test('''Class _O:o{}Class __:x__{$_(_,P,u_9:Int ;_D,_,_:Array [Float ,53];_l,__:_7;vT,E_:Array [Array [Array [Array [String ,0B100000],53],0b1010100],0x3B];_5,_:Array [Array [Float ,2_73_3],0X39]){} }Class _{}''','''Class,_O,:,o,{,},Class,__,:,x__,{,$_,(,_,,,P,,,u_9,:,Int,;,_D,,,_,,,_,:,Array,[,Float,,,53,],;,_l,,,__,:,_7,;,vT,,,E_,:,Array,[,Array,[,Array,[,Array,[,String,,,0B100000,],,,53,],,,0b1010100,],,,0x3B,],;,_5,,,_,:,Array,[,Array,[,Float,,,2733,],,,0X39,],),{,},},Class,_,{,},<EOF>''',101))

    def test_127(self):
        self.assertTrue(TestLexer.test('''Class _Z{}Class _:h{}Class f:_{}Class _{}Class o{Destructor (){Continue ;} }Class _y:B{Destructor (){}Destructor (){} }Class e8_VF2{Constructor (){} }''','''Class,_Z,{,},Class,_,:,h,{,},Class,f,:,_,{,},Class,_,{,},Class,o,{,Destructor,(,),{,Continue,;,},},Class,_y,:,B,{,Destructor,(,),{,},Destructor,(,),{,},},Class,e8_VF2,{,Constructor,(,),{,},},<EOF>''',101))

    def test_128(self):
        self.assertTrue(TestLexer.test('''Class N_f:H{}Class h:S2_{}Class _:_{Var $_0,$11,$_4,_:Array [Array [String ,0B1],051_4_473_2_3_7];Val $8_,$f:Int ;}''','''Class,N_f,:,H,{,},Class,h,:,S2_,{,},Class,_,:,_,{,Var,$_0,,,$11,,,$_4,,,_,:,Array,[,Array,[,String,,,0B1,],,,0514473237,],;,Val,$8_,,,$f,:,Int,;,},<EOF>''',101))

    def test_129(self):
        self.assertTrue(TestLexer.test('''Class __c:_94r_{}Class _:_vR{}Class H:d_O{Var $8:VY;Constructor (__3:X2;_5:W69;_6_9,C:Array [String ,41]){}Var q55:__;}''','''Class,__c,:,_94r_,{,},Class,_,:,_vR,{,},Class,H,:,d_O,{,Var,$8,:,VY,;,Constructor,(,__3,:,X2,;,_5,:,W69,;,_6_9,,,C,:,Array,[,String,,,41,],),{,},Var,q55,:,__,;,},<EOF>''',101))

    def test_130(self):
        self.assertTrue(TestLexer.test('''Class W__{Var b:Array [Array [Array [Array [Array [Array [Float ,031],0x2D],02],04],5],0b1];Var $_:Boolean ;Val _,_8,_:_;}''','''Class,W__,{,Var,b,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,031,],,,0x2D,],,,02,],,,04,],,,5,],,,0b1,],;,Var,$_,:,Boolean,;,Val,_,,,_8,,,_,:,_,;,},<EOF>''',101))

    def test_131(self):
        self.assertTrue(TestLexer.test('''Class _:X{$v(_,_,l,_:String ;__,_,__o0__,_,L_4_,_:_;i,g1V:Array [Array [String ,05],0126];i:F_V){} }Class sx{}''','''Class,_,:,X,{,$v,(,_,,,_,,,l,,,_,:,String,;,__,,,_,,,__o0__,,,_,,,L_4_,,,_,:,_,;,i,,,g1V,:,Array,[,Array,[,String,,,05,],,,0126,],;,i,:,F_V,),{,},},Class,sx,{,},<EOF>''',101))

    def test_132(self):
        self.assertTrue(TestLexer.test('''Class _{Val $_,__hf,$du,$9,$G,_F,$m,$4,$__:g;Destructor (){Break ;Continue ;}Var at2,_:Float ;Destructor (){} }''','''Class,_,{,Val,$_,,,__hf,,,$du,,,$9,,,$G,,,_F,,,$m,,,$4,,,$__,:,g,;,Destructor,(,),{,Break,;,Continue,;,},Var,at2,,,_,:,Float,;,Destructor,(,),{,},},<EOF>''',101))

    def test_133(self):
        self.assertTrue(TestLexer.test('''Class G_:C{Var $0,N,_,$24,$_J_61:Array [Array [Float ,0XE],0B110010];$N9Hzm(){} }Class _9_{Constructor (__:Boolean ){} }''','''Class,G_,:,C,{,Var,$0,,,N,,,_,,,$24,,,$_J_61,:,Array,[,Array,[,Float,,,0XE,],,,0B110010,],;,$N9Hzm,(,),{,},},Class,_9_,{,Constructor,(,__,:,Boolean,),{,},},<EOF>''',101))

    def test_134(self):
        self.assertTrue(TestLexer.test('''Class I_{Val $8_:Array [Array [Array [Array [Array [Array [String ,0b1010001],0X3A],0XD],0133],65_476],0XE];}Class ___8_:f{}Class _:e2{Destructor (){}F(){} }''','''Class,I_,{,Val,$8_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b1010001,],,,0X3A,],,,0XD,],,,0133,],,,65476,],,,0XE,],;,},Class,___8_,:,f,{,},Class,_,:,e2,{,Destructor,(,),{,},F,(,),{,},},<EOF>''',101))

    def test_135(self):
        self.assertTrue(TestLexer.test('''Class B_{Constructor (){Val T,_:_;}Val Jb,$_:Int ;Var $P:Array [Array [Array [Array [Array [String ,0B1],04],03],06_6],76];}Class _bs:_5{}''','''Class,B_,{,Constructor,(,),{,Val,T,,,_,:,_,;,},Val,Jb,,,$_,:,Int,;,Var,$P,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,04,],,,03,],,,066,],,,76,],;,},Class,_bs,:,_5,{,},<EOF>''',101))

    def test_136(self):
        self.assertTrue(TestLexer.test('''Class YZ2_{}Class yz:k{_(_5Z,H,__,_Q6:Array [Array [Array [Float ,70],0B1010111],70];_:Int ;l,_5:Array [Array [String ,0134],0X52_F28]){} }Class _{}Class Z0N4_{Var _5_,$2,$f00:Q3;}''','''Class,YZ2_,{,},Class,yz,:,k,{,_,(,_5Z,,,H,,,__,,,_Q6,:,Array,[,Array,[,Array,[,Float,,,70,],,,0B1010111,],,,70,],;,_,:,Int,;,l,,,_5,:,Array,[,Array,[,String,,,0134,],,,0X52F28,],),{,},},Class,_,{,},Class,Z0N4_,{,Var,_5_,,,$2,,,$f00,:,Q3,;,},<EOF>''',101))

    def test_137(self):
        self.assertTrue(TestLexer.test('''Class _:E2{Destructor (){Continue ;}Constructor (J:R5___){}$1(_Br64o4Ki,_:__){Continue ;_::$d_U();}Constructor (_i_R,Q:Int ;p54_Z,lK:Array [Array [Boolean ,42],0x787_77]){}Constructor (){} }Class __:_39M{}Class _:R{}''','''Class,_,:,E2,{,Destructor,(,),{,Continue,;,},Constructor,(,J,:,R5___,),{,},$1,(,_Br64o4Ki,,,_,:,__,),{,Continue,;,_,::,$d_U,(,),;,},Constructor,(,_i_R,,,Q,:,Int,;,p54_Z,,,lK,:,Array,[,Array,[,Boolean,,,42,],,,0x78777,],),{,},Constructor,(,),{,},},Class,__,:,_39M,{,},Class,_,:,R,{,},<EOF>''',101))

    def test_138(self):
        self.assertTrue(TestLexer.test('''Class __7:j{$H(_,D,__,_,D__qs,K_,l_e,_:W){}Val $_8t,$7:Array [Array [String ,0x3_9],260_4];Destructor (){}Val _,__,__,_,$_5_,$_:__;}''','''Class,__7,:,j,{,$H,(,_,,,D,,,__,,,_,,,D__qs,,,K_,,,l_e,,,_,:,W,),{,},Val,$_8t,,,$7,:,Array,[,Array,[,String,,,0x39,],,,2604,],;,Destructor,(,),{,},Val,_,,,__,,,__,,,_,,,$_5_,,,$_,:,__,;,},<EOF>''',101))

    def test_139(self):
        self.assertTrue(TestLexer.test('''Class __U_eE:__56Y_{}Class _O:_{Destructor (){}Constructor (){}$__7(_,Hf_7_4_:Array [Int ,0b1_1];L_0___:String ){} }''','''Class,__U_eE,:,__56Y_,{,},Class,_O,:,_,{,Destructor,(,),{,},Constructor,(,),{,},$__7,(,_,,,Hf_7_4_,:,Array,[,Int,,,0b11,],;,L_0___,:,String,),{,},},<EOF>''',101))

    def test_140(self):
        self.assertTrue(TestLexer.test('''Class ____1{}Class y{}Class J{}Class R_{Constructor (HR6:p;l:Float ;K_,ol:A;r,___z0Pg2,_6,M_s_,BK,_:Boolean ;rbg:Boolean ;D_Be,F,e,X_:Array [Float ,2747];w,_:Array [Array [Array [Boolean ,026],0x32],0B110001]){Continue ;} }Class y_D{}Class t_:y{}''','''Class,____1,{,},Class,y,{,},Class,J,{,},Class,R_,{,Constructor,(,HR6,:,p,;,l,:,Float,;,K_,,,ol,:,A,;,r,,,___z0Pg2,,,_6,,,M_s_,,,BK,,,_,:,Boolean,;,rbg,:,Boolean,;,D_Be,,,F,,,e,,,X_,:,Array,[,Float,,,2747,],;,w,,,_,:,Array,[,Array,[,Array,[,Boolean,,,026,],,,0x32,],,,0B110001,],),{,Continue,;,},},Class,y_D,{,},Class,t_,:,y,{,},<EOF>''',101))

    def test_141(self):
        self.assertTrue(TestLexer.test('''Class _{Var $t,_:Array [Array [Array [Array [Float ,29],070],070],070];}Class _:k_{$FH_(){}Val __,$1_6z,$38:String ;}Class o:__{Constructor (){} }''','''Class,_,{,Var,$t,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,29,],,,070,],,,070,],,,070,],;,},Class,_,:,k_,{,$FH_,(,),{,},Val,__,,,$1_6z,,,$38,:,String,;,},Class,o,:,__,{,Constructor,(,),{,},},<EOF>''',101))

    def test_142(self):
        self.assertTrue(TestLexer.test('''Class _{Val $0_:B4_;Var $9_,__:D5_;Constructor (_6:h1;_r,_6_:_;__9wt:J){} }Class _{Var $5:x_1;Var $_,t7N:_;$1(){} }''','''Class,_,{,Val,$0_,:,B4_,;,Var,$9_,,,__,:,D5_,;,Constructor,(,_6,:,h1,;,_r,,,_6_,:,_,;,__9wt,:,J,),{,},},Class,_,{,Var,$5,:,x_1,;,Var,$_,,,t7N,:,_,;,$1,(,),{,},},<EOF>''',101))

    def test_143(self):
        self.assertTrue(TestLexer.test('''Class Bj:U{}Class De{}Class s{}Class P:Q{Val y:Array [Array [Array [Array [Array [Boolean ,02_6],0b1],06],032],0B1];Destructor (){} }Class K:_{Val _:Int ;Var H_:String ;}''','''Class,Bj,:,U,{,},Class,De,{,},Class,s,{,},Class,P,:,Q,{,Val,y,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,026,],,,0b1,],,,06,],,,032,],,,0B1,],;,Destructor,(,),{,},},Class,K,:,_,{,Val,_,:,Int,;,Var,H_,:,String,;,},<EOF>''',101))

    def test_144(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){Var Z_:Array [Array [Int ,0B1],0B100001];}Destructor (){Break ;} }Class _7S9{}Class _e__:X{Var $lOJ,$45i,__,$6,$267:Float ;}''','''Class,_,{,Constructor,(,),{,Var,Z_,:,Array,[,Array,[,Int,,,0B1,],,,0B100001,],;,},Destructor,(,),{,Break,;,},},Class,_7S9,{,},Class,_e__,:,X,{,Var,$lOJ,,,$45i,,,__,,,$6,,,$267,:,Float,;,},<EOF>''',101))

    def test_145(self):
        self.assertTrue(TestLexer.test('''Class b{}Class Cb_H9:_p7{Val $_5__:Array [Int ,76_1_212];Constructor (_,__744:C){}Destructor (){}Var _,$18_:_M;}''','''Class,b,{,},Class,Cb_H9,:,_p7,{,Val,$_5__,:,Array,[,Int,,,761212,],;,Constructor,(,_,,,__744,:,C,),{,},Destructor,(,),{,},Var,_,,,$18_,:,_M,;,},<EOF>''',101))

    def test_146(self):
        self.assertTrue(TestLexer.test('''Class _:L_Gm8q{}Class _:__{}Class d{Constructor (){}Constructor (_:_;_,ub,_30:Array [Array [String ,27],27]){}Constructor (){} }''','''Class,_,:,L_Gm8q,{,},Class,_,:,__,{,},Class,d,{,Constructor,(,),{,},Constructor,(,_,:,_,;,_,,,ub,,,_30,:,Array,[,Array,[,String,,,27,],,,27,],),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_147(self):
        self.assertTrue(TestLexer.test('''Class _0__ive{Destructor (){} }Class _Dl:__{Val $e:Float ;Val XY:Array [Array [Array [Array [Array [String ,592],0x9],0xEA_5],91],0b100011];_1(){Continue ;} }''','''Class,_0__ive,{,Destructor,(,),{,},},Class,_Dl,:,__,{,Val,$e,:,Float,;,Val,XY,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,592,],,,0x9,],,,0xEA5,],,,91,],,,0b100011,],;,_1,(,),{,Continue,;,},},<EOF>''',101))

    def test_148(self):
        self.assertTrue(TestLexer.test('''Class _{Var _P:y;J(){} }Class _{$0(a,Z:Boolean ){ {} }Val $Q6_:Array [Float ,9];}Class _{__(_:Array [Array [Float ,0X22],0B1000010];p,_:Boolean ;_6_F8_,S:Array [Array [Float ,01],0B1]){}Destructor (){} }''','''Class,_,{,Var,_P,:,y,;,J,(,),{,},},Class,_,{,$0,(,a,,,Z,:,Boolean,),{,{,},},Val,$Q6_,:,Array,[,Float,,,9,],;,},Class,_,{,__,(,_,:,Array,[,Array,[,Float,,,0X22,],,,0B1000010,],;,p,,,_,:,Boolean,;,_6_F8_,,,S,:,Array,[,Array,[,Float,,,01,],,,0B1,],),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_149(self):
        self.assertTrue(TestLexer.test('''Class _m{Val $o:Array [Array [Array [Array [Array [Array [Float ,91_4],43],43],0124],0XE],0124];}Class _{}Class _b2_c:e___8k{}''','''Class,_m,{,Val,$o,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,914,],,,43,],,,43,],,,0124,],,,0XE,],,,0124,],;,},Class,_,{,},Class,_b2_c,:,e___8k,{,},<EOF>''',101))

    def test_150(self):
        self.assertTrue(TestLexer.test('''Class _:d{}Class _x{Destructor (){}Destructor (){ {} }}Class _5:L7{Var $__g_:Boolean ;Var $H:Array [Array [Boolean ,0122],07];Destructor (){Val _:__;}Val _,$h3Z_851b_,zo__4_:T;}Class __KK:_{Destructor (){} }''','''Class,_,:,d,{,},Class,_x,{,Destructor,(,),{,},Destructor,(,),{,{,},},},Class,_5,:,L7,{,Var,$__g_,:,Boolean,;,Var,$H,:,Array,[,Array,[,Boolean,,,0122,],,,07,],;,Destructor,(,),{,Val,_,:,__,;,},Val,_,,,$h3Z_851b_,,,zo__4_,:,T,;,},Class,__KK,:,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_151(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){k::$7Q();}Constructor (l:_){ {} }Val r_2,h:Array [Array [Int ,9],35];Destructor (){} }Class K3{}Class z{}Class W{Destructor (){} }''','''Class,_,{,Destructor,(,),{,k,::,$7Q,(,),;,},Constructor,(,l,:,_,),{,{,},},Val,r_2,,,h,:,Array,[,Array,[,Int,,,9,],,,35,],;,Destructor,(,),{,},},Class,K3,{,},Class,z,{,},Class,W,{,Destructor,(,),{,},},<EOF>''',101))

    def test_152(self):
        self.assertTrue(TestLexer.test('''Class P:_KHa_{}Class _w{}Class F3{}Class _{Q2_(Bq:Int ;C,wH:g;___2,__aI,h:Array [Float ,04];_,___:Array [Int ,0x5A];k,__:V){} }''','''Class,P,:,_KHa_,{,},Class,_w,{,},Class,F3,{,},Class,_,{,Q2_,(,Bq,:,Int,;,C,,,wH,:,g,;,___2,,,__aI,,,h,:,Array,[,Float,,,04,],;,_,,,___,:,Array,[,Int,,,0x5A,],;,k,,,__,:,V,),{,},},<EOF>''',101))

    def test_153(self):
        self.assertTrue(TestLexer.test('''Class i:_{Constructor (v,_W,C1_w,_h__,d1:Array [String ,0X58]){} }Class _{}Class JZ_H:x{Var _7,_3,_W1,$_KV:Int ;Constructor (){}Destructor (){} }''','''Class,i,:,_,{,Constructor,(,v,,,_W,,,C1_w,,,_h__,,,d1,:,Array,[,String,,,0X58,],),{,},},Class,_,{,},Class,JZ_H,:,x,{,Var,_7,,,_3,,,_W1,,,$_KV,:,Int,;,Constructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_154(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _:_{Var $93,$w:_;Constructor (_:Array [String ,0X2];s_q:Array [String ,54];G,i:Boolean ;_F_4,d:D){} }Class Q_{}Class M{}''','''Class,_,{,},Class,_,:,_,{,Var,$93,,,$w,:,_,;,Constructor,(,_,:,Array,[,String,,,0X2,],;,s_q,:,Array,[,String,,,54,],;,G,,,i,:,Boolean,;,_F_4,,,d,:,D,),{,},},Class,Q_,{,},Class,M,{,},<EOF>''',101))

    def test_155(self):
        self.assertTrue(TestLexer.test('''Class _:V{Var $0:Int ;}Class h:G{Var p,$0,m7C_:Array [Array [Float ,04],0b1_1];Var Qf,_:Array [Int ,4_8_55_7_72];}Class P5{}''','''Class,_,:,V,{,Var,$0,:,Int,;,},Class,h,:,G,{,Var,p,,,$0,,,m7C_,:,Array,[,Array,[,Float,,,04,],,,0b11,],;,Var,Qf,,,_,:,Array,[,Int,,,4855772,],;,},Class,P5,{,},<EOF>''',101))

    def test_156(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class F:UI{Destructor (){} }Class _1_1:O_{Val $X:N;}Class B7:_{$88(_,_,RS:_8;B,mH_18_,H_H,m7_:_){}Val Hr,$E,$4:Float ;Constructor (_v:_9;P:G;Q:Array [Array [Array [Array [Array [Array [String ,0X4],66],0B100000],0X8],0X32],035];_,P:Array [Array [Array [String ,0b1_0_100],0B100000],0141]){} }''','''Class,_,:,_,{,},Class,F,:,UI,{,Destructor,(,),{,},},Class,_1_1,:,O_,{,Val,$X,:,N,;,},Class,B7,:,_,{,$88,(,_,,,_,,,RS,:,_8,;,B,,,mH_18_,,,H_H,,,m7_,:,_,),{,},Val,Hr,,,$E,,,$4,:,Float,;,Constructor,(,_v,:,_9,;,P,:,G,;,Q,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X4,],,,66,],,,0B100000,],,,0X8,],,,0X32,],,,035,],;,_,,,P,:,Array,[,Array,[,Array,[,String,,,0b10100,],,,0B100000,],,,0141,],),{,},},<EOF>''',101))

    def test_157(self):
        self.assertTrue(TestLexer.test('''Class _:_0{Constructor (){}Val _6_,$5:Float ;}Class _{Val w:Array [Array [Array [Array [Array [Array [Boolean ,026],0XE],026],0X8],48],026];}''','''Class,_,:,_0,{,Constructor,(,),{,},Val,_6_,,,$5,:,Float,;,},Class,_,{,Val,w,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,026,],,,0XE,],,,026,],,,0X8,],,,48,],,,026,],;,},<EOF>''',101))

    def test_158(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){} }Class i:_6{Val b1h:Array [Float ,4];}Class _X:E{Constructor (){Continue ;Break ;G6_::$jT();} }Class Q_0{}''','''Class,_,{,Constructor,(,),{,},},Class,i,:,_6,{,Val,b1h,:,Array,[,Float,,,4,],;,},Class,_X,:,E,{,Constructor,(,),{,Continue,;,Break,;,G6_,::,$jT,(,),;,},},Class,Q_0,{,},<EOF>''',101))

    def test_159(self):
        self.assertTrue(TestLexer.test('''Class ___MhO_507:_4{Constructor (k2:_;_V_D_:Array [Array [Array [Array [Array [String ,3],0X2_7],0X43],0b1000010],7]){ {} }}''','''Class,___MhO_507,:,_4,{,Constructor,(,k2,:,_,;,_V_D_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,3,],,,0X27,],,,0X43,],,,0b1000010,],,,7,],),{,{,},},},<EOF>''',101))

    def test_160(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){} }Class v:E{}Class K{}Class _{$__4(){Continue ;}Val _,$Q:ASb_;}Class c_U1H0{}Class Yv{}''','''Class,_,{,Constructor,(,),{,},},Class,v,:,E,{,},Class,K,{,},Class,_,{,$__4,(,),{,Continue,;,},Val,_,,,$Q,:,ASb_,;,},Class,c_U1H0,{,},Class,Yv,{,},<EOF>''',101))

    def test_161(self):
        self.assertTrue(TestLexer.test('''Class _Y{Val C,_,pp,G,$_,$w:Array [Float ,0123];}Class P{}Class _w:D{_(){}__(){}_(M:Array [Array [Array [Array [Array [Boolean ,84],84],03],0123],0x11]){Break ;}Destructor (){} }''','''Class,_Y,{,Val,C,,,_,,,pp,,,G,,,$_,,,$w,:,Array,[,Float,,,0123,],;,},Class,P,{,},Class,_w,:,D,{,_,(,),{,},__,(,),{,},_,(,M,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,84,],,,84,],,,03,],,,0123,],,,0x11,],),{,Break,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_162(self):
        self.assertTrue(TestLexer.test('''Class R{}Class V:pw_{Val $m,$88_:Boolean ;}Class l:__{Destructor (){} }Class r:l{Var $u:Array [Array [Int ,35],0X42];}Class l9{}''','''Class,R,{,},Class,V,:,pw_,{,Val,$m,,,$88_,:,Boolean,;,},Class,l,:,__,{,Destructor,(,),{,},},Class,r,:,l,{,Var,$u,:,Array,[,Array,[,Int,,,35,],,,0X42,],;,},Class,l9,{,},<EOF>''',101))

    def test_163(self):
        self.assertTrue(TestLexer.test('''Class Q:__U{}Class N_4O_:MO{Val em,_,_,$H8,OG,$8:Array [Boolean ,0b111011];Y(){}Val _7d,$32,$_4:Int ;}Class _2:_{}''','''Class,Q,:,__U,{,},Class,N_4O_,:,MO,{,Val,em,,,_,,,_,,,$H8,,,OG,,,$8,:,Array,[,Boolean,,,0b111011,],;,Y,(,),{,},Val,_7d,,,$32,,,$_4,:,Int,;,},Class,_2,:,_,{,},<EOF>''',101))

    def test_164(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){}Val _,$7z3_:_w_;Val $6_7F,$0:Array [String ,0x29];Destructor (){}Destructor (){Return ;Break ;}Val _,_KY___,$V:Array [Array [Float ,032],26];}Class b{Val $e,n_f:_u;}Class T{}Class __:Z___{}''','''Class,_,{,Destructor,(,),{,},Val,_,,,$7z3_,:,_w_,;,Val,$6_7F,,,$0,:,Array,[,String,,,0x29,],;,Destructor,(,),{,},Destructor,(,),{,Return,;,Break,;,},Val,_,,,_KY___,,,$V,:,Array,[,Array,[,Float,,,032,],,,26,],;,},Class,b,{,Val,$e,,,n_f,:,_u,;,},Class,T,{,},Class,__,:,Z___,{,},<EOF>''',101))

    def test_165(self):
        self.assertTrue(TestLexer.test('''Class T:br{Constructor (DF_:_;v0__W:c){}$6(m:Array [Array [Float ,01_072_4],0X5_4_3_0];_m,pb4j,_h,_:Array [Array [Array [Array [String ,010],0x7D_8_0_E_A],0XD],1];dz0_3,L__:E_;j:____){ {} }Var z:Array [String ,0675_0];}''','''Class,T,:,br,{,Constructor,(,DF_,:,_,;,v0__W,:,c,),{,},$6,(,m,:,Array,[,Array,[,Float,,,010724,],,,0X5430,],;,_m,,,pb4j,,,_h,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,010,],,,0x7D80EA,],,,0XD,],,,1,],;,dz0_3,,,L__,:,E_,;,j,:,____,),{,{,},},Var,z,:,Array,[,String,,,06750,],;,},<EOF>''',101))

    def test_166(self):
        self.assertTrue(TestLexer.test('''Class _:_B{Val $Z,_:Array [Array [Array [Array [Array [String ,0X1B],0B111101],0x5B_F],58],047];$4_(wd,f1,o_9_:Int ){Continue ;}Var $__Z,$8_Xe,_:Array [Array [Float ,0X1B],58];}''','''Class,_,:,_B,{,Val,$Z,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X1B,],,,0B111101,],,,0x5BF,],,,58,],,,047,],;,$4_,(,wd,,,f1,,,o_9_,:,Int,),{,Continue,;,},Var,$__Z,,,$8_Xe,,,_,:,Array,[,Array,[,Float,,,0X1B,],,,58,],;,},<EOF>''',101))

    def test_167(self):
        self.assertTrue(TestLexer.test('''Class _cL{}Class _z{}Class fMv{Val $3:_U_;Var v,__:Boolean ;}Class _2:N0O8{E(u:Array [Array [String ,0b10],05];X99W:Array [Boolean ,0x46]){Break ;Continue ;} }''','''Class,_cL,{,},Class,_z,{,},Class,fMv,{,Val,$3,:,_U_,;,Var,v,,,__,:,Boolean,;,},Class,_2,:,N0O8,{,E,(,u,:,Array,[,Array,[,String,,,0b10,],,,05,],;,X99W,:,Array,[,Boolean,,,0x46,],),{,Break,;,Continue,;,},},<EOF>''',101))

    def test_168(self):
        self.assertTrue(TestLexer.test('''Class _{Var $_2_aE__,$6:Array [Float ,0XA];Var Xo3,$6,n,_:Float ;Constructor (_:Array [Array [Array [Int ,67],67],0b1000100];o,_L,b2_:Int ){} }Class T:_U{Val $k,$2:Boolean ;}Class _:Q__{_i(Z4_:Int ){K::$4();}Destructor (){} }''','''Class,_,{,Var,$_2_aE__,,,$6,:,Array,[,Float,,,0XA,],;,Var,Xo3,,,$6,,,n,,,_,:,Float,;,Constructor,(,_,:,Array,[,Array,[,Array,[,Int,,,67,],,,67,],,,0b1000100,],;,o,,,_L,,,b2_,:,Int,),{,},},Class,T,:,_U,{,Val,$k,,,$2,:,Boolean,;,},Class,_,:,Q__,{,_i,(,Z4_,:,Int,),{,K,::,$4,(,),;,},Destructor,(,),{,},},<EOF>''',101))

    def test_169(self):
        self.assertTrue(TestLexer.test('''Class Eg__{Constructor (P3:Array [Array [Array [Array [Array [Array [Array [Array [Float ,81],07_7_42_5],0b1],81],0X7],0X4_4],06_5_3],53];ZvqI8,X,_F:Boolean ){}$c(I:W2;X__,o8:Array [Int ,0X7];b03_,_:Boolean ){} }Class __T1:_{}''','''Class,Eg__,{,Constructor,(,P3,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,81,],,,077425,],,,0b1,],,,81,],,,0X7,],,,0X44,],,,0653,],,,53,],;,ZvqI8,,,X,,,_F,:,Boolean,),{,},$c,(,I,:,W2,;,X__,,,o8,:,Array,[,Int,,,0X7,],;,b03_,,,_,:,Boolean,),{,},},Class,__T1,:,_,{,},<EOF>''',101))

    def test_170(self):
        self.assertTrue(TestLexer.test('''Class F:_iC_{Val $_,$mX,$7:Int ;Destructor (){}$l_(_,_:Int ;F_h4_:_;_:_;I:Array [Array [Array [Float ,0b101_0],0xE_A],0b1100010]){}Val $bb47:y;Destructor (){} }''','''Class,F,:,_iC_,{,Val,$_,,,$mX,,,$7,:,Int,;,Destructor,(,),{,},$l_,(,_,,,_,:,Int,;,F_h4_,:,_,;,_,:,_,;,I,:,Array,[,Array,[,Array,[,Float,,,0b1010,],,,0xEA,],,,0b1100010,],),{,},Val,$bb47,:,y,;,Destructor,(,),{,},},<EOF>''',101))

    def test_171(self):
        self.assertTrue(TestLexer.test('''Class _:I{Constructor (__hpL,__,L,__,_P,_:Array [Boolean ,0x1]){ {} }}Class Wp:_{wo(S_,I_,U:Array [Boolean ,01_46]){} }Class G6i:b{}''','''Class,_,:,I,{,Constructor,(,__hpL,,,__,,,L,,,__,,,_P,,,_,:,Array,[,Boolean,,,0x1,],),{,{,},},},Class,Wp,:,_,{,wo,(,S_,,,I_,,,U,:,Array,[,Boolean,,,0146,],),{,},},Class,G6i,:,b,{,},<EOF>''',101))

    def test_172(self):
        self.assertTrue(TestLexer.test('''Class L__:_{Destructor (){} }Class Z2e:h87{_9(){} }Class g__{}Class W34{_4(z:Array [Boolean ,0B11_0]){Val QsL__8,L,_,Z4_w,_,z_:Array [Array [Int ,050],9];}Var $f4:k;}''','''Class,L__,:,_,{,Destructor,(,),{,},},Class,Z2e,:,h87,{,_9,(,),{,},},Class,g__,{,},Class,W34,{,_4,(,z,:,Array,[,Boolean,,,0B110,],),{,Val,QsL__8,,,L,,,_,,,Z4_w,,,_,,,z_,:,Array,[,Array,[,Int,,,050,],,,9,],;,},Var,$f4,:,k,;,},<EOF>''',101))

    def test_173(self):
        self.assertTrue(TestLexer.test('''Class pdX{Constructor (_,___,cG,P:Array [String ,0b11_1_0]){Continue ;}Val $0,$9_:g;}Class y_:_{}Class ___h:v{}''','''Class,pdX,{,Constructor,(,_,,,___,,,cG,,,P,:,Array,[,String,,,0b1110,],),{,Continue,;,},Val,$0,,,$9_,:,g,;,},Class,y_,:,_,{,},Class,___h,:,v,{,},<EOF>''',101))

    def test_174(self):
        self.assertTrue(TestLexer.test('''Class _{}Class hY:G{}Class _n:__6{Var Q:Array [Array [String ,0X48],0x2_6_B_B_4_E8];Val _,$3:String ;_(W:Float ){Continue ;} }Class _6_Z_:_3{}Class Wa{Val _,$g:Q;Var X,_,DE_K:Array [Boolean ,0XB_9FF];}''','''Class,_,{,},Class,hY,:,G,{,},Class,_n,:,__6,{,Var,Q,:,Array,[,Array,[,String,,,0X48,],,,0x26BB4E8,],;,Val,_,,,$3,:,String,;,_,(,W,:,Float,),{,Continue,;,},},Class,_6_Z_,:,_3,{,},Class,Wa,{,Val,_,,,$g,:,Q,;,Var,X,,,_,,,DE_K,:,Array,[,Boolean,,,0XB9FF,],;,},<EOF>''',101))

    def test_175(self):
        self.assertTrue(TestLexer.test('''Class N_P_{}Class _:_6qi{}Class _:r{Constructor (_D7:String ;_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,0B1011100],19],055],7_7],055],055],43_8],0xED],0b1010001]){} }Class E{}Class T{}''','''Class,N_P_,{,},Class,_,:,_6qi,{,},Class,_,:,r,{,Constructor,(,_D7,:,String,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1011100,],,,19,],,,055,],,,77,],,,055,],,,055,],,,438,],,,0xED,],,,0b1010001,],),{,},},Class,E,{,},Class,T,{,},<EOF>''',101))

    def test_176(self):
        self.assertTrue(TestLexer.test('''Class C{Val $pnZ:Boolean ;}Class r_:Oc{}Class _{Val l,$9:Array [Array [Array [Array [Array [Float ,0x8_7],88],0131],0X1_3],0B1011011];}''','''Class,C,{,Val,$pnZ,:,Boolean,;,},Class,r_,:,Oc,{,},Class,_,{,Val,l,,,$9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x87,],,,88,],,,0131,],,,0X13,],,,0B1011011,],;,},<EOF>''',101))

    def test_177(self):
        self.assertTrue(TestLexer.test('''Class Q:A{Val $_:Array [Array [String ,053],61];Var _,$_Q:Array [Int ,0b1];Val DW1pg_e_2_:Boolean ;}Class _Pa:_8{Var _,J9,$0,_f:m;}''','''Class,Q,:,A,{,Val,$_,:,Array,[,Array,[,String,,,053,],,,61,],;,Var,_,,,$_Q,:,Array,[,Int,,,0b1,],;,Val,DW1pg_e_2_,:,Boolean,;,},Class,_Pa,:,_8,{,Var,_,,,J9,,,$0,,,_f,:,m,;,},<EOF>''',101))

    def test_178(self):
        self.assertTrue(TestLexer.test('''Class n_37M_:_9__s{Constructor (){}$__(H,CM_,_:Boolean ;j:Array [Array [Float ,0X3F],01];_:A2;vX:Float ){}Destructor (){} }Class Ok{}''','''Class,n_37M_,:,_9__s,{,Constructor,(,),{,},$__,(,H,,,CM_,,,_,:,Boolean,;,j,:,Array,[,Array,[,Float,,,0X3F,],,,01,],;,_,:,A2,;,vX,:,Float,),{,},Destructor,(,),{,},},Class,Ok,{,},<EOF>''',101))

    def test_179(self):
        self.assertTrue(TestLexer.test('''Class _8:_{}Class __9__:j{Constructor (A,u5:Z_29_;k,S5_26,_1,h,___,qU94,T_:Array [Boolean ,0b10_0_100];F,_,_K_:Array [Float ,4]){} }''','''Class,_8,:,_,{,},Class,__9__,:,j,{,Constructor,(,A,,,u5,:,Z_29_,;,k,,,S5_26,,,_1,,,h,,,___,,,qU94,,,T_,:,Array,[,Boolean,,,0b100100,],;,F,,,_,,,_K_,:,Array,[,Float,,,4,],),{,},},<EOF>''',101))

    def test_180(self):
        self.assertTrue(TestLexer.test('''Class _{Val $_6,$1:Array [Array [Array [Int ,0X9A_4],0B1_0101_1],0B111100];}Class L{Destructor (){Return ;}$4(D5,Y_:Array [Boolean ,045]){} }''','''Class,_,{,Val,$_6,,,$1,:,Array,[,Array,[,Array,[,Int,,,0X9A4,],,,0B101011,],,,0B111100,],;,},Class,L,{,Destructor,(,),{,Return,;,},$4,(,D5,,,Y_,:,Array,[,Boolean,,,045,],),{,},},<EOF>''',101))

    def test_181(self):
        self.assertTrue(TestLexer.test('''Class _:K{$6(_1o,h,__s___I5x__,_e8_:Array [Array [Boolean ,072],0xE]){}Var y1,$0:String ;Val _,$U,$A_,I9_:Float ;}''','''Class,_,:,K,{,$6,(,_1o,,,h,,,__s___I5x__,,,_e8_,:,Array,[,Array,[,Boolean,,,072,],,,0xE,],),{,},Var,y1,,,$0,:,String,;,Val,_,,,$U,,,$A_,,,I9_,:,Float,;,},<EOF>''',101))

    def test_182(self):
        self.assertTrue(TestLexer.test('''Class _:F{Constructor (u1_Ev:F_;__:N__;___,o9_,_:String ){} }Class x{Var _:Boolean ;Constructor (_,_RA,Hrj_:String ){}Constructor (){} }''','''Class,_,:,F,{,Constructor,(,u1_Ev,:,F_,;,__,:,N__,;,___,,,o9_,,,_,:,String,),{,},},Class,x,{,Var,_,:,Boolean,;,Constructor,(,_,,,_RA,,,Hrj_,:,String,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_183(self):
        self.assertTrue(TestLexer.test('''Class __:_38{}Class C:_{Constructor (_su_:Boolean ;_Y:Array [Array [Array [Array [String ,0xF],1_3_3],031],0x50];_9,_3_o_96F__J:o8){ {_::$k__();} }}''','''Class,__,:,_38,{,},Class,C,:,_,{,Constructor,(,_su_,:,Boolean,;,_Y,:,Array,[,Array,[,Array,[,Array,[,String,,,0xF,],,,133,],,,031,],,,0x50,],;,_9,,,_3_o_96F__J,:,o8,),{,{,_,::,$k__,(,),;,},},},<EOF>''',101))

    def test_184(self):
        self.assertTrue(TestLexer.test('''Class _:__{Constructor (_,Z:Array [Array [Array [Array [Array [String ,0B1],0X8],8],20_7],027];_e,_4,_b8:Array [Boolean ,0x38]){Continue ;} }Class _07_4:_{}Class sla:_{}''','''Class,_,:,__,{,Constructor,(,_,,,Z,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,0X8,],,,8,],,,207,],,,027,],;,_e,,,_4,,,_b8,:,Array,[,Boolean,,,0x38,],),{,Continue,;,},},Class,_07_4,:,_,{,},Class,sla,:,_,{,},<EOF>''',101))

    def test_185(self):
        self.assertTrue(TestLexer.test('''Class _{Val IGxt:Array [Boolean ,073];}Class t5:_{Val I53,Jl_,_6_:Int ;Destructor (){} }Class b:e{Val Y:I;Destructor (){} }Class D:KI{}''','''Class,_,{,Val,IGxt,:,Array,[,Boolean,,,073,],;,},Class,t5,:,_,{,Val,I53,,,Jl_,,,_6_,:,Int,;,Destructor,(,),{,},},Class,b,:,e,{,Val,Y,:,I,;,Destructor,(,),{,},},Class,D,:,KI,{,},<EOF>''',101))

    def test_186(self):
        self.assertTrue(TestLexer.test('''Class __{}Class r6p_:_{Constructor (_,_34:Float ;oll,__,_,_4,_T_05V,_:L2;WaFj__h_,b:Float ){}Constructor (o:v9k){}M(_:Array [Array [Boolean ,0x20],0B1_110];m:_){} }Class C:f{}Class _{}''','''Class,__,{,},Class,r6p_,:,_,{,Constructor,(,_,,,_34,:,Float,;,oll,,,__,,,_,,,_4,,,_T_05V,,,_,:,L2,;,WaFj__h_,,,b,:,Float,),{,},Constructor,(,o,:,v9k,),{,},M,(,_,:,Array,[,Array,[,Boolean,,,0x20,],,,0B1110,],;,m,:,_,),{,},},Class,C,:,f,{,},Class,_,{,},<EOF>''',101))

    def test_187(self):
        self.assertTrue(TestLexer.test('''Class E:_O_{}Class __{}Class _Mp_C0:_{Constructor (_2_7BQ_,___N,t3:Int ){}Val y_1_A:Boolean ;}Class _Bg_w0:i{Val $7,Pb_:Array [Float ,62];}''','''Class,E,:,_O_,{,},Class,__,{,},Class,_Mp_C0,:,_,{,Constructor,(,_2_7BQ_,,,___N,,,t3,:,Int,),{,},Val,y_1_A,:,Boolean,;,},Class,_Bg_w0,:,i,{,Val,$7,,,Pb_,:,Array,[,Float,,,62,],;,},<EOF>''',101))

    def test_188(self):
        self.assertTrue(TestLexer.test('''Class _z{Constructor (y:Boolean ;_:Array [Boolean ,6_69];Z:l;_b_16:String ){}$4(b3,_,_:Array [Array [Int ,4],0B1]){} }''','''Class,_z,{,Constructor,(,y,:,Boolean,;,_,:,Array,[,Boolean,,,669,],;,Z,:,l,;,_b_16,:,String,),{,},$4,(,b3,,,_,,,_,:,Array,[,Array,[,Int,,,4,],,,0B1,],),{,},},<EOF>''',101))

    def test_189(self):
        self.assertTrue(TestLexer.test('''Class F{}Class Wh{}Class _Ke{_(_r_:Boolean ;S,_,r1:s){____16::$_7_();Continue ;} }Class Q27:_{}Class Y:Z0{Var oo,$U3,$9,$gV6:Array [Array [Boolean ,0b110110],0B1000110];Constructor (){}Constructor (){} }''','''Class,F,{,},Class,Wh,{,},Class,_Ke,{,_,(,_r_,:,Boolean,;,S,,,_,,,r1,:,s,),{,____16,::,$_7_,(,),;,Continue,;,},},Class,Q27,:,_,{,},Class,Y,:,Z0,{,Var,oo,,,$U3,,,$9,,,$gV6,:,Array,[,Array,[,Boolean,,,0b110110,],,,0B1000110,],;,Constructor,(,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_190(self):
        self.assertTrue(TestLexer.test('''Class __a:__Qcr{Destructor (){}Destructor (){}u(_,_:Int ;x:W){} }Class _6_{}Class _:c{}Class Gj:__9{Val $88,$_:_r;}''','''Class,__a,:,__Qcr,{,Destructor,(,),{,},Destructor,(,),{,},u,(,_,,,_,:,Int,;,x,:,W,),{,},},Class,_6_,{,},Class,_,:,c,{,},Class,Gj,:,__9,{,Val,$88,,,$_,:,_r,;,},<EOF>''',101))

    def test_191(self):
        self.assertTrue(TestLexer.test('''Class R6:_{}Class _{Val $yMy,$3_,S_,$E7x,$vQv_,$__w:_o_L1T;}Class p{Constructor (){} }Class r6{}Class V4{$9(){}Destructor (){} }''','''Class,R6,:,_,{,},Class,_,{,Val,$yMy,,,$3_,,,S_,,,$E7x,,,$vQv_,,,$__w,:,_o_L1T,;,},Class,p,{,Constructor,(,),{,},},Class,r6,{,},Class,V4,{,$9,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_192(self):
        self.assertTrue(TestLexer.test('''Class q:___s_{Var $_6:Array [String ,0X36];X(L,_,_:H;y:c;a,_,V97_S:Boolean ;_kQ,K:Array [Float ,0x1_C];__1:_2){} }Class Vpj:_6_{}Class r{}Class _:a{}''','''Class,q,:,___s_,{,Var,$_6,:,Array,[,String,,,0X36,],;,X,(,L,,,_,,,_,:,H,;,y,:,c,;,a,,,_,,,V97_S,:,Boolean,;,_kQ,,,K,:,Array,[,Float,,,0x1C,],;,__1,:,_2,),{,},},Class,Vpj,:,_6_,{,},Class,r,{,},Class,_,:,a,{,},<EOF>''',101))

    def test_193(self):
        self.assertTrue(TestLexer.test('''Class A72_{}Class _FS:U{Val $_:Array [Boolean ,05_2_3];}Class _2{}Class vZ{}Class _k_P1W0:r___D{Destructor (){}Destructor (){}Destructor (){} }''','''Class,A72_,{,},Class,_FS,:,U,{,Val,$_,:,Array,[,Boolean,,,0523,],;,},Class,_2,{,},Class,vZ,{,},Class,_k_P1W0,:,r___D,{,Destructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_194(self):
        self.assertTrue(TestLexer.test('''Class m{}Class f_:xf{Val $1,$_,_3_:__;$_Z28(_,Nbw:Array [Float ,100];t,C_4t_,_y7:String ;w:Array [Float ,100];_,sm_4,k:String ){} }''','''Class,m,{,},Class,f_,:,xf,{,Val,$1,,,$_,,,_3_,:,__,;,$_Z28,(,_,,,Nbw,:,Array,[,Float,,,100,],;,t,,,C_4t_,,,_y7,:,String,;,w,:,Array,[,Float,,,100,],;,_,,,sm_4,,,k,:,String,),{,},},<EOF>''',101))

    def test_195(self):
        self.assertTrue(TestLexer.test('''Class x{L_(M9:Boolean ){}Constructor (_q5_:Array [Array [Array [String ,4],0b110011],0B10010];K:_;Q,_Q,YG_144,__,_2P:Array [String ,0b110011]){} }Class b_5_:n2_{}''','''Class,x,{,L_,(,M9,:,Boolean,),{,},Constructor,(,_q5_,:,Array,[,Array,[,Array,[,String,,,4,],,,0b110011,],,,0B10010,],;,K,:,_,;,Q,,,_Q,,,YG_144,,,__,,,_2P,:,Array,[,String,,,0b110011,],),{,},},Class,b_5_,:,n2_,{,},<EOF>''',101))

    def test_196(self):
        self.assertTrue(TestLexer.test('''Class G{}Class sA_:sI721{}Class _:B{Val $__7C_:Array [Array [Boolean ,7],7_0];Var $_8:Float ;Var r:Int ;}Class w_36_9:P3{}''','''Class,G,{,},Class,sA_,:,sI721,{,},Class,_,:,B,{,Val,$__7C_,:,Array,[,Array,[,Boolean,,,7,],,,70,],;,Var,$_8,:,Float,;,Var,r,:,Int,;,},Class,w_36_9,:,P3,{,},<EOF>''',101))

    def test_197(self):
        self.assertTrue(TestLexer.test('''Class J_:_H7{Constructor (u4l1,_aFe1_9,___:Array [Array [String ,064],064];_,E:Boolean ;R,_:Int ){} }Class __1:_{}''','''Class,J_,:,_H7,{,Constructor,(,u4l1,,,_aFe1_9,,,___,:,Array,[,Array,[,String,,,064,],,,064,],;,_,,,E,:,Boolean,;,R,,,_,:,Int,),{,},},Class,__1,:,_,{,},<EOF>''',101))

    def test_198(self):
        self.assertTrue(TestLexer.test('''Class y:v{}Class __6_:_{$1_(__,_8,_,__,S,_184_,_,_,_,_:Array [Array [Float ,053],025];_,__O:Array [Array [Array [String ,40],31],0B1];f,_x_970,zJR,_O,_:___42){} }''','''Class,y,:,v,{,},Class,__6_,:,_,{,$1_,(,__,,,_8,,,_,,,__,,,S,,,_184_,,,_,,,_,,,_,,,_,:,Array,[,Array,[,Float,,,053,],,,025,],;,_,,,__O,:,Array,[,Array,[,Array,[,String,,,40,],,,31,],,,0B1,],;,f,,,_x_970,,,zJR,,,_O,,,_,:,___42,),{,},},<EOF>''',101))

    def test_199(self):
        self.assertTrue(TestLexer.test('''Class A{Destructor (){} }Class _:r{Destructor (){}$___k__(_:Array [Int ,0X13];_,D:X){Var a8:Array [Int ,0B1_1_11];}Constructor (){} }''','''Class,A,{,Destructor,(,),{,},},Class,_,:,r,{,Destructor,(,),{,},$___k__,(,_,:,Array,[,Int,,,0X13,],;,_,,,D,:,X,),{,Var,a8,:,Array,[,Int,,,0B1111,],;,},Constructor,(,),{,},},<EOF>''',101))

    def test_200(self):
        self.assertTrue(TestLexer.test('''Class _72{Val _,$e1_8:String ;Var b_0,$____,_:_9;$2(__:Float ;a,_j_O,Q,I,L,_,_9W:m;_,__:_;M:Array [Array [Int ,0x7_3],0b110111]){}Destructor (){}Destructor (){} }''','''Class,_72,{,Val,_,,,$e1_8,:,String,;,Var,b_0,,,$____,,,_,:,_9,;,$2,(,__,:,Float,;,a,,,_j_O,,,Q,,,I,,,L,,,_,,,_9W,:,m,;,_,,,__,:,_,;,M,:,Array,[,Array,[,Int,,,0x73,],,,0b110111,],),{,},Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_201(self):
        self.assertTrue(TestLexer.test('''Class FH3{}Class _:___o_2{Constructor (_:_W;_:Boolean ){} }Class NX{_(nS,A__i:_8;_8C6,d,_7,_3,_:Boolean ){}Var __:Array [Int ,0b10_1_010];}''','''Class,FH3,{,},Class,_,:,___o_2,{,Constructor,(,_,:,_W,;,_,:,Boolean,),{,},},Class,NX,{,_,(,nS,,,A__i,:,_8,;,_8C6,,,d,,,_7,,,_3,,,_,:,Boolean,),{,},Var,__,:,Array,[,Int,,,0b101010,],;,},<EOF>''',101))

    def test_202(self):
        self.assertTrue(TestLexer.test('''Class B{}Class X{z(){} }Class NY0{}Class U:_{}Class _{}Class Z0N:E311{}Class _:_{Val $X7,_,$_:Int ;Constructor (ky:Boolean ;v_j_b:__;r,_:_s;__73,o:L;_:Float ;____93:Q;_,K,_t5:_;_,u:h8_){} }''','''Class,B,{,},Class,X,{,z,(,),{,},},Class,NY0,{,},Class,U,:,_,{,},Class,_,{,},Class,Z0N,:,E311,{,},Class,_,:,_,{,Val,$X7,,,_,,,$_,:,Int,;,Constructor,(,ky,:,Boolean,;,v_j_b,:,__,;,r,,,_,:,_s,;,__73,,,o,:,L,;,_,:,Float,;,____93,:,Q,;,_,,,K,,,_t5,:,_,;,_,,,u,:,h8_,),{,},},<EOF>''',101))

    def test_203(self):
        self.assertTrue(TestLexer.test('''Class X0{}Class _:__1_S3{Constructor (_:Int ){}Constructor (ff44j,_,kd1:Array [Boolean ,0x6]){} }Class _{Val C,$p,z_U12:Boolean ;}''','''Class,X0,{,},Class,_,:,__1_S3,{,Constructor,(,_,:,Int,),{,},Constructor,(,ff44j,,,_,,,kd1,:,Array,[,Boolean,,,0x6,],),{,},},Class,_,{,Val,C,,,$p,,,z_U12,:,Boolean,;,},<EOF>''',101))

    def test_204(self):
        self.assertTrue(TestLexer.test('''Class _vJ:e{Val o0:_;}Class y6:n27c{I(_:String ;_:Array [Array [Int ,0b1_111_0_0],01]){}Constructor (Z_5,_:Array [String ,0b1011000];Pi,_2:Int ){} }Class _5a___:_278{}Class _m_{}''','''Class,_vJ,:,e,{,Val,o0,:,_,;,},Class,y6,:,n27c,{,I,(,_,:,String,;,_,:,Array,[,Array,[,Int,,,0b111100,],,,01,],),{,},Constructor,(,Z_5,,,_,:,Array,[,String,,,0b1011000,],;,Pi,,,_2,:,Int,),{,},},Class,_5a___,:,_278,{,},Class,_m_,{,},<EOF>''',101))

    def test_205(self):
        self.assertTrue(TestLexer.test('''Class _s:U_x{Destructor (){Break ;} }Class _:_{}Class _z{}Class h:v{}Class n:PA{Val $Uu,_:Array [String ,076];}Class K:N{}''','''Class,_s,:,U_x,{,Destructor,(,),{,Break,;,},},Class,_,:,_,{,},Class,_z,{,},Class,h,:,v,{,},Class,n,:,PA,{,Val,$Uu,,,_,:,Array,[,String,,,076,],;,},Class,K,:,N,{,},<EOF>''',101))

    def test_206(self):
        self.assertTrue(TestLexer.test('''Class c{Destructor (){Val S90,k,O_G,q:Int ;I::$l();E::$_.V._M();Val y,C_,C:Array [String ,05];{} }_E(){ {}{} }}Class __{}Class _{}''','''Class,c,{,Destructor,(,),{,Val,S90,,,k,,,O_G,,,q,:,Int,;,I,::,$l,(,),;,E,::,$_,.,V,.,_M,(,),;,Val,y,,,C_,,,C,:,Array,[,String,,,05,],;,{,},},_E,(,),{,{,},{,},},},Class,__,{,},Class,_,{,},<EOF>''',101))

    def test_207(self):
        self.assertTrue(TestLexer.test('''Class v{}Class p:M{}Class __:Q_{R(m:_;C:Array [Array [Float ,06],0XB];_,j,_,G,O1a,H:q){ {}{} }Destructor (){}Val $__,$VY,_m_:TD__8;}''','''Class,v,{,},Class,p,:,M,{,},Class,__,:,Q_,{,R,(,m,:,_,;,C,:,Array,[,Array,[,Float,,,06,],,,0XB,],;,_,,,j,,,_,,,G,,,O1a,,,H,:,q,),{,{,},{,},},Destructor,(,),{,},Val,$__,,,$VY,,,_m_,:,TD__8,;,},<EOF>''',101))

    def test_208(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _:sdgf9{}Class _:_1{Var $_t:Array [Array [Array [Array [Array [Array [Array [Array [String ,38],1],0xB],38],0b1],03],2_3_2],38];}''','''Class,_,:,_,{,},Class,_,:,sdgf9,{,},Class,_,:,_1,{,Var,$_t,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,38,],,,1,],,,0xB,],,,38,],,,0b1,],,,03,],,,232,],,,38,],;,},<EOF>''',101))

    def test_209(self):
        self.assertTrue(TestLexer.test('''Class C_0_:Rq{$_66(_X730,_:Array [Array [Array [Boolean ,9],9],020_3_1];_:Boolean ;Y:V0;_M,c41:Array [Array [Array [Boolean ,9],03],0104];u8:e8){}Constructor (o,e,_8,_,X8_8_,i0S,O_,I8_,cE,__:_){}Destructor (){Break ;} }''','''Class,C_0_,:,Rq,{,$_66,(,_X730,,,_,:,Array,[,Array,[,Array,[,Boolean,,,9,],,,9,],,,02031,],;,_,:,Boolean,;,Y,:,V0,;,_M,,,c41,:,Array,[,Array,[,Array,[,Boolean,,,9,],,,03,],,,0104,],;,u8,:,e8,),{,},Constructor,(,o,,,e,,,_8,,,_,,,X8_8_,,,i0S,,,O_,,,I8_,,,cE,,,__,:,_,),{,},Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_210(self):
        self.assertTrue(TestLexer.test('''Class _4_{}Class _81:__7{Constructor (S,_6,s,D9_:Array [String ,0b1010];_,_:__;_j5,t:Int ){} }Class _{Val ___hv:Array [Float ,0B11111];Destructor (){} }''','''Class,_4_,{,},Class,_81,:,__7,{,Constructor,(,S,,,_6,,,s,,,D9_,:,Array,[,String,,,0b1010,],;,_,,,_,:,__,;,_j5,,,t,:,Int,),{,},},Class,_,{,Val,___hv,:,Array,[,Float,,,0B11111,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_211(self):
        self.assertTrue(TestLexer.test('''Class _:_{Val $X8:Array [Array [Array [Array [Array [Array [Int ,0B10100],0140],3],02],0x3F],0X2E];Val $0,$_,_,$Y5:_;}''','''Class,_,:,_,{,Val,$X8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B10100,],,,0140,],,,3,],,,02,],,,0x3F,],,,0X2E,],;,Val,$0,,,$_,,,_,,,$Y5,:,_,;,},<EOF>''',101))

    def test_212(self):
        self.assertTrue(TestLexer.test('''Class v__b0__{Destructor (){}Destructor (){} }Class _T{Var _7y,$d,$_p,_d,w6__:Array [Float ,0X9_1];}Class _6P_{}''','''Class,v__b0__,{,Destructor,(,),{,},Destructor,(,),{,},},Class,_T,{,Var,_7y,,,$d,,,$_p,,,_d,,,w6__,:,Array,[,Float,,,0X91,],;,},Class,_6P_,{,},<EOF>''',101))

    def test_213(self):
        self.assertTrue(TestLexer.test('''Class L{Val _i9:String ;Var $_,_,$y:String ;_I(_:gO;h,_n_,_,_,Z,_t,_,Wc__U:_;_,_,C,_:Array [Int ,8_0421]){} }''','''Class,L,{,Val,_i9,:,String,;,Var,$_,,,_,,,$y,:,String,;,_I,(,_,:,gO,;,h,,,_n_,,,_,,,_,,,Z,,,_t,,,_,,,Wc__U,:,_,;,_,,,_,,,C,,,_,:,Array,[,Int,,,80421,],),{,},},<EOF>''',101))

    def test_214(self):
        self.assertTrue(TestLexer.test('''Class cL_:q_{Var $1XE,_:Int ;_(){}Var __,$7c,$_,__5E,_5,$1,_,$___39:String ;}Class _{Constructor (j:__8_){Return ;} }''','''Class,cL_,:,q_,{,Var,$1XE,,,_,:,Int,;,_,(,),{,},Var,__,,,$7c,,,$_,,,__5E,,,_5,,,$1,,,_,,,$___39,:,String,;,},Class,_,{,Constructor,(,j,:,__8_,),{,Return,;,},},<EOF>''',101))

    def test_215(self):
        self.assertTrue(TestLexer.test('''Class _1:_{}Class __8:_{Constructor (_:Boolean ;_____,NI,_,_,_M1,g__c:Array [Array [Array [Array [Boolean ,0X27],2],0B1],91_56780];UHY6,o,BT:String ){}Constructor (){} }''','''Class,_1,:,_,{,},Class,__8,:,_,{,Constructor,(,_,:,Boolean,;,_____,,,NI,,,_,,,_,,,_M1,,,g__c,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X27,],,,2,],,,0B1,],,,9156780,],;,UHY6,,,o,,,BT,:,String,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_216(self):
        self.assertTrue(TestLexer.test('''Class w:O{Val _j,_25,w_9_7___d_,Y:_;Val $_,$9I_,$t:Array [Array [Array [Array [Int ,017],017],41],0X4];Constructor (__4:t_;f:Int ){}Destructor (){} }''','''Class,w,:,O,{,Val,_j,,,_25,,,w_9_7___d_,,,Y,:,_,;,Val,$_,,,$9I_,,,$t,:,Array,[,Array,[,Array,[,Array,[,Int,,,017,],,,017,],,,41,],,,0X4,],;,Constructor,(,__4,:,t_,;,f,:,Int,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_217(self):
        self.assertTrue(TestLexer.test('''Class E4{Var _:Array [Array [Array [Boolean ,0XA],25],011];}Class k:G7dd{}Class g{Destructor (){}Val Ld,Q2,_O,La:Array [Array [Float ,0X9_19],0xAAB88];}''','''Class,E4,{,Var,_,:,Array,[,Array,[,Array,[,Boolean,,,0XA,],,,25,],,,011,],;,},Class,k,:,G7dd,{,},Class,g,{,Destructor,(,),{,},Val,Ld,,,Q2,,,_O,,,La,:,Array,[,Array,[,Float,,,0X919,],,,0xAAB88,],;,},<EOF>''',101))

    def test_218(self):
        self.assertTrue(TestLexer.test('''Class _:Cj7{}Class _:X{}Class __{Val $T:Array [Array [Array [Array [Array [Array [Int ,0X10],0b101100],61],0x4],3],6_5];}Class F:M{}Class _{}Class Q:O{}''','''Class,_,:,Cj7,{,},Class,_,:,X,{,},Class,__,{,Val,$T,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X10,],,,0b101100,],,,61,],,,0x4,],,,3,],,,65,],;,},Class,F,:,M,{,},Class,_,{,},Class,Q,:,O,{,},<EOF>''',101))

    def test_219(self):
        self.assertTrue(TestLexer.test('''Class _:b5o{$H(u5,_,__,_:String ;j:Array [Array [Array [String ,0X3],0B1],0x2B];G:Array [Array [Array [Array [String ,0111],02],0B10],01_7];_,y,_8,lA:Array [Array [Float ,48],48];_:_4;q:Float ;X_,Nb61A,S_D:_7;__,f1:String ;D4,_3z:Array [String ,0B10]){Var _9_r647_:W2_7;} }''','''Class,_,:,b5o,{,$H,(,u5,,,_,,,__,,,_,:,String,;,j,:,Array,[,Array,[,Array,[,String,,,0X3,],,,0B1,],,,0x2B,],;,G,:,Array,[,Array,[,Array,[,Array,[,String,,,0111,],,,02,],,,0B10,],,,017,],;,_,,,y,,,_8,,,lA,:,Array,[,Array,[,Float,,,48,],,,48,],;,_,:,_4,;,q,:,Float,;,X_,,,Nb61A,,,S_D,:,_7,;,__,,,f1,:,String,;,D4,,,_3z,:,Array,[,String,,,0B10,],),{,Var,_9_r647_,:,W2_7,;,},},<EOF>''',101))

    def test_220(self):
        self.assertTrue(TestLexer.test('''Class _:A_{}Class _m4a:__{Val $_2:Int ;Destructor (){}Constructor (y8V,_0:Float ;b_a__:Int ){}Destructor (){} }''','''Class,_,:,A_,{,},Class,_m4a,:,__,{,Val,$_2,:,Int,;,Destructor,(,),{,},Constructor,(,y8V,,,_0,:,Float,;,b_a__,:,Int,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_221(self):
        self.assertTrue(TestLexer.test('''Class _:y{Constructor (_:Array [Array [Array [String ,90_77],0b1],0B1]){}Var $N:d7_;}Class c:_081Lw{}Class Iz:h_9{}Class _2_2:m{$_(){}Destructor (){} }''','''Class,_,:,y,{,Constructor,(,_,:,Array,[,Array,[,Array,[,String,,,9077,],,,0b1,],,,0B1,],),{,},Var,$N,:,d7_,;,},Class,c,:,_081Lw,{,},Class,Iz,:,h_9,{,},Class,_2_2,:,m,{,$_,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_222(self):
        self.assertTrue(TestLexer.test('''Class _{$x(_:Array [Array [String ,18],5];r__:Nq_){} }Class _8jG:tzq_Ei{Destructor (){}$55(_H_,Q,EU,_:Array [Boolean ,18];__:Array [Array [Array [Int ,18],034],18]){Z::$_X_._();} }Class m:__{}''','''Class,_,{,$x,(,_,:,Array,[,Array,[,String,,,18,],,,5,],;,r__,:,Nq_,),{,},},Class,_8jG,:,tzq_Ei,{,Destructor,(,),{,},$55,(,_H_,,,Q,,,EU,,,_,:,Array,[,Boolean,,,18,],;,__,:,Array,[,Array,[,Array,[,Int,,,18,],,,034,],,,18,],),{,Z,::,$_X_,.,_,(,),;,},},Class,m,:,__,{,},<EOF>''',101))

    def test_223(self):
        self.assertTrue(TestLexer.test('''Class _1Z:r{Constructor (E,J:Array [Array [Array [Int ,04_76],0xE],0b1_0];_f,A_3,_:Float ;___,o,R,x_3_0_:_3){} }''','''Class,_1Z,:,r,{,Constructor,(,E,,,J,:,Array,[,Array,[,Array,[,Int,,,0476,],,,0xE,],,,0b10,],;,_f,,,A_3,,,_,:,Float,;,___,,,o,,,R,,,x_3_0_,:,_3,),{,},},<EOF>''',101))

    def test_224(self):
        self.assertTrue(TestLexer.test('''Class _X{Constructor (){}Destructor (){}Var $_Z,_U,E:F;A6(){}$L_(_,M_,_,___r,M_,__:String ;_,_,R,R_,_M_,_:_){} }Class V{}''','''Class,_X,{,Constructor,(,),{,},Destructor,(,),{,},Var,$_Z,,,_U,,,E,:,F,;,A6,(,),{,},$L_,(,_,,,M_,,,_,,,___r,,,M_,,,__,:,String,;,_,,,_,,,R,,,R_,,,_M_,,,_,:,_,),{,},},Class,V,{,},<EOF>''',101))

    def test_225(self):
        self.assertTrue(TestLexer.test('''Class __:_{Constructor (z:Array [Boolean ,0x6];_:_;_,X,lJ1,__,_,e1,W:_9i;DI_:Boolean ;_,_1:Array [Array [Array [Array [Array [Float ,14],02],0X9],5_64],0XD16_1]){Break ;} }''','''Class,__,:,_,{,Constructor,(,z,:,Array,[,Boolean,,,0x6,],;,_,:,_,;,_,,,X,,,lJ1,,,__,,,_,,,e1,,,W,:,_9i,;,DI_,:,Boolean,;,_,,,_1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,14,],,,02,],,,0X9,],,,564,],,,0XD161,],),{,Break,;,},},<EOF>''',101))

    def test_226(self):
        self.assertTrue(TestLexer.test('''Class _7__H_:_{Constructor (K:Boolean ;E:String ;un_,_:Array [Array [String ,0XB_D],8];_w:Array [String ,0B1_1];__p_Q:Boolean ;_:Boolean ){} }''','''Class,_7__H_,:,_,{,Constructor,(,K,:,Boolean,;,E,:,String,;,un_,,,_,:,Array,[,Array,[,String,,,0XBD,],,,8,],;,_w,:,Array,[,String,,,0B11,],;,__p_Q,:,Boolean,;,_,:,Boolean,),{,},},<EOF>''',101))

    def test_227(self):
        self.assertTrue(TestLexer.test('''Class _s{}Class _:W{$_(_:Float ;r:Array [Float ,1]){} }Class __4:l_{}Class p6V0:j{Destructor (){}Constructor (_7_,_8:Array [Array [Array [Boolean ,0144],0b10_0],0XB]){}Val m8_:Int ;Val $TK_:_;V(){} }Class _R_M_8:__{}''','''Class,_s,{,},Class,_,:,W,{,$_,(,_,:,Float,;,r,:,Array,[,Float,,,1,],),{,},},Class,__4,:,l_,{,},Class,p6V0,:,j,{,Destructor,(,),{,},Constructor,(,_7_,,,_8,:,Array,[,Array,[,Array,[,Boolean,,,0144,],,,0b100,],,,0XB,],),{,},Val,m8_,:,Int,;,Val,$TK_,:,_,;,V,(,),{,},},Class,_R_M_8,:,__,{,},<EOF>''',101))

    def test_228(self):
        self.assertTrue(TestLexer.test('''Class _{__(_,_,_i_,_:Array [Float ,0XF];_:Array [Array [Int ,265],0X20];T,O,a_5:String ;mf_39:Array [Array [Array [String ,0X20],0x1A],063];f34_y:Float ;s:Array [Int ,0xB_69]){}Destructor (){}Constructor (){Break ;}Var $_:Array [Int ,01_6_4_5_2];}''','''Class,_,{,__,(,_,,,_,,,_i_,,,_,:,Array,[,Float,,,0XF,],;,_,:,Array,[,Array,[,Int,,,265,],,,0X20,],;,T,,,O,,,a_5,:,String,;,mf_39,:,Array,[,Array,[,Array,[,String,,,0X20,],,,0x1A,],,,063,],;,f34_y,:,Float,;,s,:,Array,[,Int,,,0xB69,],),{,},Destructor,(,),{,},Constructor,(,),{,Break,;,},Var,$_,:,Array,[,Int,,,016452,],;,},<EOF>''',101))

    def test_229(self):
        self.assertTrue(TestLexer.test('''Class f_{Var $D_:K;}Class _{Constructor (e:Array [Boolean ,027];_:_7u){}Constructor (D7_,d:Int ){}Var $_m,l_b,$b,__:Int ;}''','''Class,f_,{,Var,$D_,:,K,;,},Class,_,{,Constructor,(,e,:,Array,[,Boolean,,,027,],;,_,:,_7u,),{,},Constructor,(,D7_,,,d,:,Int,),{,},Var,$_m,,,l_b,,,$b,,,__,:,Int,;,},<EOF>''',101))

    def test_230(self):
        self.assertTrue(TestLexer.test('''Class _3:k8_{}Class y__5{Var $_B:String ;}Class _{Destructor (){z::$_.h();} }Class v_We9:s5{Val $_:Array [String ,31];}''','''Class,_3,:,k8_,{,},Class,y__5,{,Var,$_B,:,String,;,},Class,_,{,Destructor,(,),{,z,::,$_,.,h,(,),;,},},Class,v_We9,:,s5,{,Val,$_,:,Array,[,String,,,31,],;,},<EOF>''',101))

    def test_231(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (_b:Array [Array [Array [Float ,0b11_011_00],10],07_3];s,_:Array [Array [Int ,3_1],0b1000010];_:Boolean ){Break ;} }''','''Class,_,:,_,{,Constructor,(,_b,:,Array,[,Array,[,Array,[,Float,,,0b1101100,],,,10,],,,073,],;,s,,,_,:,Array,[,Array,[,Int,,,31,],,,0b1000010,],;,_,:,Boolean,),{,Break,;,},},<EOF>''',101))

    def test_232(self):
        self.assertTrue(TestLexer.test('''Class __7__{Constructor (){}Constructor (){}Var _,F5:_Awd;Constructor (_,r,J:Array [Int ,05]){}Var yZ,$y:Float ;Destructor (){} }''','''Class,__7__,{,Constructor,(,),{,},Constructor,(,),{,},Var,_,,,F5,:,_Awd,;,Constructor,(,_,,,r,,,J,:,Array,[,Int,,,05,],),{,},Var,yZ,,,$y,:,Float,;,Destructor,(,),{,},},<EOF>''',101))

    def test_233(self):
        self.assertTrue(TestLexer.test('''Class Wk:_{}Class v{}Class V:__4{$__M(_0u:Array [Int ,0xF];Y,C__3:Int ;____z_fD51q7n_,Xk____:bs_;_:_;_:Float ;_:Array [Int ,0X2]){} }Class W_1:v{}''','''Class,Wk,:,_,{,},Class,v,{,},Class,V,:,__4,{,$__M,(,_0u,:,Array,[,Int,,,0xF,],;,Y,,,C__3,:,Int,;,____z_fD51q7n_,,,Xk____,:,bs_,;,_,:,_,;,_,:,Float,;,_,:,Array,[,Int,,,0X2,],),{,},},Class,W_1,:,v,{,},<EOF>''',101))

    def test_234(self):
        self.assertTrue(TestLexer.test('''Class TM9X:_4{}Class X:__{Val $b:String ;$_(){ {}Return ;} }Class mh:r{_4_(){Continue ;} }Class __:s{Constructor (){} }Class N{}''','''Class,TM9X,:,_4,{,},Class,X,:,__,{,Val,$b,:,String,;,$_,(,),{,{,},Return,;,},},Class,mh,:,r,{,_4_,(,),{,Continue,;,},},Class,__,:,s,{,Constructor,(,),{,},},Class,N,{,},<EOF>''',101))

    def test_235(self):
        self.assertTrue(TestLexer.test('''Class XU5{e5(V:Array [Float ,50];_,_,x,f3,E:Float ){}Constructor (H_cy:_6){} }Class i:M{Constructor (_:String ){} }''','''Class,XU5,{,e5,(,V,:,Array,[,Float,,,50,],;,_,,,_,,,x,,,f3,,,E,:,Float,),{,},Constructor,(,H_cy,:,_6,),{,},},Class,i,:,M,{,Constructor,(,_,:,String,),{,},},<EOF>''',101))

    def test_236(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _O{Constructor (_:uF;v,_,_,_c49,_v_,_B,X9:Array [Array [Array [Boolean ,5],59_54],0X2];_,_,_,_y:W;s_F:Array [Array [Int ,6],0B1_01]){}Constructor (){Return ;} }Class bR5{}Class o{}''','''Class,_,:,_,{,},Class,_O,{,Constructor,(,_,:,uF,;,v,,,_,,,_,,,_c49,,,_v_,,,_B,,,X9,:,Array,[,Array,[,Array,[,Boolean,,,5,],,,5954,],,,0X2,],;,_,,,_,,,_,,,_y,:,W,;,s_F,:,Array,[,Array,[,Int,,,6,],,,0B101,],),{,},Constructor,(,),{,Return,;,},},Class,bR5,{,},Class,o,{,},<EOF>''',101))

    def test_237(self):
        self.assertTrue(TestLexer.test('''Class k_{u772(n,_82:Array [String ,0xD]){}__(B__,_,_1,b,_,F,r_65:Boolean ;W:Float ;Y77:_4){}Destructor (){} }''','''Class,k_,{,u772,(,n,,,_82,:,Array,[,String,,,0xD,],),{,},__,(,B__,,,_,,,_1,,,b,,,_,,,F,,,r_65,:,Boolean,;,W,:,Float,;,Y77,:,_4,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_238(self):
        self.assertTrue(TestLexer.test('''Class __l{Constructor (){}Val $aG:Array [Array [Array [Array [Array [Array [String ,030],0X22],0b1000011],86],0170_6],0b1000011];}Class M__{Destructor (){Var M:String ;}Destructor (){} }''','''Class,__l,{,Constructor,(,),{,},Val,$aG,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,030,],,,0X22,],,,0b1000011,],,,86,],,,01706,],,,0b1000011,],;,},Class,M__,{,Destructor,(,),{,Var,M,:,String,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_239(self):
        self.assertTrue(TestLexer.test('''Class w{Val $s,$_:Array [Float ,0x6];Constructor (j6v,_:String ;_37:Array [Array [Array [String ,6],0x5A],1]){} }Class N{}''','''Class,w,{,Val,$s,,,$_,:,Array,[,Float,,,0x6,],;,Constructor,(,j6v,,,_,:,String,;,_37,:,Array,[,Array,[,Array,[,String,,,6,],,,0x5A,],,,1,],),{,},},Class,N,{,},<EOF>''',101))

    def test_240(self):
        self.assertTrue(TestLexer.test('''Class _t{Var $5:String ;Val qMO_7_v,_6t:Int ;}Class _Q{Destructor (){} }Class K_{Constructor (_0,T4,_,U,O:L_){} }''','''Class,_t,{,Var,$5,:,String,;,Val,qMO_7_v,,,_6t,:,Int,;,},Class,_Q,{,Destructor,(,),{,},},Class,K_,{,Constructor,(,_0,,,T4,,,_,,,U,,,O,:,L_,),{,},},<EOF>''',101))

    def test_241(self):
        self.assertTrue(TestLexer.test('''Class a:s{}Class _3:s{Val q,$8p,V0__lL9__uF,L_:Array [Int ,0157];}Class yZ7{Val $__:Array [Array [Array [Float ,0105],4],23];}''','''Class,a,:,s,{,},Class,_3,:,s,{,Val,q,,,$8p,,,V0__lL9__uF,,,L_,:,Array,[,Int,,,0157,],;,},Class,yZ7,{,Val,$__,:,Array,[,Array,[,Array,[,Float,,,0105,],,,4,],,,23,],;,},<EOF>''',101))

    def test_242(self):
        self.assertTrue(TestLexer.test('''Class f{Val $_,$i_:u;Destructor (){} }Class __y7{Var _2,$__1,$a:Boolean ;Constructor (I0_6_7,J,T,P:Float ;_:Float ){} }Class _{}Class f{}''','''Class,f,{,Val,$_,,,$i_,:,u,;,Destructor,(,),{,},},Class,__y7,{,Var,_2,,,$__1,,,$a,:,Boolean,;,Constructor,(,I0_6_7,,,J,,,T,,,P,:,Float,;,_,:,Float,),{,},},Class,_,{,},Class,f,{,},<EOF>''',101))

    def test_243(self):
        self.assertTrue(TestLexer.test('''Class cH0_{Val $_:String =!_n._RM();Constructor (W__:_){}Constructor (){}Constructor (_:Boolean ;_p,L_,R_,Z7:String ;e_,_:String ;_7:Array [String ,0b1_0]){} }Class R{}''','''Class,cH0_,{,Val,$_,:,String,=,!,_n,.,_RM,(,),;,Constructor,(,W__,:,_,),{,},Constructor,(,),{,},Constructor,(,_,:,Boolean,;,_p,,,L_,,,R_,,,Z7,:,String,;,e_,,,_,:,String,;,_7,:,Array,[,String,,,0b10,],),{,},},Class,R,{,},<EOF>''',101))

    def test_244(self):
        self.assertTrue(TestLexer.test('''Class f:a3_{}Class zt{Destructor (){} }Class _:___{}Class U{Var __rTJi:String ;$_(){Val T94_:J;Val __,m,_:Q7;} }Class p{}Class OK{}''','''Class,f,:,a3_,{,},Class,zt,{,Destructor,(,),{,},},Class,_,:,___,{,},Class,U,{,Var,__rTJi,:,String,;,$_,(,),{,Val,T94_,:,J,;,Val,__,,,m,,,_,:,Q7,;,},},Class,p,{,},Class,OK,{,},<EOF>''',101))

    def test_245(self):
        self.assertTrue(TestLexer.test('''Class _{}Class Zh{Var _:Boolean ;Constructor (_:Array [String ,023_00]){} }Class _:e{}Class _:E{}Class _{Val S__,$D:_n;}''','''Class,_,{,},Class,Zh,{,Var,_,:,Boolean,;,Constructor,(,_,:,Array,[,String,,,02300,],),{,},},Class,_,:,e,{,},Class,_,:,E,{,},Class,_,{,Val,S__,,,$D,:,_n,;,},<EOF>''',101))

    def test_246(self):
        self.assertTrue(TestLexer.test('''Class _Y:__B{$i(){}Var _0CZq,C:Array [String ,10];}Class d{}Class gzX{Constructor (_,P301,_:Float ){}Destructor (){Val E:Boolean ;} }''','''Class,_Y,:,__B,{,$i,(,),{,},Var,_0CZq,,,C,:,Array,[,String,,,10,],;,},Class,d,{,},Class,gzX,{,Constructor,(,_,,,P301,,,_,:,Float,),{,},Destructor,(,),{,Val,E,:,Boolean,;,},},<EOF>''',101))

    def test_247(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (B5:Array [String ,0XB];_1:Array [Boolean ,06_1];Oh__:V;_3yE,V,_,s_,___90i,o_Kd,_,_:Array [Int ,5]){} }Class _T:X{Var $J_,$_:Array [String ,065];}Class _{}''','''Class,_,{,Constructor,(,B5,:,Array,[,String,,,0XB,],;,_1,:,Array,[,Boolean,,,061,],;,Oh__,:,V,;,_3yE,,,V,,,_,,,s_,,,___90i,,,o_Kd,,,_,,,_,:,Array,[,Int,,,5,],),{,},},Class,_T,:,X,{,Var,$J_,,,$_,:,Array,[,String,,,065,],;,},Class,_,{,},<EOF>''',101))

    def test_248(self):
        self.assertTrue(TestLexer.test('''Class _ta{}Class _{Destructor (){} }Class t_7:U5_R{Var $V:i;Var ___:Array [Array [Array [Array [Array [Array [Array [Boolean ,28_6],0b110001],60],60],0B1000110],0XD],0B1];}''','''Class,_ta,{,},Class,_,{,Destructor,(,),{,},},Class,t_7,:,U5_R,{,Var,$V,:,i,;,Var,___,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,286,],,,0b110001,],,,60,],,,60,],,,0B1000110,],,,0XD,],,,0B1,],;,},<EOF>''',101))

    def test_249(self):
        self.assertTrue(TestLexer.test('''Class _:U{}Class syQ8_:_{}Class V{$_u10(K_509_,_2F,C:_;k,__,GA:Array [Int ,0b1]){}Constructor (_O_,L:_;_6_:Float ;a_,_:_26y;_,_,e,XT:_;_14_,Dy,__v6:Array [String ,0B1111];_,__,_S,W87,t:Array [Array [Array [Array [Boolean ,8],0B1111],036],44];_2,_,_,_,_:Boolean ){Continue ;}T(z_:Int ){} }''','''Class,_,:,U,{,},Class,syQ8_,:,_,{,},Class,V,{,$_u10,(,K_509_,,,_2F,,,C,:,_,;,k,,,__,,,GA,:,Array,[,Int,,,0b1,],),{,},Constructor,(,_O_,,,L,:,_,;,_6_,:,Float,;,a_,,,_,:,_26y,;,_,,,_,,,e,,,XT,:,_,;,_14_,,,Dy,,,__v6,:,Array,[,String,,,0B1111,],;,_,,,__,,,_S,,,W87,,,t,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,8,],,,0B1111,],,,036,],,,44,],;,_2,,,_,,,_,,,_,,,_,:,Boolean,),{,Continue,;,},T,(,z_,:,Int,),{,},},<EOF>''',101))

    def test_250(self):
        self.assertTrue(TestLexer.test('''Class _:_{A(_,NA_:_f__;_,q,q_L:Array [Boolean ,0106];_:Array [Array [String ,0xD],25];Y_,_2__:Array [Int ,0106];U,B7,__i,E73_,H,_:Array [Float ,8];__,u8:_0_4;_I,_:Array [Array [Array [Array [Int ,0xD],0X12],0B1_1],8_5];_B,t,A_:__;_:g;_aX:String ){} }''','''Class,_,:,_,{,A,(,_,,,NA_,:,_f__,;,_,,,q,,,q_L,:,Array,[,Boolean,,,0106,],;,_,:,Array,[,Array,[,String,,,0xD,],,,25,],;,Y_,,,_2__,:,Array,[,Int,,,0106,],;,U,,,B7,,,__i,,,E73_,,,H,,,_,:,Array,[,Float,,,8,],;,__,,,u8,:,_0_4,;,_I,,,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0xD,],,,0X12,],,,0B11,],,,85,],;,_B,,,t,,,A_,:,__,;,_,:,g,;,_aX,:,String,),{,},},<EOF>''',101))

    def test_251(self):
        self.assertTrue(TestLexer.test('''Class WT_2{$2_(__3:Array [Array [Array [Array [String ,0b1],0x8],0X24],0xCF]){} }Class _a:_{Var $u:Int ;}Class _1{$j_(_:I;V:Boolean ){} }''','''Class,WT_2,{,$2_,(,__3,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,0x8,],,,0X24,],,,0xCF,],),{,},},Class,_a,:,_,{,Var,$u,:,Int,;,},Class,_1,{,$j_,(,_,:,I,;,V,:,Boolean,),{,},},<EOF>''',101))

    def test_252(self):
        self.assertTrue(TestLexer.test('''Class J{Val b,l:l;}Class _9Lw_:z{Var U,$__,$_,_o,$_r:Array [String ,9_8];}Class t2s1bY1:X9{Val __:Int ;}Class _9{}''','''Class,J,{,Val,b,,,l,:,l,;,},Class,_9Lw_,:,z,{,Var,U,,,$__,,,$_,,,_o,,,$_r,:,Array,[,String,,,98,],;,},Class,t2s1bY1,:,X9,{,Val,__,:,Int,;,},Class,_9,{,},<EOF>''',101))

    def test_253(self):
        self.assertTrue(TestLexer.test('''Class B2W{Constructor (R_A:Array [Boolean ,0b1];Q:Array [Array [Array [Array [Float ,0x6],023_01],0B101000],2];_,__:Float ;l,E:Array [Array [String ,77],0x3_1];__6_6:Boolean ;_3_,_CY,PV9_L_3Z_W,Jy:Array [Array [Array [Float ,246],051],0X5B]){}V(I:Array [Int ,05]){}Constructor (M:Array [Float ,0XDA_D]){} }''','''Class,B2W,{,Constructor,(,R_A,:,Array,[,Boolean,,,0b1,],;,Q,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x6,],,,02301,],,,0B101000,],,,2,],;,_,,,__,:,Float,;,l,,,E,:,Array,[,Array,[,String,,,77,],,,0x31,],;,__6_6,:,Boolean,;,_3_,,,_CY,,,PV9_L_3Z_W,,,Jy,:,Array,[,Array,[,Array,[,Float,,,246,],,,051,],,,0X5B,],),{,},V,(,I,:,Array,[,Int,,,05,],),{,},Constructor,(,M,:,Array,[,Float,,,0XDAD,],),{,},},<EOF>''',101))

    def test_254(self):
        self.assertTrue(TestLexer.test('''Class y{Constructor (u9_2y:Array [Array [Array [Array [Array [Float ,1],071],071],17_6],0X32];Ec_B,_7:Boolean ){} }''','''Class,y,{,Constructor,(,u9_2y,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,1,],,,071,],,,071,],,,176,],,,0X32,],;,Ec_B,,,_7,:,Boolean,),{,},},<EOF>''',101))

    def test_255(self):
        self.assertTrue(TestLexer.test('''Class _B1{Var $y,_:__;}Class u:__{Val e1:Array [Array [Boolean ,100],100];Destructor (){}Destructor (){}Destructor (){} }''','''Class,_B1,{,Var,$y,,,_,:,__,;,},Class,u,:,__,{,Val,e1,:,Array,[,Array,[,Boolean,,,100,],,,100,],;,Destructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_256(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (__:_;_,_:Array [Array [Array [Int ,4],0137],0b1011100];_,y:Array [String ,0B100001];e,n,W:Array [Boolean ,07]){}_(___q:_8){Break ;}Constructor (){} }''','''Class,_,:,_,{,Constructor,(,__,:,_,;,_,,,_,:,Array,[,Array,[,Array,[,Int,,,4,],,,0137,],,,0b1011100,],;,_,,,y,:,Array,[,String,,,0B100001,],;,e,,,n,,,W,:,Array,[,Boolean,,,07,],),{,},_,(,___q,:,_8,),{,Break,;,},Constructor,(,),{,},},<EOF>''',101))

    def test_257(self):
        self.assertTrue(TestLexer.test('''Class Sn{Val _,ekDP3,_,Y_9KlI,$1098,_,$__0:___;Val $1_9,_,_5,_,$_bE,$u5,h:String ;Val $76:Array [Array [Float ,0x43],07_7];}''','''Class,Sn,{,Val,_,,,ekDP3,,,_,,,Y_9KlI,,,$1098,,,_,,,$__0,:,___,;,Val,$1_9,,,_,,,_5,,,_,,,$_bE,,,$u5,,,h,:,String,;,Val,$76,:,Array,[,Array,[,Float,,,0x43,],,,077,],;,},<EOF>''',101))

    def test_258(self):
        self.assertTrue(TestLexer.test('''Class _677{Constructor (Km_,F:Array [Array [Boolean ,0B1],0X57];k:Float ){Continue ;}Var hi:S_;}Class KAu_:p7P_{Val _,$_8_2,l,zXt:String ;}Class _:VL1210{Var _,S,$d____:Array [Float ,0b1];}''','''Class,_677,{,Constructor,(,Km_,,,F,:,Array,[,Array,[,Boolean,,,0B1,],,,0X57,],;,k,:,Float,),{,Continue,;,},Var,hi,:,S_,;,},Class,KAu_,:,p7P_,{,Val,_,,,$_8_2,,,l,,,zXt,:,String,;,},Class,_,:,VL1210,{,Var,_,,,S,,,$d____,:,Array,[,Float,,,0b1,],;,},<EOF>''',101))

    def test_259(self):
        self.assertTrue(TestLexer.test('''Class _7:y{Destructor (){} }Class q:I{Val n__,D,$AJ,$_:Array [Array [Array [Array [String ,0x5B],0B11010],4],5];}Class aj13:mG6_5{}''','''Class,_7,:,y,{,Destructor,(,),{,},},Class,q,:,I,{,Val,n__,,,D,,,$AJ,,,$_,:,Array,[,Array,[,Array,[,Array,[,String,,,0x5B,],,,0B11010,],,,4,],,,5,],;,},Class,aj13,:,mG6_5,{,},<EOF>''',101))

    def test_260(self):
        self.assertTrue(TestLexer.test('''Class J_eL5{}Class N:_3L{}Class ___d:m{$4_(_J:_o;L:Array [Array [Array [Array [Array [String ,076],0B1010001],0B1],0X11],0x44];_R:Array [Float ,0B1]){Break ;Val _:S9_;} }Class _:_{}''','''Class,J_eL5,{,},Class,N,:,_3L,{,},Class,___d,:,m,{,$4_,(,_J,:,_o,;,L,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,076,],,,0B1010001,],,,0B1,],,,0X11,],,,0x44,],;,_R,:,Array,[,Float,,,0B1,],),{,Break,;,Val,_,:,S9_,;,},},Class,_,:,_,{,},<EOF>''',101))

    def test_261(self):
        self.assertTrue(TestLexer.test('''Class S:_{Constructor (__:_;z7:Boolean ;g_:Array [Array [Array [Array [Array [Int ,2_5],0704],0105],3],0x21]){} }Class D{Destructor (){} }''','''Class,S,:,_,{,Constructor,(,__,:,_,;,z7,:,Boolean,;,g_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,25,],,,0704,],,,0105,],,,3,],,,0x21,],),{,},},Class,D,{,Destructor,(,),{,},},<EOF>''',101))

    def test_262(self):
        self.assertTrue(TestLexer.test('''Class P:_E3t_{}Class u:_l{p(_9:Array [Array [String ,02],5]){MX1::$5();} }Class Z:_{}Class _:WJ4_{}Class _6{}Class bh0_:V2d{Val $86,$_Nt5,$r_8:GR;}''','''Class,P,:,_E3t_,{,},Class,u,:,_l,{,p,(,_9,:,Array,[,Array,[,String,,,02,],,,5,],),{,MX1,::,$5,(,),;,},},Class,Z,:,_,{,},Class,_,:,WJ4_,{,},Class,_6,{,},Class,bh0_,:,V2d,{,Val,$86,,,$_Nt5,,,$r_8,:,GR,;,},<EOF>''',101))

    def test_263(self):
        self.assertTrue(TestLexer.test('''Class H{}Class T7:_{Var $K,_u1,_,$26o_,_:Array [Array [Array [Array [Array [Boolean ,067],2],0B1001001],0xE_20],9_29_98_1_713];}Class _q_{}''','''Class,H,{,},Class,T7,:,_,{,Var,$K,,,_u1,,,_,,,$26o_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,067,],,,2,],,,0B1001001,],,,0xE20,],,,929981713,],;,},Class,_q_,{,},<EOF>''',101))

    def test_264(self):
        self.assertTrue(TestLexer.test('''Class U{}Class W:b{Var M,_r5M:Array [Array [Array [Array [Array [Array [Float ,7_2_9_5],3],0X22],0xC_3C7_D5_0],0140],22];}Class _q:w___{}Class _{}''','''Class,U,{,},Class,W,:,b,{,Var,M,,,_r5M,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,7295,],,,3,],,,0X22,],,,0xC3C7D50,],,,0140,],,,22,],;,},Class,_q,:,w___,{,},Class,_,{,},<EOF>''',101))

    def test_265(self):
        self.assertTrue(TestLexer.test('''Class yj:V{$_1H(_:String ;_:_y_5B;_,z:Array [Array [String ,0x48],057];G__6,m,Qr,_,__B4:_X;__:Array [Array [Float ,02],017]){} }''','''Class,yj,:,V,{,$_1H,(,_,:,String,;,_,:,_y_5B,;,_,,,z,:,Array,[,Array,[,String,,,0x48,],,,057,],;,G__6,,,m,,,Qr,,,_,,,__B4,:,_X,;,__,:,Array,[,Array,[,Float,,,02,],,,017,],),{,},},<EOF>''',101))

    def test_266(self):
        self.assertTrue(TestLexer.test('''Class q_{}Class _:Z{}Class _:wjjX{Constructor (F60_6_,_,_,F:Boolean ;q:Array [Int ,0X15]){R::$_();}Var $2:s=!!!!!New D();}''','''Class,q_,{,},Class,_,:,Z,{,},Class,_,:,wjjX,{,Constructor,(,F60_6_,,,_,,,_,,,F,:,Boolean,;,q,:,Array,[,Int,,,0X15,],),{,R,::,$_,(,),;,},Var,$2,:,s,=,!,!,!,!,!,New,D,(,),;,},<EOF>''',101))

    def test_267(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (x:_;_:Array [Array [Int ,1_8_21],01];__p7_,V:xN;L:Float ){} }Class wX_37:_a{Destructor (){} }Class __:_{}''','''Class,_,:,_,{,Constructor,(,x,:,_,;,_,:,Array,[,Array,[,Int,,,1821,],,,01,],;,__p7_,,,V,:,xN,;,L,:,Float,),{,},},Class,wX_37,:,_a,{,Destructor,(,),{,},},Class,__,:,_,{,},<EOF>''',101))

    def test_268(self):
        self.assertTrue(TestLexer.test('''Class B:_{Constructor (Vx:Int ;_k,__:_){} }Class _:_N{Destructor (){}Var o:Float ;}Class _O:M{Var E:Int ;}Class __:s{Destructor (){} }''','''Class,B,:,_,{,Constructor,(,Vx,:,Int,;,_k,,,__,:,_,),{,},},Class,_,:,_N,{,Destructor,(,),{,},Var,o,:,Float,;,},Class,_O,:,M,{,Var,E,:,Int,;,},Class,__,:,s,{,Destructor,(,),{,},},<EOF>''',101))

    def test_269(self):
        self.assertTrue(TestLexer.test('''Class aZ44:_{}Class _:___57__i8{}Class dAutk0:Ae{}Class Tm{Val $7,$2N_,U_:String ;Var _:Array [Array [Float ,022],9];}''','''Class,aZ44,:,_,{,},Class,_,:,___57__i8,{,},Class,dAutk0,:,Ae,{,},Class,Tm,{,Val,$7,,,$2N_,,,U_,:,String,;,Var,_,:,Array,[,Array,[,Float,,,022,],,,9,],;,},<EOF>''',101))

    def test_270(self):
        self.assertTrue(TestLexer.test('''Class __1_se{}Class _g:_E2__35__5{}Class _{Constructor (){Break ;} }Class K_{}Class H{}Class _{Constructor (){Continue ;} }''','''Class,__1_se,{,},Class,_g,:,_E2__35__5,{,},Class,_,{,Constructor,(,),{,Break,;,},},Class,K_,{,},Class,H,{,},Class,_,{,Constructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_271(self):
        self.assertTrue(TestLexer.test('''Class _:_G{Var _S,T7_:_;t(O,q,k_,_E:Array [Array [Array [Array [Int ,0X9],0b110110],0x2F_5_8],03];__7_,V:Float ){} }''','''Class,_,:,_G,{,Var,_S,,,T7_,:,_,;,t,(,O,,,q,,,k_,,,_E,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X9,],,,0b110110,],,,0x2F58,],,,03,],;,__7_,,,V,:,Float,),{,},},<EOF>''',101))

    def test_272(self):
        self.assertTrue(TestLexer.test('''Class i_{Var EP1__,$_:Array [Array [Boolean ,05_5],5];}Class _A:_{Constructor (e3_d_Hy:Array [Int ,040]){ {Return ;} }Constructor (){}$1(_n_Xm,Y,q,_:__3;__1_,_p7,_R2_,h_Z:Array [Array [Array [String ,0X59],040],947_71_06]){} }Class _4W{}Class _k_:w{Var f:Array [Array [Array [Boolean ,0b1010],0XB],040]=-J::$098P_60a;}''','''Class,i_,{,Var,EP1__,,,$_,:,Array,[,Array,[,Boolean,,,055,],,,5,],;,},Class,_A,:,_,{,Constructor,(,e3_d_Hy,:,Array,[,Int,,,040,],),{,{,Return,;,},},Constructor,(,),{,},$1,(,_n_Xm,,,Y,,,q,,,_,:,__3,;,__1_,,,_p7,,,_R2_,,,h_Z,:,Array,[,Array,[,Array,[,String,,,0X59,],,,040,],,,9477106,],),{,},},Class,_4W,{,},Class,_k_,:,w,{,Var,f,:,Array,[,Array,[,Array,[,Boolean,,,0b1010,],,,0XB,],,,040,],=,-,J,::,$098P_60a,;,},<EOF>''',101))

    def test_273(self):
        self.assertTrue(TestLexer.test('''Class N4:_{Constructor (){Break ;}Val $__:etf;}Class e6{$_(E:Array [Array [Boolean ,0X5F],0X5F];_m:Array [Array [Array [Array [String ,4_26_2_8_5],33],0x34_A],0B11];_:_;k_,_6JQs,_,_,_2wZ_1:Array [Array [Int ,0X3_B],06_6_101]){} }''','''Class,N4,:,_,{,Constructor,(,),{,Break,;,},Val,$__,:,etf,;,},Class,e6,{,$_,(,E,:,Array,[,Array,[,Boolean,,,0X5F,],,,0X5F,],;,_m,:,Array,[,Array,[,Array,[,Array,[,String,,,426285,],,,33,],,,0x34A,],,,0B11,],;,_,:,_,;,k_,,,_6JQs,,,_,,,_,,,_2wZ_1,:,Array,[,Array,[,Int,,,0X3B,],,,066101,],),{,},},<EOF>''',101))

    def test_274(self):
        self.assertTrue(TestLexer.test('''Class _{Val t__4,$kc:Array [Array [Array [Boolean ,0B10_0],0142],0X9];}Class _RPN3Cw_9_k{}Class g{Val Qj_,$W:Float ;}Class _:__v7{}Class _3{}Class O{}''','''Class,_,{,Val,t__4,,,$kc,:,Array,[,Array,[,Array,[,Boolean,,,0B100,],,,0142,],,,0X9,],;,},Class,_RPN3Cw_9_k,{,},Class,g,{,Val,Qj_,,,$W,:,Float,;,},Class,_,:,__v7,{,},Class,_3,{,},Class,O,{,},<EOF>''',101))

    def test_275(self):
        self.assertTrue(TestLexer.test('''Class R{}Class _5_:YY{Constructor (){}Var $_:Array [Array [Array [Array [Boolean ,07],7],36],0x1_7];Val _2_:String ;}''','''Class,R,{,},Class,_5_,:,YY,{,Constructor,(,),{,},Var,$_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,07,],,,7,],,,36,],,,0x17,],;,Val,_2_,:,String,;,},<EOF>''',101))

    def test_276(self):
        self.assertTrue(TestLexer.test('''Class A:_5{Var P:TO;Destructor (){Return ;} }Class D{$y(k_:String ;_1,S8w:Int ){_bu::$0();Break ;} }Class h{}Class o:m{}''','''Class,A,:,_5,{,Var,P,:,TO,;,Destructor,(,),{,Return,;,},},Class,D,{,$y,(,k_,:,String,;,_1,,,S8w,:,Int,),{,_bu,::,$0,(,),;,Break,;,},},Class,h,{,},Class,o,:,m,{,},<EOF>''',101))

    def test_277(self):
        self.assertTrue(TestLexer.test('''Class tR:_{}Class d{}Class C_:_{}Class D_:w{}Class _{}Class _s:M11{}Class i:B{T46W9_(__,g,_,_:_JcgW;_:__E;__,f:Array [Float ,0B1];E08:__;_0G:_){Continue ;}Constructor (){}Constructor (){} }''','''Class,tR,:,_,{,},Class,d,{,},Class,C_,:,_,{,},Class,D_,:,w,{,},Class,_,{,},Class,_s,:,M11,{,},Class,i,:,B,{,T46W9_,(,__,,,g,,,_,,,_,:,_JcgW,;,_,:,__E,;,__,,,f,:,Array,[,Float,,,0B1,],;,E08,:,__,;,_0G,:,_,),{,Continue,;,},Constructor,(,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_278(self):
        self.assertTrue(TestLexer.test('''Class _9{Val r_,$1_:_86;Destructor (){} }Class x:b0b{}Class z{Val V,Vfl5,$i:Array [Array [Boolean ,062_6],0b1];Destructor (){} }''','''Class,_9,{,Val,r_,,,$1_,:,_86,;,Destructor,(,),{,},},Class,x,:,b0b,{,},Class,z,{,Val,V,,,Vfl5,,,$i,:,Array,[,Array,[,Boolean,,,0626,],,,0b1,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_279(self):
        self.assertTrue(TestLexer.test('''Class x:_{Constructor (__:String ;mU:Array [Array [Array [Array [String ,9_3],0x48],0X2B],032_3_0];Q4,_,c,_7:String ){Var v,I_:Array [Array [Array [Float ,0b1010011],02],03_6];} }Class _:U{}''','''Class,x,:,_,{,Constructor,(,__,:,String,;,mU,:,Array,[,Array,[,Array,[,Array,[,String,,,93,],,,0x48,],,,0X2B,],,,03230,],;,Q4,,,_,,,c,,,_7,:,String,),{,Var,v,,,I_,:,Array,[,Array,[,Array,[,Float,,,0b1010011,],,,02,],,,036,],;,},},Class,_,:,U,{,},<EOF>''',101))

    def test_280(self):
        self.assertTrue(TestLexer.test('''Class P{}Class __:f0{Var $_,_u,_:Array [Array [Array [Array [Array [Float ,0XE],0B1011000],06],0xC_B9],0B1];Var $_:Boolean ;}Class SL{}Class u:h{Var $c_,$r:Boolean ;}''','''Class,P,{,},Class,__,:,f0,{,Var,$_,,,_u,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0XE,],,,0B1011000,],,,06,],,,0xCB9,],,,0B1,],;,Var,$_,:,Boolean,;,},Class,SL,{,},Class,u,:,h,{,Var,$c_,,,$r,:,Boolean,;,},<EOF>''',101))

    def test_281(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class g_{Var q_R7:M_;Val hy,f,$B6Q,$G_,$F,__7A,r:Array [Array [Array [Float ,0x5C],0110],0110];}Class m{}''','''Class,_,:,_,{,},Class,g_,{,Var,q_R7,:,M_,;,Val,hy,,,f,,,$B6Q,,,$G_,,,$F,,,__7A,,,r,:,Array,[,Array,[,Array,[,Float,,,0x5C,],,,0110,],,,0110,],;,},Class,m,{,},<EOF>''',101))

    def test_282(self):
        self.assertTrue(TestLexer.test('''Class L_:i{Val $_p,v2_:_;}Class _:J0{r_g(){ {} }}Class _jc:_{Val $J:String ;}Class _3F:_{}Class _{Destructor (){}Var $F:_5;Destructor (){}Constructor (_,hs:String ;ik,aa:Float ;W:Array [Array [Array [Array [Boolean ,062],65],05],0b1]){Continue ;O::$_();} }''','''Class,L_,:,i,{,Val,$_p,,,v2_,:,_,;,},Class,_,:,J0,{,r_g,(,),{,{,},},},Class,_jc,:,_,{,Val,$J,:,String,;,},Class,_3F,:,_,{,},Class,_,{,Destructor,(,),{,},Var,$F,:,_5,;,Destructor,(,),{,},Constructor,(,_,,,hs,:,String,;,ik,,,aa,:,Float,;,W,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,062,],,,65,],,,05,],,,0b1,],),{,Continue,;,O,::,$_,(,),;,},},<EOF>''',101))

    def test_283(self):
        self.assertTrue(TestLexer.test('''Class q:i{Constructor (eA_:I7;x_9Q_26je1__:Float ;__:Array [Int ,0B101011];Ke:Float ){}Val $___:Array [Array [String ,0B101011],0b10];}''','''Class,q,:,i,{,Constructor,(,eA_,:,I7,;,x_9Q_26je1__,:,Float,;,__,:,Array,[,Int,,,0B101011,],;,Ke,:,Float,),{,},Val,$___,:,Array,[,Array,[,String,,,0B101011,],,,0b10,],;,},<EOF>''',101))

    def test_284(self):
        self.assertTrue(TestLexer.test('''Class _r:_{$3(Z,Y7,S_:Array [Float ,037];C,Xv:Array [Array [Float ,03_7_3],05426];__,J,_2,__g_,_,_233:String ){Break ;} }''','''Class,_r,:,_,{,$3,(,Z,,,Y7,,,S_,:,Array,[,Float,,,037,],;,C,,,Xv,:,Array,[,Array,[,Float,,,0373,],,,05426,],;,__,,,J,,,_2,,,__g_,,,_,,,_233,:,String,),{,Break,;,},},<EOF>''',101))

    def test_285(self):
        self.assertTrue(TestLexer.test('''Class _a7_{Var _:Array [Array [Array [Boolean ,80],0B1_0_0],0b1];_(){Break ;Continue ;Var _,_:String ;} }Class __7M:w{Val g_,_,p4:OPB3;}''','''Class,_a7_,{,Var,_,:,Array,[,Array,[,Array,[,Boolean,,,80,],,,0B100,],,,0b1,],;,_,(,),{,Break,;,Continue,;,Var,_,,,_,:,String,;,},},Class,__7M,:,w,{,Val,g_,,,_,,,p4,:,OPB3,;,},<EOF>''',101))

    def test_286(self):
        self.assertTrue(TestLexer.test('''Class _:_5h{}Class _1{}Class P{}Class _g:Z9p{}Class Q2___:d{}Class fx3{}Class _:N_{}Class _F__j:__k{}Class K:D{}''','''Class,_,:,_5h,{,},Class,_1,{,},Class,P,{,},Class,_g,:,Z9p,{,},Class,Q2___,:,d,{,},Class,fx3,{,},Class,_,:,N_,{,},Class,_F__j,:,__k,{,},Class,K,:,D,{,},<EOF>''',101))

    def test_287(self):
        self.assertTrue(TestLexer.test('''Class Zq:L{Constructor (q_5__,_,_,_,_LY_,L2:Array [Array [Boolean ,0b101010],0b101010];p,____,U_,_:Array [Array [Boolean ,07_6_4],02];tz,m7,_,w__l__94:Int ){} }''','''Class,Zq,:,L,{,Constructor,(,q_5__,,,_,,,_,,,_,,,_LY_,,,L2,:,Array,[,Array,[,Boolean,,,0b101010,],,,0b101010,],;,p,,,____,,,U_,,,_,:,Array,[,Array,[,Boolean,,,0764,],,,02,],;,tz,,,m7,,,_,,,w__l__94,:,Int,),{,},},<EOF>''',101))

    def test_288(self):
        self.assertTrue(TestLexer.test('''Class ZrS6:w6{}Class _:t6_{Var z,_:Boolean ;$1_(n:_){} }Class a79{_(_:Array [Array [Array [Array [Array [Array [Int ,0X9],28],0x7],0b100101],2],0XF]){} }Class sp:N{q_(_:Boolean ){ {} }$r8(){Val X:__c;} }Class _:E{}Class _:_R{}''','''Class,ZrS6,:,w6,{,},Class,_,:,t6_,{,Var,z,,,_,:,Boolean,;,$1_,(,n,:,_,),{,},},Class,a79,{,_,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X9,],,,28,],,,0x7,],,,0b100101,],,,2,],,,0XF,],),{,},},Class,sp,:,N,{,q_,(,_,:,Boolean,),{,{,},},$r8,(,),{,Val,X,:,__c,;,},},Class,_,:,E,{,},Class,_,:,_R,{,},<EOF>''',101))

    def test_289(self):
        self.assertTrue(TestLexer.test('''Class f_:_F1_{Var $_,__,$_8b,$_1,w,Q,_1_:Array [Array [Array [Array [Float ,05],47],5_618_56],0xC];$9(X1,C:Boolean ){} }''','''Class,f_,:,_F1_,{,Var,$_,,,__,,,$_8b,,,$_1,,,w,,,Q,,,_1_,:,Array,[,Array,[,Array,[,Array,[,Float,,,05,],,,47,],,,561856,],,,0xC,],;,$9,(,X1,,,C,:,Boolean,),{,},},<EOF>''',101))

    def test_290(self):
        self.assertTrue(TestLexer.test('''Class _:H{Var __:_1_C__;}Class uO{_d_3(l,_,__j,l__:Bi_J8){}Val $__0,b,$_,W:Array [Int ,0XD_8A];}Class _W_:_{Constructor (E,_,_ff,X:Array [Array [Array [Int ,0B11011],02],1]){} }''','''Class,_,:,H,{,Var,__,:,_1_C__,;,},Class,uO,{,_d_3,(,l,,,_,,,__j,,,l__,:,Bi_J8,),{,},Val,$__0,,,b,,,$_,,,W,:,Array,[,Int,,,0XD8A,],;,},Class,_W_,:,_,{,Constructor,(,E,,,_,,,_ff,,,X,:,Array,[,Array,[,Array,[,Int,,,0B11011,],,,02,],,,1,],),{,},},<EOF>''',101))

    def test_291(self):
        self.assertTrue(TestLexer.test('''Class G:_x5{}Class Z:_{Constructor (d:_;_x_05,f,_:Array [Array [Array [String ,0x3],2],87];_4,d,a3K,__,w_u69_:Array [Array [Array [Array [String ,0X5E],87],0x4A],0xFF_4]){} }''','''Class,G,:,_x5,{,},Class,Z,:,_,{,Constructor,(,d,:,_,;,_x_05,,,f,,,_,:,Array,[,Array,[,Array,[,String,,,0x3,],,,2,],,,87,],;,_4,,,d,,,a3K,,,__,,,w_u69_,:,Array,[,Array,[,Array,[,Array,[,String,,,0X5E,],,,87,],,,0x4A,],,,0xFF4,],),{,},},<EOF>''',101))

    def test_292(self):
        self.assertTrue(TestLexer.test('''Class A:Ssk2Y_3_5_{Destructor (){} }Class _:_K{Var RN,_,$dB,$_q,$0_,_B_5R_,$s9,$6,$___2,$W:Array [Array [Float ,0X32],0131];Var _,$____:Int ;}Class rK{Destructor (){} }Class _3{_(__:Float ){__xi7_2::$Z4.v92_()._();} }''','''Class,A,:,Ssk2Y_3_5_,{,Destructor,(,),{,},},Class,_,:,_K,{,Var,RN,,,_,,,$dB,,,$_q,,,$0_,,,_B_5R_,,,$s9,,,$6,,,$___2,,,$W,:,Array,[,Array,[,Float,,,0X32,],,,0131,],;,Var,_,,,$____,:,Int,;,},Class,rK,{,Destructor,(,),{,},},Class,_3,{,_,(,__,:,Float,),{,__xi7_2,::,$Z4,.,v92_,(,),.,_,(,),;,},},<EOF>''',101))

    def test_293(self):
        self.assertTrue(TestLexer.test('''Class _0_82V:f_0{Constructor (_5:Int ){Continue ;}Var $J_:Int ;}Class u3v5V:_{Constructor (){} }Class X5C__:_{}''','''Class,_0_82V,:,f_0,{,Constructor,(,_5,:,Int,),{,Continue,;,},Var,$J_,:,Int,;,},Class,u3v5V,:,_,{,Constructor,(,),{,},},Class,X5C__,:,_,{,},<EOF>''',101))

    def test_294(self):
        self.assertTrue(TestLexer.test('''Class A{Constructor (O,_9,_Z:_;M,f:Float ;_,D,g,_,_cm:Int ;V:QC;_2_:Array [Array [Array [String ,0x4],044_77],50]){Var x3ty,_,_,_,y95,h_:o5214_;} }''','''Class,A,{,Constructor,(,O,,,_9,,,_Z,:,_,;,M,,,f,:,Float,;,_,,,D,,,g,,,_,,,_cm,:,Int,;,V,:,QC,;,_2_,:,Array,[,Array,[,Array,[,String,,,0x4,],,,04477,],,,50,],),{,Var,x3ty,,,_,,,_,,,_,,,y95,,,h_,:,o5214_,;,},},<EOF>''',101))

    def test_295(self):
        self.assertTrue(TestLexer.test('''Class __0__4{Constructor (G_:String ;_79,P,o_y_:Array [Array [Array [Float ,0130],0b1111_1],0xD_C];xm:Int ){}Destructor (){} }Class i3{}''','''Class,__0__4,{,Constructor,(,G_,:,String,;,_79,,,P,,,o_y_,:,Array,[,Array,[,Array,[,Float,,,0130,],,,0b11111,],,,0xDC,],;,xm,:,Int,),{,},Destructor,(,),{,},},Class,i3,{,},<EOF>''',101))

    def test_296(self):
        self.assertTrue(TestLexer.test('''Class QJ:_{Val _,N2,$L__7i,_,N_,$fj:Int ;Constructor (_y0,s0V_,j5,_:Float ;___:Array [Float ,4]){Continue ;} }Class O:X{}''','''Class,QJ,:,_,{,Val,_,,,N2,,,$L__7i,,,_,,,N_,,,$fj,:,Int,;,Constructor,(,_y0,,,s0V_,,,j5,,,_,:,Float,;,___,:,Array,[,Float,,,4,],),{,Continue,;,},},Class,O,:,X,{,},<EOF>''',101))

    def test_297(self):
        self.assertTrue(TestLexer.test('''Class m:_9{}Class _39:y1{}Class f2_{}Class _u_1{Val $46:Boolean ;Var _4qO,$_3:Array [Array [Float ,0X4A],065];}Class _TM:_{}Class H0_{}''','''Class,m,:,_9,{,},Class,_39,:,y1,{,},Class,f2_,{,},Class,_u_1,{,Val,$46,:,Boolean,;,Var,_4qO,,,$_3,:,Array,[,Array,[,Float,,,0X4A,],,,065,],;,},Class,_TM,:,_,{,},Class,H0_,{,},<EOF>''',101))

    def test_298(self):
        self.assertTrue(TestLexer.test('''Class C:_{Constructor (k,_:A5;p,fC8008,_:Array [Array [Array [Int ,0X59],99],0x12];_3_:_;_1W39:Int ){Break ;}$N2A_7_(___3:P_){}Val $E99dk,$_,_:_;}Class pE{}Class G9{Destructor (){} }''','''Class,C,:,_,{,Constructor,(,k,,,_,:,A5,;,p,,,fC8008,,,_,:,Array,[,Array,[,Array,[,Int,,,0X59,],,,99,],,,0x12,],;,_3_,:,_,;,_1W39,:,Int,),{,Break,;,},$N2A_7_,(,___3,:,P_,),{,},Val,$E99dk,,,$_,,,_,:,_,;,},Class,pE,{,},Class,G9,{,Destructor,(,),{,},},<EOF>''',101))

    def test_299(self):
        self.assertTrue(TestLexer.test('''Class _:_{Var _,_R6:Int ;V(){}$_(_3,_,_,W_,L9,_G_q6vf4e3_:Int ;_,_:Array [Array [Array [Float ,0X4D],0X43],0B11010]){} }''','''Class,_,:,_,{,Var,_,,,_R6,:,Int,;,V,(,),{,},$_,(,_3,,,_,,,_,,,W_,,,L9,,,_G_q6vf4e3_,:,Int,;,_,,,_,:,Array,[,Array,[,Array,[,Float,,,0X4D,],,,0X43,],,,0B11010,],),{,},},<EOF>''',101))

    def test_300(self):
        self.assertTrue(TestLexer.test('''Class w{Val K_V,$4:Array [Array [Array [String ,075],6_6],075];}Class _{Constructor (x3Z:Array [Int ,0B1010001];__9,_:_;t__,t0DP,E,_5:Array [Array [Float ,054],0x3A_0_683B];i8_:x){} }Class __{Constructor (_,vK9,_:Array [Array [Int ,0b1_0],0B1010001];u:P3){Break ;Continue ;} }''','''Class,w,{,Val,K_V,,,$4,:,Array,[,Array,[,Array,[,String,,,075,],,,66,],,,075,],;,},Class,_,{,Constructor,(,x3Z,:,Array,[,Int,,,0B1010001,],;,__9,,,_,:,_,;,t__,,,t0DP,,,E,,,_5,:,Array,[,Array,[,Float,,,054,],,,0x3A0683B,],;,i8_,:,x,),{,},},Class,__,{,Constructor,(,_,,,vK9,,,_,:,Array,[,Array,[,Int,,,0b10,],,,0B1010001,],;,u,:,P3,),{,Break,;,Continue,;,},},<EOF>''',101))

    def test_301(self):
        self.assertTrue(TestLexer.test('''Class p2_:r{Constructor (_8_,z,X:Array [Int ,0B10]){} }Class _{Constructor (H_i_1,j:String ;_,_71,l,bh6,_1_,_,P,K_,V:Array [Boolean ,0X2_C]){} }''','''Class,p2_,:,r,{,Constructor,(,_8_,,,z,,,X,:,Array,[,Int,,,0B10,],),{,},},Class,_,{,Constructor,(,H_i_1,,,j,:,String,;,_,,,_71,,,l,,,bh6,,,_1_,,,_,,,P,,,K_,,,V,:,Array,[,Boolean,,,0X2C,],),{,},},<EOF>''',101))

    def test_302(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){Continue ;}Constructor (__:_j_p0_01___;fjb:Array [Boolean ,0x8D_7];_:Float ){} }Class VO9{Val $_,t:String ;}''','''Class,_,{,Destructor,(,),{,Continue,;,},Constructor,(,__,:,_j_p0_01___,;,fjb,:,Array,[,Boolean,,,0x8D7,],;,_,:,Float,),{,},},Class,VO9,{,Val,$_,,,t,:,String,;,},<EOF>''',101))

    def test_303(self):
        self.assertTrue(TestLexer.test('''Class g:M{Constructor (){}_p_(){} }Class __:DYD{I(){}_4(){Var A:_R;}Destructor (){}Val $_P:Int ;Destructor (){} }''','''Class,g,:,M,{,Constructor,(,),{,},_p_,(,),{,},},Class,__,:,DYD,{,I,(,),{,},_4,(,),{,Var,A,:,_R,;,},Destructor,(,),{,},Val,$_P,:,Int,;,Destructor,(,),{,},},<EOF>''',101))

    def test_304(self):
        self.assertTrue(TestLexer.test('''Class __5{Var $8:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,0B111011],0X2B],44],44],44],44],0b1100010],0132],0X2B],0XBF_B5],0X2B],44],0132],0X2B];Var L,$1_:Array [Array [Boolean ,0b1_101],0B111011];}''','''Class,__5,{,Var,$8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B111011,],,,0X2B,],,,44,],,,44,],,,44,],,,44,],,,0b1100010,],,,0132,],,,0X2B,],,,0XBFB5,],,,0X2B,],,,44,],,,0132,],,,0X2B,],;,Var,L,,,$1_,:,Array,[,Array,[,Boolean,,,0b1101,],,,0B111011,],;,},<EOF>''',101))

    def test_305(self):
        self.assertTrue(TestLexer.test('''Class v:_{}Class _{Var $3:Float ;Destructor (){} }Class _{$_(A:Array [Array [Array [Array [String ,88],0b1],0x36],0104];mG:_50;j_:e;k,bE2,___:Array [Array [Array [Array [Float ,4],0X3_8],0b1_0],3];_,c,T:Int ){M::$V._();Var K,_:String ;}Destructor (){}$7(_:Array [Array [Array [Array [String ,0x36],0B11001],12],0x36];_:Boolean ;G3N7,_iGz5:Float ){} }''','''Class,v,:,_,{,},Class,_,{,Var,$3,:,Float,;,Destructor,(,),{,},},Class,_,{,$_,(,A,:,Array,[,Array,[,Array,[,Array,[,String,,,88,],,,0b1,],,,0x36,],,,0104,],;,mG,:,_50,;,j_,:,e,;,k,,,bE2,,,___,:,Array,[,Array,[,Array,[,Array,[,Float,,,4,],,,0X38,],,,0b10,],,,3,],;,_,,,c,,,T,:,Int,),{,M,::,$V,.,_,(,),;,Var,K,,,_,:,String,;,},Destructor,(,),{,},$7,(,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0x36,],,,0B11001,],,,12,],,,0x36,],;,_,:,Boolean,;,G3N7,,,_iGz5,:,Float,),{,},},<EOF>''',101))

    def test_306(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (Hn9:B;R_,_n_:Array [Array [Array [Array [Array [Float ,0b1_0],17],0b1],0X1],0B1001001];e,_,K__,MG5:_Ys_p_0;__C0,G:E){}Destructor (){Break ;} }''','''Class,_,:,_,{,Constructor,(,Hn9,:,B,;,R_,,,_n_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b10,],,,17,],,,0b1,],,,0X1,],,,0B1001001,],;,e,,,_,,,K__,,,MG5,:,_Ys_p_0,;,__C0,,,G,:,E,),{,},Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_307(self):
        self.assertTrue(TestLexer.test('''Class F{Val $_,_8,_,$Z_:Float ;Var $s_p_X,B78:String ;}Class L:_{Var _:Array [Float ,78];}Class Y:_6{Var n,$0,$_:Array [Array [Array [Array [Array [Array [Array [Array [Int ,0B1001101],0xB_6],39],0B1001101],0XC],78],0x19],0B1001101];Destructor (){Continue ;}Constructor (_:Boolean ){Continue ;} }''','''Class,F,{,Val,$_,,,_8,,,_,,,$Z_,:,Float,;,Var,$s_p_X,,,B78,:,String,;,},Class,L,:,_,{,Var,_,:,Array,[,Float,,,78,],;,},Class,Y,:,_6,{,Var,n,,,$0,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1001101,],,,0xB6,],,,39,],,,0B1001101,],,,0XC,],,,78,],,,0x19,],,,0B1001101,],;,Destructor,(,),{,Continue,;,},Constructor,(,_,:,Boolean,),{,Continue,;,},},<EOF>''',101))

    def test_308(self):
        self.assertTrue(TestLexer.test('''Class _{}Class Y0:O{Destructor (){} }Class u{Constructor (){}Y(n,I,_:Array [Boolean ,94];_:Float ;_T:Array [Float ,0X58]){} }''','''Class,_,{,},Class,Y0,:,O,{,Destructor,(,),{,},},Class,u,{,Constructor,(,),{,},Y,(,n,,,I,,,_,:,Array,[,Boolean,,,94,],;,_,:,Float,;,_T,:,Array,[,Float,,,0X58,],),{,},},<EOF>''',101))

    def test_309(self):
        self.assertTrue(TestLexer.test('''Class V:H{Constructor (){}Var r,_S,P8_:Array [Boolean ,0x42];}Class _:z{Constructor (H,N7_1t:Array [String ,0107];M8A,g1,_6s5_,d,_1_,k:_;r,_9:C;_T_:H){} }''','''Class,V,:,H,{,Constructor,(,),{,},Var,r,,,_S,,,P8_,:,Array,[,Boolean,,,0x42,],;,},Class,_,:,z,{,Constructor,(,H,,,N7_1t,:,Array,[,String,,,0107,],;,M8A,,,g1,,,_6s5_,,,d,,,_1_,,,k,:,_,;,r,,,_9,:,C,;,_T_,:,H,),{,},},<EOF>''',101))

    def test_310(self):
        self.assertTrue(TestLexer.test('''Class _X:v{}Class _:TM{}Class _{Val b,$_4_,$_7,$_:Array [Array [Boolean ,0X447],2];}Class _:_{Constructor (){Continue ;}$_(l53r:Float ){} }''','''Class,_X,:,v,{,},Class,_,:,TM,{,},Class,_,{,Val,b,,,$_4_,,,$_7,,,$_,:,Array,[,Array,[,Boolean,,,0X447,],,,2,],;,},Class,_,:,_,{,Constructor,(,),{,Continue,;,},$_,(,l53r,:,Float,),{,},},<EOF>''',101))

    def test_311(self):
        self.assertTrue(TestLexer.test('''Class _6R{}Class L_{_(_5,__9:Array [Array [Boolean ,0X7_59_7],0XC5BA8];_,_:Array [Array [Array [Array [Array [String ,2_1_2],051],0x4B],0X32],0b1111]){} }Class _q741:t8{}''','''Class,_6R,{,},Class,L_,{,_,(,_5,,,__9,:,Array,[,Array,[,Boolean,,,0X7597,],,,0XC5BA8,],;,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,212,],,,051,],,,0x4B,],,,0X32,],,,0b1111,],),{,},},Class,_q741,:,t8,{,},<EOF>''',101))

    def test_312(self):
        self.assertTrue(TestLexer.test('''Class _:z{Val _9m,$1:Array [Array [Array [Array [String ,0B110],2],2],0b1_1_0_0_01];Constructor (h5_s8:Int ;__:Array [String ,0b1001011];o1Uf,__0:Array [Array [Array [Array [Array [Boolean ,0X45],0x3D],87],0b1001011],0b1];n:Float ;_:O;_6,f,M,m__,__bk,M,__6:Array [Boolean ,0141];_,F,O:Int ;zF:String ){Val _:Int ;Val __:Y_;} }''','''Class,_,:,z,{,Val,_9m,,,$1,:,Array,[,Array,[,Array,[,Array,[,String,,,0B110,],,,2,],,,2,],,,0b110001,],;,Constructor,(,h5_s8,:,Int,;,__,:,Array,[,String,,,0b1001011,],;,o1Uf,,,__0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X45,],,,0x3D,],,,87,],,,0b1001011,],,,0b1,],;,n,:,Float,;,_,:,O,;,_6,,,f,,,M,,,m__,,,__bk,,,M,,,__6,:,Array,[,Boolean,,,0141,],;,_,,,F,,,O,:,Int,;,zF,:,String,),{,Val,_,:,Int,;,Val,__,:,Y_,;,},},<EOF>''',101))

    def test_313(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class Y{Constructor (){} }Class L_4l:_1{Constructor (_,R:Array [Boolean ,0x11];_:Int ){}Val X,_,D6_:String ;}''','''Class,_,:,_,{,},Class,Y,{,Constructor,(,),{,},},Class,L_4l,:,_1,{,Constructor,(,_,,,R,:,Array,[,Boolean,,,0x11,],;,_,:,Int,),{,},Val,X,,,_,,,D6_,:,String,;,},<EOF>''',101))

    def test_314(self):
        self.assertTrue(TestLexer.test('''Class j{}Class z_76_{Constructor (_:String ){}Constructor (_4,_,YP__8B,p_0,_,_4:_;_8s,p_6,_:_98C;_8,v89e7T9,kPE,kh,_c,_,y:Array [Array [Boolean ,0b1],0xF_60_C_B]){}Val A45,v:Array [Int ,0b1];Var Y7:String ;}Class dZ:k_{}''','''Class,j,{,},Class,z_76_,{,Constructor,(,_,:,String,),{,},Constructor,(,_4,,,_,,,YP__8B,,,p_0,,,_,,,_4,:,_,;,_8s,,,p_6,,,_,:,_98C,;,_8,,,v89e7T9,,,kPE,,,kh,,,_c,,,_,,,y,:,Array,[,Array,[,Boolean,,,0b1,],,,0xF60CB,],),{,},Val,A45,,,v,:,Array,[,Int,,,0b1,],;,Var,Y7,:,String,;,},Class,dZ,:,k_,{,},<EOF>''',101))

    def test_315(self):
        self.assertTrue(TestLexer.test('''Class _Y2_:__B{}Class oY4:_{Val _,$5:Array [Boolean ,20];}Class _D4_L:oMFd{}Class _:O{}Class _C{$3(){Continue ;} }''','''Class,_Y2_,:,__B,{,},Class,oY4,:,_,{,Val,_,,,$5,:,Array,[,Boolean,,,20,],;,},Class,_D4_L,:,oMFd,{,},Class,_,:,O,{,},Class,_C,{,$3,(,),{,Continue,;,},},<EOF>''',101))

    def test_316(self):
        self.assertTrue(TestLexer.test('''Class _{}Class Hk_DQ:_36_3{_(W_839__Cb,T:Int ;_Q9:Array [Array [String ,06],07];__i__u:Array [Array [Int ,02_5],0X8]){} }''','''Class,_,{,},Class,Hk_DQ,:,_36_3,{,_,(,W_839__Cb,,,T,:,Int,;,_Q9,:,Array,[,Array,[,String,,,06,],,,07,],;,__i__u,:,Array,[,Array,[,Int,,,025,],,,0X8,],),{,},},<EOF>''',101))

    def test_318(self):
        self.assertTrue(TestLexer.test('''Class BU:_9M{$C(){}Val __4nT_,$_,__:Array [Array [Array [Array [Array [String ,61],92],0x21],4],0x89];}Class cF_764:_c_{Val $w:_;}''','''Class,BU,:,_9M,{,$C,(,),{,},Val,__4nT_,,,$_,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,61,],,,92,],,,0x21,],,,4,],,,0x89,],;,},Class,cF_764,:,_c_,{,Val,$w,:,_,;,},<EOF>''',101))

    def test_319(self):
        self.assertTrue(TestLexer.test('''Class V:_{}Class _:_{}Class _S:_{Val $5:Array [Int ,0b1];Constructor (_,_:q;_8:w;D:Int ;_,F:Array [Int ,0B1000001];Vv_:Int ){} }''','''Class,V,:,_,{,},Class,_,:,_,{,},Class,_S,:,_,{,Val,$5,:,Array,[,Int,,,0b1,],;,Constructor,(,_,,,_,:,q,;,_8,:,w,;,D,:,Int,;,_,,,F,:,Array,[,Int,,,0B1000001,],;,Vv_,:,Int,),{,},},<EOF>''',101))

    def test_320(self):
        self.assertTrue(TestLexer.test('''Class _7_{j_(_84:_1;_4,_8,q0n:Array [Array [Float ,0122],0B1];_:Array [Int ,0122];c,_:J){}Var _,$_:Int ;}Class _{}''','''Class,_7_,{,j_,(,_84,:,_1,;,_4,,,_8,,,q0n,:,Array,[,Array,[,Float,,,0122,],,,0B1,],;,_,:,Array,[,Int,,,0122,],;,c,,,_,:,J,),{,},Var,_,,,$_,:,Int,;,},Class,_,{,},<EOF>''',101))

    def test_321(self):
        self.assertTrue(TestLexer.test('''Class w_:m_{_5(_q_:Array [Float ,65_7]){}Constructor (Rhe:Array [String ,0XE];s:U){}Val __,_:Array [Array [Int ,0135],0b10_0_1];Constructor (){} }''','''Class,w_,:,m_,{,_5,(,_q_,:,Array,[,Float,,,657,],),{,},Constructor,(,Rhe,:,Array,[,String,,,0XE,],;,s,:,U,),{,},Val,__,,,_,:,Array,[,Array,[,Int,,,0135,],,,0b1001,],;,Constructor,(,),{,},},<EOF>''',101))

    def test_322(self):
        self.assertTrue(TestLexer.test('''Class hF:_{Constructor (_,__RO6_:Float ;_WV8,T6:Int ;_9:K521;u:__v;_,_,_:S918){}Destructor (){Val _:_;}Constructor (O:Array [Array [Array [Array [Array [Int ,0X32],70],074],0x9],0x5]){} }Class _{}Class a{}Class _{}Class _:__b{}''','''Class,hF,:,_,{,Constructor,(,_,,,__RO6_,:,Float,;,_WV8,,,T6,:,Int,;,_9,:,K521,;,u,:,__v,;,_,,,_,,,_,:,S918,),{,},Destructor,(,),{,Val,_,:,_,;,},Constructor,(,O,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X32,],,,70,],,,074,],,,0x9,],,,0x5,],),{,},},Class,_,{,},Class,a,{,},Class,_,{,},Class,_,:,__b,{,},<EOF>''',101))

    def test_323(self):
        self.assertTrue(TestLexer.test('''Class _v:W{Var V,$E,$39:Array [String ,047];Destructor (){}zx5_Q(_:Int ;Y:_j_;w_0:Array [Array [Array [Array [Boolean ,0X60],03],0b1],047]){} }''','''Class,_v,:,W,{,Var,V,,,$E,,,$39,:,Array,[,String,,,047,],;,Destructor,(,),{,},zx5_Q,(,_,:,Int,;,Y,:,_j_,;,w_0,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X60,],,,03,],,,0b1,],,,047,],),{,},},<EOF>''',101))

    def test_324(self):
        self.assertTrue(TestLexer.test('''Class OP:E3{Var $7_,n_,$_:Array [Array [Array [Array [Array [Float ,0B110],073],073],84],0x8];Val $__5:Int ;}Class K:xi05z{Var R4B:Array [Boolean ,03_1];}''','''Class,OP,:,E3,{,Var,$7_,,,n_,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B110,],,,073,],,,073,],,,84,],,,0x8,],;,Val,$__5,:,Int,;,},Class,K,:,xi05z,{,Var,R4B,:,Array,[,Boolean,,,031,],;,},<EOF>''',101))

    def test_325(self):
        self.assertTrue(TestLexer.test('''Class _s41ym:bF{Var Z:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,13],13],070],0X3F],0xA],0x3F],0b1],654],13],13]=New E()._;Var j7V,$_:Int ;}''','''Class,_s41ym,:,bF,{,Var,Z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,13,],,,13,],,,070,],,,0X3F,],,,0xA,],,,0x3F,],,,0b1,],,,654,],,,13,],,,13,],=,New,E,(,),.,_,;,Var,j7V,,,$_,:,Int,;,},<EOF>''',101))

    def test_326(self):
        self.assertTrue(TestLexer.test('''Class _G_:_{}Class X__1:n{Var $9,M7:Array [Array [Array [Array [Array [String ,0b10],0XF_5_4_8F],0b11101],0b1],0x17];}Class O:_{}Class Un2{Destructor (){} }''','''Class,_G_,:,_,{,},Class,X__1,:,n,{,Var,$9,,,M7,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b10,],,,0XF548F,],,,0b11101,],,,0b1,],,,0x17,],;,},Class,O,:,_,{,},Class,Un2,{,Destructor,(,),{,},},<EOF>''',101))

    def test_327(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){}Val $uG2:m83;}Class __I:NB{Destructor (){} }Class M0_:UQYA{Val _3,$V,x,_0P,v,$4_8_,$8a_,g,$5_,B:Int ;}Class _:P_0{}Class t{}Class _t:_9Y{}''','''Class,_,{,Constructor,(,),{,},Val,$uG2,:,m83,;,},Class,__I,:,NB,{,Destructor,(,),{,},},Class,M0_,:,UQYA,{,Val,_3,,,$V,,,x,,,_0P,,,v,,,$4_8_,,,$8a_,,,g,,,$5_,,,B,:,Int,;,},Class,_,:,P_0,{,},Class,t,{,},Class,_t,:,_9Y,{,},<EOF>''',101))

    def test_328(self):
        self.assertTrue(TestLexer.test('''Class Rj{}Class _S_W:Y{}Class b:C9e{Val X:Array [Array [String ,0X23],0X23];Destructor (){Continue ;}Constructor (_c:String ;_V:Array [Array [String ,0X23],0x14];h1,G,yd,f,Y,l_:Float ;d,_,__,_:u_;g_,_:Float ){} }Class __i:_{}Class __R_4N_{}''','''Class,Rj,{,},Class,_S_W,:,Y,{,},Class,b,:,C9e,{,Val,X,:,Array,[,Array,[,String,,,0X23,],,,0X23,],;,Destructor,(,),{,Continue,;,},Constructor,(,_c,:,String,;,_V,:,Array,[,Array,[,String,,,0X23,],,,0x14,],;,h1,,,G,,,yd,,,f,,,Y,,,l_,:,Float,;,d,,,_,,,__,,,_,:,u_,;,g_,,,_,:,Float,),{,},},Class,__i,:,_,{,},Class,__R_4N_,{,},<EOF>''',101))

    def test_329(self):
        self.assertTrue(TestLexer.test('''Class w:_20{Destructor (){} }Class _R5:O{Var P,$R7B4:C;$N_(){}$_(){}Val $97J,_,F:Array [Array [Int ,0b11101],0X62];Destructor (){} }Class F{}Class _:P8{}''','''Class,w,:,_20,{,Destructor,(,),{,},},Class,_R5,:,O,{,Var,P,,,$R7B4,:,C,;,$N_,(,),{,},$_,(,),{,},Val,$97J,,,_,,,F,:,Array,[,Array,[,Int,,,0b11101,],,,0X62,],;,Destructor,(,),{,},},Class,F,{,},Class,_,:,P8,{,},<EOF>''',101))

    def test_330(self):
        self.assertTrue(TestLexer.test('''Class y:Ho{}Class _M{Constructor (){}Var Bkn_:Array [Boolean ,88];Val $I_,$i27,_J2__m,$_G,$x_:Int ;}Class _:__8{}''','''Class,y,:,Ho,{,},Class,_M,{,Constructor,(,),{,},Var,Bkn_,:,Array,[,Boolean,,,88,],;,Val,$I_,,,$i27,,,_J2__m,,,$_G,,,$x_,:,Int,;,},Class,_,:,__8,{,},<EOF>''',101))

    def test_331(self):
        self.assertTrue(TestLexer.test('''Class I{Destructor (){"'"".D();} }Class s{Val _8,$l_7,$_8,U:Float ;G(){}Constructor (C,_:_;bo,s:Array [Array [Boolean ,01_4],0X62]){}Constructor (W4,_32,__4R,_7,r_7,_,___58,_k:Array [Boolean ,03_7];_Z____d:E){}Val _,p,$__,$Y,_7_r:sl;}Class _D{_M(_,_a79,_Ng1_,m:Float ;_,PL7:Boolean ){} }''','''Class,I,{,Destructor,(,),{,'",.,D,(,),;,},},Class,s,{,Val,_8,,,$l_7,,,$_8,,,U,:,Float,;,G,(,),{,},Constructor,(,C,,,_,:,_,;,bo,,,s,:,Array,[,Array,[,Boolean,,,014,],,,0X62,],),{,},Constructor,(,W4,,,_32,,,__4R,,,_7,,,r_7,,,_,,,___58,,,_k,:,Array,[,Boolean,,,037,],;,_Z____d,:,E,),{,},Val,_,,,p,,,$__,,,$Y,,,_7_r,:,sl,;,},Class,_D,{,_M,(,_,,,_a79,,,_Ng1_,,,m,:,Float,;,_,,,PL7,:,Boolean,),{,},},<EOF>''',101))

    def test_332(self):
        self.assertTrue(TestLexer.test('''Class Y{Constructor (){Break ;}Val $_,$_Ln,_,_92k1_q,$81,h,_,_,$84:String ;}Class LE8_3:U{Destructor (){}Var _t13:nn;}''','''Class,Y,{,Constructor,(,),{,Break,;,},Val,$_,,,$_Ln,,,_,,,_92k1_q,,,$81,,,h,,,_,,,_,,,$84,:,String,;,},Class,LE8_3,:,U,{,Destructor,(,),{,},Var,_t13,:,nn,;,},<EOF>''',101))

    def test_333(self):
        self.assertTrue(TestLexer.test('''Class f_nt_23X:tk5{}Class L{}Class _{}Class SF{}Class Fp{}Class YO{Constructor (G:Boolean ;_x:Int ){L3::$k()._7();} }''','''Class,f_nt_23X,:,tk5,{,},Class,L,{,},Class,_,{,},Class,SF,{,},Class,Fp,{,},Class,YO,{,Constructor,(,G,:,Boolean,;,_x,:,Int,),{,L3,::,$k,(,),.,_7,(,),;,},},<EOF>''',101))

    def test_334(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){Break ;}Val $0:Array [Array [Array [Array [Array [Array [Array [Float ,0x42],8_7_78_75_8],0x42],0XD_D],0x8_3],0b110101],052];}''','''Class,_,{,Constructor,(,),{,Break,;,},Val,$0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x42,],,,8778758,],,,0x42,],,,0XDD,],,,0x83,],,,0b110101,],,,052,],;,},<EOF>''',101))

    def test_335(self):
        self.assertTrue(TestLexer.test('''Class C{}Class _B{_(_9:Array [Array [String ,0B11],044];V_,H:Array [String ,05];X,O,__:Float ){} }Class WD{Val _5_0_:Boolean ;}''','''Class,C,{,},Class,_B,{,_,(,_9,:,Array,[,Array,[,String,,,0B11,],,,044,],;,V_,,,H,:,Array,[,String,,,05,],;,X,,,O,,,__,:,Float,),{,},},Class,WD,{,Val,_5_0_,:,Boolean,;,},<EOF>''',101))

    def test_336(self):
        self.assertTrue(TestLexer.test('''Class _3{Destructor (){} }Class h:a{Val _n,_,k:Array [Float ,0b101001];Constructor (y9,G:Array [Float ,0B110];_:Array [Boolean ,0B1010100];__Q,_4,O:String ){g_::$f();} }Class g0{}Class h{}Class _{}''','''Class,_3,{,Destructor,(,),{,},},Class,h,:,a,{,Val,_n,,,_,,,k,:,Array,[,Float,,,0b101001,],;,Constructor,(,y9,,,G,:,Array,[,Float,,,0B110,],;,_,:,Array,[,Boolean,,,0B1010100,],;,__Q,,,_4,,,O,:,String,),{,g_,::,$f,(,),;,},},Class,g0,{,},Class,h,{,},Class,_,{,},<EOF>''',101))

    def test_337(self):
        self.assertTrue(TestLexer.test('''Class vd_4_{Constructor (P,_1,CZ5M__,I4:M_;d_,k_:Array [Array [Array [Int ,0xD],0102],66];_u8__d:Array [String ,3];V_5DH:Boolean ;Zb:x;_,iW0,_20X,_70:_){ {Return ;} }Val cf:Array [Float ,0x24];Val _:String ;}''','''Class,vd_4_,{,Constructor,(,P,,,_1,,,CZ5M__,,,I4,:,M_,;,d_,,,k_,:,Array,[,Array,[,Array,[,Int,,,0xD,],,,0102,],,,66,],;,_u8__d,:,Array,[,String,,,3,],;,V_5DH,:,Boolean,;,Zb,:,x,;,_,,,iW0,,,_20X,,,_70,:,_,),{,{,Return,;,},},Val,cf,:,Array,[,Float,,,0x24,],;,Val,_,:,String,;,},<EOF>''',101))

    def test_338(self):
        self.assertTrue(TestLexer.test('''Class _:_Q_8_{}Class _{Constructor (w2,_,_,V1_z,__,_pmE1:_F;_,b,_,q6,G8z,_7:Boolean ;_,_:Array [Array [Int ,021],0B110000]){}Var __,_,_,$__8,$_W1_4_,$_7_,$__,$177:Float ;}''','''Class,_,:,_Q_8_,{,},Class,_,{,Constructor,(,w2,,,_,,,_,,,V1_z,,,__,,,_pmE1,:,_F,;,_,,,b,,,_,,,q6,,,G8z,,,_7,:,Boolean,;,_,,,_,:,Array,[,Array,[,Int,,,021,],,,0B110000,],),{,},Var,__,,,_,,,_,,,$__8,,,$_W1_4_,,,$_7_,,,$__,,,$177,:,Float,;,},<EOF>''',101))

    def test_339(self):
        self.assertTrue(TestLexer.test('''Class _8_{}Class _{}Class J:_2{Constructor (_:__4_;_1:Array [Int ,0x6];D,__:Array [Array [Array [Array [String ,0B101000],0B10],0b10],0x43];___w:Array [Array [Array [Array [Array [Array [Array [Boolean ,0XD],0X2_4BB],0B1],0b1],0B1_0],9],0x43]){Var XMg2,I8k:__;} }''','''Class,_8_,{,},Class,_,{,},Class,J,:,_2,{,Constructor,(,_,:,__4_,;,_1,:,Array,[,Int,,,0x6,],;,D,,,__,:,Array,[,Array,[,Array,[,Array,[,String,,,0B101000,],,,0B10,],,,0b10,],,,0x43,],;,___w,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0XD,],,,0X24BB,],,,0B1,],,,0b1,],,,0B10,],,,9,],,,0x43,],),{,Var,XMg2,,,I8k,:,__,;,},},<EOF>''',101))

    def test_340(self):
        self.assertTrue(TestLexer.test('''Class k:t_{}Class w{__(X,_4_1f,A:Array [Array [Array [Array [Array [Array [Array [Int ,0B1001000],05],0X2],4],0x7],017],0B1]){} }Class _{}Class L:t{}''','''Class,k,:,t_,{,},Class,w,{,__,(,X,,,_4_1f,,,A,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1001000,],,,05,],,,0X2,],,,4,],,,0x7,],,,017,],,,0B1,],),{,},},Class,_,{,},Class,L,:,t,{,},<EOF>''',101))

    def test_341(self):
        self.assertTrue(TestLexer.test('''Class V_:_9{Constructor (pW,g_a1r0:Array [Boolean ,0B1];z:Boolean ;__c_:dB;B,de741:Array [Array [Array [String ,5],65],066]){}Val $_:Array [Float ,0x19];}''','''Class,V_,:,_9,{,Constructor,(,pW,,,g_a1r0,:,Array,[,Boolean,,,0B1,],;,z,:,Boolean,;,__c_,:,dB,;,B,,,de741,:,Array,[,Array,[,Array,[,String,,,5,],,,65,],,,066,],),{,},Val,$_,:,Array,[,Float,,,0x19,],;,},<EOF>''',101))

    def test_342(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _9{Constructor (_,l:Array [Array [Array [Array [String ,014],07],014],0B1001011];__e3u:Float ;J,_,_,__:Array [Boolean ,0X51];o,i,_:v3;_f:J;_:String ;_s3:Array [Int ,0b1100];__0t17:Int ;M:Array [Array [String ,7],014];o,_:Int ){} }''','''Class,_,{,},Class,_9,{,Constructor,(,_,,,l,:,Array,[,Array,[,Array,[,Array,[,String,,,014,],,,07,],,,014,],,,0B1001011,],;,__e3u,:,Float,;,J,,,_,,,_,,,__,:,Array,[,Boolean,,,0X51,],;,o,,,i,,,_,:,v3,;,_f,:,J,;,_,:,String,;,_s3,:,Array,[,Int,,,0b1100,],;,__0t17,:,Int,;,M,:,Array,[,Array,[,String,,,7,],,,014,],;,o,,,_,:,Int,),{,},},<EOF>''',101))

    def test_343(self):
        self.assertTrue(TestLexer.test('''Class Q_:Z{}Class _:_{}Class _:_____{LTu(_:Array [Array [Array [Array [String ,0b1],0X5],070],0xE]){}$4t(){} }''','''Class,Q_,:,Z,{,},Class,_,:,_,{,},Class,_,:,_____,{,LTu,(,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,0X5,],,,070,],,,0xE,],),{,},$4t,(,),{,},},<EOF>''',101))

    def test_344(self):
        self.assertTrue(TestLexer.test('''Class __:t{}Class __{Constructor (zfm,B,T,_47_,x:Array [Array [Float ,0b1000100],637];_:Array [Array [Array [Array [String ,06476_3_2],74],0116],07_5];E_,w:Array [String ,7]){} }''','''Class,__,:,t,{,},Class,__,{,Constructor,(,zfm,,,B,,,T,,,_47_,,,x,:,Array,[,Array,[,Float,,,0b1000100,],,,637,],;,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0647632,],,,74,],,,0116,],,,075,],;,E_,,,w,:,Array,[,String,,,7,],),{,},},<EOF>''',101))

    def test_345(self):
        self.assertTrue(TestLexer.test('''Class O_x{}Class q:_{}Class _8:b{R4M(U:Array [Float ,0B10001]){}$S3B(p_6K:Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,0b1_0_1],05],053],0XA4],03_01],0xC],03],57],0b1];_B_7WLS:e;n:Float ){} }Class e:u{Var F_,_:Float ;}''','''Class,O_x,{,},Class,q,:,_,{,},Class,_8,:,b,{,R4M,(,U,:,Array,[,Float,,,0B10001,],),{,},$S3B,(,p_6K,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b101,],,,05,],,,053,],,,0XA4,],,,0301,],,,0xC,],,,03,],,,57,],,,0b1,],;,_B_7WLS,:,e,;,n,:,Float,),{,},},Class,e,:,u,{,Var,F_,,,_,:,Float,;,},<EOF>''',101))

    def test_346(self):
        self.assertTrue(TestLexer.test('''Class r:t7pG{Constructor (){}$_(_,_,VT:Boolean ;Zw_:Array [Array [Int ,72],034];q,E,_q,a:Array [Array [Int ,0x7_7_E],0B1]){} }Class y31:_{}''','''Class,r,:,t7pG,{,Constructor,(,),{,},$_,(,_,,,_,,,VT,:,Boolean,;,Zw_,:,Array,[,Array,[,Int,,,72,],,,034,],;,q,,,E,,,_q,,,a,:,Array,[,Array,[,Int,,,0x77E,],,,0B1,],),{,},},Class,y31,:,_,{,},<EOF>''',101))

    def test_347(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class __42_1{}Class c_{Destructor (){} }Class _q{_z(_:Array [Array [Float ,0X4_8],0x21];_J:_;_,J_0:Boolean ;__S_:Boolean ;S:Boolean ){} }''','''Class,_,:,_,{,},Class,__42_1,{,},Class,c_,{,Destructor,(,),{,},},Class,_q,{,_z,(,_,:,Array,[,Array,[,Float,,,0X48,],,,0x21,],;,_J,:,_,;,_,,,J_0,:,Boolean,;,__S_,:,Boolean,;,S,:,Boolean,),{,},},<EOF>''',101))

    def test_348(self):
        self.assertTrue(TestLexer.test('''Class t{ge_(m,_2,w,C,Q,Q,q,x:_){} }Class _H{Val D:h;Destructor (){}Destructor (){}Var $8,__7:Int ;}Class jj_:_{}Class g7:j{}Class _:_{}''','''Class,t,{,ge_,(,m,,,_2,,,w,,,C,,,Q,,,Q,,,q,,,x,:,_,),{,},},Class,_H,{,Val,D,:,h,;,Destructor,(,),{,},Destructor,(,),{,},Var,$8,,,__7,:,Int,;,},Class,jj_,:,_,{,},Class,g7,:,j,{,},Class,_,:,_,{,},<EOF>''',101))

    def test_349(self):
        self.assertTrue(TestLexer.test('''Class t4__:_{$9(){Return ;} }Class _{}Class _Ag_:_27_0{$3(_,_h,w2,a_G9,_,d,U,_n,Q6:String ;_o,w,A_,x_:_;b_:Boolean ){} }''','''Class,t4__,:,_,{,$9,(,),{,Return,;,},},Class,_,{,},Class,_Ag_,:,_27_0,{,$3,(,_,,,_h,,,w2,,,a_G9,,,_,,,d,,,U,,,_n,,,Q6,:,String,;,_o,,,w,,,A_,,,x_,:,_,;,b_,:,Boolean,),{,},},<EOF>''',101))

    def test_350(self):
        self.assertTrue(TestLexer.test('''Class _s{Var $_,$4:Array [Array [Array [Array [Array [Array [Array [Float ,0b1],04],69],1_4_55_3],73],0X9],4];}Class __:_{}''','''Class,_s,{,Var,$_,,,$4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,04,],,,69,],,,14553,],,,73,],,,0X9,],,,4,],;,},Class,__,:,_,{,},<EOF>''',101))

    def test_351(self):
        self.assertTrue(TestLexer.test('''Class Bm{}Class l_xOFd2:_8Pq{Constructor (l,_,i3G:String ;_9_j,L_,_,_,____:Array [Array [Array [Int ,33],03],33];K:Float ;_o:Boolean ){} }Class S:_{}''','''Class,Bm,{,},Class,l_xOFd2,:,_8Pq,{,Constructor,(,l,,,_,,,i3G,:,String,;,_9_j,,,L_,,,_,,,_,,,____,:,Array,[,Array,[,Array,[,Int,,,33,],,,03,],,,33,],;,K,:,Float,;,_o,:,Boolean,),{,},},Class,S,:,_,{,},<EOF>''',101))

    def test_352(self):
        self.assertTrue(TestLexer.test('''Class _{$NW_92_PE(u,i:Array [Array [Array [Array [Boolean ,0b1_1],0B1001101],0X4_9],23]){}Val _9B,o:Float ;}Class B{Constructor (___:Array [Array [Float ,0B1001101],060];_V,_5:Array [Boolean ,58];_,_D_V_:Float ){} }''','''Class,_,{,$NW_92_PE,(,u,,,i,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b11,],,,0B1001101,],,,0X49,],,,23,],),{,},Val,_9B,,,o,:,Float,;,},Class,B,{,Constructor,(,___,:,Array,[,Array,[,Float,,,0B1001101,],,,060,],;,_V,,,_5,:,Array,[,Boolean,,,58,],;,_,,,_D_V_,:,Float,),{,},},<EOF>''',101))

    def test_353(self):
        self.assertTrue(TestLexer.test('''Class T_:_r2_{Constructor (){}$H(v,_:Int ;__c:_R_){}Var X_:Array [Array [Array [Array [Int ,0xF3_16],59],035],050];Val _,$_:Boolean ;}''','''Class,T_,:,_r2_,{,Constructor,(,),{,},$H,(,v,,,_,:,Int,;,__c,:,_R_,),{,},Var,X_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0xF316,],,,59,],,,035,],,,050,],;,Val,_,,,$_,:,Boolean,;,},<EOF>''',101))

    def test_354(self):
        self.assertTrue(TestLexer.test('''Class _:V{}Class Z:_{Constructor (_:Int ;_c:Array [Array [Array [Boolean ,991_8_2],72],06];gS,e:_;__:Boolean ;i,_a,Y_,_:Int ){}Var $_,$P:Array [Boolean ,05];}''','''Class,_,:,V,{,},Class,Z,:,_,{,Constructor,(,_,:,Int,;,_c,:,Array,[,Array,[,Array,[,Boolean,,,99182,],,,72,],,,06,],;,gS,,,e,:,_,;,__,:,Boolean,;,i,,,_a,,,Y_,,,_,:,Int,),{,},Var,$_,,,$P,:,Array,[,Boolean,,,05,],;,},<EOF>''',101))

    def test_355(self):
        self.assertTrue(TestLexer.test('''Class _{}Class w86:x_m0{Destructor (){Break ;} }Class l_:___{}Class _{Var $_yZ:Array [Array [Array [String ,053_0],04],0x66];}''','''Class,_,{,},Class,w86,:,x_m0,{,Destructor,(,),{,Break,;,},},Class,l_,:,___,{,},Class,_,{,Var,$_yZ,:,Array,[,Array,[,Array,[,String,,,0530,],,,04,],,,0x66,],;,},<EOF>''',101))

    def test_356(self):
        self.assertTrue(TestLexer.test('''Class lU:N{$_0(_h__6:String ;_,_:Array [Array [Array [Boolean ,022],0b1],0X51]){}Constructor (){} }Class _O_:z1{}''','''Class,lU,:,N,{,$_0,(,_h__6,:,String,;,_,,,_,:,Array,[,Array,[,Array,[,Boolean,,,022,],,,0b1,],,,0X51,],),{,},Constructor,(,),{,},},Class,_O_,:,z1,{,},<EOF>''',101))

    def test_357(self):
        self.assertTrue(TestLexer.test('''Class __Z_{}Class _{_3(_T4:Array [Float ,02]){Val _v1,_,d:D_;}Var _7,OAc,$38B,$ft2_:_7_;}Class __{}Class A_8EO:_{}''','''Class,__Z_,{,},Class,_,{,_3,(,_T4,:,Array,[,Float,,,02,],),{,Val,_v1,,,_,,,d,:,D_,;,},Var,_7,,,OAc,,,$38B,,,$ft2_,:,_7_,;,},Class,__,{,},Class,A_8EO,:,_,{,},<EOF>''',101))

    def test_358(self):
        self.assertTrue(TestLexer.test('''Class W_{$__(S,_:Array [Array [Int ,043],70];U,X_:Int ;___6,_:F;x,W__J:Array [Array [Boolean ,70],0X61];_:Array [String ,0x42];_,_:E;F,sb,_2,_,_6:i){} }''','''Class,W_,{,$__,(,S,,,_,:,Array,[,Array,[,Int,,,043,],,,70,],;,U,,,X_,:,Int,;,___6,,,_,:,F,;,x,,,W__J,:,Array,[,Array,[,Boolean,,,70,],,,0X61,],;,_,:,Array,[,String,,,0x42,],;,_,,,_,:,E,;,F,,,sb,,,_2,,,_,,,_6,:,i,),{,},},<EOF>''',101))

    def test_359(self):
        self.assertTrue(TestLexer.test('''Class _:N{Val $6:Array [Array [Boolean ,0X2_7A],0130];}Class p84_m:uN{Constructor (){Continue ;} }Class Q_:__{}Class _v:__4{}Class _{}''','''Class,_,:,N,{,Val,$6,:,Array,[,Array,[,Boolean,,,0X27A,],,,0130,],;,},Class,p84_m,:,uN,{,Constructor,(,),{,Continue,;,},},Class,Q_,:,__,{,},Class,_v,:,__4,{,},Class,_,{,},<EOF>''',101))

    def test_360(self):
        self.assertTrue(TestLexer.test('''Class _9v:DY2{}Class W:__{}Class _:c96{Destructor (){}Var $o7_67_2_,_55_,y,W,$a:Array [Array [Array [String ,040],9],0x23];Constructor (V0,y:Array [String ,64_8];_0bk,pBU7,_,_,x,_,_,_N:m_;c:Array [Float ,0X24];B1,M_:Array [String ,040];x3:Boolean ){}Var _d:Float ;}''','''Class,_9v,:,DY2,{,},Class,W,:,__,{,},Class,_,:,c96,{,Destructor,(,),{,},Var,$o7_67_2_,,,_55_,,,y,,,W,,,$a,:,Array,[,Array,[,Array,[,String,,,040,],,,9,],,,0x23,],;,Constructor,(,V0,,,y,:,Array,[,String,,,648,],;,_0bk,,,pBU7,,,_,,,_,,,x,,,_,,,_,,,_N,:,m_,;,c,:,Array,[,Float,,,0X24,],;,B1,,,M_,:,Array,[,String,,,040,],;,x3,:,Boolean,),{,},Var,_d,:,Float,;,},<EOF>''',101))

    def test_361(self):
        self.assertTrue(TestLexer.test('''Class t:a{$T(){}A(f5,_8C,___:Array [Array [Array [Float ,0X95],0XB],55];_:String ){}Var $V,n:Array [Int ,0B1];}Class _04:_{$T9(_9:Int ;I4x:Boolean ;_7595:_;__,c2D:String ){}Constructor (){} }''','''Class,t,:,a,{,$T,(,),{,},A,(,f5,,,_8C,,,___,:,Array,[,Array,[,Array,[,Float,,,0X95,],,,0XB,],,,55,],;,_,:,String,),{,},Var,$V,,,n,:,Array,[,Int,,,0B1,],;,},Class,_04,:,_,{,$T9,(,_9,:,Int,;,I4x,:,Boolean,;,_7595,:,_,;,__,,,c2D,:,String,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_362(self):
        self.assertTrue(TestLexer.test('''Class R_:_2{Constructor (){} }Class _{}Class _9P{_V(){Val _9_:Array [Array [Float ,0b1100100],0b1];}Val $_:Int ;Val U_,_,$13:Float ;}Class _{}Class _:_{}''','''Class,R_,:,_2,{,Constructor,(,),{,},},Class,_,{,},Class,_9P,{,_V,(,),{,Val,_9_,:,Array,[,Array,[,Float,,,0b1100100,],,,0b1,],;,},Val,$_,:,Int,;,Val,U_,,,_,,,$13,:,Float,;,},Class,_,{,},Class,_,:,_,{,},<EOF>''',101))

    def test_363(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _9BNaM_:B_K{Constructor (e1__e_:_;_:Int ;zt_:Array [Int ,0b111];Gh:Boolean ){}Val $_7G:Boolean ;Destructor (){} }Class _:_3{Constructor (_,L_:String ){} }''','''Class,_,:,_,{,},Class,_9BNaM_,:,B_K,{,Constructor,(,e1__e_,:,_,;,_,:,Int,;,zt_,:,Array,[,Int,,,0b111,],;,Gh,:,Boolean,),{,},Val,$_7G,:,Boolean,;,Destructor,(,),{,},},Class,_,:,_3,{,Constructor,(,_,,,L_,:,String,),{,},},<EOF>''',101))

    def test_364(self):
        self.assertTrue(TestLexer.test('''Class _q{}Class _1:_G{Val $5Z,_,$7_8,$_,_,FB_4a,$8e,$_:A58;}Class l:Q_{_(_:n__9;__jo:Array [Array [Array [Array [String ,0XD_FC],0b1_0_1],0x16],0b1010001];q_:R){Continue ;} }''','''Class,_q,{,},Class,_1,:,_G,{,Val,$5Z,,,_,,,$7_8,,,$_,,,_,,,FB_4a,,,$8e,,,$_,:,A58,;,},Class,l,:,Q_,{,_,(,_,:,n__9,;,__jo,:,Array,[,Array,[,Array,[,Array,[,String,,,0XDFC,],,,0b101,],,,0x16,],,,0b1010001,],;,q_,:,R,),{,Continue,;,},},<EOF>''',101))

    def test_365(self):
        self.assertTrue(TestLexer.test('''Class UI:e_M5{}Class q2{}Class _{Constructor (_Z_:Array [Array [Float ,82],0b1_1_1]){}Destructor (){} }Class _:_l_{}Class D:G{}Class z:_{Constructor (j,_:Boolean ){} }''','''Class,UI,:,e_M5,{,},Class,q2,{,},Class,_,{,Constructor,(,_Z_,:,Array,[,Array,[,Float,,,82,],,,0b111,],),{,},Destructor,(,),{,},},Class,_,:,_l_,{,},Class,D,:,G,{,},Class,z,:,_,{,Constructor,(,j,,,_,:,Boolean,),{,},},<EOF>''',101))

    def test_366(self):
        self.assertTrue(TestLexer.test('''Class _v9{}Class e:_1_{_55do(){}Constructor (__2,G,_,q,n:Array [Array [Float ,0X1_68_9_D7],0X5]){} }Class Z:_{Constructor (){Break ;}Destructor (){Continue ;} }''','''Class,_v9,{,},Class,e,:,_1_,{,_55do,(,),{,},Constructor,(,__2,,,G,,,_,,,q,,,n,:,Array,[,Array,[,Float,,,0X1689D7,],,,0X5,],),{,},},Class,Z,:,_,{,Constructor,(,),{,Break,;,},Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_367(self):
        self.assertTrue(TestLexer.test('''Class _:_3_{}Class _8:_{Val $1,$M:Array [Boolean ,046];Constructor (){}Val $0,__:i___;Val $G,$U:Float ;Constructor (F_:Float ;__38,_,_,sF:_;_,_R,_3,j_:_;__:Array [Array [String ,0B1],0B1100]){Var _z__b,w_460:Array [Boolean ,0X7];Continue ;} }''','''Class,_,:,_3_,{,},Class,_8,:,_,{,Val,$1,,,$M,:,Array,[,Boolean,,,046,],;,Constructor,(,),{,},Val,$0,,,__,:,i___,;,Val,$G,,,$U,:,Float,;,Constructor,(,F_,:,Float,;,__38,,,_,,,_,,,sF,:,_,;,_,,,_R,,,_3,,,j_,:,_,;,__,:,Array,[,Array,[,String,,,0B1,],,,0B1100,],),{,Var,_z__b,,,w_460,:,Array,[,Boolean,,,0X7,],;,Continue,;,},},<EOF>''',101))

    def test_368(self):
        self.assertTrue(TestLexer.test('''Class _:Y{}Class p_:__m_l2{Val $8,l1_:I;}Class _:DY{Val __,tj:_;}Class _8____V:F{Val $9c,$J9,$a,$_gt,$_,__3D35,G4_:_;}Class L__{}Class y0_:_{}''','''Class,_,:,Y,{,},Class,p_,:,__m_l2,{,Val,$8,,,l1_,:,I,;,},Class,_,:,DY,{,Val,__,,,tj,:,_,;,},Class,_8____V,:,F,{,Val,$9c,,,$J9,,,$a,,,$_gt,,,$_,,,__3D35,,,G4_,:,_,;,},Class,L__,{,},Class,y0_,:,_,{,},<EOF>''',101))

    def test_369(self):
        self.assertTrue(TestLexer.test('''Class f:_{Destructor (){}Constructor (o,_7:Array [Array [Array [Array [String ,065],0B1_0],03],3];__0_9:Boolean ;_8:Float ;_,c0PH:String ){Break ;{}Return ;} }Class _{}''','''Class,f,:,_,{,Destructor,(,),{,},Constructor,(,o,,,_7,:,Array,[,Array,[,Array,[,Array,[,String,,,065,],,,0B10,],,,03,],,,3,],;,__0_9,:,Boolean,;,_8,:,Float,;,_,,,c0PH,:,String,),{,Break,;,{,},Return,;,},},Class,_,{,},<EOF>''',101))

    def test_370(self):
        self.assertTrue(TestLexer.test('''Class t{Destructor (){}Destructor (){} }Class q{_(i4__g:Float ){}Constructor (_:Array [Array [Array [String ,07],0b1_11],0B1010101]){} }''','''Class,t,{,Destructor,(,),{,},Destructor,(,),{,},},Class,q,{,_,(,i4__g,:,Float,),{,},Constructor,(,_,:,Array,[,Array,[,Array,[,String,,,07,],,,0b111,],,,0B1010101,],),{,},},<EOF>''',101))

    def test_371(self):
        self.assertTrue(TestLexer.test('''Class _:l{Destructor (){} }Class _J{}Class B2_n:O_{}Class ___:w{$_S2Wny(){}Destructor (){}Var x5N_:Array [Float ,62];Val $_:Array [String ,0B1];}''','''Class,_,:,l,{,Destructor,(,),{,},},Class,_J,{,},Class,B2_n,:,O_,{,},Class,___,:,w,{,$_S2Wny,(,),{,},Destructor,(,),{,},Var,x5N_,:,Array,[,Float,,,62,],;,Val,$_,:,Array,[,String,,,0B1,],;,},<EOF>''',101))

    def test_372(self):
        self.assertTrue(TestLexer.test('''Class I{$5_(){z7_h_3::$L();} }Class _:_{Constructor (u:Array [Array [Array [Boolean ,72],4],0B100000];_:_;_l,_mq,_,U6,D_I,l__:Array [Array [Int ,0b10010],0X25]){}Val __I:Array [Boolean ,07];}''','''Class,I,{,$5_,(,),{,z7_h_3,::,$L,(,),;,},},Class,_,:,_,{,Constructor,(,u,:,Array,[,Array,[,Array,[,Boolean,,,72,],,,4,],,,0B100000,],;,_,:,_,;,_l,,,_mq,,,_,,,U6,,,D_I,,,l__,:,Array,[,Array,[,Int,,,0b10010,],,,0X25,],),{,},Val,__I,:,Array,[,Boolean,,,07,],;,},<EOF>''',101))

    def test_373(self):
        self.assertTrue(TestLexer.test('''Class _:O9_{}Class Tq{_(){}$_(_,W_V_W6,E5,_2:_G;_1,___,K_,__,_Qk_r:Boolean ;Mq2,r,_:Array [Int ,63]){} }Class _37_{Constructor (){} }''','''Class,_,:,O9_,{,},Class,Tq,{,_,(,),{,},$_,(,_,,,W_V_W6,,,E5,,,_2,:,_G,;,_1,,,___,,,K_,,,__,,,_Qk_r,:,Boolean,;,Mq2,,,r,,,_,:,Array,[,Int,,,63,],),{,},},Class,_37_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_374(self):
        self.assertTrue(TestLexer.test('''Class Xj{$7(m_,Y,k:Array [Float ,0B1_0];_,B_7:Array [Array [Boolean ,0b10],014];_M,Y,_lI:j_c;__,_:String ){}Destructor (){}Var $49d,$_4_1_8__,__3_,$3:Array [Array [Array [String ,0142],0b10],0XE];}''','''Class,Xj,{,$7,(,m_,,,Y,,,k,:,Array,[,Float,,,0B10,],;,_,,,B_7,:,Array,[,Array,[,Boolean,,,0b10,],,,014,],;,_M,,,Y,,,_lI,:,j_c,;,__,,,_,:,String,),{,},Destructor,(,),{,},Var,$49d,,,$_4_1_8__,,,__3_,,,$3,:,Array,[,Array,[,Array,[,String,,,0142,],,,0b10,],,,0XE,],;,},<EOF>''',101))

    def test_375(self):
        self.assertTrue(TestLexer.test('''Class NT4{J(___T:Array [Array [String ,0X8],0B10_01];_5N:Array [Array [Boolean ,0x6_8_08],0X3A];Q,I:Boolean ){Q0::$_r._2();Break ;{} }}Class G:R8_{}Class o_{}''','''Class,NT4,{,J,(,___T,:,Array,[,Array,[,String,,,0X8,],,,0B1001,],;,_5N,:,Array,[,Array,[,Boolean,,,0x6808,],,,0X3A,],;,Q,,,I,:,Boolean,),{,Q0,::,$_r,.,_2,(,),;,Break,;,{,},},},Class,G,:,R8_,{,},Class,o_,{,},<EOF>''',101))

    def test_376(self):
        self.assertTrue(TestLexer.test('''Class _90:_{$9_(_,_3,_,_:Array [Array [Array [Array [Array [Array [Int ,0B1],3],0X9],9],525],0b1_10];C,Y9:_2){} }''','''Class,_90,:,_,{,$9_,(,_,,,_3,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,3,],,,0X9,],,,9,],,,525,],,,0b110,],;,C,,,Y9,:,_2,),{,},},<EOF>''',101))

    def test_377(self):
        self.assertTrue(TestLexer.test('''Class r:_2{}Class a{Var $P:f72;}Class Y:_{Val _U_:Array [Float ,05_2];Val B:Array [Boolean ,0b1_1];Constructor (_,_D:Array [Array [Boolean ,8],0x35]){} }''','''Class,r,:,_2,{,},Class,a,{,Var,$P,:,f72,;,},Class,Y,:,_,{,Val,_U_,:,Array,[,Float,,,052,],;,Val,B,:,Array,[,Boolean,,,0b11,],;,Constructor,(,_,,,_D,:,Array,[,Array,[,Boolean,,,8,],,,0x35,],),{,},},<EOF>''',101))

    def test_378(self):
        self.assertTrue(TestLexer.test('''Class __{Constructor (){}Var $_s_8:Array [Array [Array [String ,046],0X26],0x1];Constructor (z:v_;_,C:String ;_,_:__){}Var $2,$_X_:Array [Float ,0XF_F_B_8];}Class _:T{}''','''Class,__,{,Constructor,(,),{,},Var,$_s_8,:,Array,[,Array,[,Array,[,String,,,046,],,,0X26,],,,0x1,],;,Constructor,(,z,:,v_,;,_,,,C,:,String,;,_,,,_,:,__,),{,},Var,$2,,,$_X_,:,Array,[,Float,,,0XFFB8,],;,},Class,_,:,T,{,},<EOF>''',101))

    def test_379(self):
        self.assertTrue(TestLexer.test('''Class _I{}Class _2{Constructor (W_9:Float ;_:String ;C0_5,Y,__20,_L,_O:Array [Float ,2];w_,__,_:String ;W2,S2c81,L:Boolean ){} }''','''Class,_I,{,},Class,_2,{,Constructor,(,W_9,:,Float,;,_,:,String,;,C0_5,,,Y,,,__20,,,_L,,,_O,:,Array,[,Float,,,2,],;,w_,,,__,,,_,:,String,;,W2,,,S2c81,,,L,:,Boolean,),{,},},<EOF>''',101))

    def test_380(self):
        self.assertTrue(TestLexer.test('''Class _:d{$d3(){}Constructor (Pd1VDF_9:Array [Array [Array [Int ,0x1],0X4_A],2];q,D7,_7:Array [Array [Boolean ,0XF],0b1001101]){} }''','''Class,_,:,d,{,$d3,(,),{,},Constructor,(,Pd1VDF_9,:,Array,[,Array,[,Array,[,Int,,,0x1,],,,0X4A,],,,2,],;,q,,,D7,,,_7,:,Array,[,Array,[,Boolean,,,0XF,],,,0b1001101,],),{,},},<EOF>''',101))

    def test_381(self):
        self.assertTrue(TestLexer.test('''Class J__{Var $__6ir:F;}Class _2_J:__u__Cz{}Class _{Val u74g,_:Array [Int ,016];}Class bj{Constructor (P_:Array [Float ,031];__:String ){ {} }}''','''Class,J__,{,Var,$__6ir,:,F,;,},Class,_2_J,:,__u__Cz,{,},Class,_,{,Val,u74g,,,_,:,Array,[,Int,,,016,],;,},Class,bj,{,Constructor,(,P_,:,Array,[,Float,,,031,],;,__,:,String,),{,{,},},},<EOF>''',101))

    def test_382(self):
        self.assertTrue(TestLexer.test('''Class A:X{Constructor (_:Array [Array [Array [Float ,07],0110],0X1];m,_,_:String ;x6_5:Array [Array [Boolean ,0110],0110];_5x,_M:_){} }''','''Class,A,:,X,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Float,,,07,],,,0110,],,,0X1,],;,m,,,_,,,_,:,String,;,x6_5,:,Array,[,Array,[,Boolean,,,0110,],,,0110,],;,_5x,,,_M,:,_,),{,},},<EOF>''',101))

    def test_383(self):
        self.assertTrue(TestLexer.test('''Class i:N{}Class C8{Constructor (){Continue ;Break ;}Destructor (){}Var $56,_:Float ;Var c:Array [Int ,0B10_11];}Class jmv{Constructor (){Break ;Var f:Array [Int ,05_4];} }Class _{Var _m_,K,Q,$71c:Int ;Val $9:_;}''','''Class,i,:,N,{,},Class,C8,{,Constructor,(,),{,Continue,;,Break,;,},Destructor,(,),{,},Var,$56,,,_,:,Float,;,Var,c,:,Array,[,Int,,,0B1011,],;,},Class,jmv,{,Constructor,(,),{,Break,;,Var,f,:,Array,[,Int,,,054,],;,},},Class,_,{,Var,_m_,,,K,,,Q,,,$71c,:,Int,;,Val,$9,:,_,;,},<EOF>''',101))

    def test_384(self):
        self.assertTrue(TestLexer.test('''Class _:f_{Val _,$7_:Array [Boolean ,0X17];Destructor (){}Constructor (){Var z,z_36:String ;Break ;Break ;} }Class _:W_{}''','''Class,_,:,f_,{,Val,_,,,$7_,:,Array,[,Boolean,,,0X17,],;,Destructor,(,),{,},Constructor,(,),{,Var,z,,,z_36,:,String,;,Break,;,Break,;,},},Class,_,:,W_,{,},<EOF>''',101))

    def test_385(self):
        self.assertTrue(TestLexer.test('''Class T{Constructor (d4_,__3_,_F:_;_,R_7h_:String ;_:Array [Boolean ,0XA]){} }Class _:_1_w__zy__65__3{}Class _{}''','''Class,T,{,Constructor,(,d4_,,,__3_,,,_F,:,_,;,_,,,R_7h_,:,String,;,_,:,Array,[,Boolean,,,0XA,],),{,},},Class,_,:,_1_w__zy__65__3,{,},Class,_,{,},<EOF>''',101))

    def test_386(self):
        self.assertTrue(TestLexer.test('''Class h{Constructor (_,__V:Array [Float ,0b100011];_0,__17:Array [Array [Array [Int ,0B1_10_1],9_6_9],57_22];n,_6_,_,p,Z3,O:M){} }Class _{}''','''Class,h,{,Constructor,(,_,,,__V,:,Array,[,Float,,,0b100011,],;,_0,,,__17,:,Array,[,Array,[,Array,[,Int,,,0B1101,],,,969,],,,5722,],;,n,,,_6_,,,_,,,p,,,Z3,,,O,:,M,),{,},},Class,_,{,},<EOF>''',101))

    def test_387(self):
        self.assertTrue(TestLexer.test('''Class ___4_{Constructor (__,_NT,_,___:Array [Float ,0x42];_:Array [Array [Array [Int ,0B10],0B1_00],0B1];S:a;_,__L,k3:_;k:Int ){} }''','''Class,___4_,{,Constructor,(,__,,,_NT,,,_,,,___,:,Array,[,Float,,,0x42,],;,_,:,Array,[,Array,[,Array,[,Int,,,0B10,],,,0B100,],,,0B1,],;,S,:,a,;,_,,,__L,,,k3,:,_,;,k,:,Int,),{,},},<EOF>''',101))

    def test_388(self):
        self.assertTrue(TestLexer.test('''Class _{Val $874I_,$7,$_4w,$9m_2:Array [Array [Array [Float ,63],3],0XB];}Class F5__:O{Destructor (){Break ;Return ;}Destructor (){Break ;}Val $l,E:Float ;}Class x81r{A(){}Val _:Array [Array [Int ,0x4B],0X60]=!l::$D/-T0u::$_;}Class E__{Constructor (_:Boolean ;_,N__,IyDA:Int ){Break ;}Val __w4_:_=R::$__l();}Class F_ca{Var $_:Array [String ,5_2];}''','''Class,_,{,Val,$874I_,,,$7,,,$_4w,,,$9m_2,:,Array,[,Array,[,Array,[,Float,,,63,],,,3,],,,0XB,],;,},Class,F5__,:,O,{,Destructor,(,),{,Break,;,Return,;,},Destructor,(,),{,Break,;,},Val,$l,,,E,:,Float,;,},Class,x81r,{,A,(,),{,},Val,_,:,Array,[,Array,[,Int,,,0x4B,],,,0X60,],=,!,l,::,$D,/,-,T0u,::,$_,;,},Class,E__,{,Constructor,(,_,:,Boolean,;,_,,,N__,,,IyDA,:,Int,),{,Break,;,},Val,__w4_,:,_,=,R,::,$__l,(,),;,},Class,F_ca,{,Var,$_,:,Array,[,String,,,52,],;,},<EOF>''',101))

    def test_389(self):
        self.assertTrue(TestLexer.test('''Class H:h{}Class H3__e:J_{Constructor (){} }Class _:_u9a{s(P,Xu5:J){Return ;}Val _:Array [Array [Int ,07_607_1],42];}Class z:X{}Class _{}''','''Class,H,:,h,{,},Class,H3__e,:,J_,{,Constructor,(,),{,},},Class,_,:,_u9a,{,s,(,P,,,Xu5,:,J,),{,Return,;,},Val,_,:,Array,[,Array,[,Int,,,076071,],,,42,],;,},Class,z,:,X,{,},Class,_,{,},<EOF>''',101))

    def test_390(self):
        self.assertTrue(TestLexer.test('''Class x{Var o,$b8K:String ;Constructor (j4_6:Array [Array [Boolean ,82],0b10001];_1,gJ,O6,_,icl,_:String ;W:Boolean ;_:r__){} }Class _:___{}''','''Class,x,{,Var,o,,,$b8K,:,String,;,Constructor,(,j4_6,:,Array,[,Array,[,Boolean,,,82,],,,0b10001,],;,_1,,,gJ,,,O6,,,_,,,icl,,,_,:,String,;,W,:,Boolean,;,_,:,r__,),{,},},Class,_,:,___,{,},<EOF>''',101))

    def test_391(self):
        self.assertTrue(TestLexer.test('''Class _pk_0v:_{}Class l:Y{Constructor (_:_){} }Class kr{}Class _Lf:R_{Val $_:Array [Array [Boolean ,0X63],0X63];}Class _80{_(){} }''','''Class,_pk_0v,:,_,{,},Class,l,:,Y,{,Constructor,(,_,:,_,),{,},},Class,kr,{,},Class,_Lf,:,R_,{,Val,$_,:,Array,[,Array,[,Boolean,,,0X63,],,,0X63,],;,},Class,_80,{,_,(,),{,},},<EOF>''',101))

    def test_392(self):
        self.assertTrue(TestLexer.test('''Class j:E_90u_{}Class K:_19f6{}Class _:T{$D_(n:Array [Int ,0X23];__:_;Om_:Int ;__1_:_C;__:Array [Array [Array [Array [Boolean ,0x18],034],051_4],034];_B,_:Int ;__:i){} }''','''Class,j,:,E_90u_,{,},Class,K,:,_19f6,{,},Class,_,:,T,{,$D_,(,n,:,Array,[,Int,,,0X23,],;,__,:,_,;,Om_,:,Int,;,__1_,:,_C,;,__,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x18,],,,034,],,,0514,],,,034,],;,_B,,,_,:,Int,;,__,:,i,),{,},},<EOF>''',101))

    def test_393(self):
        self.assertTrue(TestLexer.test('''Class _:c_{Constructor (__2_:Float ;_r,_:Array [Boolean ,03_5]){Return ;} }Class _:_9U_{Constructor (k27:Array [Array [Array [String ,0xE],21],6]){} }Class _:_{}''','''Class,_,:,c_,{,Constructor,(,__2_,:,Float,;,_r,,,_,:,Array,[,Boolean,,,035,],),{,Return,;,},},Class,_,:,_9U_,{,Constructor,(,k27,:,Array,[,Array,[,Array,[,String,,,0xE,],,,21,],,,6,],),{,},},Class,_,:,_,{,},<EOF>''',101))

    def test_394(self):
        self.assertTrue(TestLexer.test('''Class _{Val _,$3__,d3:Int ;_(){Break ;Break ;}$0(_:__;_,z:_q8_;P:u__7){Return ;}o(t2:Array [Float ,07]){}Val $c,$R_,D0h__1_o:String ;}Class _J83:s_{}''','''Class,_,{,Val,_,,,$3__,,,d3,:,Int,;,_,(,),{,Break,;,Break,;,},$0,(,_,:,__,;,_,,,z,:,_q8_,;,P,:,u__7,),{,Return,;,},o,(,t2,:,Array,[,Float,,,07,],),{,},Val,$c,,,$R_,,,D0h__1_o,:,String,;,},Class,_J83,:,s_,{,},<EOF>''',101))

    def test_395(self):
        self.assertTrue(TestLexer.test('''Class _:_{Var $3l5:_4A;Val $L_n_:b;Constructor (_,_,t:Int ){}Val $5_7__4_,$_,$_,$A_h,_o,$x8:T2;Val _d_g__,_,$8:A5;}''','''Class,_,:,_,{,Var,$3l5,:,_4A,;,Val,$L_n_,:,b,;,Constructor,(,_,,,_,,,t,:,Int,),{,},Val,$5_7__4_,,,$_,,,$_,,,$A_h,,,_o,,,$x8,:,T2,;,Val,_d_g__,,,_,,,$8,:,A5,;,},<EOF>''',101))

    def test_396(self):
        self.assertTrue(TestLexer.test('''Class x:_{$6(j,t8:Array [Int ,0X3A];_,W0_,Nhf,_,_:Array [Array [Float ,0b101010],067]){Return ;Break ;{} }Val $__:_;_(__5Ft:Int ){Return ;} }Class x{}Class hH:_{Destructor (){ {} }}Class _{}Class a{M(){} }Class __{Val M_34_66:_;Val $__,_,$35p,$1,$8_:Array [Float ,5];Constructor (bp:f;Mb8,_re9p,_:String ;B:Array [Boolean ,0B10_0];I45,x:y;_kF_jn6_8_,Q:Array [Int ,46]){Return ;Break ;} }''','''Class,x,:,_,{,$6,(,j,,,t8,:,Array,[,Int,,,0X3A,],;,_,,,W0_,,,Nhf,,,_,,,_,:,Array,[,Array,[,Float,,,0b101010,],,,067,],),{,Return,;,Break,;,{,},},Val,$__,:,_,;,_,(,__5Ft,:,Int,),{,Return,;,},},Class,x,{,},Class,hH,:,_,{,Destructor,(,),{,{,},},},Class,_,{,},Class,a,{,M,(,),{,},},Class,__,{,Val,M_34_66,:,_,;,Val,$__,,,_,,,$35p,,,$1,,,$8_,:,Array,[,Float,,,5,],;,Constructor,(,bp,:,f,;,Mb8,,,_re9p,,,_,:,String,;,B,:,Array,[,Boolean,,,0B100,],;,I45,,,x,:,y,;,_kF_jn6_8_,,,Q,:,Array,[,Int,,,46,],),{,Return,;,Break,;,},},<EOF>''',101))

    def test_397(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (__,__:Array [Array [Float ,0100],4];e:Array [Array [Array [Boolean ,7_571_9_0],0X5A],0b1_1]){}Destructor (){} }Class G_{}Class O2:i{}''','''Class,_,{,Constructor,(,__,,,__,:,Array,[,Array,[,Float,,,0100,],,,4,],;,e,:,Array,[,Array,[,Array,[,Boolean,,,757190,],,,0X5A,],,,0b11,],),{,},Destructor,(,),{,},},Class,G_,{,},Class,O2,:,i,{,},<EOF>''',101))

    def test_398(self):
        self.assertTrue(TestLexer.test('''Class j{Destructor (){} }Class _:_2{Destructor (){}Destructor (){}Var G_,_,o:Boolean ;}Class _:_G{Constructor (_8_,U3,EXu,_n6,ew,__,_43:Boolean ;_8,_,_:P){} }Class __{}''','''Class,j,{,Destructor,(,),{,},},Class,_,:,_2,{,Destructor,(,),{,},Destructor,(,),{,},Var,G_,,,_,,,o,:,Boolean,;,},Class,_,:,_G,{,Constructor,(,_8_,,,U3,,,EXu,,,_n6,,,ew,,,__,,,_43,:,Boolean,;,_8,,,_,,,_,:,P,),{,},},Class,__,{,},<EOF>''',101))

    def test_399(self):
        self.assertTrue(TestLexer.test('''Class Y:_{Val _7_,_G_:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,8],0X27],02_2],062],062],0XC_0_6],79],04_5700_42];Var _,h:Float ;Destructor (){ {} }}Class m{}Class m{}Class Z{}Class _:_{}''','''Class,Y,:,_,{,Val,_7_,,,_G_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,8,],,,0X27,],,,022,],,,062,],,,062,],,,0XC06,],,,79,],,,04570042,],;,Var,_,,,h,:,Float,;,Destructor,(,),{,{,},},},Class,m,{,},Class,m,{,},Class,Z,{,},Class,_,:,_,{,},<EOF>''',101))

    def test_400(self):
        self.assertTrue(TestLexer.test('''Class b:_{}Class B7:p{}Class _{}Class _E{Var X8:Array [Array [Int ,0B1],72];Val _,$_:Array [Array [Boolean ,060],060];Destructor (){} }Class U{}''','''Class,b,:,_,{,},Class,B7,:,p,{,},Class,_,{,},Class,_E,{,Var,X8,:,Array,[,Array,[,Int,,,0B1,],,,72,],;,Val,_,,,$_,:,Array,[,Array,[,Boolean,,,060,],,,060,],;,Destructor,(,),{,},},Class,U,{,},<EOF>''',101))

    def test_401(self):
        self.assertTrue(TestLexer.test('''Class U:_c{n(_:Boolean ;q,w,__:Array [Float ,07_6_6_11];_:_z___;_:Array [Array [Boolean ,072],9];H:I_M){}$L_(){} }''','''Class,U,:,_c,{,n,(,_,:,Boolean,;,q,,,w,,,__,:,Array,[,Float,,,076611,],;,_,:,_z___,;,_,:,Array,[,Array,[,Boolean,,,072,],,,9,],;,H,:,I_M,),{,},$L_,(,),{,},},<EOF>''',101))

    def test_402(self):
        self.assertTrue(TestLexer.test('''Class h6Y_{Constructor (_,n,t,__,Wy_:Array [Int ,4_68_9]){Val x,_,_D:Boolean ;}Var $B_u_82,o:Array [Array [Float ,59_3_1],0x5F_B7];Var $2_2,$m_,$_5A:q4y;}Class __977:X{}Class _{Val $__eDX:_r74;}''','''Class,h6Y_,{,Constructor,(,_,,,n,,,t,,,__,,,Wy_,:,Array,[,Int,,,4689,],),{,Val,x,,,_,,,_D,:,Boolean,;,},Var,$B_u_82,,,o,:,Array,[,Array,[,Float,,,5931,],,,0x5FB7,],;,Var,$2_2,,,$m_,,,$_5A,:,q4y,;,},Class,__977,:,X,{,},Class,_,{,Val,$__eDX,:,_r74,;,},<EOF>''',101))

    def test_403(self):
        self.assertTrue(TestLexer.test('''Class o1Y{$l_(__gf:Array [Array [Array [Array [Boolean ,0b1001001],05],033],0X14];_,_:Int ;_,p__E,_:_;_:c3f4Z32J02){} }''','''Class,o1Y,{,$l_,(,__gf,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1001001,],,,05,],,,033,],,,0X14,],;,_,,,_,:,Int,;,_,,,p__E,,,_,:,_,;,_,:,c3f4Z32J02,),{,},},<EOF>''',101))

    def test_404(self):
        self.assertTrue(TestLexer.test('''Class dl:e{Constructor (){ {} }Var _G,$_C3:Array [Array [Boolean ,26],0X52];}Class __{}Class _K{Destructor (){Continue ;h::$H9.a();} }Class UX:jI{Destructor (){} }''','''Class,dl,:,e,{,Constructor,(,),{,{,},},Var,_G,,,$_C3,:,Array,[,Array,[,Boolean,,,26,],,,0X52,],;,},Class,__,{,},Class,_K,{,Destructor,(,),{,Continue,;,h,::,$H9,.,a,(,),;,},},Class,UX,:,jI,{,Destructor,(,),{,},},<EOF>''',101))

    def test_405(self):
        self.assertTrue(TestLexer.test('''Class v:XK__{Val x:Float =!!!!!-New _()._()||-Null ;Constructor (_6_J:Array [Array [Array [Array [Int ,03_4_2_414],025],031],0X56];m:Array [String ,011];K0N,H,XV__F,w_:_A7_){} }''','''Class,v,:,XK__,{,Val,x,:,Float,=,!,!,!,!,!,-,New,_,(,),.,_,(,),||,-,Null,;,Constructor,(,_6_J,:,Array,[,Array,[,Array,[,Array,[,Int,,,0342414,],,,025,],,,031,],,,0X56,],;,m,:,Array,[,String,,,011,],;,K0N,,,H,,,XV__F,,,w_,:,_A7_,),{,},},<EOF>''',101))

    def test_406(self):
        self.assertTrue(TestLexer.test('''Class W{}Class u_0{X61(N,B_H,_w5,_J:String ;_O5,u_y6_,_,_,_v_,h:U4_B_;x:String ;_:u3;t2Q:Array [Int ,0b1011101]){} }''','''Class,W,{,},Class,u_0,{,X61,(,N,,,B_H,,,_w5,,,_J,:,String,;,_O5,,,u_y6_,,,_,,,_,,,_v_,,,h,:,U4_B_,;,x,:,String,;,_,:,u3,;,t2Q,:,Array,[,Int,,,0b1011101,],),{,},},<EOF>''',101))

    def test_407(self):
        self.assertTrue(TestLexer.test('''Class _:_k{Constructor (D_,_:Array [Array [Array [Array [String ,0b101001],0B1],0X16],0xE50_54];_5,_4_:Array [Array [Array [String ,91],0B1_0],0X16]){}Destructor (){} }Class _1{Constructor (){} }Class _a_q__{}''','''Class,_,:,_k,{,Constructor,(,D_,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b101001,],,,0B1,],,,0X16,],,,0xE5054,],;,_5,,,_4_,:,Array,[,Array,[,Array,[,String,,,91,],,,0B10,],,,0X16,],),{,},Destructor,(,),{,},},Class,_1,{,Constructor,(,),{,},},Class,_a_q__,{,},<EOF>''',101))

    def test_408(self):
        self.assertTrue(TestLexer.test('''Class __{Destructor (){Val e5,ak_:Array [Array [Array [Array [Int ,04],74],0B100000],0b11];} }Class Q6M:__1{}Class _56{}''','''Class,__,{,Destructor,(,),{,Val,e5,,,ak_,:,Array,[,Array,[,Array,[,Array,[,Int,,,04,],,,74,],,,0B100000,],,,0b11,],;,},},Class,Q6M,:,__1,{,},Class,_56,{,},<EOF>''',101))

    def test_409(self):
        self.assertTrue(TestLexer.test('''Class m9_:_{}Class UQTP4:M{}Class __{Destructor (){Continue ;}$B(bx,W_Tw92,mN2:Array [Array [Array [Array [Array [Array [Int ,06_64_2],0b1_1_00_01],73],0x2E],8],0B1100]){}$_(q:Float ){} }''','''Class,m9_,:,_,{,},Class,UQTP4,:,M,{,},Class,__,{,Destructor,(,),{,Continue,;,},$B,(,bx,,,W_Tw92,,,mN2,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,06642,],,,0b110001,],,,73,],,,0x2E,],,,8,],,,0B1100,],),{,},$_,(,q,:,Float,),{,},},<EOF>''',101))

    def test_410(self):
        self.assertTrue(TestLexer.test('''Class u{$0E0(){Continue ;}l(){_::$4();}Var _:n6QD;}Class j{}Class n:I{Var M1,a8,u_6:f;Destructor (){}Val O___,_,$_25,wo,Nq:_9T;Destructor (){}Val g:Array [Array [Array [Array [Array [Array [Array [Array [String ,225],0B1000010],04],04],8],0101],15],9];}''','''Class,u,{,$0E0,(,),{,Continue,;,},l,(,),{,_,::,$4,(,),;,},Var,_,:,n6QD,;,},Class,j,{,},Class,n,:,I,{,Var,M1,,,a8,,,u_6,:,f,;,Destructor,(,),{,},Val,O___,,,_,,,$_25,,,wo,,,Nq,:,_9T,;,Destructor,(,),{,},Val,g,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,225,],,,0B1000010,],,,04,],,,04,],,,8,],,,0101,],,,15,],,,9,],;,},<EOF>''',101))

    def test_411(self):
        self.assertTrue(TestLexer.test('''Class e4:L{}Class _{}Class Z_{Val _,$_:Array [Float ,0B110110];Var $nhfS:Array [Array [Boolean ,0B110110],0x20];Val R,BC:Boolean ;}Class _CS{Var __:_;}''','''Class,e4,:,L,{,},Class,_,{,},Class,Z_,{,Val,_,,,$_,:,Array,[,Float,,,0B110110,],;,Var,$nhfS,:,Array,[,Array,[,Boolean,,,0B110110,],,,0x20,],;,Val,R,,,BC,:,Boolean,;,},Class,_CS,{,Var,__,:,_,;,},<EOF>''',101))

    def test_412(self):
        self.assertTrue(TestLexer.test('''Class __:J0{Var $X,$_:M_;}Class _3:mom{}Class U:S{Constructor (_,_:p6;U,_:Array [Array [Int ,0x4],04]){} }Class _:U_QZ__{}''','''Class,__,:,J0,{,Var,$X,,,$_,:,M_,;,},Class,_3,:,mom,{,},Class,U,:,S,{,Constructor,(,_,,,_,:,p6,;,U,,,_,:,Array,[,Array,[,Int,,,0x4,],,,04,],),{,},},Class,_,:,U_QZ__,{,},<EOF>''',101))

    def test_413(self):
        self.assertTrue(TestLexer.test('''Class _:h{A50(){} }Class _:_S_{}Class vp9{Val $_:eL;Destructor (){Break ;Val _FMRg,_:Array [Array [Float ,035],0b1];} }Class _:__0e4a{}Class C{}''','''Class,_,:,h,{,A50,(,),{,},},Class,_,:,_S_,{,},Class,vp9,{,Val,$_,:,eL,;,Destructor,(,),{,Break,;,Val,_FMRg,,,_,:,Array,[,Array,[,Float,,,035,],,,0b1,],;,},},Class,_,:,__0e4a,{,},Class,C,{,},<EOF>''',101))

    def test_414(self):
        self.assertTrue(TestLexer.test('''Class _:S{Constructor (IM_,h_:Float ;K,_,f1__,_L:Array [Array [Boolean ,0b1000000],03_5];r:_;V,t,n:Array [Array [Int ,06],0X23]){} }''','''Class,_,:,S,{,Constructor,(,IM_,,,h_,:,Float,;,K,,,_,,,f1__,,,_L,:,Array,[,Array,[,Boolean,,,0b1000000,],,,035,],;,r,:,_,;,V,,,t,,,n,:,Array,[,Array,[,Int,,,06,],,,0X23,],),{,},},<EOF>''',101))

    def test_415(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class C:_{$35_g8W(_:Array [Array [String ,0X57],67]){}Var t_C,$_W:o;Constructor (_,_0,_:I__){}Val k:Float ;}''','''Class,_,:,_,{,},Class,C,:,_,{,$35_g8W,(,_,:,Array,[,Array,[,String,,,0X57,],,,67,],),{,},Var,t_C,,,$_W,:,o,;,Constructor,(,_,,,_0,,,_,:,I__,),{,},Val,k,:,Float,;,},<EOF>''',101))

    def test_416(self):
        self.assertTrue(TestLexer.test('''Class __Z:W{}Class _:__9{Destructor (){}Var $K,$Z,$_5HC3,$6:Array [Int ,9];}Class g{Constructor (){}Val J_:T;}Class va_7{_Qj(_,p26,_:Boolean ){ {{} }_Q_::$6__5h();Break ;} }''','''Class,__Z,:,W,{,},Class,_,:,__9,{,Destructor,(,),{,},Var,$K,,,$Z,,,$_5HC3,,,$6,:,Array,[,Int,,,9,],;,},Class,g,{,Constructor,(,),{,},Val,J_,:,T,;,},Class,va_7,{,_Qj,(,_,,,p26,,,_,:,Boolean,),{,{,{,},},_Q_,::,$6__5h,(,),;,Break,;,},},<EOF>''',101))

    def test_417(self):
        self.assertTrue(TestLexer.test('''Class Cw3{}Class _1:__5{}Class _{Constructor (o_:String ;x:_vFX;a,_:Array [Array [Array [String ,30],0b10110],0x39]){} }''','''Class,Cw3,{,},Class,_1,:,__5,{,},Class,_,{,Constructor,(,o_,:,String,;,x,:,_vFX,;,a,,,_,:,Array,[,Array,[,Array,[,String,,,30,],,,0b10110,],,,0x39,],),{,},},<EOF>''',101))

    def test_418(self):
        self.assertTrue(TestLexer.test('''Class __{_(_:Float ;_:Array [Float ,60];__:Array [Int ,0B1001000];CX,GRY_,_m_:Array [Array [Int ,0B1001000],046];D_:String ){} }''','''Class,__,{,_,(,_,:,Float,;,_,:,Array,[,Float,,,60,],;,__,:,Array,[,Int,,,0B1001000,],;,CX,,,GRY_,,,_m_,:,Array,[,Array,[,Int,,,0B1001000,],,,046,],;,D_,:,String,),{,},},<EOF>''',101))

    def test_419(self):
        self.assertTrue(TestLexer.test('''Class J{_(){Var _,_:x;Return ;} }Class K:m{Destructor (){}Val $56:_C;Var _8,$R8_,$_,_,__0_,$5C_1v:String ;Constructor (){ {}Val _:Int ;} }''','''Class,J,{,_,(,),{,Var,_,,,_,:,x,;,Return,;,},},Class,K,:,m,{,Destructor,(,),{,},Val,$56,:,_C,;,Var,_8,,,$R8_,,,$_,,,_,,,__0_,,,$5C_1v,:,String,;,Constructor,(,),{,{,},Val,_,:,Int,;,},},<EOF>''',101))

    def test_420(self):
        self.assertTrue(TestLexer.test('''Class B:v{Val h_z_y_:Float ;}Class _1_{}Class _9{Destructor (){Var _:D;}Destructor (){}Var $L,F_1PR,t:Boolean ;}''','''Class,B,:,v,{,Val,h_z_y_,:,Float,;,},Class,_1_,{,},Class,_9,{,Destructor,(,),{,Var,_,:,D,;,},Destructor,(,),{,},Var,$L,,,F_1PR,,,t,:,Boolean,;,},<EOF>''',101))

    def test_421(self):
        self.assertTrue(TestLexer.test('''Class _:L{Constructor (){ {} }$7(i0F:Array [String ,0x69];_4p,_7_,Wy_,i_,_:Array [Float ,02]){Return ;Val Z__5__v:I;{} }}''','''Class,_,:,L,{,Constructor,(,),{,{,},},$7,(,i0F,:,Array,[,String,,,0x69,],;,_4p,,,_7_,,,Wy_,,,i_,,,_,:,Array,[,Float,,,02,],),{,Return,;,Val,Z__5__v,:,I,;,{,},},},<EOF>''',101))

    def test_422(self):
        self.assertTrue(TestLexer.test('''Class ___:oI{Constructor (){}Val $N7Q070:Array [Float ,0B1000111];fg_(_,A,p,_,l,E:_;R__,_:Int ;A,_,_:Float ;x:Array [Int ,94];C9:Array [Array [Array [Array [Int ,0X64],94],0B11_1],05_25_3];_eec2_1:String ){}_q52m(HQ,R8f:Float ;MS_,s,_7,O_:_){Continue ;o9::$_(!!!--T::$_A);Continue ;}Val p,$53_7_p:_s_;}Class S{}Class S85_7R{}''','''Class,___,:,oI,{,Constructor,(,),{,},Val,$N7Q070,:,Array,[,Float,,,0B1000111,],;,fg_,(,_,,,A,,,p,,,_,,,l,,,E,:,_,;,R__,,,_,:,Int,;,A,,,_,,,_,:,Float,;,x,:,Array,[,Int,,,94,],;,C9,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X64,],,,94,],,,0B111,],,,05253,],;,_eec2_1,:,String,),{,},_q52m,(,HQ,,,R8f,:,Float,;,MS_,,,s,,,_7,,,O_,:,_,),{,Continue,;,o9,::,$_,(,!,!,!,-,-,T,::,$_A,),;,Continue,;,},Val,p,,,$53_7_p,:,_s_,;,},Class,S,{,},Class,S85_7R,{,},<EOF>''',101))

    def test_423(self):
        self.assertTrue(TestLexer.test('''Class sb_:u{Val X,_t:W_;}Class lL_{Constructor (C,_,_6_,_,i38,_0OK3,_,_:_7t){G_O__::$4L();} }Class _:_{Var $c2t2,ZY,$_,_2_,$1:_ya;Val _4,$_,$lw9_5:V;}''','''Class,sb_,:,u,{,Val,X,,,_t,:,W_,;,},Class,lL_,{,Constructor,(,C,,,_,,,_6_,,,_,,,i38,,,_0OK3,,,_,,,_,:,_7t,),{,G_O__,::,$4L,(,),;,},},Class,_,:,_,{,Var,$c2t2,,,ZY,,,$_,,,_2_,,,$1,:,_ya,;,Val,_4,,,$_,,,$lw9_5,:,V,;,},<EOF>''',101))

    def test_424(self):
        self.assertTrue(TestLexer.test('''Class _o{}Class P{Var __:Boolean ;Val KP,_:Array [Int ,0X4B];Var S:Array [Array [Array [Float ,0x44],071],6_0_2_7];}Class _g_{}''','''Class,_o,{,},Class,P,{,Var,__,:,Boolean,;,Val,KP,,,_,:,Array,[,Int,,,0X4B,],;,Var,S,:,Array,[,Array,[,Array,[,Float,,,0x44,],,,071,],,,6027,],;,},Class,_g_,{,},<EOF>''',101))

    def test_425(self):
        self.assertTrue(TestLexer.test('''Class _g3{Val b:String ;}Class _:_{__(Tg:Boolean ;W0,T,_,_,_,m,_,_p,p_1:String ;o,__3u_,h,p:Float ){ {{} }Val g,m7Z,_:Array [Boolean ,54];} }''','''Class,_g3,{,Val,b,:,String,;,},Class,_,:,_,{,__,(,Tg,:,Boolean,;,W0,,,T,,,_,,,_,,,_,,,m,,,_,,,_p,,,p_1,:,String,;,o,,,__3u_,,,h,,,p,:,Float,),{,{,{,},},Val,g,,,m7Z,,,_,:,Array,[,Boolean,,,54,],;,},},<EOF>''',101))

    def test_426(self):
        self.assertTrue(TestLexer.test('''Class _j:_41r{Constructor (_,__:Float ;_3,_G_:Array [Array [Array [Array [Float ,73],7],0B10],0x8];o:Array [Array [Int ,05],0115]){} }Class Mh{}''','''Class,_j,:,_41r,{,Constructor,(,_,,,__,:,Float,;,_3,,,_G_,:,Array,[,Array,[,Array,[,Array,[,Float,,,73,],,,7,],,,0B10,],,,0x8,],;,o,:,Array,[,Array,[,Int,,,05,],,,0115,],),{,},},Class,Mh,{,},<EOF>''',101))

    def test_427(self):
        self.assertTrue(TestLexer.test('''Class s{}Class s:c{Val _2:_6_;}Class s{Var $_:Array [Array [Array [Array [Boolean ,0x10],0B10],04],94];Var f_7_W,$_:i;}''','''Class,s,{,},Class,s,:,c,{,Val,_2,:,_6_,;,},Class,s,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x10,],,,0B10,],,,04,],,,94,],;,Var,f_7_W,,,$_,:,i,;,},<EOF>''',101))

    def test_428(self):
        self.assertTrue(TestLexer.test('''Class _:_{_8(){}Constructor (_,_b3_:Int ;_:Array [Array [Array [Float ,0b1],0B1],062];_,_,Gb:String ;g,_O4:_o;m8,_a:Float ;__,_:o_;d:__;A,_K,E3,x:Boolean ;_83,h0:String ;f_,X,_i,_:Float ){} }Class j{Var $6_,$_d:KB_x;$T(){Break ;}Destructor (){}Constructor (){}Destructor (){Var _:Array [Array [String ,0b1],0X24];}Val __:Array [Array [Array [Boolean ,0b1001010],0X24],9];Val Jq:String ;Val $_,$_wt6_X:Boolean ;$_(t:Array [Boolean ,0B11_1]){ {} }}Class _{}''','''Class,_,:,_,{,_8,(,),{,},Constructor,(,_,,,_b3_,:,Int,;,_,:,Array,[,Array,[,Array,[,Float,,,0b1,],,,0B1,],,,062,],;,_,,,_,,,Gb,:,String,;,g,,,_O4,:,_o,;,m8,,,_a,:,Float,;,__,,,_,:,o_,;,d,:,__,;,A,,,_K,,,E3,,,x,:,Boolean,;,_83,,,h0,:,String,;,f_,,,X,,,_i,,,_,:,Float,),{,},},Class,j,{,Var,$6_,,,$_d,:,KB_x,;,$T,(,),{,Break,;,},Destructor,(,),{,},Constructor,(,),{,},Destructor,(,),{,Var,_,:,Array,[,Array,[,String,,,0b1,],,,0X24,],;,},Val,__,:,Array,[,Array,[,Array,[,Boolean,,,0b1001010,],,,0X24,],,,9,],;,Val,Jq,:,String,;,Val,$_,,,$_wt6_X,:,Boolean,;,$_,(,t,:,Array,[,Boolean,,,0B111,],),{,{,},},},Class,_,{,},<EOF>''',101))

    def test_429(self):
        self.assertTrue(TestLexer.test('''Class _:t{$___Eh(__:Array [Array [Array [Array [Boolean ,82_3_5],073],6_6],84];sB,Et,_5_6,f88,w:p1C_6_c_32H;O1,_,_:Boolean ;B3:Array [Boolean ,84]){} }Class _1__9{Constructor (){Break ;}Var _:EJ;}''','''Class,_,:,t,{,$___Eh,(,__,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,8235,],,,073,],,,66,],,,84,],;,sB,,,Et,,,_5_6,,,f88,,,w,:,p1C_6_c_32H,;,O1,,,_,,,_,:,Boolean,;,B3,:,Array,[,Boolean,,,84,],),{,},},Class,_1__9,{,Constructor,(,),{,Break,;,},Var,_,:,EJ,;,},<EOF>''',101))

    def test_430(self):
        self.assertTrue(TestLexer.test('''Class ___{Val _7:q;Constructor (){Continue ;}Constructor (){ {{}{} }Break ;T82A::$g();} }Class w:W688{}Class Z8:s_{}Class ___{}''','''Class,___,{,Val,_7,:,q,;,Constructor,(,),{,Continue,;,},Constructor,(,),{,{,{,},{,},},Break,;,T82A,::,$g,(,),;,},},Class,w,:,W688,{,},Class,Z8,:,s_,{,},Class,___,{,},<EOF>''',101))

    def test_431(self):
        self.assertTrue(TestLexer.test('''Class V__96{}Class b:___{Constructor (){} }Class VO9_O{Constructor (_L_33:Int ;J,crt:Int ){}Destructor (){Break ;}Var BkC,$s,$L_2_7:Array [Array [Int ,55],0136];}''','''Class,V__96,{,},Class,b,:,___,{,Constructor,(,),{,},},Class,VO9_O,{,Constructor,(,_L_33,:,Int,;,J,,,crt,:,Int,),{,},Destructor,(,),{,Break,;,},Var,BkC,,,$s,,,$L_2_7,:,Array,[,Array,[,Int,,,55,],,,0136,],;,},<EOF>''',101))

    def test_432(self):
        self.assertTrue(TestLexer.test('''Class JKo_:mz{}Class _BF1{Destructor (){}Var X__,L__:Z;}Class e__:_{Constructor (_,d:Int ;TJ:Array [Array [Array [Array [String ,0b1_0_0],5],76],0b111011];_,_:_8Pn__3){} }''','''Class,JKo_,:,mz,{,},Class,_BF1,{,Destructor,(,),{,},Var,X__,,,L__,:,Z,;,},Class,e__,:,_,{,Constructor,(,_,,,d,:,Int,;,TJ,:,Array,[,Array,[,Array,[,Array,[,String,,,0b100,],,,5,],,,76,],,,0b111011,],;,_,,,_,:,_8Pn__3,),{,},},<EOF>''',101))

    def test_433(self):
        self.assertTrue(TestLexer.test('''Class _:__{Destructor (){}C7(Ma,_,rz:Float ;z:Array [String ,0X1_D6];_,p:Array [Array [Array [String ,03],02],0X55]){} }''','''Class,_,:,__,{,Destructor,(,),{,},C7,(,Ma,,,_,,,rz,:,Float,;,z,:,Array,[,String,,,0X1D6,],;,_,,,p,:,Array,[,Array,[,Array,[,String,,,03,],,,02,],,,0X55,],),{,},},<EOF>''',101))

    def test_434(self):
        self.assertTrue(TestLexer.test('''Class _:X{Constructor (_:Array [Array [String ,0XE5_25],01306];k:b_;m6:String ;U_,__F,_1HTb,v,_,o,fI48,_:_){} }Class _:W{}Class qU:___{Val q__:_;}Class _Op{Var $_:Boolean ;}''','''Class,_,:,X,{,Constructor,(,_,:,Array,[,Array,[,String,,,0XE525,],,,01306,],;,k,:,b_,;,m6,:,String,;,U_,,,__F,,,_1HTb,,,v,,,_,,,o,,,fI48,,,_,:,_,),{,},},Class,_,:,W,{,},Class,qU,:,___,{,Val,q__,:,_,;,},Class,_Op,{,Var,$_,:,Boolean,;,},<EOF>''',101))

    def test_435(self):
        self.assertTrue(TestLexer.test('''Class O:P{Constructor (Y_7:Array [Int ,04]){} }Class _1{Var $6_,$3,$_rN:Array [Array [Array [Array [Boolean ,0107],0x3A],6],1];Constructor (){}Val $8:Array [String ,0b11_1];}Class F{}''','''Class,O,:,P,{,Constructor,(,Y_7,:,Array,[,Int,,,04,],),{,},},Class,_1,{,Var,$6_,,,$3,,,$_rN,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0107,],,,0x3A,],,,6,],,,1,],;,Constructor,(,),{,},Val,$8,:,Array,[,String,,,0b111,],;,},Class,F,{,},<EOF>''',101))

    def test_436(self):
        self.assertTrue(TestLexer.test('''Class _:_9{}Class _{Constructor (_8k:Boolean ;q6:Array [Array [Array [Float ,74],05],07_11_2_6_11_1];x,_:_){}Val $E:Array [Boolean ,0X6];}''','''Class,_,:,_9,{,},Class,_,{,Constructor,(,_8k,:,Boolean,;,q6,:,Array,[,Array,[,Array,[,Float,,,74,],,,05,],,,071126111,],;,x,,,_,:,_,),{,},Val,$E,:,Array,[,Boolean,,,0X6,],;,},<EOF>''',101))

    def test_437(self):
        self.assertTrue(TestLexer.test('''Class _q_{$_(_:Array [String ,2];TMI7,p8_q:Array [Array [Array [Array [Array [Array [Array [Array [Float ,0B1],0x39],066],066],0b111],0b1_0],0X51],0x39]){} }''','''Class,_q_,{,$_,(,_,:,Array,[,String,,,2,],;,TMI7,,,p8_q,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1,],,,0x39,],,,066,],,,066,],,,0b111,],,,0b10,],,,0X51,],,,0x39,],),{,},},<EOF>''',101))

    def test_438(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class __5:_3_{Constructor (_:Array [Array [Float ,0X10],16];G,ucM_,_:String ;_K,_,_:Array [Array [Array [Array [Array [Boolean ,16],0X10],0b10],3],075]){} }''','''Class,_,:,_,{,},Class,__5,:,_3_,{,Constructor,(,_,:,Array,[,Array,[,Float,,,0X10,],,,16,],;,G,,,ucM_,,,_,:,String,;,_K,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,16,],,,0X10,],,,0b10,],,,3,],,,075,],),{,},},<EOF>''',101))

    def test_439(self):
        self.assertTrue(TestLexer.test('''Class q:o{Constructor (_4,_:B){}K(_p,V,_,A1__5,__:Boolean ;I2M,_,Qz:Float ;H:_61_;_:Array [String ,0B1010010];_1,_,I4:String ){} }Class j:__8{}Class B{}''','''Class,q,:,o,{,Constructor,(,_4,,,_,:,B,),{,},K,(,_p,,,V,,,_,,,A1__5,,,__,:,Boolean,;,I2M,,,_,,,Qz,:,Float,;,H,:,_61_,;,_,:,Array,[,String,,,0B1010010,],;,_1,,,_,,,I4,:,String,),{,},},Class,j,:,__8,{,},Class,B,{,},<EOF>''',101))

    def test_440(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){}Val $_d__:Array [Array [Boolean ,03],0B1];Constructor (_,__,_:Array [Array [Boolean ,0X54],0b11];g:Int ;w,e,M8,v,i:Array [Array [Boolean ,03_0],7];pU:_){} }''','''Class,_,{,Destructor,(,),{,},Val,$_d__,:,Array,[,Array,[,Boolean,,,03,],,,0B1,],;,Constructor,(,_,,,__,,,_,:,Array,[,Array,[,Boolean,,,0X54,],,,0b11,],;,g,:,Int,;,w,,,e,,,M8,,,v,,,i,:,Array,[,Array,[,Boolean,,,030,],,,7,],;,pU,:,_,),{,},},<EOF>''',101))

    def test_441(self):
        self.assertTrue(TestLexer.test('''Class _x{Constructor (_d7439s:Boolean ;h1:V0;L_:Int ){} }Class J0_:h{}Class __:C{Constructor (K,_9,_9,Cu:Float ){} }Class ZZ{}''','''Class,_x,{,Constructor,(,_d7439s,:,Boolean,;,h1,:,V0,;,L_,:,Int,),{,},},Class,J0_,:,h,{,},Class,__,:,C,{,Constructor,(,K,,,_9,,,_9,,,Cu,:,Float,),{,},},Class,ZZ,{,},<EOF>''',101))

    def test_442(self):
        self.assertTrue(TestLexer.test('''Class _:_{Var $00:Array [Int ,0b1110];S(_1_2Xc:Array [Boolean ,19]){} }Class _0{Var _:Array [Array [Boolean ,19],063];}Class _:_1{}''','''Class,_,:,_,{,Var,$00,:,Array,[,Int,,,0b1110,],;,S,(,_1_2Xc,:,Array,[,Boolean,,,19,],),{,},},Class,_0,{,Var,_,:,Array,[,Array,[,Boolean,,,19,],,,063,],;,},Class,_,:,_1,{,},<EOF>''',101))

    def test_443(self):
        self.assertTrue(TestLexer.test('''Class y5:N{$tl_(Z83_,_9hm3:Int ;_7_:Float ;_:Z;Ks_2:z;C:Int ;_:q2;_47,OD,_2_G:Float ){Val n:Array [Array [Array [Int ,0x2],0b10001],0x2];}Val KA_,_3R_,V__,_:Array [Boolean ,053];}Class F{}''','''Class,y5,:,N,{,$tl_,(,Z83_,,,_9hm3,:,Int,;,_7_,:,Float,;,_,:,Z,;,Ks_2,:,z,;,C,:,Int,;,_,:,q2,;,_47,,,OD,,,_2_G,:,Float,),{,Val,n,:,Array,[,Array,[,Array,[,Int,,,0x2,],,,0b10001,],,,0x2,],;,},Val,KA_,,,_3R_,,,V__,,,_,:,Array,[,Boolean,,,053,],;,},Class,F,{,},<EOF>''',101))

    def test_444(self):
        self.assertTrue(TestLexer.test('''Class UT{Destructor (){} }Class _:fQ{Destructor (){}Constructor (){} }Class _mu42_:j{}Class I{}Class _Rk:K{Destructor (){} }''','''Class,UT,{,Destructor,(,),{,},},Class,_,:,fQ,{,Destructor,(,),{,},Constructor,(,),{,},},Class,_mu42_,:,j,{,},Class,I,{,},Class,_Rk,:,K,{,Destructor,(,),{,},},<EOF>''',101))

    def test_445(self):
        self.assertTrue(TestLexer.test('''Class __Ri_:V{Val _6,Z4_N7:Array [Array [Array [Array [Array [Array [Array [Int ,1],9_179],0xF],0b10],0X1F],04],8];}''','''Class,__Ri_,:,V,{,Val,_6,,,Z4_N7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,1,],,,9179,],,,0xF,],,,0b10,],,,0X1F,],,,04,],,,8,],;,},<EOF>''',101))

    def test_446(self):
        self.assertTrue(TestLexer.test('''Class E_:qE7{}Class R:TC{}Class W{Val $_,Q:Array [Array [Array [Array [Array [Array [Array [Array [Float ,0X2],0x31],0B10],0x31],0X2],044],044],06];}''','''Class,E_,:,qE7,{,},Class,R,:,TC,{,},Class,W,{,Val,$_,,,Q,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X2,],,,0x31,],,,0B10,],,,0x31,],,,0X2,],,,044,],,,044,],,,06,],;,},<EOF>''',101))

    def test_447(self):
        self.assertTrue(TestLexer.test('''Class k7k8:hFW{Val O_Dx:Int ;Destructor (){}Constructor (B:Boolean ){}Destructor (){}Var $4,W,_,$_:Array [Array [Array [Array [Array [Array [Int ,0x20],2],0X4],65],65],0B1];}''','''Class,k7k8,:,hFW,{,Val,O_Dx,:,Int,;,Destructor,(,),{,},Constructor,(,B,:,Boolean,),{,},Destructor,(,),{,},Var,$4,,,W,,,_,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x20,],,,2,],,,0X4,],,,65,],,,65,],,,0B1,],;,},<EOF>''',101))

    def test_448(self):
        self.assertTrue(TestLexer.test('''Class bCv{}Class _3{_(M__:Array [Array [Array [Array [Int ,9],0b1001110],0b1001110],0X25]){}Val Ot:_e;Constructor (){}Var _35FC,$_,$_,_9:String ;}Class T_:g_3J{}Class b3{}''','''Class,bCv,{,},Class,_3,{,_,(,M__,:,Array,[,Array,[,Array,[,Array,[,Int,,,9,],,,0b1001110,],,,0b1001110,],,,0X25,],),{,},Val,Ot,:,_e,;,Constructor,(,),{,},Var,_35FC,,,$_,,,$_,,,_9,:,String,;,},Class,T_,:,g_3J,{,},Class,b3,{,},<EOF>''',101))

    def test_449(self):
        self.assertTrue(TestLexer.test('''Class V:_{}Class _{}Class S{$_(_:_;_,Pw:Array [String ,0136];_,I,mJ_,p:Array [Float ,0xF02_9];__M:Float ;_8S,R,M7P1,A,eI,bl3:Boolean ;__:Float ;H:_;_,_:J_1){Return ;} }''','''Class,V,:,_,{,},Class,_,{,},Class,S,{,$_,(,_,:,_,;,_,,,Pw,:,Array,[,String,,,0136,],;,_,,,I,,,mJ_,,,p,:,Array,[,Float,,,0xF029,],;,__M,:,Float,;,_8S,,,R,,,M7P1,,,A,,,eI,,,bl3,:,Boolean,;,__,:,Float,;,H,:,_,;,_,,,_,:,J_1,),{,Return,;,},},<EOF>''',101))

    def test_450(self):
        self.assertTrue(TestLexer.test('''Class __:Jq{Var $_,u:Array [Array [Array [Array [Array [Array [Float ,2],14],1_19],0X39],050],0102];}Class MD:_b_{Var $3m,$4:Array [Array [Array [Array [Array [Array [Array [Array [String ,0XC],0X39],0b1],6],0X88],03],0102],3_7233_0];}Class G{}''','''Class,__,:,Jq,{,Var,$_,,,u,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,2,],,,14,],,,119,],,,0X39,],,,050,],,,0102,],;,},Class,MD,:,_b_,{,Var,$3m,,,$4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0XC,],,,0X39,],,,0b1,],,,6,],,,0X88,],,,03,],,,0102,],,,372330,],;,},Class,G,{,},<EOF>''',101))

    def test_451(self):
        self.assertTrue(TestLexer.test('''Class _n:z7__R_f2_x{Constructor (){}Constructor (){} }Class M0{Val $_7,$2:Boolean ;}Class _:_{}Class _:s6{Val _z:Int ;}''','''Class,_n,:,z7__R_f2_x,{,Constructor,(,),{,},Constructor,(,),{,},},Class,M0,{,Val,$_7,,,$2,:,Boolean,;,},Class,_,:,_,{,},Class,_,:,s6,{,Val,_z,:,Int,;,},<EOF>''',101))

    def test_452(self):
        self.assertTrue(TestLexer.test('''Class v8e{}Class p7:__{}Class _{Val h,_5,$_:Array [Array [Array [String ,0x7E],024],01];Val $_:String ;Val V1a,$_:Int ;}''','''Class,v8e,{,},Class,p7,:,__,{,},Class,_,{,Val,h,,,_5,,,$_,:,Array,[,Array,[,Array,[,String,,,0x7E,],,,024,],,,01,],;,Val,$_,:,String,;,Val,V1a,,,$_,:,Int,;,},<EOF>''',101))

    def test_453(self):
        self.assertTrue(TestLexer.test('''Class Zi{Destructor (){Var r,uCe7:Float ;Val _k:String ;Break ;}Val V4:Boolean =!-O::$6._._();Constructor (){Val _,FG9_A_,_k_1:Int ;}Destructor (){ {} }Destructor (){} }''','''Class,Zi,{,Destructor,(,),{,Var,r,,,uCe7,:,Float,;,Val,_k,:,String,;,Break,;,},Val,V4,:,Boolean,=,!,-,O,::,$6,.,_,.,_,(,),;,Constructor,(,),{,Val,_,,,FG9_A_,,,_k_1,:,Int,;,},Destructor,(,),{,{,},},Destructor,(,),{,},},<EOF>''',101))

    def test_454(self):
        self.assertTrue(TestLexer.test('''Class m:R{Constructor (EW:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0X40],0x5],0X40],017],017],0b1_11111],3_81],0B110011],05535]){} }''','''Class,m,:,R,{,Constructor,(,EW,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X40,],,,0x5,],,,0X40,],,,017,],,,017,],,,0b111111,],,,381,],,,0B110011,],,,05535,],),{,},},<EOF>''',101))

    def test_455(self):
        self.assertTrue(TestLexer.test('''Class _{}Class cn5:Q{}Class _{Val F__,uCBlp23K:Array [Array [Array [Array [Array [Array [Array [Float ,94245],73],0B1010110],0B1],0x60],022],0x6];Destructor (){}Var _9:String ;Constructor (F_:String ;A,w,_34,_0:A;HK8O5_:_;W:Int ){}Var $_,y_:Boolean ;Var $co8:Array [Array [Array [Float ,0X62],03_2],0x7];}''','''Class,_,{,},Class,cn5,:,Q,{,},Class,_,{,Val,F__,,,uCBlp23K,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,94245,],,,73,],,,0B1010110,],,,0B1,],,,0x60,],,,022,],,,0x6,],;,Destructor,(,),{,},Var,_9,:,String,;,Constructor,(,F_,:,String,;,A,,,w,,,_34,,,_0,:,A,;,HK8O5_,:,_,;,W,:,Int,),{,},Var,$_,,,y_,:,Boolean,;,Var,$co8,:,Array,[,Array,[,Array,[,Float,,,0X62,],,,032,],,,0x7,],;,},<EOF>''',101))

    def test_456(self):
        self.assertTrue(TestLexer.test('''Class M:_{Constructor (Y0,J,_:Array [Int ,0x56];w:Int ;i8:Int ;Y5:_;_:Float ){} }Class cX:_37_{Var $5:Array [Array [Array [String ,0B1],0b1100],0x6_4];}Class _33{Constructor (n,r,_:Array [Array [Int ,0x56],0xD];_,w11_,o:_;__9i,X,___,Z__,m,_:Float ){} }Class _Kr_{Var c,$9:Boolean ;}''','''Class,M,:,_,{,Constructor,(,Y0,,,J,,,_,:,Array,[,Int,,,0x56,],;,w,:,Int,;,i8,:,Int,;,Y5,:,_,;,_,:,Float,),{,},},Class,cX,:,_37_,{,Var,$5,:,Array,[,Array,[,Array,[,String,,,0B1,],,,0b1100,],,,0x64,],;,},Class,_33,{,Constructor,(,n,,,r,,,_,:,Array,[,Array,[,Int,,,0x56,],,,0xD,],;,_,,,w11_,,,o,:,_,;,__9i,,,X,,,___,,,Z__,,,m,,,_,:,Float,),{,},},Class,_Kr_,{,Var,c,,,$9,:,Boolean,;,},<EOF>''',101))

    def test_457(self):
        self.assertTrue(TestLexer.test('''Class g_:__{Constructor (O,__:e;_:Float ;__8:_;Z:R){Break ;Return ;Continue ;} }Class c5:Z{Val XKQ,__7j:String ;$7(_:sT;Q91:String ){} }''','''Class,g_,:,__,{,Constructor,(,O,,,__,:,e,;,_,:,Float,;,__8,:,_,;,Z,:,R,),{,Break,;,Return,;,Continue,;,},},Class,c5,:,Z,{,Val,XKQ,,,__7j,:,String,;,$7,(,_,:,sT,;,Q91,:,String,),{,},},<EOF>''',101))

    def test_458(self):
        self.assertTrue(TestLexer.test('''Class _8:_4{Constructor (_:Int ;_:Array [Array [Int ,0B1],8]){} }Class __f{Val ___R7,$4_,L,_C7:Int ;}Class u__{}Class X____{}Class w{Destructor (){Val Me_:Int ;} }Class y_:d{}Class __5{Constructor (){} }''','''Class,_8,:,_4,{,Constructor,(,_,:,Int,;,_,:,Array,[,Array,[,Int,,,0B1,],,,8,],),{,},},Class,__f,{,Val,___R7,,,$4_,,,L,,,_C7,:,Int,;,},Class,u__,{,},Class,X____,{,},Class,w,{,Destructor,(,),{,Val,Me_,:,Int,;,},},Class,y_,:,d,{,},Class,__5,{,Constructor,(,),{,},},<EOF>''',101))

    def test_459(self):
        self.assertTrue(TestLexer.test('''Class q0h{Constructor (_:Int ;__:Array [Array [Array [Int ,3],057],0X8];C39:Boolean ;_i9,k,_:Array [Array [Float ,85_5_8],03]){} }''','''Class,q0h,{,Constructor,(,_,:,Int,;,__,:,Array,[,Array,[,Array,[,Int,,,3,],,,057,],,,0X8,],;,C39,:,Boolean,;,_i9,,,k,,,_,:,Array,[,Array,[,Float,,,8558,],,,03,],),{,},},<EOF>''',101))

    def test_460(self):
        self.assertTrue(TestLexer.test('''Class __:M_{Val $B_,$_____,_,_NF:Array [Boolean ,05_011];}Class __b{Val $_6:_;Constructor (){}Destructor (){} }''','''Class,__,:,M_,{,Val,$B_,,,$_____,,,_,,,_NF,:,Array,[,Boolean,,,05011,],;,},Class,__b,{,Val,$_6,:,_,;,Constructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_461(self):
        self.assertTrue(TestLexer.test('''Class _w{}Class __3{Var $_:Array [Array [Array [Array [String ,0X3],80],5],0xDE_B];Var $297:_;Val $2__M7943,$5Cc:Array [Array [Array [Boolean ,80],80],02];}Class _:oS{}''','''Class,_w,{,},Class,__3,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,String,,,0X3,],,,80,],,,5,],,,0xDEB,],;,Var,$297,:,_,;,Val,$2__M7943,,,$5Cc,:,Array,[,Array,[,Array,[,Boolean,,,80,],,,80,],,,02,],;,},Class,_,:,oS,{,},<EOF>''',101))

    def test_462(self):
        self.assertTrue(TestLexer.test('''Class A:__{}Class _:a1_0L{Constructor (){Continue ;Continue ;}Var $6,S,$3_8:Array [Boolean ,063];Constructor (){} }''','''Class,A,:,__,{,},Class,_,:,a1_0L,{,Constructor,(,),{,Continue,;,Continue,;,},Var,$6,,,S,,,$3_8,:,Array,[,Boolean,,,063,],;,Constructor,(,),{,},},<EOF>''',101))

    def test_463(self):
        self.assertTrue(TestLexer.test('''Class _m{Destructor (){}Constructor (e,_,_,k:Q;b_,g,j,_,S:Array [Array [Array [Array [Array [Array [String ,07_32],0X2D],0X7_4],0x4A],4],0x3_0];_pW:Array [Array [String ,4],073];_:Array [Array [Array [Array [Boolean ,0X2D],0B1100001],0xE7E],0X2D];_:U5KH;_5,D3,_:I){} }''','''Class,_m,{,Destructor,(,),{,},Constructor,(,e,,,_,,,_,,,k,:,Q,;,b_,,,g,,,j,,,_,,,S,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0732,],,,0X2D,],,,0X74,],,,0x4A,],,,4,],,,0x30,],;,_pW,:,Array,[,Array,[,String,,,4,],,,073,],;,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X2D,],,,0B1100001,],,,0xE7E,],,,0X2D,],;,_,:,U5KH,;,_5,,,D3,,,_,:,I,),{,},},<EOF>''',101))

    def test_464(self):
        self.assertTrue(TestLexer.test('''Class G_2_:K{}Class d{Constructor (U8,_,_6:g1;I7:Array [Array [Array [Array [String ,7_9],9],9],0b1]){}Var $K:Array [String ,02_1];}''','''Class,G_2_,:,K,{,},Class,d,{,Constructor,(,U8,,,_,,,_6,:,g1,;,I7,:,Array,[,Array,[,Array,[,Array,[,String,,,79,],,,9,],,,9,],,,0b1,],),{,},Var,$K,:,Array,[,String,,,021,],;,},<EOF>''',101))

    def test_465(self):
        self.assertTrue(TestLexer.test('''Class k:S5_{$1q_(U,_5,P,i3,_,_:_;I0:_y;_:_){} }Class __{Destructor (){Var _S__uA,_,A__:Array [Boolean ,052];}Var E,$_:String ;}Class r{}''','''Class,k,:,S5_,{,$1q_,(,U,,,_5,,,P,,,i3,,,_,,,_,:,_,;,I0,:,_y,;,_,:,_,),{,},},Class,__,{,Destructor,(,),{,Var,_S__uA,,,_,,,A__,:,Array,[,Boolean,,,052,],;,},Var,E,,,$_,:,String,;,},Class,r,{,},<EOF>''',101))

    def test_466(self):
        self.assertTrue(TestLexer.test('''Class _EH{Constructor (){}m(u_:a_;_,M:Int ;_:Boolean ){} }Class _:_{}Class _{Val _9_:Array [Array [Array [Float ,052],0X60],0B110];}''','''Class,_EH,{,Constructor,(,),{,},m,(,u_,:,a_,;,_,,,M,:,Int,;,_,:,Boolean,),{,},},Class,_,:,_,{,},Class,_,{,Val,_9_,:,Array,[,Array,[,Array,[,Float,,,052,],,,0X60,],,,0B110,],;,},<EOF>''',101))

    def test_467(self):
        self.assertTrue(TestLexer.test('''Class _V__{Val $A6,_:Array [Array [Array [Array [Float ,0x13],29_1],0B1011101],0B1];Val $__v:Array [Array [Array [Int ,69],07],69];}Class _{Constructor (){} }Class T_{Val $_:Int ;}Class _:q{}''','''Class,_V__,{,Val,$A6,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x13,],,,291,],,,0B1011101,],,,0B1,],;,Val,$__v,:,Array,[,Array,[,Array,[,Int,,,69,],,,07,],,,69,],;,},Class,_,{,Constructor,(,),{,},},Class,T_,{,Val,$_,:,Int,;,},Class,_,:,q,{,},<EOF>''',101))

    def test_468(self):
        self.assertTrue(TestLexer.test('''Class _A0:E6H_{Var _LI_s,Bw:Array [Array [Array [Array [Int ,0B1010100],0b101],031_3],0b1111];Var U:Array [Array [Boolean ,0b1],030];}''','''Class,_A0,:,E6H_,{,Var,_LI_s,,,Bw,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1010100,],,,0b101,],,,0313,],,,0b1111,],;,Var,U,:,Array,[,Array,[,Boolean,,,0b1,],,,030,],;,},<EOF>''',101))

    def test_469(self):
        self.assertTrue(TestLexer.test('''Class _9:_9{Var l_,$xU,$v5B,$_q,k:Array [Array [Array [Array [Array [Array [Array [Boolean ,22],0105],1],01],0B1],22],9_6];}Class h_{}''','''Class,_9,:,_9,{,Var,l_,,,$xU,,,$v5B,,,$_q,,,k,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,22,],,,0105,],,,1,],,,01,],,,0B1,],,,22,],,,96,],;,},Class,h_,{,},<EOF>''',101))

    def test_470(self):
        self.assertTrue(TestLexer.test('''Class _4:d__{Constructor (HWI,_:Array [Float ,0B101000];G,C:Array [Boolean ,06];__29:Boolean ;b,m7:Array [Array [Float ,0b1100000],0x19];uC:Array [Array [Int ,070],0b1100000];_1,D:Int ;n60:__;_,_:Float ;_:Float ){Break ;} }''','''Class,_4,:,d__,{,Constructor,(,HWI,,,_,:,Array,[,Float,,,0B101000,],;,G,,,C,:,Array,[,Boolean,,,06,],;,__29,:,Boolean,;,b,,,m7,:,Array,[,Array,[,Float,,,0b1100000,],,,0x19,],;,uC,:,Array,[,Array,[,Int,,,070,],,,0b1100000,],;,_1,,,D,:,Int,;,n60,:,__,;,_,,,_,:,Float,;,_,:,Float,),{,Break,;,},},<EOF>''',101))

    def test_471(self):
        self.assertTrue(TestLexer.test('''Class Qy:__e{Var $x,$_9,$_:Float ;$5(_V,_W,_h8,dI:Float ;G:Array [Array [Boolean ,47_981_7_11],03_7];_a:Int ;O:Array [Array [Int ,52],0B1];_,_2_,__,_,fJ:Array [Array [String ,0B111000],0b1100]){} }''','''Class,Qy,:,__e,{,Var,$x,,,$_9,,,$_,:,Float,;,$5,(,_V,,,_W,,,_h8,,,dI,:,Float,;,G,:,Array,[,Array,[,Boolean,,,47981711,],,,037,],;,_a,:,Int,;,O,:,Array,[,Array,[,Int,,,52,],,,0B1,],;,_,,,_2_,,,__,,,_,,,fJ,:,Array,[,Array,[,String,,,0B111000,],,,0b1100,],),{,},},<EOF>''',101))

    def test_472(self):
        self.assertTrue(TestLexer.test('''Class A{Constructor (__:f;__26,O5:Array [Array [Array [Array [Boolean ,80_4_4],0X48],1_8_78],0xA];_x2Cv,h____,NU,q:jh99_;i,_:Float ;H,l_,_:__h_s){} }''','''Class,A,{,Constructor,(,__,:,f,;,__26,,,O5,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,8044,],,,0X48,],,,1878,],,,0xA,],;,_x2Cv,,,h____,,,NU,,,q,:,jh99_,;,i,,,_,:,Float,;,H,,,l_,,,_,:,__h_s,),{,},},<EOF>''',101))

    def test_473(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (L,__Hx:__2;__8,G,M:_Vf;_9,_:f;iI,y_6_,w_:Array [Boolean ,07_4];_z__,Q__5d,__,_28,P:Int ;___,y,B:Float ;xX,_,__:Q_){} }''','''Class,_,{,Constructor,(,L,,,__Hx,:,__2,;,__8,,,G,,,M,:,_Vf,;,_9,,,_,:,f,;,iI,,,y_6_,,,w_,:,Array,[,Boolean,,,074,],;,_z__,,,Q__5d,,,__,,,_28,,,P,:,Int,;,___,,,y,,,B,:,Float,;,xX,,,_,,,__,:,Q_,),{,},},<EOF>''',101))

    def test_474(self):
        self.assertTrue(TestLexer.test('''Class h{$1Y(J:th;b:_1_){}Var $_:Array [Array [Array [Array [Array [Boolean ,0XB_8_96],17],0b1_0],07],0b1000011];$I(j98:c){} }''','''Class,h,{,$1Y,(,J,:,th,;,b,:,_1_,),{,},Var,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0XB896,],,,17,],,,0b10,],,,07,],,,0b1000011,],;,$I,(,j98,:,c,),{,},},<EOF>''',101))

    def test_475(self):
        self.assertTrue(TestLexer.test('''Class a{}Class _:g{Constructor (t,k,_,__1e,u:Array [String ,0b101110]){Continue ;Continue ;Val d:v_;} }Class _C5:_{Var _:Boolean ;}''','''Class,a,{,},Class,_,:,g,{,Constructor,(,t,,,k,,,_,,,__1e,,,u,:,Array,[,String,,,0b101110,],),{,Continue,;,Continue,;,Val,d,:,v_,;,},},Class,_C5,:,_,{,Var,_,:,Boolean,;,},<EOF>''',101))

    def test_476(self):
        self.assertTrue(TestLexer.test('''Class _:s{}Class _5:_4{}Class rU4_H59:J{Destructor (){Break ;} }Class Gic4A{}Class j1:B2{}Class p{Var C:Boolean ;}Class O:_0{}''','''Class,_,:,s,{,},Class,_5,:,_4,{,},Class,rU4_H59,:,J,{,Destructor,(,),{,Break,;,},},Class,Gic4A,{,},Class,j1,:,B2,{,},Class,p,{,Var,C,:,Boolean,;,},Class,O,:,_0,{,},<EOF>''',101))

    def test_477(self):
        self.assertTrue(TestLexer.test('''Class _E0:Pu_{Constructor (___:_;_0_:Array [Array [Array [String ,0b1],2],070];_7,W,UD_:Int ;_,H3e5:Array [String ,0b1]){} }Class y:f3{}''','''Class,_E0,:,Pu_,{,Constructor,(,___,:,_,;,_0_,:,Array,[,Array,[,Array,[,String,,,0b1,],,,2,],,,070,],;,_7,,,W,,,UD_,:,Int,;,_,,,H3e5,:,Array,[,String,,,0b1,],),{,},},Class,y,:,f3,{,},<EOF>''',101))

    def test_478(self):
        self.assertTrue(TestLexer.test('''Class B:V_{Val $b,H:Array [Int ,33];Constructor (sd,r,_M_C2:Array [Array [Float ,0b11000],0x21]){}Destructor (){ {} }Destructor (){Return ;} }Class _63:_W{}''','''Class,B,:,V_,{,Val,$b,,,H,:,Array,[,Int,,,33,],;,Constructor,(,sd,,,r,,,_M_C2,:,Array,[,Array,[,Float,,,0b11000,],,,0x21,],),{,},Destructor,(,),{,{,},},Destructor,(,),{,Return,;,},},Class,_63,:,_W,{,},<EOF>''',101))

    def test_479(self):
        self.assertTrue(TestLexer.test('''Class _:O5l{Var $G_:zJ;}Class _:_1_I_f{$O7y(_M9_3__:Float ;e,_,F_:Array [Int ,02]){}f(){}Destructor (){ {} }Var $7,_rUbL0:Array [String ,0x33];y(q,_b,___R_,_m__,LB:String ){} }Class _:__{}''','''Class,_,:,O5l,{,Var,$G_,:,zJ,;,},Class,_,:,_1_I_f,{,$O7y,(,_M9_3__,:,Float,;,e,,,_,,,F_,:,Array,[,Int,,,02,],),{,},f,(,),{,},Destructor,(,),{,{,},},Var,$7,,,_rUbL0,:,Array,[,String,,,0x33,],;,y,(,q,,,_b,,,___R_,,,_m__,,,LB,:,String,),{,},},Class,_,:,__,{,},<EOF>''',101))

    def test_480(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){ {}{Continue ;}Var _W:Array [Array [Array [Array [Array [Array [Array [String ,1],0b1],0x3],063],2],0b110010],0x1D_0];}Constructor (){} }Class _P:_9{}''','''Class,_,{,Destructor,(,),{,{,},{,Continue,;,},Var,_W,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,1,],,,0b1,],,,0x3,],,,063,],,,2,],,,0b110010,],,,0x1D0,],;,},Constructor,(,),{,},},Class,_P,:,_9,{,},<EOF>''',101))

    def test_481(self):
        self.assertTrue(TestLexer.test('''Class g:_n{Destructor (){_9b_::$9K();Return ;} }Class m:A_{Val $5_u,$C,$_,$3,$1,_P_:Float ;}Class j:_5_{Var $W_,o_o,$_C9,$_J:Vrj;}''','''Class,g,:,_n,{,Destructor,(,),{,_9b_,::,$9K,(,),;,Return,;,},},Class,m,:,A_,{,Val,$5_u,,,$C,,,$_,,,$3,,,$1,,,_P_,:,Float,;,},Class,j,:,_5_,{,Var,$W_,,,o_o,,,$_C9,,,$_J,:,Vrj,;,},<EOF>''',101))

    def test_482(self):
        self.assertTrue(TestLexer.test('''Class T{Var x5,$733V,_,_,u_2__:_;Var $7,$7,x,gO7,_,$__:Array [Int ,19];OJ(){Val a:Array [Boolean ,0B101101];Break ;} }''','''Class,T,{,Var,x5,,,$733V,,,_,,,_,,,u_2__,:,_,;,Var,$7,,,$7,,,x,,,gO7,,,_,,,$__,:,Array,[,Int,,,19,],;,OJ,(,),{,Val,a,:,Array,[,Boolean,,,0B101101,],;,Break,;,},},<EOF>''',101))

    def test_483(self):
        self.assertTrue(TestLexer.test('''Class __{Constructor (_,EH_,_:Array [Array [Boolean ,31],010];W,_7U4,U:nn_8e;I,D,_J,_IE:String ;H9:W_){}Destructor (){Return ;} }''','''Class,__,{,Constructor,(,_,,,EH_,,,_,:,Array,[,Array,[,Boolean,,,31,],,,010,],;,W,,,_7U4,,,U,:,nn_8e,;,I,,,D,,,_J,,,_IE,:,String,;,H9,:,W_,),{,},Destructor,(,),{,Return,;,},},<EOF>''',101))

    def test_484(self):
        self.assertTrue(TestLexer.test('''Class M_:_3{}Class Bi__n{Constructor (__:_){} }Class _{Var LZ,$_b9:Array [Array [Array [Float ,49],4_4_1_5_7_2],0b11];}''','''Class,M_,:,_3,{,},Class,Bi__n,{,Constructor,(,__,:,_,),{,},},Class,_,{,Var,LZ,,,$_b9,:,Array,[,Array,[,Array,[,Float,,,49,],,,441572,],,,0b11,],;,},<EOF>''',101))

    def test_485(self):
        self.assertTrue(TestLexer.test('''Class _YF{Destructor (){Var E:Float ;Break ;}Var $_,$2,_,$1,_Z,$K:Array [Int ,97];Destructor (){} }Class _:_2T6{Destructor (){} }''','''Class,_YF,{,Destructor,(,),{,Var,E,:,Float,;,Break,;,},Var,$_,,,$2,,,_,,,$1,,,_Z,,,$K,:,Array,[,Int,,,97,],;,Destructor,(,),{,},},Class,_,:,_2T6,{,Destructor,(,),{,},},<EOF>''',101))

    def test_486(self):
        self.assertTrue(TestLexer.test('''Class WK:_{Var __,$_1vDh3b8:__;_3(_,_:t;jN:Array [Array [Array [Float ,0b101101],0x55],0b101101]){Continue ;} }Class f{Val $_,_o_XZ82E____,$____:String ;T(kx5:Array [Array [Array [Array [Int ,57],9],051],0X2B];GC:Int ){} }''','''Class,WK,:,_,{,Var,__,,,$_1vDh3b8,:,__,;,_3,(,_,,,_,:,t,;,jN,:,Array,[,Array,[,Array,[,Float,,,0b101101,],,,0x55,],,,0b101101,],),{,Continue,;,},},Class,f,{,Val,$_,,,_o_XZ82E____,,,$____,:,String,;,T,(,kx5,:,Array,[,Array,[,Array,[,Array,[,Int,,,57,],,,9,],,,051,],,,0X2B,],;,GC,:,Int,),{,},},<EOF>''',101))

    def test_487(self):
        self.assertTrue(TestLexer.test('''Class __JvL__8:_e8_{$D(){} }Class dI8:T{u(v:Float ;Q_5T25M____:Array [Int ,0X6];_:Array [Array [Boolean ,0XEC9F],0b110100]){ {Continue ;} }}Class _f{}''','''Class,__JvL__8,:,_e8_,{,$D,(,),{,},},Class,dI8,:,T,{,u,(,v,:,Float,;,Q_5T25M____,:,Array,[,Int,,,0X6,],;,_,:,Array,[,Array,[,Boolean,,,0XEC9F,],,,0b110100,],),{,{,Continue,;,},},},Class,_f,{,},<EOF>''',101))

    def test_488(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _9_{$h(t81,__,_S5_i,_W485,rQ:Float ;M,Q08,_L:_;_,E5,___:_4;_:_;J_:K_;p:Array [String ,06];fk:_28){} }''','''Class,_,{,},Class,_9_,{,$h,(,t81,,,__,,,_S5_i,,,_W485,,,rQ,:,Float,;,M,,,Q08,,,_L,:,_,;,_,,,E5,,,___,:,_4,;,_,:,_,;,J_,:,K_,;,p,:,Array,[,String,,,06,],;,fk,:,_28,),{,},},<EOF>''',101))

    def test_489(self):
        self.assertTrue(TestLexer.test('''Class f:_7_7__{Val $_:Int ;Var $9_,$2__,Vw__4,$J7,_:___r;Var $_,$_,_,_,m_,_,$6_,$3,$2_,G,$x:Array [Array [Array [Array [Array [Array [Float ,0b111110],0B1001100],34],3_4_1],0XE],0b1];}''','''Class,f,:,_7_7__,{,Val,$_,:,Int,;,Var,$9_,,,$2__,,,Vw__4,,,$J7,,,_,:,___r,;,Var,$_,,,$_,,,_,,,_,,,m_,,,_,,,$6_,,,$3,,,$2_,,,G,,,$x,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b111110,],,,0B1001100,],,,34,],,,341,],,,0XE,],,,0b1,],;,},<EOF>''',101))

    def test_490(self):
        self.assertTrue(TestLexer.test('''Class K{}Class B{Constructor (ZJ,_,f,_,O:Float ;_,_0_:_P5J;_b_:Array [String ,23]){ {}__::$9_m();}Destructor (){} }''','''Class,K,{,},Class,B,{,Constructor,(,ZJ,,,_,,,f,,,_,,,O,:,Float,;,_,,,_0_,:,_P5J,;,_b_,:,Array,[,String,,,23,],),{,{,},__,::,$9_m,(,),;,},Destructor,(,),{,},},<EOF>''',101))

    def test_491(self):
        self.assertTrue(TestLexer.test('''Class __{}Class _H{Val __o_,$_E,_,$Z,_,$_:Array [String ,0X55];}Class L6_{Val $_9X,P,$v:Array [Array [Array [String ,0xE_8A],0b1011010],07];}Class _{Var h322:Boolean ;}Class ZF:_{}Class j:__ci6{}Class jA{}Class __:_{}Class _{}''','''Class,__,{,},Class,_H,{,Val,__o_,,,$_E,,,_,,,$Z,,,_,,,$_,:,Array,[,String,,,0X55,],;,},Class,L6_,{,Val,$_9X,,,P,,,$v,:,Array,[,Array,[,Array,[,String,,,0xE8A,],,,0b1011010,],,,07,],;,},Class,_,{,Var,h322,:,Boolean,;,},Class,ZF,:,_,{,},Class,j,:,__ci6,{,},Class,jA,{,},Class,__,:,_,{,},Class,_,{,},<EOF>''',101))

    def test_492(self):
        self.assertTrue(TestLexer.test('''Class _1_T{Var $99:Float ;Val $_,_f1_Y,_:Array [Array [Array [Array [Float ,04],0x4],02_5_7_1],0143];Val L39_:Array [Array [Float ,0X44],4];Constructor (){}Val $_:_;}''','''Class,_1_T,{,Var,$99,:,Float,;,Val,$_,,,_f1_Y,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,04,],,,0x4,],,,02571,],,,0143,],;,Val,L39_,:,Array,[,Array,[,Float,,,0X44,],,,4,],;,Constructor,(,),{,},Val,$_,:,_,;,},<EOF>''',101))

    def test_493(self):
        self.assertTrue(TestLexer.test('''Class _n{Constructor (J,_2,A:Array [Array [Array [Array [Array [String ,7_5_08],29],07_2],0X3D],06];_s:Array [Array [Array [Float ,0X57],6],0x61]){Break ;} }Class _:_{Destructor (){Var _aW:P_;} }Class f{Var $F22:Int ;}''','''Class,_n,{,Constructor,(,J,,,_2,,,A,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,7508,],,,29,],,,072,],,,0X3D,],,,06,],;,_s,:,Array,[,Array,[,Array,[,Float,,,0X57,],,,6,],,,0x61,],),{,Break,;,},},Class,_,:,_,{,Destructor,(,),{,Var,_aW,:,P_,;,},},Class,f,{,Var,$F22,:,Int,;,},<EOF>''',101))

    def test_494(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (_S_:_;_:Int ;_5:Array [Float ,0116];_2:H){}Var $xo,w:Int ;Var B6c:V;Constructor (){Break ;} }''','''Class,_,:,_,{,Constructor,(,_S_,:,_,;,_,:,Int,;,_5,:,Array,[,Float,,,0116,],;,_2,:,H,),{,},Var,$xo,,,w,:,Int,;,Var,B6c,:,V,;,Constructor,(,),{,Break,;,},},<EOF>''',101))

    def test_495(self):
        self.assertTrue(TestLexer.test('''Class w:_{Constructor (_Al7,_,k,gm:__L;__67:String ;_,_:Array [Array [Array [Array [Array [Array [Boolean ,03_1],4],0X28],014],0X51_4],0b1010100];_:String ){} }Class _q{}''','''Class,w,:,_,{,Constructor,(,_Al7,,,_,,,k,,,gm,:,__L,;,__67,:,String,;,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,031,],,,4,],,,0X28,],,,014,],,,0X514,],,,0b1010100,],;,_,:,String,),{,},},Class,_q,{,},<EOF>''',101))

    def test_496(self):
        self.assertTrue(TestLexer.test('''Class _6:_{Constructor (){} }Class W:e_0_{Var $_T0:Array [Boolean ,0B1];}Class __{}Class _{Destructor (){} }Class _5{Var __:Int ;}''','''Class,_6,:,_,{,Constructor,(,),{,},},Class,W,:,e_0_,{,Var,$_T0,:,Array,[,Boolean,,,0B1,],;,},Class,__,{,},Class,_,{,Destructor,(,),{,},},Class,_5,{,Var,__,:,Int,;,},<EOF>''',101))

    def test_497(self):
        self.assertTrue(TestLexer.test('''Class z{}Class Bq:c{Constructor (W:_____;_,_h6,__:Array [Array [Array [Array [Array [Array [Float ,0x9],0XF],0b111011],2_50],0x9],0XB6];_d:m_;W8X:vJ){} }''','''Class,z,{,},Class,Bq,:,c,{,Constructor,(,W,:,_____,;,_,,,_h6,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x9,],,,0XF,],,,0b111011,],,,250,],,,0x9,],,,0XB6,],;,_d,:,m_,;,W8X,:,vJ,),{,},},<EOF>''',101))

    def test_498(self):
        self.assertTrue(TestLexer.test('''Class _{Val $_:_kP_e2;}Class mzKl{Constructor (_,s:_;E,M:g;_2_,z,_i,___,Z,_,D:Array [Array [Float ,5],0X43]){} }''','''Class,_,{,Val,$_,:,_kP_e2,;,},Class,mzKl,{,Constructor,(,_,,,s,:,_,;,E,,,M,:,g,;,_2_,,,z,,,_i,,,___,,,Z,,,_,,,D,:,Array,[,Array,[,Float,,,5,],,,0X43,],),{,},},<EOF>''',101))

    def test_499(self):
        self.assertTrue(TestLexer.test('''Class __{$0(XZ:Int ;_a:String ;a_,W:_12_;_:r_){Var h6_,Jr:Boolean ;} }Class b{fA(){}Destructor (){}Val $C_,_,q,_:Array [Array [Boolean ,48],04];}Class __:_l_{}''','''Class,__,{,$0,(,XZ,:,Int,;,_a,:,String,;,a_,,,W,:,_12_,;,_,:,r_,),{,Var,h6_,,,Jr,:,Boolean,;,},},Class,b,{,fA,(,),{,},Destructor,(,),{,},Val,$C_,,,_,,,q,,,_,:,Array,[,Array,[,Boolean,,,48,],,,04,],;,},Class,__,:,_l_,{,},<EOF>''',101))

    def test_500(self):
        self.assertTrue(TestLexer.test('''Class g_{}Class _{Constructor (O:Array [Int ,0x9];_,_:aU00;P,_f,w:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0B1011010],7_0],0X51],03_5],05],84],0124_5],05]){}Var $v,$3:__;}''','''Class,g_,{,},Class,_,{,Constructor,(,O,:,Array,[,Int,,,0x9,],;,_,,,_,:,aU00,;,P,,,_f,,,w,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1011010,],,,70,],,,0X51,],,,035,],,,05,],,,84,],,,01245,],,,05,],),{,},Var,$v,,,$3,:,__,;,},<EOF>''',101))

    def test_501(self):
        self.assertTrue(TestLexer.test('''Class _7{$_(_,_:String ;Q8W_,R_O:b2){}Constructor (_x_:Array [Array [String ,0X11],0B1010100]){Break ;Continue ;}_(K_:_){Return ;}_(wO,L:a){Break ;} }''','''Class,_7,{,$_,(,_,,,_,:,String,;,Q8W_,,,R_O,:,b2,),{,},Constructor,(,_x_,:,Array,[,Array,[,String,,,0X11,],,,0B1010100,],),{,Break,;,Continue,;,},_,(,K_,:,_,),{,Return,;,},_,(,wO,,,L,:,a,),{,Break,;,},},<EOF>''',101))

    def test_502(self):
        self.assertTrue(TestLexer.test('''Class f1u38{Val __:Array [Array [Array [Array [String ,02_6_5],0b1],0120],0b1];Destructor (){} }Class _{}Class n_v:_mkL8K_2A6_{}''','''Class,f1u38,{,Val,__,:,Array,[,Array,[,Array,[,Array,[,String,,,0265,],,,0b1,],,,0120,],,,0b1,],;,Destructor,(,),{,},},Class,_,{,},Class,n_v,:,_mkL8K_2A6_,{,},<EOF>''',101))

    def test_503(self):
        self.assertTrue(TestLexer.test('''Class P:_i0{}Class a5{Var $__4N:Float ;}Class _:_{_4oGU(j_:Array [Array [Array [Array [String ,4],0B1],0b1001100],6]){Break ;} }''','''Class,P,:,_i0,{,},Class,a5,{,Var,$__4N,:,Float,;,},Class,_,:,_,{,_4oGU,(,j_,:,Array,[,Array,[,Array,[,Array,[,String,,,4,],,,0B1,],,,0b1001100,],,,6,],),{,Break,;,},},<EOF>''',101))

    def test_504(self):
        self.assertTrue(TestLexer.test('''Class sC:e_{}Class X:_o{Val D_,U:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,45],0X13],6],45],0x4A],0B1011111],053],0X13],0B1];}''','''Class,sC,:,e_,{,},Class,X,:,_o,{,Val,D_,,,U,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,45,],,,0X13,],,,6,],,,45,],,,0x4A,],,,0B1011111,],,,053,],,,0X13,],,,0B1,],;,},<EOF>''',101))

    def test_505(self):
        self.assertTrue(TestLexer.test('''Class _{$k(_,_:Array [Boolean ,0B1];_mhO_17:Boolean ;o5,nE7:gy;K,__h,n_:Array [Float ,0X3A]){} }Class _{}Class _v0_{Val $5,$7r___,We01Q_t_9,X:Array [Float ,41];}''','''Class,_,{,$k,(,_,,,_,:,Array,[,Boolean,,,0B1,],;,_mhO_17,:,Boolean,;,o5,,,nE7,:,gy,;,K,,,__h,,,n_,:,Array,[,Float,,,0X3A,],),{,},},Class,_,{,},Class,_v0_,{,Val,$5,,,$7r___,,,We01Q_t_9,,,X,:,Array,[,Float,,,41,],;,},<EOF>''',101))

    def test_506(self):
        self.assertTrue(TestLexer.test('''Class _2_:V5__R{}Class _:_2{Var _,I81u3P,d,____,$T4L,_,$8:Array [Boolean ,74];$K(k:Array [Array [Array [Boolean ,0X19],2],0B1_1011];_:Float ){} }''','''Class,_2_,:,V5__R,{,},Class,_,:,_2,{,Var,_,,,I81u3P,,,d,,,____,,,$T4L,,,_,,,$8,:,Array,[,Boolean,,,74,],;,$K,(,k,:,Array,[,Array,[,Array,[,Boolean,,,0X19,],,,2,],,,0B11011,],;,_,:,Float,),{,},},<EOF>''',101))

    def test_507(self):
        self.assertTrue(TestLexer.test('''Class n{}Class x_s:C_2{}Class Y58__C:E{lj(s1_2_F83,_:Array [Array [Array [Array [String ,0b110],0B1],0B11],0X47];__:Int ;_q,__VT,wu:_6){}Constructor (_:Array [Array [Array [String ,0x7],0X47],06]){Break ;} }Class _q:CV7_{}''','''Class,n,{,},Class,x_s,:,C_2,{,},Class,Y58__C,:,E,{,lj,(,s1_2_F83,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b110,],,,0B1,],,,0B11,],,,0X47,],;,__,:,Int,;,_q,,,__VT,,,wu,:,_6,),{,},Constructor,(,_,:,Array,[,Array,[,Array,[,String,,,0x7,],,,0X47,],,,06,],),{,Break,;,},},Class,_q,:,CV7_,{,},<EOF>''',101))

    def test_508(self):
        self.assertTrue(TestLexer.test('''Class _:_{Var $_,_:Float ;Constructor (){}Var _9,v:Array [Float ,6_4];Var U_3Q:Int ;Val n6,pg:String ;Var C:String ;}''','''Class,_,:,_,{,Var,$_,,,_,:,Float,;,Constructor,(,),{,},Var,_9,,,v,:,Array,[,Float,,,64,],;,Var,U_3Q,:,Int,;,Val,n6,,,pg,:,String,;,Var,C,:,String,;,},<EOF>''',101))

    def test_509(self):
        self.assertTrue(TestLexer.test('''Class _{Val $8:F;Constructor (v:R){}Constructor (e_Qp,_6Q_:Boolean ;_6,v:Int ){} }Class S:f3e{Var $8w:Int ;}Class t2:R{}''','''Class,_,{,Val,$8,:,F,;,Constructor,(,v,:,R,),{,},Constructor,(,e_Qp,,,_6Q_,:,Boolean,;,_6,,,v,:,Int,),{,},},Class,S,:,f3e,{,Var,$8w,:,Int,;,},Class,t2,:,R,{,},<EOF>''',101))

    def test_510(self):
        self.assertTrue(TestLexer.test('''Class _{_n9M(z:x___;__:Array [Int ,0b10];_3,Z:n7__){_::$8_();}Var _2c,$__:_;Val $__7:String ;}Class b{Destructor (){} }''','''Class,_,{,_n9M,(,z,:,x___,;,__,:,Array,[,Int,,,0b10,],;,_3,,,Z,:,n7__,),{,_,::,$8_,(,),;,},Var,_2c,,,$__,:,_,;,Val,$__7,:,String,;,},Class,b,{,Destructor,(,),{,},},<EOF>''',101))

    def test_511(self):
        self.assertTrue(TestLexer.test('''Class B_{$_H(_:U;_:Array [Array [Float ,070],1]){} }Class _7D{_4(P:Array [Int ,1];_A:Array [Array [Int ,070],070];e:Boolean ){} }Class b4{}Class __my:_h_{}''','''Class,B_,{,$_H,(,_,:,U,;,_,:,Array,[,Array,[,Float,,,070,],,,1,],),{,},},Class,_7D,{,_4,(,P,:,Array,[,Int,,,1,],;,_A,:,Array,[,Array,[,Int,,,070,],,,070,],;,e,:,Boolean,),{,},},Class,b4,{,},Class,__my,:,_h_,{,},<EOF>''',101))

    def test_512(self):
        self.assertTrue(TestLexer.test('''Class o:_{Destructor (){}__0(__6l_61:Array [String ,0b10];N,l:Array [Int ,28]){Return ;}$_(_D,_:Float ;_,_,_,m5,_,__:Array [Array [Int ,0xF],0b1]){} }''','''Class,o,:,_,{,Destructor,(,),{,},__0,(,__6l_61,:,Array,[,String,,,0b10,],;,N,,,l,:,Array,[,Int,,,28,],),{,Return,;,},$_,(,_D,,,_,:,Float,;,_,,,_,,,_,,,m5,,,_,,,__,:,Array,[,Array,[,Int,,,0xF,],,,0b1,],),{,},},<EOF>''',101))

    def test_513(self):
        self.assertTrue(TestLexer.test('''Class A{Constructor (__,_3,z,I:Int ;_,C7,E:l){}Val $_44s2v:Boolean ;Val $6,$0n,$8:_;Val r:w1_;}Class g{$P1(){} }Class _{}Class li{}Class h:_3_{}Class q:_{Destructor (){} }''','''Class,A,{,Constructor,(,__,,,_3,,,z,,,I,:,Int,;,_,,,C7,,,E,:,l,),{,},Val,$_44s2v,:,Boolean,;,Val,$6,,,$0n,,,$8,:,_,;,Val,r,:,w1_,;,},Class,g,{,$P1,(,),{,},},Class,_,{,},Class,li,{,},Class,h,:,_3_,{,},Class,q,:,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_514(self):
        self.assertTrue(TestLexer.test('''Class e:_h{}Class h4tS17{Constructor (J,Q,_2_,_,c__,_:Array [Array [Int ,0X3_8],0b1_00];s_N,__,h5,uOi:Array [Float ,0x37]){} }Class m{_(){} }''','''Class,e,:,_h,{,},Class,h4tS17,{,Constructor,(,J,,,Q,,,_2_,,,_,,,c__,,,_,:,Array,[,Array,[,Int,,,0X38,],,,0b100,],;,s_N,,,__,,,h5,,,uOi,:,Array,[,Float,,,0x37,],),{,},},Class,m,{,_,(,),{,},},<EOF>''',101))

    def test_515(self):
        self.assertTrue(TestLexer.test('''Class c04_J{Constructor (mn,__j61_,j:String ;_,_:Array [String ,14];Fi,f,K_IQ6sE,p:Float ){}Destructor (){}Constructor (R,N_:Array [Array [Array [Array [String ,0x7],0656],0b1010101],034]){}$2_(h2:String ;_:Array [Array [String ,01_1_4],05_4]){} }''','''Class,c04_J,{,Constructor,(,mn,,,__j61_,,,j,:,String,;,_,,,_,:,Array,[,String,,,14,],;,Fi,,,f,,,K_IQ6sE,,,p,:,Float,),{,},Destructor,(,),{,},Constructor,(,R,,,N_,:,Array,[,Array,[,Array,[,Array,[,String,,,0x7,],,,0656,],,,0b1010101,],,,034,],),{,},$2_,(,h2,:,String,;,_,:,Array,[,Array,[,String,,,0114,],,,054,],),{,},},<EOF>''',101))

    def test_516(self):
        self.assertTrue(TestLexer.test('''Class _:_1{$2_Y_U(_i:P;_:Boolean ;c_h,d_E,l_,_:_;G_:I7___rxN;__8,_1,gV5_,n,_6:Int ;u:Float ;K_3_,__9,O,__r,_b:_9;h:hh_6_;_c_8,z:Float ){} }''','''Class,_,:,_1,{,$2_Y_U,(,_i,:,P,;,_,:,Boolean,;,c_h,,,d_E,,,l_,,,_,:,_,;,G_,:,I7___rxN,;,__8,,,_1,,,gV5_,,,n,,,_6,:,Int,;,u,:,Float,;,K_3_,,,__9,,,O,,,__r,,,_b,:,_9,;,h,:,hh_6_,;,_c_8,,,z,:,Float,),{,},},<EOF>''',101))

    def test_517(self):
        self.assertTrue(TestLexer.test('''Class _b{Destructor (){Return ;}Constructor (){Continue ;Break ;Val w,C:F4;}Var _2:Array [String ,56];Val $__:Array [Array [Boolean ,04],9];Val $_,d,$8_:Array [Boolean ,56];_(_L,x9,n:Float ;j:__7;M_,__x_,S,q:Array [Array [Array [String ,0XB],2_707],0b1001111]){ {} }}Class _p{Destructor (){} }''','''Class,_b,{,Destructor,(,),{,Return,;,},Constructor,(,),{,Continue,;,Break,;,Val,w,,,C,:,F4,;,},Var,_2,:,Array,[,String,,,56,],;,Val,$__,:,Array,[,Array,[,Boolean,,,04,],,,9,],;,Val,$_,,,d,,,$8_,:,Array,[,Boolean,,,56,],;,_,(,_L,,,x9,,,n,:,Float,;,j,:,__7,;,M_,,,__x_,,,S,,,q,:,Array,[,Array,[,Array,[,String,,,0XB,],,,2707,],,,0b1001111,],),{,{,},},},Class,_p,{,Destructor,(,),{,},},<EOF>''',101))

    def test_518(self):
        self.assertTrue(TestLexer.test('''Class S:w_29{}Class z3:Rf{Destructor (){} }Class J:X{Destructor (){ {} }$__(_,O5_z5,_X,zf:P;_:Boolean ;_,A,__8M:Array [Float ,0B11_0_11_1_00]){}on(m4,_9_:Array [Array [Array [Array [Array [Int ,0B10],28],0X25],28],05];I___:Array [Array [Int ,0B1_0_0],0B100000];o_G,g___,_01T0,fH_4_:Array [String ,4_921]){} }Class l{$8(){} }''','''Class,S,:,w_29,{,},Class,z3,:,Rf,{,Destructor,(,),{,},},Class,J,:,X,{,Destructor,(,),{,{,},},$__,(,_,,,O5_z5,,,_X,,,zf,:,P,;,_,:,Boolean,;,_,,,A,,,__8M,:,Array,[,Float,,,0B11011100,],),{,},on,(,m4,,,_9_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B10,],,,28,],,,0X25,],,,28,],,,05,],;,I___,:,Array,[,Array,[,Int,,,0B100,],,,0B100000,],;,o_G,,,g___,,,_01T0,,,fH_4_,:,Array,[,String,,,4921,],),{,},},Class,l,{,$8,(,),{,},},<EOF>''',101))

    def test_519(self):
        self.assertTrue(TestLexer.test('''Class _P5_6:k{_(__,gG:String ;A8,J__8___t5,__:String ){Return ;Return ;} }Class P{}Class _:u9{Destructor (){} }''','''Class,_P5_6,:,k,{,_,(,__,,,gG,:,String,;,A8,,,J__8___t5,,,__,:,String,),{,Return,;,Return,;,},},Class,P,{,},Class,_,:,u9,{,Destructor,(,),{,},},<EOF>''',101))

    def test_520(self):
        self.assertTrue(TestLexer.test('''Class o83:___6{Constructor (V_:String ;t6H2P32F,_:Array [Array [Boolean ,0b1011101],0b1011101]){}Var $_4,$_,_TS:_232;_(R6G,m:Array [Array [Array [Boolean ,9_3],0xD],0B10111]){_::$80();} }''','''Class,o83,:,___6,{,Constructor,(,V_,:,String,;,t6H2P32F,,,_,:,Array,[,Array,[,Boolean,,,0b1011101,],,,0b1011101,],),{,},Var,$_4,,,$_,,,_TS,:,_232,;,_,(,R6G,,,m,:,Array,[,Array,[,Array,[,Boolean,,,93,],,,0xD,],,,0B10111,],),{,_,::,$80,(,),;,},},<EOF>''',101))

    def test_521(self):
        self.assertTrue(TestLexer.test('''Class O{Val $__wN,$o:Array [Array [Array [Array [String ,0141],5],0XF6],0B10_10];Constructor (){}Destructor (){} }''','''Class,O,{,Val,$__wN,,,$o,:,Array,[,Array,[,Array,[,Array,[,String,,,0141,],,,5,],,,0XF6,],,,0B1010,],;,Constructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_522(self):
        self.assertTrue(TestLexer.test('''Class __:_48{Destructor (){}Val $__,__:String ;}Class I{$_r1n(){Var m_s:Boolean ;}$1h(){Continue ;} }Class _:h{}Class _{}Class N__9:_{}Class L816:T_{}Class _:_{Var $_:_;_(){ {} }}''','''Class,__,:,_48,{,Destructor,(,),{,},Val,$__,,,__,:,String,;,},Class,I,{,$_r1n,(,),{,Var,m_s,:,Boolean,;,},$1h,(,),{,Continue,;,},},Class,_,:,h,{,},Class,_,{,},Class,N__9,:,_,{,},Class,L816,:,T_,{,},Class,_,:,_,{,Var,$_,:,_,;,_,(,),{,{,},},},<EOF>''',101))

    def test_523(self):
        self.assertTrue(TestLexer.test('''Class _:_{___L(_,Vu,Auw8h:o){}Constructor (){}Constructor (V05_l,__9:Boolean ;_n,___,OE_,o_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,13],0b1001100],13],1],036],036],0X4_5],036],013_5],0X7]){} }Class _:__7{}Class _1w3_{}Class A{$8(){} }Class _:C{Val _U3,__,$k,$_,_h,__Mo_:_;}''','''Class,_,:,_,{,___L,(,_,,,Vu,,,Auw8h,:,o,),{,},Constructor,(,),{,},Constructor,(,V05_l,,,__9,:,Boolean,;,_n,,,___,,,OE_,,,o_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,13,],,,0b1001100,],,,13,],,,1,],,,036,],,,036,],,,0X45,],,,036,],,,0135,],,,0X7,],),{,},},Class,_,:,__7,{,},Class,_1w3_,{,},Class,A,{,$8,(,),{,},},Class,_,:,C,{,Val,_U3,,,__,,,$k,,,$_,,,_h,,,__Mo_,:,_,;,},<EOF>''',101))

    def test_524(self):
        self.assertTrue(TestLexer.test('''Class M2_p_{Constructor (_:Array [Array [Array [Array [Array [Array [String ,02],0X46],0X46],03],0X9AB],056_1];o6,d:w;_,m_:Boolean ){}$e0(){ {Return ;{} }} }Class __{Constructor (){} }Class a3_0:_b{}''','''Class,M2_p_,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,02,],,,0X46,],,,0X46,],,,03,],,,0X9AB,],,,0561,],;,o6,,,d,:,w,;,_,,,m_,:,Boolean,),{,},$e0,(,),{,{,Return,;,{,},},},},Class,__,{,Constructor,(,),{,},},Class,a3_0,:,_b,{,},<EOF>''',101))

    def test_525(self):
        self.assertTrue(TestLexer.test('''Class B{}Class _7{Var j3_6_:Array [Array [Array [Array [Array [Int ,8_4_735_5_7_3],0x18],10],04_350],03_1];}Class __{}''','''Class,B,{,},Class,_7,{,Var,j3_6_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,84735573,],,,0x18,],,,10,],,,04350,],,,031,],;,},Class,__,{,},<EOF>''',101))

    def test_526(self):
        self.assertTrue(TestLexer.test('''Class H{$_87(_j:Array [Int ,0xB_2_4]){} }Class u{}Class ___{}Class _ek{Val Bp0,E:Array [Float ,02];}Class p{}Class J{}Class _{}''','''Class,H,{,$_87,(,_j,:,Array,[,Int,,,0xB24,],),{,},},Class,u,{,},Class,___,{,},Class,_ek,{,Val,Bp0,,,E,:,Array,[,Float,,,02,],;,},Class,p,{,},Class,J,{,},Class,_,{,},<EOF>''',101))

    def test_527(self):
        self.assertTrue(TestLexer.test('''Class A_R{Var PJd,_D:t;Constructor (Sq_:L4;g:Array [Float ,0X28];_C,_9H50:Int ;O_3K_,_,N_K:Boolean ;b:m7){} }Class Z46:T{}''','''Class,A_R,{,Var,PJd,,,_D,:,t,;,Constructor,(,Sq_,:,L4,;,g,:,Array,[,Float,,,0X28,],;,_C,,,_9H50,:,Int,;,O_3K_,,,_,,,N_K,:,Boolean,;,b,:,m7,),{,},},Class,Z46,:,T,{,},<EOF>''',101))

    def test_528(self):
        self.assertTrue(TestLexer.test('''Class _4S:S{}Class u2:V{Constructor (c,a,_,x0:Boolean ;_,G9g,_IJ25_,B2_,g__:Array [Int ,0X22];_,_l:String ;_7,_0G,z,_4p:M;R__4,_Qw3:w){} }''','''Class,_4S,:,S,{,},Class,u2,:,V,{,Constructor,(,c,,,a,,,_,,,x0,:,Boolean,;,_,,,G9g,,,_IJ25_,,,B2_,,,g__,:,Array,[,Int,,,0X22,],;,_,,,_l,:,String,;,_7,,,_0G,,,z,,,_4p,:,M,;,R__4,,,_Qw3,:,w,),{,},},<EOF>''',101))

    def test_529(self):
        self.assertTrue(TestLexer.test('''Class E{Var $o:String ;}Class _6r{Var U:k_;Var UL,$__,$u_3,$_,$0,$p6:Array [Array [String ,0b1000101],0b1_0];}Class __:_{}''','''Class,E,{,Var,$o,:,String,;,},Class,_6r,{,Var,U,:,k_,;,Var,UL,,,$__,,,$u_3,,,$_,,,$0,,,$p6,:,Array,[,Array,[,String,,,0b1000101,],,,0b10,],;,},Class,__,:,_,{,},<EOF>''',101))

    def test_530(self):
        self.assertTrue(TestLexer.test('''Class w_u50{$57_8(){} }Class _{}Class Z:__{}Class P:_{Constructor (v1_:_;n:Array [String ,0X41];V:Array [Array [Array [Array [String ,07],0X4E8_D],0B10],0X41];_O_d_,d1,P:__TE;B_9:Boolean ;_:String ;__,_t1,M,f,_,_0,___2,_yw0:q){} }''','''Class,w_u50,{,$57_8,(,),{,},},Class,_,{,},Class,Z,:,__,{,},Class,P,:,_,{,Constructor,(,v1_,:,_,;,n,:,Array,[,String,,,0X41,],;,V,:,Array,[,Array,[,Array,[,Array,[,String,,,07,],,,0X4E8D,],,,0B10,],,,0X41,],;,_O_d_,,,d1,,,P,:,__TE,;,B_9,:,Boolean,;,_,:,String,;,__,,,_t1,,,M,,,f,,,_,,,_0,,,___2,,,_yw0,:,q,),{,},},<EOF>''',101))

    def test_531(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class w{Val N:_;_(___,_:String ;x:Array [Int ,48_93];_6G,_8:m_1;S_,_:String ;s,W,K,_s:j_t_;Y:Array [Int ,0b1_0];R:Int ;k__,_:Array [Array [Int ,0XDE_EE],0B1];__,W:Int ;L,_:R_){}$___X0(){}Val $3,$C:_;Var ll:_03;}''','''Class,_,:,_,{,},Class,w,{,Val,N,:,_,;,_,(,___,,,_,:,String,;,x,:,Array,[,Int,,,4893,],;,_6G,,,_8,:,m_1,;,S_,,,_,:,String,;,s,,,W,,,K,,,_s,:,j_t_,;,Y,:,Array,[,Int,,,0b10,],;,R,:,Int,;,k__,,,_,:,Array,[,Array,[,Int,,,0XDEEE,],,,0B1,],;,__,,,W,:,Int,;,L,,,_,:,R_,),{,},$___X0,(,),{,},Val,$3,,,$C,:,_,;,Var,ll,:,_03,;,},<EOF>''',101))

    def test_532(self):
        self.assertTrue(TestLexer.test('''Class _7_{$_(ILVM6__I,v,_7:_x;_,__,_:String ;_:Int ;_,j:Array [Array [Array [Array [Array [Array [Array [Boolean ,0b100111],057],04],30],0x40],0x40],30];_eN4:U_7;_4,a_gwA:__){} }''','''Class,_7_,{,$_,(,ILVM6__I,,,v,,,_7,:,_x,;,_,,,__,,,_,:,String,;,_,:,Int,;,_,,,j,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b100111,],,,057,],,,04,],,,30,],,,0x40,],,,0x40,],,,30,],;,_eN4,:,U_7,;,_4,,,a_gwA,:,__,),{,},},<EOF>''',101))

    def test_533(self):
        self.assertTrue(TestLexer.test('''Class r9{$X(_1__,_u,_e_6,mt_,U_:Vz_8;_:Array [Int ,065];_:Boolean ;_7_rL:Array [Float ,01_2];_3:Boolean ){Continue ;}Var $_:Boolean ;}Class C:GQ{Constructor (){K::$c.C._Y();Continue ;}Constructor (_,JL:Float ){}Destructor (){} }''','''Class,r9,{,$X,(,_1__,,,_u,,,_e_6,,,mt_,,,U_,:,Vz_8,;,_,:,Array,[,Int,,,065,],;,_,:,Boolean,;,_7_rL,:,Array,[,Float,,,012,],;,_3,:,Boolean,),{,Continue,;,},Var,$_,:,Boolean,;,},Class,C,:,GQ,{,Constructor,(,),{,K,::,$c,.,C,.,_Y,(,),;,Continue,;,},Constructor,(,_,,,JL,:,Float,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_534(self):
        self.assertTrue(TestLexer.test('''Class U{}Class T{Val p_,W,$7:v;U(){}Val NA:Float ;$_(){Break ;Val _R:Array [Array [Array [Array [Float ,0x59],0b11_0_0],4],0B1010011];}Val $L,$_,Jn,j,gI6,__,$_,$_:Array [String ,0x3];}Class bW{}''','''Class,U,{,},Class,T,{,Val,p_,,,W,,,$7,:,v,;,U,(,),{,},Val,NA,:,Float,;,$_,(,),{,Break,;,Val,_R,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x59,],,,0b1100,],,,4,],,,0B1010011,],;,},Val,$L,,,$_,,,Jn,,,j,,,gI6,,,__,,,$_,,,$_,:,Array,[,String,,,0x3,],;,},Class,bW,{,},<EOF>''',101))

    def test_535(self):
        self.assertTrue(TestLexer.test('''Class _4{Constructor (p,_:Z;m,_FG:Array [String ,9_872];_z:Int ;E,d_F8____,h3Cf53:Boolean ;n:h_A00u1_){} }Class _{}''','''Class,_4,{,Constructor,(,p,,,_,:,Z,;,m,,,_FG,:,Array,[,String,,,9872,],;,_z,:,Int,;,E,,,d_F8____,,,h3Cf53,:,Boolean,;,n,:,h_A00u1_,),{,},},Class,_,{,},<EOF>''',101))

    def test_536(self):
        self.assertTrue(TestLexer.test('''Class _i{Constructor (_0:Array [String ,0x9];_,_,m:String ;_B_j,S9,_:_;b_:Array [Array [Array [Array [Array [Array [Float ,14],4_8],9_9],0X14],0b1000010],062]){Continue ;} }''','''Class,_i,{,Constructor,(,_0,:,Array,[,String,,,0x9,],;,_,,,_,,,m,:,String,;,_B_j,,,S9,,,_,:,_,;,b_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,14,],,,48,],,,99,],,,0X14,],,,0b1000010,],,,062,],),{,Continue,;,},},<EOF>''',101))

    def test_537(self):
        self.assertTrue(TestLexer.test('''Class __L2Jm0_:q8{}Class _{}Class J_:__I{Destructor (){Var _:Int ;} }Class _:__{Val $_,$eJ,_,_:Array [Array [Float ,02],0xD0];}''','''Class,__L2Jm0_,:,q8,{,},Class,_,{,},Class,J_,:,__I,{,Destructor,(,),{,Var,_,:,Int,;,},},Class,_,:,__,{,Val,$_,,,$eJ,,,_,,,_,:,Array,[,Array,[,Float,,,02,],,,0xD0,],;,},<EOF>''',101))

    def test_538(self):
        self.assertTrue(TestLexer.test('''Class jB{}Class F60i:WxmM{Constructor (__:_k){} }Class n_3c{$_f_6C(z,f,___G_,_e,_5,Uf_,y_38__:String ;ik:String ){Continue ;}Constructor (_:_;p,___:String ){Break ;} }''','''Class,jB,{,},Class,F60i,:,WxmM,{,Constructor,(,__,:,_k,),{,},},Class,n_3c,{,$_f_6C,(,z,,,f,,,___G_,,,_e,,,_5,,,Uf_,,,y_38__,:,String,;,ik,:,String,),{,Continue,;,},Constructor,(,_,:,_,;,p,,,___,:,String,),{,Break,;,},},<EOF>''',101))

    def test_539(self):
        self.assertTrue(TestLexer.test('''Class T:js_1892{Var $G:aS;}Class n7:a_{}Class vK_{$3v(_,___5:Int ;_,J_:Array [Array [Array [String ,21],0x28],0X3]){Var _n,_w,h:_;Break ;} }''','''Class,T,:,js_1892,{,Var,$G,:,aS,;,},Class,n7,:,a_,{,},Class,vK_,{,$3v,(,_,,,___5,:,Int,;,_,,,J_,:,Array,[,Array,[,Array,[,String,,,21,],,,0x28,],,,0X3,],),{,Var,_n,,,_w,,,h,:,_,;,Break,;,},},<EOF>''',101))

    def test_540(self):
        self.assertTrue(TestLexer.test('''Class u2w7I:_y{$7_0_(_44D,_:Float ){Break ;}$___u(){} }Class _{}Class __:U{Var $71:String ;Var _H,$g__05:Array [Array [Boolean ,0x3],0b1000010];Val $__:Int ;}''','''Class,u2w7I,:,_y,{,$7_0_,(,_44D,,,_,:,Float,),{,Break,;,},$___u,(,),{,},},Class,_,{,},Class,__,:,U,{,Var,$71,:,String,;,Var,_H,,,$g__05,:,Array,[,Array,[,Boolean,,,0x3,],,,0b1000010,],;,Val,$__,:,Int,;,},<EOF>''',101))

    def test_541(self):
        self.assertTrue(TestLexer.test('''Class x080__:f{}Class _2{Destructor (){} }Class _C:S{}Class b7_{Var $TF_,$84_,_I,D:String ;}Class _:__Y_{Constructor (_,_3:Array [Float ,53];w_:String ){ {Val K,__,x1:Int ;} }}''','''Class,x080__,:,f,{,},Class,_2,{,Destructor,(,),{,},},Class,_C,:,S,{,},Class,b7_,{,Var,$TF_,,,$84_,,,_I,,,D,:,String,;,},Class,_,:,__Y_,{,Constructor,(,_,,,_3,:,Array,[,Float,,,53,],;,w_,:,String,),{,{,Val,K,,,__,,,x1,:,Int,;,},},},<EOF>''',101))

    def test_542(self):
        self.assertTrue(TestLexer.test('''Class _:s{}Class aIL:H{Val $e:Array [String ,0104];}Class H:c{}Class C{}Class f:k_{Constructor (){Break ;}Val $_:r_;}''','''Class,_,:,s,{,},Class,aIL,:,H,{,Val,$e,:,Array,[,String,,,0104,],;,},Class,H,:,c,{,},Class,C,{,},Class,f,:,k_,{,Constructor,(,),{,Break,;,},Val,$_,:,r_,;,},<EOF>''',101))

    def test_543(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_C:Array [Array [Array [Array [Array [Float ,3],02],0B10],3],0X24]){}Var h,v:Array [Array [Float ,0x57],25_25_7];}''','''Class,_,{,Constructor,(,_C,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,3,],,,02,],,,0B10,],,,3,],,,0X24,],),{,},Var,h,,,v,:,Array,[,Array,[,Float,,,0x57,],,,25257,],;,},<EOF>''',101))

    def test_544(self):
        self.assertTrue(TestLexer.test('''Class z8t4_{g__3_(S:n;_:Array [Array [String ,077],0x3];A,Y:String ;_9D_G,s:Array [String ,0b1000101];_:Array [String ,03];m,_,I,d9,pA3o,n7,_:Array [String ,0x6_E];_:Array [Array [Array [Int ,0X7],01_0_72],1]){} }''','''Class,z8t4_,{,g__3_,(,S,:,n,;,_,:,Array,[,Array,[,String,,,077,],,,0x3,],;,A,,,Y,:,String,;,_9D_G,,,s,:,Array,[,String,,,0b1000101,],;,_,:,Array,[,String,,,03,],;,m,,,_,,,I,,,d9,,,pA3o,,,n7,,,_,:,Array,[,String,,,0x6E,],;,_,:,Array,[,Array,[,Array,[,Int,,,0X7,],,,01072,],,,1,],),{,},},<EOF>''',101))

    def test_545(self):
        self.assertTrue(TestLexer.test('''Class x:Z{}Class f:P__{}Class m5:__{$_x(X,G,pt,_,v,i5,e,udM0,c7,_9_:Array [Array [Array [Array [Array [String ,0B1],0b11_01],03376_76],9],0B1]){} }''','''Class,x,:,Z,{,},Class,f,:,P__,{,},Class,m5,:,__,{,$_x,(,X,,,G,,,pt,,,_,,,v,,,i5,,,e,,,udM0,,,c7,,,_9_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,0b1101,],,,0337676,],,,9,],,,0B1,],),{,},},<EOF>''',101))

    def test_546(self):
        self.assertTrue(TestLexer.test('''Class __5d:i_{Val $8f,$___1,$4,_B:Array [Array [Array [Array [Array [String ,5_726],0B1],01_7_13],0X9],0B1_11];}Class S5:R{}Class s:E{}Class xy:_23{Destructor (){} }''','''Class,__5d,:,i_,{,Val,$8f,,,$___1,,,$4,,,_B,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,5726,],,,0B1,],,,01713,],,,0X9,],,,0B111,],;,},Class,S5,:,R,{,},Class,s,:,E,{,},Class,xy,:,_23,{,Destructor,(,),{,},},<EOF>''',101))

    def test_547(self):
        self.assertTrue(TestLexer.test('''Class M{}Class _p850J:_3s{}Class Y{}Class _:_5g0X{Tp(__:Array [Array [Array [Boolean ,81],0B1100010],81];B,_gN:Array [Int ,05];Af_,_:Int ;_4_:q2){Continue ;} }''','''Class,M,{,},Class,_p850J,:,_3s,{,},Class,Y,{,},Class,_,:,_5g0X,{,Tp,(,__,:,Array,[,Array,[,Array,[,Boolean,,,81,],,,0B1100010,],,,81,],;,B,,,_gN,:,Array,[,Int,,,05,],;,Af_,,,_,:,Int,;,_4_,:,q2,),{,Continue,;,},},<EOF>''',101))

    def test_548(self):
        self.assertTrue(TestLexer.test('''Class _:e{Var $9,$YT5:Array [Array [Array [Array [Array [Array [Array [String ,0B10110],0B1],0B10110],0X9],0x88],58],0x4E];}Class H_:bm{}Class y_0i{Constructor (){}Val $_W:Array [Boolean ,58];}''','''Class,_,:,e,{,Var,$9,,,$YT5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B10110,],,,0B1,],,,0B10110,],,,0X9,],,,0x88,],,,58,],,,0x4E,],;,},Class,H_,:,bm,{,},Class,y_0i,{,Constructor,(,),{,},Val,$_W,:,Array,[,Boolean,,,58,],;,},<EOF>''',101))

    def test_549(self):
        self.assertTrue(TestLexer.test('''Class i_{$__4(_62,_,y9,l_:_1L;_,_C_:Array [String ,02];_:_8;_:bs;gh:Array [String ,01];J:Array [String ,63_1_04]){}K_o7_(p04_,_5o,_8__:a_;b_,n:Array [String ,0X18]){} }''','''Class,i_,{,$__4,(,_62,,,_,,,y9,,,l_,:,_1L,;,_,,,_C_,:,Array,[,String,,,02,],;,_,:,_8,;,_,:,bs,;,gh,:,Array,[,String,,,01,],;,J,:,Array,[,String,,,63104,],),{,},K_o7_,(,p04_,,,_5o,,,_8__,:,a_,;,b_,,,n,:,Array,[,String,,,0X18,],),{,},},<EOF>''',101))

    def test_550(self):
        self.assertTrue(TestLexer.test('''Class _p744{Destructor (){} }Class V{Var l9:Array [String ,0B1];}Class g_6:_A{}Class _y_:_{Var $q7_:i;}Class _:el5{Var _:I;Var $Q_,$_8,$_:Array [Array [Boolean ,0132],0x16];}''','''Class,_p744,{,Destructor,(,),{,},},Class,V,{,Var,l9,:,Array,[,String,,,0B1,],;,},Class,g_6,:,_A,{,},Class,_y_,:,_,{,Var,$q7_,:,i,;,},Class,_,:,el5,{,Var,_,:,I,;,Var,$Q_,,,$_8,,,$_,:,Array,[,Array,[,Boolean,,,0132,],,,0x16,],;,},<EOF>''',101))

    def test_551(self):
        self.assertTrue(TestLexer.test('''Class N23T{}Class l4S9:__{Val $3,$_:Array [Array [Boolean ,0XC_E],1];}Class __:g_{Val $8:String ;Val _1,$_,_:v_E4l;Val _:String ;}''','''Class,N23T,{,},Class,l4S9,:,__,{,Val,$3,,,$_,:,Array,[,Array,[,Boolean,,,0XCE,],,,1,],;,},Class,__,:,g_,{,Val,$8,:,String,;,Val,_1,,,$_,,,_,:,v_E4l,;,Val,_,:,String,;,},<EOF>''',101))

    def test_552(self):
        self.assertTrue(TestLexer.test('''Class q_{Val $5:String ;Val b:Array [Array [String ,0B1],0x2_6];}Class p8_c1{Var $ZLr5:Array [Array [String ,13],0b11];}''','''Class,q_,{,Val,$5,:,String,;,Val,b,:,Array,[,Array,[,String,,,0B1,],,,0x26,],;,},Class,p8_c1,{,Var,$ZLr5,:,Array,[,Array,[,String,,,13,],,,0b11,],;,},<EOF>''',101))

    def test_553(self):
        self.assertTrue(TestLexer.test('''Class J:_76Q8_{$_V(f,_,_0,__:Int ;wl__3g,T,i4_s,_:Array [Boolean ,0B1_0];_,q6Y_7:Int ;T,_5L71:Array [Array [Float ,054_6_4],81]){} }Class _97{}''','''Class,J,:,_76Q8_,{,$_V,(,f,,,_,,,_0,,,__,:,Int,;,wl__3g,,,T,,,i4_s,,,_,:,Array,[,Boolean,,,0B10,],;,_,,,q6Y_7,:,Int,;,T,,,_5L71,:,Array,[,Array,[,Float,,,05464,],,,81,],),{,},},Class,_97,{,},<EOF>''',101))

    def test_554(self):
        self.assertTrue(TestLexer.test('''Class _:F{}Class j{Constructor (_j_:Int ;V:Boolean ;g,_40_y_:ek6;W,Zv_:Array [Array [Int ,24],42]){}Val $1N,$_:Array [Boolean ,42];}''','''Class,_,:,F,{,},Class,j,{,Constructor,(,_j_,:,Int,;,V,:,Boolean,;,g,,,_40_y_,:,ek6,;,W,,,Zv_,:,Array,[,Array,[,Int,,,24,],,,42,],),{,},Val,$1N,,,$_,:,Array,[,Boolean,,,42,],;,},<EOF>''',101))

    def test_555(self):
        self.assertTrue(TestLexer.test('''Class Rs:Oy{Destructor (){} }Class XB_{}Class N:_B9__{Val $__,$74W:Boolean ;}Class G_TI:__{Constructor (__:String ;_,E,__,G0:Array [Array [Float ,0x4],433];L:Array [Boolean ,01_1_1];_Px,_:Array [Array [Array [Array [Float ,0b1],78],0B1],0126]){} }Class L{}Class __:s8{}''','''Class,Rs,:,Oy,{,Destructor,(,),{,},},Class,XB_,{,},Class,N,:,_B9__,{,Val,$__,,,$74W,:,Boolean,;,},Class,G_TI,:,__,{,Constructor,(,__,:,String,;,_,,,E,,,__,,,G0,:,Array,[,Array,[,Float,,,0x4,],,,433,],;,L,:,Array,[,Boolean,,,0111,],;,_Px,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,78,],,,0B1,],,,0126,],),{,},},Class,L,{,},Class,__,:,s8,{,},<EOF>''',101))

    def test_556(self):
        self.assertTrue(TestLexer.test('''Class _:X{}Class K:A{Destructor (){}Constructor (y,_6_8,_,A__0:Array [Int ,5];_G,_:_4L){} }Class _:G7{}Class _t{Var i,_0,__:Int ;}Class F{Constructor (_a:Boolean ){Val _:String ;_::$7._.Er.Y_._().h_();} }''','''Class,_,:,X,{,},Class,K,:,A,{,Destructor,(,),{,},Constructor,(,y,,,_6_8,,,_,,,A__0,:,Array,[,Int,,,5,],;,_G,,,_,:,_4L,),{,},},Class,_,:,G7,{,},Class,_t,{,Var,i,,,_0,,,__,:,Int,;,},Class,F,{,Constructor,(,_a,:,Boolean,),{,Val,_,:,String,;,_,::,$7,.,_,.,Er,.,Y_,.,_,(,),.,h_,(,),;,},},<EOF>''',101))

    def test_557(self):
        self.assertTrue(TestLexer.test('''Class a_{Constructor (_,__i8_,_U_9Q:String ){}Var $_,$2E_,$bYl:Array [Array [Array [String ,3_07_5_9],77],7];}''','''Class,a_,{,Constructor,(,_,,,__i8_,,,_U_9Q,:,String,),{,},Var,$_,,,$2E_,,,$bYl,:,Array,[,Array,[,Array,[,String,,,30759,],,,77,],,,7,],;,},<EOF>''',101))

    def test_558(self):
        self.assertTrue(TestLexer.test('''Class _Y0_7:_{Var $9_,_315_u9,$80Ts,_l:Array [Array [Boolean ,0B1],0x38];$3(b6,A_,stc,B:Array [String ,36]){}Val _B____:Int ;Val __:x_CsP;Destructor (){} }Class _{}''','''Class,_Y0_7,:,_,{,Var,$9_,,,_315_u9,,,$80Ts,,,_l,:,Array,[,Array,[,Boolean,,,0B1,],,,0x38,],;,$3,(,b6,,,A_,,,stc,,,B,:,Array,[,String,,,36,],),{,},Val,_B____,:,Int,;,Val,__,:,x_CsP,;,Destructor,(,),{,},},Class,_,{,},<EOF>''',101))

    def test_559(self):
        self.assertTrue(TestLexer.test('''Class C:_{Val f,_,__j:Array [Int ,5];Destructor (){} }Class _:Vq{}Class l{}Class B:r{Val g,___:Boolean ;Val ulV__aj,nu8:c4_;}Class _8__1E_n70_{}''','''Class,C,:,_,{,Val,f,,,_,,,__j,:,Array,[,Int,,,5,],;,Destructor,(,),{,},},Class,_,:,Vq,{,},Class,l,{,},Class,B,:,r,{,Val,g,,,___,:,Boolean,;,Val,ulV__aj,,,nu8,:,c4_,;,},Class,_8__1E_n70_,{,},<EOF>''',101))

    def test_560(self):
        self.assertTrue(TestLexer.test('''Class _37{}Class aT{Constructor (__,_,P:Boolean ;L_,x,_6C:Boolean ){Break ;}$1(_,_,_l:Array [String ,1];_:Array [Boolean ,0x1E]){} }''','''Class,_37,{,},Class,aT,{,Constructor,(,__,,,_,,,P,:,Boolean,;,L_,,,x,,,_6C,:,Boolean,),{,Break,;,},$1,(,_,,,_,,,_l,:,Array,[,String,,,1,],;,_,:,Array,[,Boolean,,,0x1E,],),{,},},<EOF>''',101))

    def test_561(self):
        self.assertTrue(TestLexer.test('''Class _{Val _b8:Array [Array [Array [Float ,0X2E],0B1100000],0x56];Constructor (l6Q,y,__1Q_,_:Boolean ;_:U){} }Class o71{}''','''Class,_,{,Val,_b8,:,Array,[,Array,[,Array,[,Float,,,0X2E,],,,0B1100000,],,,0x56,],;,Constructor,(,l6Q,,,y,,,__1Q_,,,_,:,Boolean,;,_,:,U,),{,},},Class,o71,{,},<EOF>''',101))

    def test_562(self):
        self.assertTrue(TestLexer.test('''Class k:_{F(Q8_,B:Boolean ;S,_6_,d:_;Sg7_6D:Array [Array [Array [Array [Array [Boolean ,050],85],0x10],0x55],03_0_6];_0,_WI,_,__,W,X__G1:Array [Array [Boolean ,9],037];_,K_:X6;E,S,E,_1F:Array [Array [Array [Float ,0x55],0X9_D],0b1000101]){} }Class KW{}''','''Class,k,:,_,{,F,(,Q8_,,,B,:,Boolean,;,S,,,_6_,,,d,:,_,;,Sg7_6D,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,050,],,,85,],,,0x10,],,,0x55,],,,0306,],;,_0,,,_WI,,,_,,,__,,,W,,,X__G1,:,Array,[,Array,[,Boolean,,,9,],,,037,],;,_,,,K_,:,X6,;,E,,,S,,,E,,,_1F,:,Array,[,Array,[,Array,[,Float,,,0x55,],,,0X9D,],,,0b1000101,],),{,},},Class,KW,{,},<EOF>''',101))

    def test_563(self):
        self.assertTrue(TestLexer.test('''Class _{}Class vF:_e{}Class rbzRRq91:R0_0{Constructor (_9n8S,c__:Array [Boolean ,0X3_A_7B];_:Array [Array [String ,0B111011],0B1];C,__,M,_i:Float ;F_:Array [Array [Array [Array [Array [Boolean ,67],67],0b1101],0X43],67]){} }Class _{}''','''Class,_,{,},Class,vF,:,_e,{,},Class,rbzRRq91,:,R0_0,{,Constructor,(,_9n8S,,,c__,:,Array,[,Boolean,,,0X3A7B,],;,_,:,Array,[,Array,[,String,,,0B111011,],,,0B1,],;,C,,,__,,,M,,,_i,:,Float,;,F_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,67,],,,67,],,,0b1101,],,,0X43,],,,67,],),{,},},Class,_,{,},<EOF>''',101))

    def test_564(self):
        self.assertTrue(TestLexer.test('''Class M{Constructor (a:Boolean ){Continue ;} }Class ACh{Val $_,$1,w__,e24,__:Array [Array [Array [Array [Float ,0XE],29],29],0XDE];}''','''Class,M,{,Constructor,(,a,:,Boolean,),{,Continue,;,},},Class,ACh,{,Val,$_,,,$1,,,w__,,,e24,,,__,:,Array,[,Array,[,Array,[,Array,[,Float,,,0XE,],,,29,],,,29,],,,0XDE,],;,},<EOF>''',101))

    def test_565(self):
        self.assertTrue(TestLexer.test('''Class _5{Destructor (){}Var $38:Array [Array [String ,9_88],0X2];Var $36,$_,ge:Array [Array [Boolean ,0B10_1],0B1010000];}''','''Class,_5,{,Destructor,(,),{,},Var,$38,:,Array,[,Array,[,String,,,988,],,,0X2,],;,Var,$36,,,$_,,,ge,:,Array,[,Array,[,Boolean,,,0B101,],,,0B1010000,],;,},<EOF>''',101))

    def test_566(self):
        self.assertTrue(TestLexer.test('''Class _:T{Constructor (ha5yn_:Array [Int ,72];__,P4:Array [Array [Array [Int ,0b1],0B10_1_1_1],010]){Continue ;}Val _,$c,PM1:Array [String ,0xF_3F];Val H:Array [Array [String ,72],0b1011100];}''','''Class,_,:,T,{,Constructor,(,ha5yn_,:,Array,[,Int,,,72,],;,__,,,P4,:,Array,[,Array,[,Array,[,Int,,,0b1,],,,0B10111,],,,010,],),{,Continue,;,},Val,_,,,$c,,,PM1,:,Array,[,String,,,0xF3F,],;,Val,H,:,Array,[,Array,[,String,,,72,],,,0b1011100,],;,},<EOF>''',101))

    def test_567(self):
        self.assertTrue(TestLexer.test('''Class yZp428p{_(){} }Class A:C{}Class _:_L{}Class c_:_{Var $_:Array [String ,021_524];}Class pj:m{}Class R_s_{}Class o:S{}''','''Class,yZp428p,{,_,(,),{,},},Class,A,:,C,{,},Class,_,:,_L,{,},Class,c_,:,_,{,Var,$_,:,Array,[,String,,,021524,],;,},Class,pj,:,m,{,},Class,R_s_,{,},Class,o,:,S,{,},<EOF>''',101))

    def test_568(self):
        self.assertTrue(TestLexer.test('''Class _k{S1(X,_,SmH,_:Array [String ,0b1]){Break ;Break ;}Val $5XdD,C__,$PI:_N;}Class V45lw_{Destructor (){}Val Om:Array [Float ,55];Val c:Boolean ;}''','''Class,_k,{,S1,(,X,,,_,,,SmH,,,_,:,Array,[,String,,,0b1,],),{,Break,;,Break,;,},Val,$5XdD,,,C__,,,$PI,:,_N,;,},Class,V45lw_,{,Destructor,(,),{,},Val,Om,:,Array,[,Float,,,55,],;,Val,c,:,Boolean,;,},<EOF>''',101))

    def test_569(self):
        self.assertTrue(TestLexer.test('''Class _:_9{$42v8_(s:Array [Array [Array [Float ,0X43],0b111100],72]){} }Class V:__{}Class __{_____4(){_::$0_2_8q_();Break ;Continue ;} }Class Q4{Var $5_:P0;}Class _M8_{Var eb,$9,$9_,$A__,HV5:Float ;Constructor (_,Z:Float ){} }''','''Class,_,:,_9,{,$42v8_,(,s,:,Array,[,Array,[,Array,[,Float,,,0X43,],,,0b111100,],,,72,],),{,},},Class,V,:,__,{,},Class,__,{,_____4,(,),{,_,::,$0_2_8q_,(,),;,Break,;,Continue,;,},},Class,Q4,{,Var,$5_,:,P0,;,},Class,_M8_,{,Var,eb,,,$9,,,$9_,,,$A__,,,HV5,:,Float,;,Constructor,(,_,,,Z,:,Float,),{,},},<EOF>''',101))

    def test_570(self):
        self.assertTrue(TestLexer.test('''Class m:_r__{}Class _7__:_{}Class _:_Y{}Class A{}Class _G:__5a_8{Constructor (_:_){}f1_(y:K){} }Class _{}Class d{}''','''Class,m,:,_r__,{,},Class,_7__,:,_,{,},Class,_,:,_Y,{,},Class,A,{,},Class,_G,:,__5a_8,{,Constructor,(,_,:,_,),{,},f1_,(,y,:,K,),{,},},Class,_,{,},Class,d,{,},<EOF>''',101))

    def test_571(self):
        self.assertTrue(TestLexer.test('''Class s{}Class L{n(_,_,CC:Boolean ;_,E:Array [Array [Boolean ,0X53],0132]){Continue ;}$1(){Break ;} }Class c:_{Constructor (U,R,L74,JH3,C:_5k){}Destructor (){Break ;} }''','''Class,s,{,},Class,L,{,n,(,_,,,_,,,CC,:,Boolean,;,_,,,E,:,Array,[,Array,[,Boolean,,,0X53,],,,0132,],),{,Continue,;,},$1,(,),{,Break,;,},},Class,c,:,_,{,Constructor,(,U,,,R,,,L74,,,JH3,,,C,:,_5k,),{,},Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_572(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{Constructor (t,C2i,V,m,_630:Array [Array [Array [Array [Int ,0X49],0b10101],026],0B10110];__,_:Boolean ;__,G,r:Array [String ,8_7];b:h;_z:Array [Array [Array [Boolean ,0b10101],07_1_0],5_48];J:V){}$_G(){Break ;} }Class _62_{}Class _{}''','''Class,_,{,},Class,_,{,Constructor,(,t,,,C2i,,,V,,,m,,,_630,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X49,],,,0b10101,],,,026,],,,0B10110,],;,__,,,_,:,Boolean,;,__,,,G,,,r,:,Array,[,String,,,87,],;,b,:,h,;,_z,:,Array,[,Array,[,Array,[,Boolean,,,0b10101,],,,0710,],,,548,],;,J,:,V,),{,},$_G,(,),{,Break,;,},},Class,_62_,{,},Class,_,{,},<EOF>''',101))

    def test_573(self):
        self.assertTrue(TestLexer.test('''Class _6_{}Class kn_:WS{$B(){} }Class _:_5{Var I_3c,jb:Array [Array [Array [Float ,0B100100],7],03];Var $_t,$5,$8eP:m_2;}Class Q{}''','''Class,_6_,{,},Class,kn_,:,WS,{,$B,(,),{,},},Class,_,:,_5,{,Var,I_3c,,,jb,:,Array,[,Array,[,Array,[,Float,,,0B100100,],,,7,],,,03,],;,Var,$_t,,,$5,,,$8eP,:,m_2,;,},Class,Q,{,},<EOF>''',101))

    def test_574(self):
        self.assertTrue(TestLexer.test('''Class _Ni{Destructor (){}_(_:__){} }Class _:B{}Class _:_4{}Class _:y{Var P:U;$6d3(){Var _C0Q:Array [Int ,0x4];}Var $g4,_o3e:C_;}Class _4:_{Var _,$Va:Array [String ,0X1];}''','''Class,_Ni,{,Destructor,(,),{,},_,(,_,:,__,),{,},},Class,_,:,B,{,},Class,_,:,_4,{,},Class,_,:,y,{,Var,P,:,U,;,$6d3,(,),{,Var,_C0Q,:,Array,[,Int,,,0x4,],;,},Var,$g4,,,_o3e,:,C_,;,},Class,_4,:,_,{,Var,_,,,$Va,:,Array,[,String,,,0X1,],;,},<EOF>''',101))

    def test_575(self):
        self.assertTrue(TestLexer.test('''Class N7851f{Var p_3:_;Val $96,b,$N,N,M:String ;$_32F61(h,Hc,U:Y;p,_,fm,N__:Array [Array [Float ,0b1_1],0b1111];_1,It_Q,_,O:Int ;_DD:_;_4hX:String ;_,e:_a8_;__M:Array [Float ,07]){Continue ;Continue ;}Val $_Eqt,_,$1_v_P:Boolean ;Var _d4:_;}''','''Class,N7851f,{,Var,p_3,:,_,;,Val,$96,,,b,,,$N,,,N,,,M,:,String,;,$_32F61,(,h,,,Hc,,,U,:,Y,;,p,,,_,,,fm,,,N__,:,Array,[,Array,[,Float,,,0b11,],,,0b1111,],;,_1,,,It_Q,,,_,,,O,:,Int,;,_DD,:,_,;,_4hX,:,String,;,_,,,e,:,_a8_,;,__M,:,Array,[,Float,,,07,],),{,Continue,;,Continue,;,},Val,$_Eqt,,,_,,,$1_v_P,:,Boolean,;,Var,_d4,:,_,;,},<EOF>''',101))

    def test_576(self):
        self.assertTrue(TestLexer.test('''Class Zb{_4__1(_H1o_P:Array [Array [Array [Int ,6_6],0x7_0],0xD]){} }Class _8{Destructor (){ {Continue ;} }Destructor (){Var _,_O9U:z;}Var $_84:Array [Boolean ,0X6_0];Var $4J9___,uV1_,$L:Array [Array [Array [String ,0B101111],0b11_0],70];__(){Break ;} }''','''Class,Zb,{,_4__1,(,_H1o_P,:,Array,[,Array,[,Array,[,Int,,,66,],,,0x70,],,,0xD,],),{,},},Class,_8,{,Destructor,(,),{,{,Continue,;,},},Destructor,(,),{,Var,_,,,_O9U,:,z,;,},Var,$_84,:,Array,[,Boolean,,,0X60,],;,Var,$4J9___,,,uV1_,,,$L,:,Array,[,Array,[,Array,[,String,,,0B101111,],,,0b110,],,,70,],;,__,(,),{,Break,;,},},<EOF>''',101))

    def test_577(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){Break ;Break ;}w(){}Var $C7:Float ;Val k:D_;Val _2W_X_,_6_2,Q,$0i,G42_,__:Array [Array [Int ,0x54],42];}Class ___:_sv{}''','''Class,_,{,Destructor,(,),{,Break,;,Break,;,},w,(,),{,},Var,$C7,:,Float,;,Val,k,:,D_,;,Val,_2W_X_,,,_6_2,,,Q,,,$0i,,,G42_,,,__,:,Array,[,Array,[,Int,,,0x54,],,,42,],;,},Class,___,:,_sv,{,},<EOF>''',101))

    def test_578(self):
        self.assertTrue(TestLexer.test('''Class KT{}Class d{}Class T:D4{}Class _{}Class _:_Q_{$03(O:_;_,eS,C_:Array [Boolean ,0B1];yl,_50_5:Int ){}Destructor (){Return ;} }''','''Class,KT,{,},Class,d,{,},Class,T,:,D4,{,},Class,_,{,},Class,_,:,_Q_,{,$03,(,O,:,_,;,_,,,eS,,,C_,:,Array,[,Boolean,,,0B1,],;,yl,,,_50_5,:,Int,),{,},Destructor,(,),{,Return,;,},},<EOF>''',101))

    def test_579(self):
        self.assertTrue(TestLexer.test('''Class _A{dz(_,_:Int ;e__,_:Array [Array [Array [Float ,87],07],041]){Val ij,_:Array [Array [Array [Array [String ,3],0X4F],0b111110],02];H9::$3();Break ;Return ;Continue ;} }Class h6{Constructor (Q6,__56:Array [Array [Boolean ,0X1_7B8_6],0b10];_k4,___:V;k:Tf){Return ;} }''','''Class,_A,{,dz,(,_,,,_,:,Int,;,e__,,,_,:,Array,[,Array,[,Array,[,Float,,,87,],,,07,],,,041,],),{,Val,ij,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,3,],,,0X4F,],,,0b111110,],,,02,],;,H9,::,$3,(,),;,Break,;,Return,;,Continue,;,},},Class,h6,{,Constructor,(,Q6,,,__56,:,Array,[,Array,[,Boolean,,,0X17B86,],,,0b10,],;,_k4,,,___,:,V,;,k,:,Tf,),{,Return,;,},},<EOF>''',101))

    def test_580(self):
        self.assertTrue(TestLexer.test('''Class __{Constructor (_0_:Array [Array [Array [Array [Array [Float ,0X61],0B110010],6],0x50],36]){Var P,_,l:Array [Array [Int ,5],36];}Destructor (){}$_(te:q03_8){} }''','''Class,__,{,Constructor,(,_0_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X61,],,,0B110010,],,,6,],,,0x50,],,,36,],),{,Var,P,,,_,,,l,:,Array,[,Array,[,Int,,,5,],,,36,],;,},Destructor,(,),{,},$_,(,te,:,q03_8,),{,},},<EOF>''',101))

    def test_581(self):
        self.assertTrue(TestLexer.test('''Class _{Var $1:String ;Destructor (){}Var $tkD5:Array [Array [Array [Array [Array [Array [Array [Float ,0B1_0_0],0114],0b1],9_3],0b110101],45],94];}''','''Class,_,{,Var,$1,:,String,;,Destructor,(,),{,},Var,$tkD5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B100,],,,0114,],,,0b1,],,,93,],,,0b110101,],,,45,],,,94,],;,},<EOF>''',101))

    def test_582(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{Constructor (){}Var _,uL62:String ;}Class _:_dm{Constructor (_:Array [Float ,4];_o,T:Array [Array [Boolean ,74],3_1];V,B:_;R_8w8:Array [String ,0X5];___m:_){}Var $D:_;}Class XI{}''','''Class,_,{,},Class,_,{,Constructor,(,),{,},Var,_,,,uL62,:,String,;,},Class,_,:,_dm,{,Constructor,(,_,:,Array,[,Float,,,4,],;,_o,,,T,:,Array,[,Array,[,Boolean,,,74,],,,31,],;,V,,,B,:,_,;,R_8w8,:,Array,[,String,,,0X5,],;,___m,:,_,),{,},Var,$D,:,_,;,},Class,XI,{,},<EOF>''',101))

    def test_583(self):
        self.assertTrue(TestLexer.test('''Class d:_{}Class xL:__{}Class O3{Destructor (){}Destructor (){}Var _,$2,k,$v,$Zs:Array [Int ,0b1];Destructor (){}Val J7:Array [Array [Array [Array [Array [Array [Array [String ,06],0b1],0b1],39],0X5B],026],0B100001];}''','''Class,d,:,_,{,},Class,xL,:,__,{,},Class,O3,{,Destructor,(,),{,},Destructor,(,),{,},Var,_,,,$2,,,k,,,$v,,,$Zs,:,Array,[,Int,,,0b1,],;,Destructor,(,),{,},Val,J7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,06,],,,0b1,],,,0b1,],,,39,],,,0X5B,],,,026,],,,0B100001,],;,},<EOF>''',101))

    def test_584(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (sLr_:B_;U_3,c7,n,_r,e,m,S,n_,r:Int ;_Y,f_:String ;k4,Z8,Q__5:Array [Int ,05_11];_:Array [Array [Array [Float ,8],0b110001],0B1000101]){} }''','''Class,_,{,Constructor,(,sLr_,:,B_,;,U_3,,,c7,,,n,,,_r,,,e,,,m,,,S,,,n_,,,r,:,Int,;,_Y,,,f_,:,String,;,k4,,,Z8,,,Q__5,:,Array,[,Int,,,0511,],;,_,:,Array,[,Array,[,Array,[,Float,,,8,],,,0b110001,],,,0B1000101,],),{,},},<EOF>''',101))

    def test_585(self):
        self.assertTrue(TestLexer.test('''Class V_{}Class _:K_{Val _D:Array [Array [Boolean ,0X14],0b101];_(V2,aGL,X:Array [Array [Array [Array [Array [Array [Boolean ,94],045],0X14],045],0B1_0],0x30];__,_,a7,_:Array [Array [Boolean ,5],0x30]){ {}Val Tv,_R,b,H_,_:L3x;{} }Val __,$9_:String ;b_Z(B__,W,zT__:Int ){}Destructor (){}Destructor (){}Destructor (){} }''','''Class,V_,{,},Class,_,:,K_,{,Val,_D,:,Array,[,Array,[,Boolean,,,0X14,],,,0b101,],;,_,(,V2,,,aGL,,,X,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,94,],,,045,],,,0X14,],,,045,],,,0B10,],,,0x30,],;,__,,,_,,,a7,,,_,:,Array,[,Array,[,Boolean,,,5,],,,0x30,],),{,{,},Val,Tv,,,_R,,,b,,,H_,,,_,:,L3x,;,{,},},Val,__,,,$9_,:,String,;,b_Z,(,B__,,,W,,,zT__,:,Int,),{,},Destructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_586(self):
        self.assertTrue(TestLexer.test('''Class __{Val xn,_2:_;}Class m___8Z_{}Class j:T{}Class h_9{Constructor (_:Array [Array [Boolean ,0X33],0b1];Y:Array [Float ,0X9]){Val _,_6:_D;} }Class cV:_{Val Bvo,j,n_:_;Var _:Array [Boolean ,0XC];H_(_,HSVg4:Array [Float ,03];_,As_:Array [Boolean ,0B1001100]){} }''','''Class,__,{,Val,xn,,,_2,:,_,;,},Class,m___8Z_,{,},Class,j,:,T,{,},Class,h_9,{,Constructor,(,_,:,Array,[,Array,[,Boolean,,,0X33,],,,0b1,],;,Y,:,Array,[,Float,,,0X9,],),{,Val,_,,,_6,:,_D,;,},},Class,cV,:,_,{,Val,Bvo,,,j,,,n_,:,_,;,Var,_,:,Array,[,Boolean,,,0XC,],;,H_,(,_,,,HSVg4,:,Array,[,Float,,,03,],;,_,,,As_,:,Array,[,Boolean,,,0B1001100,],),{,},},<EOF>''',101))

    def test_587(self):
        self.assertTrue(TestLexer.test('''Class _8_:Y9r{Destructor (){}Destructor (){Break ;}Var $__,_,$_,_,$MV___6N4Q,_l,$_,$q,b,$__:su2_;}Class kl{}''','''Class,_8_,:,Y9r,{,Destructor,(,),{,},Destructor,(,),{,Break,;,},Var,$__,,,_,,,$_,,,_,,,$MV___6N4Q,,,_l,,,$_,,,$q,,,b,,,$__,:,su2_,;,},Class,kl,{,},<EOF>''',101))

    def test_588(self):
        self.assertTrue(TestLexer.test('''Class _6Mv18__:_2{Val _,$_:Array [Int ,03];}Class D4:N{Val J:Array [Float ,179];Val _:Array [Array [Array [Boolean ,044],0B1],03];}Class _5_:M{}''','''Class,_6Mv18__,:,_2,{,Val,_,,,$_,:,Array,[,Int,,,03,],;,},Class,D4,:,N,{,Val,J,:,Array,[,Float,,,179,],;,Val,_,:,Array,[,Array,[,Array,[,Boolean,,,044,],,,0B1,],,,03,],;,},Class,_5_,:,M,{,},<EOF>''',101))

    def test_589(self):
        self.assertTrue(TestLexer.test('''Class _{Fv(_:Array [Int ,037];__9,j:Array [Array [Array [Array [Array [Array [String ,0x40],0B1_1_1],4],57],0b1],0B11100];_F:Array [Array [Array [Array [Boolean ,6_7_99_7],57],0b1011],05_5]){Var _73_:Z;}Destructor (){ {}d::$04()._()._e0_();} }''','''Class,_,{,Fv,(,_,:,Array,[,Int,,,037,],;,__9,,,j,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x40,],,,0B111,],,,4,],,,57,],,,0b1,],,,0B11100,],;,_F,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,67997,],,,57,],,,0b1011,],,,055,],),{,Var,_73_,:,Z,;,},Destructor,(,),{,{,},d,::,$04,(,),.,_,(,),.,_e0_,(,),;,},},<EOF>''',101))

    def test_590(self):
        self.assertTrue(TestLexer.test('''Class _8:p4861_C{Destructor (){}___(E01,V47,Z,_4,_:String ;P_,e__j_k_,yc:Array [Array [Int ,0B110011],31]){}Var $5:T_9q;}''','''Class,_8,:,p4861_C,{,Destructor,(,),{,},___,(,E01,,,V47,,,Z,,,_4,,,_,:,String,;,P_,,,e__j_k_,,,yc,:,Array,[,Array,[,Int,,,0B110011,],,,31,],),{,},Var,$5,:,T_9q,;,},<EOF>''',101))

    def test_591(self):
        self.assertTrue(TestLexer.test('''Class b1_{}Class w{}Class _:r{}Class T:W{__0(C,_:Array [Array [Boolean ,2_7],0X40];Nb__,bk,_:Array [Int ,92]){} }''','''Class,b1_,{,},Class,w,{,},Class,_,:,r,{,},Class,T,:,W,{,__0,(,C,,,_,:,Array,[,Array,[,Boolean,,,27,],,,0X40,],;,Nb__,,,bk,,,_,:,Array,[,Int,,,92,],),{,},},<EOF>''',101))

    def test_592(self):
        self.assertTrue(TestLexer.test('''Class _O0_S__D_:t1_8_{Destructor (){}Destructor (){}K8(){Break ;} }Class l{Var _6,$R:Boolean ;}Class S:_{}Class Q{}''','''Class,_O0_S__D_,:,t1_8_,{,Destructor,(,),{,},Destructor,(,),{,},K8,(,),{,Break,;,},},Class,l,{,Var,_6,,,$R,:,Boolean,;,},Class,S,:,_,{,},Class,Q,{,},<EOF>''',101))

    def test_593(self):
        self.assertTrue(TestLexer.test('''Class S94A{}Class _O{}Class _V{$_2s(n,_cSA7_6:_1F_;c:Int ){Return ;}_K(B,_:j__){ {} }Constructor (){Return ;} }''','''Class,S94A,{,},Class,_O,{,},Class,_V,{,$_2s,(,n,,,_cSA7_6,:,_1F_,;,c,:,Int,),{,Return,;,},_K,(,B,,,_,:,j__,),{,{,},},Constructor,(,),{,Return,;,},},<EOF>''',101))

    def test_594(self):
        self.assertTrue(TestLexer.test('''Class VA{$_(g,_,_:X_;_:_;k:AW_d;_:Array [String ,014];x,_:Array [Array [String ,0B10001],7_8];_,_tM1_,_,_34,s_N,_:__;K7:Array [String ,0x1]){} }Class ___{}''','''Class,VA,{,$_,(,g,,,_,,,_,:,X_,;,_,:,_,;,k,:,AW_d,;,_,:,Array,[,String,,,014,],;,x,,,_,:,Array,[,Array,[,String,,,0B10001,],,,78,],;,_,,,_tM1_,,,_,,,_34,,,s_N,,,_,:,__,;,K7,:,Array,[,String,,,0x1,],),{,},},Class,___,{,},<EOF>''',101))

    def test_595(self):
        self.assertTrue(TestLexer.test('''Class _B{Constructor (_,_:__W){Val A,_,u:Int ;}Destructor (){} }Class __:_{Destructor (){}$e(){Var O07,s1:Array [String ,0xA80];}Val O__:Int ;}Class _:_liU{Constructor (_:Boolean ){Break ;}Val __0:Array [Array [Array [Array [Array [String ,07],0x17_5],8],0B111111],4_6];}''','''Class,_B,{,Constructor,(,_,,,_,:,__W,),{,Val,A,,,_,,,u,:,Int,;,},Destructor,(,),{,},},Class,__,:,_,{,Destructor,(,),{,},$e,(,),{,Var,O07,,,s1,:,Array,[,String,,,0xA80,],;,},Val,O__,:,Int,;,},Class,_,:,_liU,{,Constructor,(,_,:,Boolean,),{,Break,;,},Val,__0,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,07,],,,0x175,],,,8,],,,0B111111,],,,46,],;,},<EOF>''',101))

    def test_596(self):
        self.assertTrue(TestLexer.test('''Class Z{Val _U:Array [Array [Array [Array [Array [Array [Float ,0X1_1F],8_6],0xF],042_50_3],0b1110],46];Var $U_:Array [Float ,9];}''','''Class,Z,{,Val,_U,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X11F,],,,86,],,,0xF,],,,042503,],,,0b1110,],,,46,],;,Var,$U_,:,Array,[,Float,,,9,],;,},<EOF>''',101))

    def test_597(self):
        self.assertTrue(TestLexer.test('''Class __{Destructor (){}Constructor (a:Array [Boolean ,0B1];_,_O9G:Boolean ;_7:Boolean ){Return ;}va(){} }Class ycj:aH{}''','''Class,__,{,Destructor,(,),{,},Constructor,(,a,:,Array,[,Boolean,,,0B1,],;,_,,,_O9G,:,Boolean,;,_7,:,Boolean,),{,Return,;,},va,(,),{,},},Class,ycj,:,aH,{,},<EOF>''',101))

    def test_598(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_,a:Int ;V3L:Array [Array [Array [Array [Array [Array [Array [Array [String ,0X37],85],0xC],0b1011001],0B1],0B1],0113],0b11_0]){Val G,_,_:Boolean ;Continue ;} }''','''Class,_,{,Constructor,(,_,,,a,:,Int,;,V3L,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X37,],,,85,],,,0xC,],,,0b1011001,],,,0B1,],,,0B1,],,,0113,],,,0b110,],),{,Val,G,,,_,,,_,:,Boolean,;,Continue,;,},},<EOF>''',101))

    def test_599(self):
        self.assertTrue(TestLexer.test('''Class _:q{Val $0,y:C;f1(_,_U,y:Int ;u_gP,a_:Float ;_EP,mV_,D7:Array [Int ,0b10011];_3,_:String ;d:Array [Array [Int ,06],0xE9]){} }''','''Class,_,:,q,{,Val,$0,,,y,:,C,;,f1,(,_,,,_U,,,y,:,Int,;,u_gP,,,a_,:,Float,;,_EP,,,mV_,,,D7,:,Array,[,Int,,,0b10011,],;,_3,,,_,:,String,;,d,:,Array,[,Array,[,Int,,,06,],,,0xE9,],),{,},},<EOF>''',101))

    def test_600(self):
        self.assertTrue(TestLexer.test('''Class l{$6(Iq_:Float ){}Var e,$m_7W,$052d__,_:Boolean ;$4(s__:Int ;q:v;hxM:_;_29_rK_c__,O_,_2,_,_,U:_q___){} }''','''Class,l,{,$6,(,Iq_,:,Float,),{,},Var,e,,,$m_7W,,,$052d__,,,_,:,Boolean,;,$4,(,s__,:,Int,;,q,:,v,;,hxM,:,_,;,_29_rK_c__,,,O_,,,_2,,,_,,,_,,,U,:,_q___,),{,},},<EOF>''',101))

    def test_601(self):
        self.assertTrue(TestLexer.test('''Class q{B(T,S:Array [String ,035];X0fY:Boolean ;_:Array [Boolean ,077];N__X4:Array [String ,5];_:Array [Array [Array [Array [Int ,0B1],0B110000],77],77]){}Var _,$U06,$1:Array [Array [Array [Array [String ,117],0b1],27_2],0b1010011];A29tH__(){Break ;} }''','''Class,q,{,B,(,T,,,S,:,Array,[,String,,,035,],;,X0fY,:,Boolean,;,_,:,Array,[,Boolean,,,077,],;,N__X4,:,Array,[,String,,,5,],;,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,0B110000,],,,77,],,,77,],),{,},Var,_,,,$U06,,,$1,:,Array,[,Array,[,Array,[,Array,[,String,,,117,],,,0b1,],,,272,],,,0b1010011,],;,A29tH__,(,),{,Break,;,},},<EOF>''',101))

    def test_602(self):
        self.assertTrue(TestLexer.test('''Class E:_{}Class I5g{Val k0__:Float ;}Class ___Q{}Class Z_{Constructor (r,_:Int ;R,_:Array [Boolean ,6];t6_c_,_t,E26_Er_0,M:T){Continue ;}Val B,$u,$6,_M,A:Array [Array [Array [Int ,0x8],0b110000],04];}''','''Class,E,:,_,{,},Class,I5g,{,Val,k0__,:,Float,;,},Class,___Q,{,},Class,Z_,{,Constructor,(,r,,,_,:,Int,;,R,,,_,:,Array,[,Boolean,,,6,],;,t6_c_,,,_t,,,E26_Er_0,,,M,:,T,),{,Continue,;,},Val,B,,,$u,,,$6,,,_M,,,A,:,Array,[,Array,[,Array,[,Int,,,0x8,],,,0b110000,],,,04,],;,},<EOF>''',101))

    def test_603(self):
        self.assertTrue(TestLexer.test('''Class T{}Class e:q8{Destructor (){}Var K,C,$_7mU,$_D:_9;Constructor (){ {Break ;}{} }Constructor (){}Val _,Z_,d8:_a;}''','''Class,T,{,},Class,e,:,q8,{,Destructor,(,),{,},Var,K,,,C,,,$_7mU,,,$_D,:,_9,;,Constructor,(,),{,{,Break,;,},{,},},Constructor,(,),{,},Val,_,,,Z_,,,d8,:,_a,;,},<EOF>''',101))

    def test_604(self):
        self.assertTrue(TestLexer.test('''Class f{}Class Mo:_{Val u1:Int ;}Class _9ep_z:___{Var $D8,l43U,$xh:_U;Val G_,$5Y_D__j,_1J:Boolean ;Constructor (M_x,_,Y,_:G66_lYU;f_6,u_:Int ){} }Class d1{}Class D:q_{}''','''Class,f,{,},Class,Mo,:,_,{,Val,u1,:,Int,;,},Class,_9ep_z,:,___,{,Var,$D8,,,l43U,,,$xh,:,_U,;,Val,G_,,,$5Y_D__j,,,_1J,:,Boolean,;,Constructor,(,M_x,,,_,,,Y,,,_,:,G66_lYU,;,f_6,,,u_,:,Int,),{,},},Class,d1,{,},Class,D,:,q_,{,},<EOF>''',101))

    def test_605(self):
        self.assertTrue(TestLexer.test('''Class D{$_(_,p,S:Array [String ,0X4D];Y9,_,C:Array [String ,44];r:l;_vQ0,_,_,_:Array [String ,0B1];I5_4Zt,_kFv:J2m;i__:Int ){Break ;{} }}Class _:B6_{}Class _:_{Destructor (){Continue ;} }Class K26{}''','''Class,D,{,$_,(,_,,,p,,,S,:,Array,[,String,,,0X4D,],;,Y9,,,_,,,C,:,Array,[,String,,,44,],;,r,:,l,;,_vQ0,,,_,,,_,,,_,:,Array,[,String,,,0B1,],;,I5_4Zt,,,_kFv,:,J2m,;,i__,:,Int,),{,Break,;,{,},},},Class,_,:,B6_,{,},Class,_,:,_,{,Destructor,(,),{,Continue,;,},},Class,K26,{,},<EOF>''',101))

    def test_606(self):
        self.assertTrue(TestLexer.test('''Class JZ{$8_(){}Val l,_,$W_,V1Ya,$38c,$0,_:Q5;Constructor (q,_0_C6,_:__8){}Var _5,_Ez_:Array [String ,0B1001];}''','''Class,JZ,{,$8_,(,),{,},Val,l,,,_,,,$W_,,,V1Ya,,,$38c,,,$0,,,_,:,Q5,;,Constructor,(,q,,,_0_C6,,,_,:,__8,),{,},Var,_5,,,_Ez_,:,Array,[,String,,,0B1001,],;,},<EOF>''',101))

    def test_607(self):
        self.assertTrue(TestLexer.test('''Class wQ_{Constructor (s:Array [String ,0B10111];_:Boolean ;h,_,b,_:Array [Array [Array [Array [Array [Float ,35],04],35],0X27],35]){} }Class _2:_3c{}''','''Class,wQ_,{,Constructor,(,s,:,Array,[,String,,,0B10111,],;,_,:,Boolean,;,h,,,_,,,b,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,35,],,,04,],,,35,],,,0X27,],,,35,],),{,},},Class,_2,:,_3c,{,},<EOF>''',101))

    def test_608(self):
        self.assertTrue(TestLexer.test('''Class ___2{Val s,t:Array [Array [Int ,04_5],0b11_0];Var $_,vv,$3,$_,$_44PY:Array [Array [Array [String ,0b11_000_01],50],0b1_00];$2(_,F,_:Array [Array [Int ,0B110010],4_3];YS,c0,f_,_:e;zw_:Array [Array [Int ,6_8],50]){} }Class Hz0{Destructor (){} }Class _{}''','''Class,___2,{,Val,s,,,t,:,Array,[,Array,[,Int,,,045,],,,0b110,],;,Var,$_,,,vv,,,$3,,,$_,,,$_44PY,:,Array,[,Array,[,Array,[,String,,,0b1100001,],,,50,],,,0b100,],;,$2,(,_,,,F,,,_,:,Array,[,Array,[,Int,,,0B110010,],,,43,],;,YS,,,c0,,,f_,,,_,:,e,;,zw_,:,Array,[,Array,[,Int,,,68,],,,50,],),{,},},Class,Hz0,{,Destructor,(,),{,},},Class,_,{,},<EOF>''',101))

    def test_609(self):
        self.assertTrue(TestLexer.test('''Class _24__{Constructor (_R,_,s7:Array [Array [Boolean ,0XA_4_3],33];F:Array [Array [Boolean ,33],0X6_203_A];_,I,_i_m,__:Boolean ){} }Class J{}''','''Class,_24__,{,Constructor,(,_R,,,_,,,s7,:,Array,[,Array,[,Boolean,,,0XA43,],,,33,],;,F,:,Array,[,Array,[,Boolean,,,33,],,,0X6203A,],;,_,,,I,,,_i_m,,,__,:,Boolean,),{,},},Class,J,{,},<EOF>''',101))

    def test_610(self):
        self.assertTrue(TestLexer.test('''Class _R_:G{Constructor (l8,_,_9,l,g,_33,K,_:Array [Array [Array [Array [String ,0x1B],04_25],0126],0b1_0_0]){} }Class D8{Destructor (){Return ;} }''','''Class,_R_,:,G,{,Constructor,(,l8,,,_,,,_9,,,l,,,g,,,_33,,,K,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0x1B,],,,0425,],,,0126,],,,0b100,],),{,},},Class,D8,{,Destructor,(,),{,Return,;,},},<EOF>''',101))

    def test_611(self):
        self.assertTrue(TestLexer.test('''Class Uv:_{Var $CW,$x7,___E_0F_:_eO;}Class c:J__{}Class _H___X_:q{Constructor (){ {Val D,__:Float ;} }Destructor (){}$82Z7(){}Destructor (){} }''','''Class,Uv,:,_,{,Var,$CW,,,$x7,,,___E_0F_,:,_eO,;,},Class,c,:,J__,{,},Class,_H___X_,:,q,{,Constructor,(,),{,{,Val,D,,,__,:,Float,;,},},Destructor,(,),{,},$82Z7,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_612(self):
        self.assertTrue(TestLexer.test('''Class __65X:Kt9w{Var D:Array [Array [Array [Int ,031],04],67];}Class __b:h{Constructor (_y:Int ;___3,U,Yq_:Int ){} }''','''Class,__65X,:,Kt9w,{,Var,D,:,Array,[,Array,[,Array,[,Int,,,031,],,,04,],,,67,],;,},Class,__b,:,h,{,Constructor,(,_y,:,Int,;,___3,,,U,,,Yq_,:,Int,),{,},},<EOF>''',101))

    def test_613(self):
        self.assertTrue(TestLexer.test('''Class _:__{$E(k:Array [Array [Int ,2],94];I:Array [Array [Array [Array [Array [Float ,8],0b1_1_1],0B1],011],06];e,s:Float ;D,F:Array [Array [Float ,1],0b1_1_0_111]){}Constructor (){}Destructor (){Break ;}Destructor (){_::$G2oM();}Val _I,$_bO43____:b;}''','''Class,_,:,__,{,$E,(,k,:,Array,[,Array,[,Int,,,2,],,,94,],;,I,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,8,],,,0b111,],,,0B1,],,,011,],,,06,],;,e,,,s,:,Float,;,D,,,F,:,Array,[,Array,[,Float,,,1,],,,0b110111,],),{,},Constructor,(,),{,},Destructor,(,),{,Break,;,},Destructor,(,),{,_,::,$G2oM,(,),;,},Val,_I,,,$_bO43____,:,b,;,},<EOF>''',101))

    def test_614(self):
        self.assertTrue(TestLexer.test('''Class _2{Val $_,$e_,$AT_:_76Q;Var _:Float ;O776(_,_77:Array [Array [Array [String ,0X5F],013],0XE]){Var __5_:Array [Int ,0B1010110];} }''','''Class,_2,{,Val,$_,,,$e_,,,$AT_,:,_76Q,;,Var,_,:,Float,;,O776,(,_,,,_77,:,Array,[,Array,[,Array,[,String,,,0X5F,],,,013,],,,0XE,],),{,Var,__5_,:,Array,[,Int,,,0B1010110,],;,},},<EOF>''',101))

    def test_615(self):
        self.assertTrue(TestLexer.test('''Class u{Val _,R,b_56:_;Constructor (O2V3l:Array [Array [Array [String ,0X19],53],8];Q,_,L:q___){}Constructor (){}Val z7:Array [Array [Array [Array [Array [Array [Array [Float ,53],0B1_1_01_1],0X19],9_7],53],8],07];}''','''Class,u,{,Val,_,,,R,,,b_56,:,_,;,Constructor,(,O2V3l,:,Array,[,Array,[,Array,[,String,,,0X19,],,,53,],,,8,],;,Q,,,_,,,L,:,q___,),{,},Constructor,(,),{,},Val,z7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,53,],,,0B11011,],,,0X19,],,,97,],,,53,],,,8,],,,07,],;,},<EOF>''',101))

    def test_616(self):
        self.assertTrue(TestLexer.test('''Class _:fZ_{J(x,_:String ){Break ;}Var y:Boolean ;Destructor (){}$q8T(_z3,__8,F52,n:A;_,Q:D){}Destructor (){} }''','''Class,_,:,fZ_,{,J,(,x,,,_,:,String,),{,Break,;,},Var,y,:,Boolean,;,Destructor,(,),{,},$q8T,(,_z3,,,__8,,,F52,,,n,:,A,;,_,,,Q,:,D,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_617(self):
        self.assertTrue(TestLexer.test('''Class _{B_(_,j,c_F,w,i0mg12:_){} }Class f{$_v(_,e79W,_:String ){}Constructor (b:_Zh_o;_t:_;_:Float ;_:Array [Int ,0X47_A_8]){} }''','''Class,_,{,B_,(,_,,,j,,,c_F,,,w,,,i0mg12,:,_,),{,},},Class,f,{,$_v,(,_,,,e79W,,,_,:,String,),{,},Constructor,(,b,:,_Zh_o,;,_t,:,_,;,_,:,Float,;,_,:,Array,[,Int,,,0X47A8,],),{,},},<EOF>''',101))

    def test_618(self):
        self.assertTrue(TestLexer.test('''Class qsI{}Class _:__{}Class _:A_{Constructor (I,_:String ;_2p:Boolean ){Return ;Var l_:Array [String ,28];} }Class ___:_T{}''','''Class,qsI,{,},Class,_,:,__,{,},Class,_,:,A_,{,Constructor,(,I,,,_,:,String,;,_2p,:,Boolean,),{,Return,;,Var,l_,:,Array,[,String,,,28,],;,},},Class,___,:,_T,{,},<EOF>''',101))

    def test_619(self):
        self.assertTrue(TestLexer.test('''Class __3{Constructor (_j,M,_E,d:_;P:_d;__:__;_:Array [Array [Boolean ,0b110001],8_9636]){} }Class _:_{Constructor (YH_t,_:String ){}Destructor (){} }''','''Class,__3,{,Constructor,(,_j,,,M,,,_E,,,d,:,_,;,P,:,_d,;,__,:,__,;,_,:,Array,[,Array,[,Boolean,,,0b110001,],,,89636,],),{,},},Class,_,:,_,{,Constructor,(,YH_t,,,_,:,String,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_620(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _:w{}Class _:ZT1_{}Class S4{}Class c9:v{}Class _3{Val M,$r:Array [Array [Array [Int ,0b1000000],020],02];Var $4_,$P_:_;Val Z:_;Var $_5,$0__C,P:__;}Class L_:K{}Class Aq{$5_(z,_:_){} }''','''Class,_,{,},Class,_,:,w,{,},Class,_,:,ZT1_,{,},Class,S4,{,},Class,c9,:,v,{,},Class,_3,{,Val,M,,,$r,:,Array,[,Array,[,Array,[,Int,,,0b1000000,],,,020,],,,02,],;,Var,$4_,,,$P_,:,_,;,Val,Z,:,_,;,Var,$_5,,,$0__C,,,P,:,__,;,},Class,L_,:,K,{,},Class,Aq,{,$5_,(,z,,,_,:,_,),{,},},<EOF>''',101))

    def test_621(self):
        self.assertTrue(TestLexer.test('''Class w_A_:_E{}Class i:_l{$_(_1,J:Boolean ;A45_:kl7;_3_Y__75Q9,K,_,_7_9k__:_x;z_4:Array [Int ,0x2];E,_,P,____:Array [String ,0b1_11_0];f5Y_M,J,x,_:Float ;c,X,_,i:Array [Float ,0X6F_C]){} }Class _:Z{}Class _X:_{$7G_1(){Break ;} }Class _Q:_{}''','''Class,w_A_,:,_E,{,},Class,i,:,_l,{,$_,(,_1,,,J,:,Boolean,;,A45_,:,kl7,;,_3_Y__75Q9,,,K,,,_,,,_7_9k__,:,_x,;,z_4,:,Array,[,Int,,,0x2,],;,E,,,_,,,P,,,____,:,Array,[,String,,,0b1110,],;,f5Y_M,,,J,,,x,,,_,:,Float,;,c,,,X,,,_,,,i,:,Array,[,Float,,,0X6FC,],),{,},},Class,_,:,Z,{,},Class,_X,:,_,{,$7G_1,(,),{,Break,;,},},Class,_Q,:,_,{,},<EOF>''',101))

    def test_622(self):
        self.assertTrue(TestLexer.test('''Class _:y{}Class P{Constructor (__:Array [Array [Array [Int ,3_3],9],0143]){}di(_,t,_59_T_____40_gY__,_4E_,_X,X:Array [Array [Boolean ,0x43],9]){Return ;}Constructor (k_,V5:p){}Val i,$0,_,_,h,__,$b___,_:Array [Array [Array [Array [Float ,01_1],0B10111],97],8_53];Val $3o6_,Syk:_;}''','''Class,_,:,y,{,},Class,P,{,Constructor,(,__,:,Array,[,Array,[,Array,[,Int,,,33,],,,9,],,,0143,],),{,},di,(,_,,,t,,,_59_T_____40_gY__,,,_4E_,,,_X,,,X,:,Array,[,Array,[,Boolean,,,0x43,],,,9,],),{,Return,;,},Constructor,(,k_,,,V5,:,p,),{,},Val,i,,,$0,,,_,,,_,,,h,,,__,,,$b___,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,011,],,,0B10111,],,,97,],,,853,],;,Val,$3o6_,,,Syk,:,_,;,},<EOF>''',101))

    def test_623(self):
        self.assertTrue(TestLexer.test('''Class Lz{Constructor (r,_,_,Y_,bt_:Array [Array [String ,29],0X3B];_:Int ){}Var x,_:Array [Array [Int ,29],327];}Class __:_{}Class _044:c__{}''','''Class,Lz,{,Constructor,(,r,,,_,,,_,,,Y_,,,bt_,:,Array,[,Array,[,String,,,29,],,,0X3B,],;,_,:,Int,),{,},Var,x,,,_,:,Array,[,Array,[,Int,,,29,],,,327,],;,},Class,__,:,_,{,},Class,_044,:,c__,{,},<EOF>''',101))

    def test_624(self):
        self.assertTrue(TestLexer.test('''Class _{Val ErvV:Boolean ;_(_,LC,_:Array [Array [Array [String ,0B1000011],62],1];B5,tO:String ;_j4:String ;c__7,_,_,_8,P7,K_,k3Z_:_;Z:Float ){Val _____,D,z,T_:w1;}Destructor (){Break ;} }''','''Class,_,{,Val,ErvV,:,Boolean,;,_,(,_,,,LC,,,_,:,Array,[,Array,[,Array,[,String,,,0B1000011,],,,62,],,,1,],;,B5,,,tO,:,String,;,_j4,:,String,;,c__7,,,_,,,_,,,_8,,,P7,,,K_,,,k3Z_,:,_,;,Z,:,Float,),{,Val,_____,,,D,,,z,,,T_,:,w1,;,},Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_625(self):
        self.assertTrue(TestLexer.test('''Class A{f_3(j4,a:Boolean ;_:Array [Float ,0X7];___0,__:Float ;_,j:Array [Int ,41];_,_,__,_,_:Float ){} }Class G:_{}''','''Class,A,{,f_3,(,j4,,,a,:,Boolean,;,_,:,Array,[,Float,,,0X7,],;,___0,,,__,:,Float,;,_,,,j,:,Array,[,Int,,,41,],;,_,,,_,,,__,,,_,,,_,:,Float,),{,},},Class,G,:,_,{,},<EOF>''',101))

    def test_626(self):
        self.assertTrue(TestLexer.test('''Class _:_P{Constructor (__,p_A,Q21_,d0__,B:Array [Array [Array [Array [Array [Array [Array [String ,95],0xAD_9],0X9A],0b1],0b101001],32],95]){} }''','''Class,_,:,_P,{,Constructor,(,__,,,p_A,,,Q21_,,,d0__,,,B,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,95,],,,0xAD9,],,,0X9A,],,,0b1,],,,0b101001,],,,32,],,,95,],),{,},},<EOF>''',101))

    def test_627(self):
        self.assertTrue(TestLexer.test('''Class _1:_{Constructor (_H_3:Int ;C2__:Array [Array [Float ,032],0x41];_X:Array [Array [Array [Float ,5],7],0B101110]){} }''','''Class,_1,:,_,{,Constructor,(,_H_3,:,Int,;,C2__,:,Array,[,Array,[,Float,,,032,],,,0x41,],;,_X,:,Array,[,Array,[,Array,[,Float,,,5,],,,7,],,,0B101110,],),{,},},<EOF>''',101))

    def test_628(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_,_:Array [Float ,0x1]){Break ;} }Class __:FA{$4(){Continue ;}Val _,$3,bO,$j,zsF2:_;}Class __M{}''','''Class,_,{,Constructor,(,_,,,_,:,Array,[,Float,,,0x1,],),{,Break,;,},},Class,__,:,FA,{,$4,(,),{,Continue,;,},Val,_,,,$3,,,bO,,,$j,,,zsF2,:,_,;,},Class,__M,{,},<EOF>''',101))

    def test_629(self):
        self.assertTrue(TestLexer.test('''Class _6__{Destructor (){k::$__();__U2::$_();}Var _:V;Destructor (){} }Class __p0_{Var _3:i_4;Constructor (){Break ;}Destructor (){} }''','''Class,_6__,{,Destructor,(,),{,k,::,$__,(,),;,__U2,::,$_,(,),;,},Var,_,:,V,;,Destructor,(,),{,},},Class,__p0_,{,Var,_3,:,i_4,;,Constructor,(,),{,Break,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_630(self):
        self.assertTrue(TestLexer.test('''Class _:__{}Class __{Destructor (){Break ;}Constructor (__5,_,W,Z6,_,p_:Array [Array [Float ,19],0B1001101]){Break ;Return ;} }Class EC{}Class sN_p{}''','''Class,_,:,__,{,},Class,__,{,Destructor,(,),{,Break,;,},Constructor,(,__5,,,_,,,W,,,Z6,,,_,,,p_,:,Array,[,Array,[,Float,,,19,],,,0B1001101,],),{,Break,;,Return,;,},},Class,EC,{,},Class,sN_p,{,},<EOF>''',101))

    def test_631(self):
        self.assertTrue(TestLexer.test('''Class _{}Class P58:V{Val $_,$03:Array [String ,07];}Class _{Destructor (){}Val _,Rn_T:Int ;Destructor (){}Constructor (){} }Class __{}''','''Class,_,{,},Class,P58,:,V,{,Val,$_,,,$03,:,Array,[,String,,,07,],;,},Class,_,{,Destructor,(,),{,},Val,_,,,Rn_T,:,Int,;,Destructor,(,),{,},Constructor,(,),{,},},Class,__,{,},<EOF>''',101))

    def test_632(self):
        self.assertTrue(TestLexer.test('''Class e_QQ_M:Z{Var $_:Array [Array [Array [Array [Array [Int ,0x4],03_3],5_7_58],0b10],18];}Class _E:sl{}Class Q{}Class _{}''','''Class,e_QQ_M,:,Z,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x4,],,,033,],,,5758,],,,0b10,],,,18,],;,},Class,_E,:,sl,{,},Class,Q,{,},Class,_,{,},<EOF>''',101))

    def test_633(self):
        self.assertTrue(TestLexer.test('''Class n{Constructor (){Continue ;} }Class _u{Destructor (){}Var $4:Boolean ;}Class ki:F{Destructor (){} }Class s1{}''','''Class,n,{,Constructor,(,),{,Continue,;,},},Class,_u,{,Destructor,(,),{,},Var,$4,:,Boolean,;,},Class,ki,:,F,{,Destructor,(,),{,},},Class,s1,{,},<EOF>''',101))

    def test_634(self):
        self.assertTrue(TestLexer.test('''Class _{}Class k{Val $_:Array [Array [Array [Array [Array [Float ,071463],0x2_F],8],0X2],071];Val ___:String ;}Class G:_{}Class e{}''','''Class,_,{,},Class,k,{,Val,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,071463,],,,0x2F,],,,8,],,,0X2,],,,071,],;,Val,___,:,String,;,},Class,G,:,_,{,},Class,e,{,},<EOF>''',101))

    def test_635(self):
        self.assertTrue(TestLexer.test('''Class _{_(){}Destructor (){}Constructor (_4w3_:o_;_4,_C6i:Array [Boolean ,0xE_65];_5i_:Array [Array [Array [Array [Int ,0xE_0],0XB5787],0107],0x5]){} }Class _K:__5U5_0{}''','''Class,_,{,_,(,),{,},Destructor,(,),{,},Constructor,(,_4w3_,:,o_,;,_4,,,_C6i,:,Array,[,Boolean,,,0xE65,],;,_5i_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0xE0,],,,0XB5787,],,,0107,],,,0x5,],),{,},},Class,_K,:,__5U5_0,{,},<EOF>''',101))

    def test_636(self):
        self.assertTrue(TestLexer.test('''Class b:q{Var $_c_,_09_P:Array [Int ,64_9_8];Val Q93,$y,$_,$78_,J,$8,$_:String ;Val $13,e,$J3_m,_4:Boolean ;Destructor (){} }''','''Class,b,:,q,{,Var,$_c_,,,_09_P,:,Array,[,Int,,,6498,],;,Val,Q93,,,$y,,,$_,,,$78_,,,J,,,$8,,,$_,:,String,;,Val,$13,,,e,,,$J3_m,,,_4,:,Boolean,;,Destructor,(,),{,},},<EOF>''',101))

    def test_637(self):
        self.assertTrue(TestLexer.test('''Class _h:_5_{Val $8_:String ;Var $5:String ;Constructor (u_,_:_;_:Boolean ){}Val $ny:Boolean ;$__(z:Boolean ;h:Array [Int ,021];_,LB:Array [Array [Boolean ,5_2_45],0x21]){_S::$3();} }''','''Class,_h,:,_5_,{,Val,$8_,:,String,;,Var,$5,:,String,;,Constructor,(,u_,,,_,:,_,;,_,:,Boolean,),{,},Val,$ny,:,Boolean,;,$__,(,z,:,Boolean,;,h,:,Array,[,Int,,,021,],;,_,,,LB,:,Array,[,Array,[,Boolean,,,5245,],,,0x21,],),{,_S,::,$3,(,),;,},},<EOF>''',101))

    def test_638(self):
        self.assertTrue(TestLexer.test('''Class _{_(_,y,E,m:_;n:Array [Boolean ,6]){} }Class _{}Class l{}Class _0:_z{}Class _{Val _Q,$7:Array [Boolean ,9];}''','''Class,_,{,_,(,_,,,y,,,E,,,m,:,_,;,n,:,Array,[,Boolean,,,6,],),{,},},Class,_,{,},Class,l,{,},Class,_0,:,_z,{,},Class,_,{,Val,_Q,,,$7,:,Array,[,Boolean,,,9,],;,},<EOF>''',101))

    def test_639(self):
        self.assertTrue(TestLexer.test('''Class __{Ow_6(f:_;A_,YN_:Int ){} }Class Y{$_(){} }Class _:_5u1__{Var tP:Array [String ,0B1_1];}Class L{Destructor (){} }''','''Class,__,{,Ow_6,(,f,:,_,;,A_,,,YN_,:,Int,),{,},},Class,Y,{,$_,(,),{,},},Class,_,:,_5u1__,{,Var,tP,:,Array,[,String,,,0B11,],;,},Class,L,{,Destructor,(,),{,},},<EOF>''',101))

    def test_640(self):
        self.assertTrue(TestLexer.test('''Class _9___7:r1_F__{Val M,U,_,$29_,i,$0:Array [Array [Array [Array [Array [Int ,0x55],0b1011],05_6_6],0X1],0X9];}Class _S{}''','''Class,_9___7,:,r1_F__,{,Val,M,,,U,,,_,,,$29_,,,i,,,$0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x55,],,,0b1011,],,,0566,],,,0X1,],,,0X9,],;,},Class,_S,{,},<EOF>''',101))

    def test_641(self):
        self.assertTrue(TestLexer.test('''Class B:_m2U{Constructor (O1:Array [Int ,0x4D];_,l5__k:Array [Array [Array [Float ,0x4D],04],0137]){} }Class F{Var H:Float ;}''','''Class,B,:,_m2U,{,Constructor,(,O1,:,Array,[,Int,,,0x4D,],;,_,,,l5__k,:,Array,[,Array,[,Array,[,Float,,,0x4D,],,,04,],,,0137,],),{,},},Class,F,{,Var,H,:,Float,;,},<EOF>''',101))

    def test_642(self):
        self.assertTrue(TestLexer.test('''Class v{Val _,$5jex6383_:Int ;$q_4(_10__,T:Int ;n0:Array [Array [Array [Boolean ,90],0B111100],0X24]){}Constructor (_9B_r_,Sq_W,_3:_T;Y,a:Array [Boolean ,03];qEd:wP){}Val T,$nC5,_,$_:H;}Class _:ty_{}''','''Class,v,{,Val,_,,,$5jex6383_,:,Int,;,$q_4,(,_10__,,,T,:,Int,;,n0,:,Array,[,Array,[,Array,[,Boolean,,,90,],,,0B111100,],,,0X24,],),{,},Constructor,(,_9B_r_,,,Sq_W,,,_3,:,_T,;,Y,,,a,:,Array,[,Boolean,,,03,],;,qEd,:,wP,),{,},Val,T,,,$nC5,,,_,,,$_,:,H,;,},Class,_,:,ty_,{,},<EOF>''',101))

    def test_643(self):
        self.assertTrue(TestLexer.test('''Class R4:_2{Var $_o:Array [Array [Array [String ,0x3],0X34],0X34];}Class S1_:b_9m{$__(t_,M:Array [Boolean ,01];_c0N,q:f){Var _34_U,_zW3,_,_lM8,JE_67J4q,K9:Float ;} }Class y{}''','''Class,R4,:,_2,{,Var,$_o,:,Array,[,Array,[,Array,[,String,,,0x3,],,,0X34,],,,0X34,],;,},Class,S1_,:,b_9m,{,$__,(,t_,,,M,:,Array,[,Boolean,,,01,],;,_c0N,,,q,:,f,),{,Var,_34_U,,,_zW3,,,_,,,_lM8,,,JE_67J4q,,,K9,:,Float,;,},},Class,y,{,},<EOF>''',101))

    def test_644(self):
        self.assertTrue(TestLexer.test('''Class S8{}Class _3:b{Val $q:_U;Val _3:A;}Class p4O_{Constructor (n5,_,_,N6W___:String ;_,G9,LCUD,q9,g__:Boolean ){Return ;} }''','''Class,S8,{,},Class,_3,:,b,{,Val,$q,:,_U,;,Val,_3,:,A,;,},Class,p4O_,{,Constructor,(,n5,,,_,,,_,,,N6W___,:,String,;,_,,,G9,,,LCUD,,,q9,,,g__,:,Boolean,),{,Return,;,},},<EOF>''',101))

    def test_645(self):
        self.assertTrue(TestLexer.test('''Class uZ_:__Q_5{Destructor (){}Constructor (B:Array [Float ,065]){}Var $_8h:Array [Array [Array [Array [Array [Boolean ,06],3],83],0X1_8],0xE9];Val $6,_:Array [Boolean ,0X1];}''','''Class,uZ_,:,__Q_5,{,Destructor,(,),{,},Constructor,(,B,:,Array,[,Float,,,065,],),{,},Var,$_8h,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,06,],,,3,],,,83,],,,0X18,],,,0xE9,],;,Val,$6,,,_,:,Array,[,Boolean,,,0X1,],;,},<EOF>''',101))

    def test_646(self):
        self.assertTrue(TestLexer.test('''Class F_:_6F{Constructor (_1T_:Array [Array [Float ,0XB],0x6];WP:Int ){}__(U,__,B,_:Array [String ,06]){}Destructor (){ {} }$__P16(_,_,_,C72X4,Z,_U0f3:_){} }Class _:m{}''','''Class,F_,:,_6F,{,Constructor,(,_1T_,:,Array,[,Array,[,Float,,,0XB,],,,0x6,],;,WP,:,Int,),{,},__,(,U,,,__,,,B,,,_,:,Array,[,String,,,06,],),{,},Destructor,(,),{,{,},},$__P16,(,_,,,_,,,_,,,C72X4,,,Z,,,_U0f3,:,_,),{,},},Class,_,:,m,{,},<EOF>''',101))

    def test_647(self):
        self.assertTrue(TestLexer.test('''Class GN:J0{Val $_:Array [Array [Array [Array [String ,0x6],0x7],4_6_67_9],0x40];}Class u:k{}Class _{Destructor (){} }Class gNv1{}''','''Class,GN,:,J0,{,Val,$_,:,Array,[,Array,[,Array,[,Array,[,String,,,0x6,],,,0x7,],,,46679,],,,0x40,],;,},Class,u,:,k,{,},Class,_,{,Destructor,(,),{,},},Class,gNv1,{,},<EOF>''',101))

    def test_648(self):
        self.assertTrue(TestLexer.test('''Class j_:n_5{Var $_i,$_r__ms_8O,a,$_:Float ;Var $_J,$x:Array [Array [Array [Array [Array [Array [Int ,02_4_77757],0B1001001],0X3A],0b101110],02],7];Destructor (){}Constructor (){}Var $v,g:Float ;}Class j{}Class l{Val $__3_:Array [Array [Float ,53],0x2];}''','''Class,j_,:,n_5,{,Var,$_i,,,$_r__ms_8O,,,a,,,$_,:,Float,;,Var,$_J,,,$x,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,02477757,],,,0B1001001,],,,0X3A,],,,0b101110,],,,02,],,,7,],;,Destructor,(,),{,},Constructor,(,),{,},Var,$v,,,g,:,Float,;,},Class,j,{,},Class,l,{,Val,$__3_,:,Array,[,Array,[,Float,,,53,],,,0x2,],;,},<EOF>''',101))

    def test_649(self):
        self.assertTrue(TestLexer.test('''Class _{Var _,$M_,EU4_,$_i_,$u:Boolean ;Constructor (Wh,_:Array [Boolean ,0X49];___,c_:c;_2K6:Float ;_,_,_V:String ){} }''','''Class,_,{,Var,_,,,$M_,,,EU4_,,,$_i_,,,$u,:,Boolean,;,Constructor,(,Wh,,,_,:,Array,[,Boolean,,,0X49,],;,___,,,c_,:,c,;,_2K6,:,Float,;,_,,,_,,,_V,:,String,),{,},},<EOF>''',101))

    def test_650(self):
        self.assertTrue(TestLexer.test('''Class _:DX{Val w:Array [Array [Float ,57],0x64];}Class _:q_2_{}Class _28:I3_1s{}Class __{}Class Ym_{Val I:Array [Array [Float ,07],79];}''','''Class,_,:,DX,{,Val,w,:,Array,[,Array,[,Float,,,57,],,,0x64,],;,},Class,_,:,q_2_,{,},Class,_28,:,I3_1s,{,},Class,__,{,},Class,Ym_,{,Val,I,:,Array,[,Array,[,Float,,,07,],,,79,],;,},<EOF>''',101))

    def test_651(self):
        self.assertTrue(TestLexer.test('''Class B_9_{Val _Z:ca;Destructor (){Break ;}Destructor (){}Val $4:Array [Array [Array [Array [Array [Array [Array [Boolean ,0b11],01],0XE],56],01],0B10],0B11100];}''','''Class,B_9_,{,Val,_Z,:,ca,;,Destructor,(,),{,Break,;,},Destructor,(,),{,},Val,$4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b11,],,,01,],,,0XE,],,,56,],,,01,],,,0B10,],,,0B11100,],;,},<EOF>''',101))

    def test_652(self):
        self.assertTrue(TestLexer.test('''Class _b{Constructor (___,_:Array [Array [Array [Array [Array [Boolean ,0x7],7_4],0B1_1],070],89]){} }Class _T:r_q_{}Class s:_M{}''','''Class,_b,{,Constructor,(,___,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x7,],,,74,],,,0B11,],,,070,],,,89,],),{,},},Class,_T,:,r_q_,{,},Class,s,:,_M,{,},<EOF>''',101))

    def test_653(self):
        self.assertTrue(TestLexer.test('''Class y{}Class _X5{Destructor (){}Destructor (){Break ;}Constructor (_:Nc){}Var $6__5W:Array [String ,06_6_71_1];}Class V_{Destructor (){ {}Continue ;}Var $5QC:Boolean ;}''','''Class,y,{,},Class,_X5,{,Destructor,(,),{,},Destructor,(,),{,Break,;,},Constructor,(,_,:,Nc,),{,},Var,$6__5W,:,Array,[,String,,,066711,],;,},Class,V_,{,Destructor,(,),{,{,},Continue,;,},Var,$5QC,:,Boolean,;,},<EOF>''',101))

    def test_654(self):
        self.assertTrue(TestLexer.test('''Class _{O(C,l,_,k4u5_:Float ){Var y,_d37:Array [Array [String ,022_0],0XA5];Continue ;}Val _,$4,$_,Q,$3:String ;}Class q4M:q{Var ___26t,$_:Array [Int ,0B100];}Class Ql{}Class _W9_5:H1{}''','''Class,_,{,O,(,C,,,l,,,_,,,k4u5_,:,Float,),{,Var,y,,,_d37,:,Array,[,Array,[,String,,,0220,],,,0XA5,],;,Continue,;,},Val,_,,,$4,,,$_,,,Q,,,$3,:,String,;,},Class,q4M,:,q,{,Var,___26t,,,$_,:,Array,[,Int,,,0B100,],;,},Class,Ql,{,},Class,_W9_5,:,H1,{,},<EOF>''',101))

    def test_655(self):
        self.assertTrue(TestLexer.test('''Class o_P6z{$__(J:Array [Array [Boolean ,06],430_8];v_3_ks_,BI:b){Continue ;} }Class _A:C_{}Class _:_{}Class Cj_V:v{}Class _{}''','''Class,o_P6z,{,$__,(,J,:,Array,[,Array,[,Boolean,,,06,],,,4308,],;,v_3_ks_,,,BI,:,b,),{,Continue,;,},},Class,_A,:,C_,{,},Class,_,:,_,{,},Class,Cj_V,:,v,{,},Class,_,{,},<EOF>''',101))

    def test_656(self):
        self.assertTrue(TestLexer.test('''Class I{}Class _{Val _:v_;Val $_:Array [Int ,0B1_1];}Class u1_8q_5_O{Var $a_,$3b_:Boolean ;Var yz1:Array [Array [Boolean ,0b1],03];}''','''Class,I,{,},Class,_,{,Val,_,:,v_,;,Val,$_,:,Array,[,Int,,,0B11,],;,},Class,u1_8q_5_O,{,Var,$a_,,,$3b_,:,Boolean,;,Var,yz1,:,Array,[,Array,[,Boolean,,,0b1,],,,03,],;,},<EOF>''',101))

    def test_657(self):
        self.assertTrue(TestLexer.test('''Class Kp_:ZF78{}Class _{}Class __Z{Var $Si2,$_3,$c:Array [String ,0X1B];Val $B:W;Val $I,$M1:Array [Boolean ,0114];}Class _4S:gQ4{}''','''Class,Kp_,:,ZF78,{,},Class,_,{,},Class,__Z,{,Var,$Si2,,,$_3,,,$c,:,Array,[,String,,,0X1B,],;,Val,$B,:,W,;,Val,$I,,,$M1,:,Array,[,Boolean,,,0114,],;,},Class,_4S,:,gQ4,{,},<EOF>''',101))

    def test_658(self):
        self.assertTrue(TestLexer.test('''Class __{}Class AZ_h_:_{B4(_i,r,zq:Array [Int ,7_2]){}Var $_T:Boolean ;Constructor (S,I8,_,W,_,g,_,V1,_,__,N_,s,v,c:Array [Float ,052];A:Array [Array [Array [String ,0B11],13],0x5F];_,_:String ;_0:Array [Array [Float ,0x5F],0x6_4];N3:_;h__5R:V){Continue ;} }''','''Class,__,{,},Class,AZ_h_,:,_,{,B4,(,_i,,,r,,,zq,:,Array,[,Int,,,72,],),{,},Var,$_T,:,Boolean,;,Constructor,(,S,,,I8,,,_,,,W,,,_,,,g,,,_,,,V1,,,_,,,__,,,N_,,,s,,,v,,,c,:,Array,[,Float,,,052,],;,A,:,Array,[,Array,[,Array,[,String,,,0B11,],,,13,],,,0x5F,],;,_,,,_,:,String,;,_0,:,Array,[,Array,[,Float,,,0x5F,],,,0x64,],;,N3,:,_,;,h__5R,:,V,),{,Continue,;,},},<EOF>''',101))

    def test_659(self):
        self.assertTrue(TestLexer.test('''Class q{}Class _:_{Constructor (_,___,_8:Array [Array [String ,0B111001],0b1_011_1];c,q_,jf,_:Array [Array [Boolean ,0x40],7]){}Destructor (){} }''','''Class,q,{,},Class,_,:,_,{,Constructor,(,_,,,___,,,_8,:,Array,[,Array,[,String,,,0B111001,],,,0b10111,],;,c,,,q_,,,jf,,,_,:,Array,[,Array,[,Boolean,,,0x40,],,,7,],),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_660(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_:Array [Array [String ,69],0XA_3_B];_:Array [Int ,0X8];____7:e;_:Array [Array [Array [String ,69],0B110100],0B110100];X1:Array [Float ,4_8];M_:x;__R:_;w:String ;__:Array [Array [Int ,027],5];_r:Array [Array [Array [Array [Array [Float ,0X30],0B110100],69],3_6_041],0b1100011]){} }''','''Class,_,{,Constructor,(,_,:,Array,[,Array,[,String,,,69,],,,0XA3B,],;,_,:,Array,[,Int,,,0X8,],;,____7,:,e,;,_,:,Array,[,Array,[,Array,[,String,,,69,],,,0B110100,],,,0B110100,],;,X1,:,Array,[,Float,,,48,],;,M_,:,x,;,__R,:,_,;,w,:,String,;,__,:,Array,[,Array,[,Int,,,027,],,,5,],;,_r,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X30,],,,0B110100,],,,69,],,,36041,],,,0b1100011,],),{,},},<EOF>''',101))

    def test_661(self):
        self.assertTrue(TestLexer.test('''Class _h:b{Var $_5_:Array [Int ,0x2];}Class _:ky_4o{Constructor (K,_:String ){}Destructor (){Continue ;}Val L__410:Array [Array [Array [String ,0B11000],017],0x2];}''','''Class,_h,:,b,{,Var,$_5_,:,Array,[,Int,,,0x2,],;,},Class,_,:,ky_4o,{,Constructor,(,K,,,_,:,String,),{,},Destructor,(,),{,Continue,;,},Val,L__410,:,Array,[,Array,[,Array,[,String,,,0B11000,],,,017,],,,0x2,],;,},<EOF>''',101))

    def test_662(self):
        self.assertTrue(TestLexer.test('''Class _:kx{}Class A2:J__{Constructor (){Break ;} }Class F{Destructor (){ {} }Constructor (__,x,_Q_:_){}Constructor (){} }''','''Class,_,:,kx,{,},Class,A2,:,J__,{,Constructor,(,),{,Break,;,},},Class,F,{,Destructor,(,),{,{,},},Constructor,(,__,,,x,,,_Q_,:,_,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_663(self):
        self.assertTrue(TestLexer.test('''Class _Z7F__x:_{}Class y_L_:_9{Val $w:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,0B10010],82],0b111000],5],0x8],0X2E],82],01],0b111000],0101],07],0x9],0101];}''','''Class,_Z7F__x,:,_,{,},Class,y_L_,:,_9,{,Val,$w,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B10010,],,,82,],,,0b111000,],,,5,],,,0x8,],,,0X2E,],,,82,],,,01,],,,0b111000,],,,0101,],,,07,],,,0x9,],,,0101,],;,},<EOF>''',101))

    def test_664(self):
        self.assertTrue(TestLexer.test('''Class s{}Class N__:_{Ax(_:Array [Array [Int ,50],0727_1]){} }Class p_:_{}Class ___I{Var u0H___R,__:Array [Array [Array [Array [Array [Int ,031_6],0X2],0x5],0b1011],9];}''','''Class,s,{,},Class,N__,:,_,{,Ax,(,_,:,Array,[,Array,[,Int,,,50,],,,07271,],),{,},},Class,p_,:,_,{,},Class,___I,{,Var,u0H___R,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0316,],,,0X2,],,,0x5,],,,0b1011,],,,9,],;,},<EOF>''',101))

    def test_665(self):
        self.assertTrue(TestLexer.test('''Class y__{Constructor (__O:Array [Int ,2_0_1];_i,h:_;__3:Array [Array [Array [Float ,0b1011011],0x5E],0xADE_9];mp9:Int ;_:_1_h7;_9O8_P_,q:_){} }''','''Class,y__,{,Constructor,(,__O,:,Array,[,Int,,,201,],;,_i,,,h,:,_,;,__3,:,Array,[,Array,[,Array,[,Float,,,0b1011011,],,,0x5E,],,,0xADE9,],;,mp9,:,Int,;,_,:,_1_h7,;,_9O8_P_,,,q,:,_,),{,},},<EOF>''',101))

    def test_666(self):
        self.assertTrue(TestLexer.test('''Class _:m{Destructor (){Val Ki,_h:Array [Array [Array [Array [Boolean ,0b11],0121],0121],7];}Val $5_:Int ;$_(V:Array [Boolean ,0B1]){} }''','''Class,_,:,m,{,Destructor,(,),{,Val,Ki,,,_h,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b11,],,,0121,],,,0121,],,,7,],;,},Val,$5_,:,Int,;,$_,(,V,:,Array,[,Boolean,,,0B1,],),{,},},<EOF>''',101))

    def test_667(self):
        self.assertTrue(TestLexer.test('''Class c{}Class yNt0:_{}Class X{Var __,v,$_7:Boolean ;}Class m4R:Gl{Var X6:Boolean ;}Class _:SA{$_(_1,_,_:Array [Array [Int ,0XB],0B10]){} }Class tj_:D7Pv1{$5(){New Cq()._();Break ;Continue ;} }''','''Class,c,{,},Class,yNt0,:,_,{,},Class,X,{,Var,__,,,v,,,$_7,:,Boolean,;,},Class,m4R,:,Gl,{,Var,X6,:,Boolean,;,},Class,_,:,SA,{,$_,(,_1,,,_,,,_,:,Array,[,Array,[,Int,,,0XB,],,,0B10,],),{,},},Class,tj_,:,D7Pv1,{,$5,(,),{,New,Cq,(,),.,_,(,),;,Break,;,Continue,;,},},<EOF>''',101))

    def test_668(self):
        self.assertTrue(TestLexer.test('''Class d:u{Val r,$O,_7u8,$_zn_1,_,$_,_4F,$_:Array [Array [Array [Array [Array [Array [Float ,1],0x2F],97],0x2F],0b1101],0B1001000];}Class i0:__1_{}''','''Class,d,:,u,{,Val,r,,,$O,,,_7u8,,,$_zn_1,,,_,,,$_,,,_4F,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,1,],,,0x2F,],,,97,],,,0x2F,],,,0b1101,],,,0B1001000,],;,},Class,i0,:,__1_,{,},<EOF>''',101))

    def test_669(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){Continue ;} }Class _{__(){} }Class q{Var $_,nn64_1,$D8_X,i,Q,$6,$0,$_:X;Destructor (){}Destructor (){Break ;}Constructor (_Py_48,B91:T___7;cq,r,D8d:String ){} }''','''Class,_,{,Destructor,(,),{,Continue,;,},},Class,_,{,__,(,),{,},},Class,q,{,Var,$_,,,nn64_1,,,$D8_X,,,i,,,Q,,,$6,,,$0,,,$_,:,X,;,Destructor,(,),{,},Destructor,(,),{,Break,;,},Constructor,(,_Py_48,,,B91,:,T___7,;,cq,,,r,,,D8d,:,String,),{,},},<EOF>''',101))

    def test_670(self):
        self.assertTrue(TestLexer.test('''Class R{__(_X_:Array [Array [Array [Array [Array [String ,0B101],0X2A],0X2A],05],0B100000];_K,D,M31,u:MU_;t5,e:String ;_:o;X:w27;g,__H,_:R;F,_:Float ){Break ;} }''','''Class,R,{,__,(,_X_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B101,],,,0X2A,],,,0X2A,],,,05,],,,0B100000,],;,_K,,,D,,,M31,,,u,:,MU_,;,t5,,,e,:,String,;,_,:,o,;,X,:,w27,;,g,,,__H,,,_,:,R,;,F,,,_,:,Float,),{,Break,;,},},<EOF>''',101))

    def test_671(self):
        self.assertTrue(TestLexer.test('''Class _1:F{Var __mC_,_:_;}Class p75{Val $__,O,Bp:Array [Array [Array [Array [String ,0B11101],2],0B11101],07_3_06];}Class f48:M{}Class k_QL1:_{}Class _:_9{}''','''Class,_1,:,F,{,Var,__mC_,,,_,:,_,;,},Class,p75,{,Val,$__,,,O,,,Bp,:,Array,[,Array,[,Array,[,Array,[,String,,,0B11101,],,,2,],,,0B11101,],,,07306,],;,},Class,f48,:,M,{,},Class,k_QL1,:,_,{,},Class,_,:,_9,{,},<EOF>''',101))

    def test_672(self):
        self.assertTrue(TestLexer.test('''Class J0:w{$A1(__:_;u:Array [Boolean ,0B1010000]){Continue ;}Constructor (Z:Float ;_3e,D,_6:Array [Array [String ,0x7E],0X8_1_8];M_,c:Int ){} }''','''Class,J0,:,w,{,$A1,(,__,:,_,;,u,:,Array,[,Boolean,,,0B1010000,],),{,Continue,;,},Constructor,(,Z,:,Float,;,_3e,,,D,,,_6,:,Array,[,Array,[,String,,,0x7E,],,,0X818,],;,M_,,,c,:,Int,),{,},},<EOF>''',101))

    def test_673(self):
        self.assertTrue(TestLexer.test('''Class G{}Class H8{Destructor (){Var _:_;Continue ;}Var $H3_:Array [Array [Array [Array [Int ,015_3],27_4_8],0X39],03_7];Var __,$v,_vGai,_5_r_8W82Q_:_;}''','''Class,G,{,},Class,H8,{,Destructor,(,),{,Var,_,:,_,;,Continue,;,},Var,$H3_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0153,],,,2748,],,,0X39,],,,037,],;,Var,__,,,$v,,,_vGai,,,_5_r_8W82Q_,:,_,;,},<EOF>''',101))

    def test_674(self):
        self.assertTrue(TestLexer.test('''Class _95:z{_(){Return ;}xNN2(){} }Class _:R_{Val S:Array [Int ,22];Var $7:Float ;}Class Be5{}Class _:_s8283{Destructor (){} }Class fh{}''','''Class,_95,:,z,{,_,(,),{,Return,;,},xNN2,(,),{,},},Class,_,:,R_,{,Val,S,:,Array,[,Int,,,22,],;,Var,$7,:,Float,;,},Class,Be5,{,},Class,_,:,_s8283,{,Destructor,(,),{,},},Class,fh,{,},<EOF>''',101))

    def test_675(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _:_{}Class _{}Class _j{Val _62:_;Val __:Array [Array [String ,01],97];}Class __1___9HA002:U2__{}''','''Class,_,:,_,{,},Class,_,:,_,{,},Class,_,{,},Class,_j,{,Val,_62,:,_,;,Val,__,:,Array,[,Array,[,String,,,01,],,,97,],;,},Class,__1___9HA002,:,U2__,{,},<EOF>''',101))

    def test_676(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _:R{}Class P:K{$t2_(fMp,o_,_,_,S74:Array [Array [Array [Array [Boolean ,19],0b10000],19],8];_5:m){} }Class ___{Var _aY:_;Val $_:Array [Array [Array [Array [Array [Array [Float ,19],3],0X1E0_5],9],0x9],0x3A];}Class gy:e{}''','''Class,_,{,},Class,_,:,R,{,},Class,P,:,K,{,$t2_,(,fMp,,,o_,,,_,,,_,,,S74,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,19,],,,0b10000,],,,19,],,,8,],;,_5,:,m,),{,},},Class,___,{,Var,_aY,:,_,;,Val,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,19,],,,3,],,,0X1E05,],,,9,],,,0x9,],,,0x3A,],;,},Class,gy,:,e,{,},<EOF>''',101))

    def test_677(self):
        self.assertTrue(TestLexer.test('''Class n:m6{}Class Z{}Class X_2{Constructor (){} }Class d_T:M{_(){}Var CkG3,$O:Array [Array [Array [Boolean ,0X3D],041],0B1000101];Constructor (_,_:b_5){} }''','''Class,n,:,m6,{,},Class,Z,{,},Class,X_2,{,Constructor,(,),{,},},Class,d_T,:,M,{,_,(,),{,},Var,CkG3,,,$O,:,Array,[,Array,[,Array,[,Boolean,,,0X3D,],,,041,],,,0B1000101,],;,Constructor,(,_,,,_,:,b_5,),{,},},<EOF>''',101))

    def test_678(self):
        self.assertTrue(TestLexer.test('''Class AA{Constructor (_:k;__:Array [Array [Array [Array [Int ,074],0X65B],0B111010],0B111010];R,_,_:Array [Int ,0X18E];_:String ){ {Val _,c:Int ;Continue ;}{} }Val _:Array [Float ,0x63];Constructor (uD__:__;A,_61:Array [Boolean ,074];E__3__C_2:Array [Float ,19];v_,w7:Array [Boolean ,074];Q,Y79,a_1,_:Array [Boolean ,074];__:_){} }Class H9k_{Destructor (){} }''','''Class,AA,{,Constructor,(,_,:,k,;,__,:,Array,[,Array,[,Array,[,Array,[,Int,,,074,],,,0X65B,],,,0B111010,],,,0B111010,],;,R,,,_,,,_,:,Array,[,Int,,,0X18E,],;,_,:,String,),{,{,Val,_,,,c,:,Int,;,Continue,;,},{,},},Val,_,:,Array,[,Float,,,0x63,],;,Constructor,(,uD__,:,__,;,A,,,_61,:,Array,[,Boolean,,,074,],;,E__3__C_2,:,Array,[,Float,,,19,],;,v_,,,w7,:,Array,[,Boolean,,,074,],;,Q,,,Y79,,,a_1,,,_,:,Array,[,Boolean,,,074,],;,__,:,_,),{,},},Class,H9k_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_679(self):
        self.assertTrue(TestLexer.test('''Class _fK3:_{Val _a,w4d3:Array [Float ,0136];Var $E_,$__,$_:Int ;}Class y_1{}Class _:k0{}Class _O:_{Constructor (){}$C_(_:Array [Array [Float ,0XA5F],69];s,_,__6_lY:Array [Array [Int ,0b1],4]){}_(){ {}Var z,j:Boolean ;Break ;} }Class w:_O{Val $s:Float ;}''','''Class,_fK3,:,_,{,Val,_a,,,w4d3,:,Array,[,Float,,,0136,],;,Var,$E_,,,$__,,,$_,:,Int,;,},Class,y_1,{,},Class,_,:,k0,{,},Class,_O,:,_,{,Constructor,(,),{,},$C_,(,_,:,Array,[,Array,[,Float,,,0XA5F,],,,69,],;,s,,,_,,,__6_lY,:,Array,[,Array,[,Int,,,0b1,],,,4,],),{,},_,(,),{,{,},Var,z,,,j,:,Boolean,;,Break,;,},},Class,w,:,_O,{,Val,$s,:,Float,;,},<EOF>''',101))

    def test_680(self):
        self.assertTrue(TestLexer.test('''Class L_{Var b_:y_4;Constructor (D9_,X8:Int ;E:Array [Boolean ,0B111001];__,_:_;a:Boolean ;_,_8:Float ;G:Array [Array [Int ,0b1011],8]){} }Class _{Val _:Array [Array [Int ,06],0115];}''','''Class,L_,{,Var,b_,:,y_4,;,Constructor,(,D9_,,,X8,:,Int,;,E,:,Array,[,Boolean,,,0B111001,],;,__,,,_,:,_,;,a,:,Boolean,;,_,,,_8,:,Float,;,G,:,Array,[,Array,[,Int,,,0b1011,],,,8,],),{,},},Class,_,{,Val,_,:,Array,[,Array,[,Int,,,06,],,,0115,],;,},<EOF>''',101))

    def test_681(self):
        self.assertTrue(TestLexer.test('''Class _:_{Var w_,$N05,$3:_7_t;y_5(__0:Float ;_:Array [Array [Float ,0B1],0X9];__,R_:_){}Val a,$m__,$H:J;$i6_(T:Array [Array [Array [Array [String ,97],06],0b1],02];_,_L:Boolean ;_:p1){_e8E0j::$3();} }''','''Class,_,:,_,{,Var,w_,,,$N05,,,$3,:,_7_t,;,y_5,(,__0,:,Float,;,_,:,Array,[,Array,[,Float,,,0B1,],,,0X9,],;,__,,,R_,:,_,),{,},Val,a,,,$m__,,,$H,:,J,;,$i6_,(,T,:,Array,[,Array,[,Array,[,Array,[,String,,,97,],,,06,],,,0b1,],,,02,],;,_,,,_L,:,Boolean,;,_,:,p1,),{,_e8E0j,::,$3,(,),;,},},<EOF>''',101))

    def test_682(self):
        self.assertTrue(TestLexer.test('''Class o{Destructor (){}Destructor (){Var F0:_;Val _:Int ;}Constructor (_,_:Float ;_7___,c:Boolean ;___,_1_3:Array [Array [Array [Array [Boolean ,1],0B1011101],037],026];z7f_8,m_,_M_4__7:String ){ {Continue ;} }}''','''Class,o,{,Destructor,(,),{,},Destructor,(,),{,Var,F0,:,_,;,Val,_,:,Int,;,},Constructor,(,_,,,_,:,Float,;,_7___,,,c,:,Boolean,;,___,,,_1_3,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,1,],,,0B1011101,],,,037,],,,026,],;,z7f_8,,,m_,,,_M_4__7,:,String,),{,{,Continue,;,},},},<EOF>''',101))

    def test_683(self):
        self.assertTrue(TestLexer.test('''Class N{Constructor (){}Var Q:Array [Array [Boolean ,0X46],05];Constructor (_,v5,b98_1,__37,HDj__c,_F2:O_;x:Boolean ){} }''','''Class,N,{,Constructor,(,),{,},Var,Q,:,Array,[,Array,[,Boolean,,,0X46,],,,05,],;,Constructor,(,_,,,v5,,,b98_1,,,__37,,,HDj__c,,,_F2,:,O_,;,x,:,Boolean,),{,},},<EOF>''',101))

    def test_684(self):
        self.assertTrue(TestLexer.test('''Class R_h_:s{Constructor (x5:Boolean ;_pN9_8x:Array [Array [String ,0X2_C_7],0x18]){}$3d(jM:Boolean ){}Destructor (){} }''','''Class,R_h_,:,s,{,Constructor,(,x5,:,Boolean,;,_pN9_8x,:,Array,[,Array,[,String,,,0X2C7,],,,0x18,],),{,},$3d,(,jM,:,Boolean,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_685(self):
        self.assertTrue(TestLexer.test('''Class n{Var $G_2,$_8,_81:Array [Array [Array [Float ,0XBB_5_2_F],0B1100100],0X54];Destructor (){} }Class _{}Class _SK:N3M{}''','''Class,n,{,Var,$G_2,,,$_8,,,_81,:,Array,[,Array,[,Array,[,Float,,,0XBB52F,],,,0B1100100,],,,0X54,],;,Destructor,(,),{,},},Class,_,{,},Class,_SK,:,N3M,{,},<EOF>''',101))

    def test_686(self):
        self.assertTrue(TestLexer.test('''Class n{Constructor (n:Boolean ;_,N:Array [String ,0b1];r_7,_R:String ;_9:_;_,_:Array [Boolean ,0B1];_:_;gM:Array [Array [Int ,022],0B101101]){}z(_:Float ){}Constructor (){} }''','''Class,n,{,Constructor,(,n,:,Boolean,;,_,,,N,:,Array,[,String,,,0b1,],;,r_7,,,_R,:,String,;,_9,:,_,;,_,,,_,:,Array,[,Boolean,,,0B1,],;,_,:,_,;,gM,:,Array,[,Array,[,Int,,,022,],,,0B101101,],),{,},z,(,_,:,Float,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_687(self):
        self.assertTrue(TestLexer.test('''Class ___{Constructor (_1N,R,_6j:String ;S1__:Float ;_:_p;_2,J:Int ;a_c,_:String ){Break ;}Var $4:Float ;Var I:Array [String ,0x8];}Class r:_{}Class __:_Dw3_{Destructor (){} }''','''Class,___,{,Constructor,(,_1N,,,R,,,_6j,:,String,;,S1__,:,Float,;,_,:,_p,;,_2,,,J,:,Int,;,a_c,,,_,:,String,),{,Break,;,},Var,$4,:,Float,;,Var,I,:,Array,[,String,,,0x8,],;,},Class,r,:,_,{,},Class,__,:,_Dw3_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_688(self):
        self.assertTrue(TestLexer.test('''Class d4:_8hZ_3{Constructor (_:Array [Array [Int ,0XB_C],0x62];_:Array [Array [Int ,0B1],01];My9174:Array [Array [Array [Array [Int ,041],0105],0x62],0b10010];_iX:Array [Array [Int ,41],0xB]){} }Class _:_7{}''','''Class,d4,:,_8hZ_3,{,Constructor,(,_,:,Array,[,Array,[,Int,,,0XBC,],,,0x62,],;,_,:,Array,[,Array,[,Int,,,0B1,],,,01,],;,My9174,:,Array,[,Array,[,Array,[,Array,[,Int,,,041,],,,0105,],,,0x62,],,,0b10010,],;,_iX,:,Array,[,Array,[,Int,,,41,],,,0xB,],),{,},},Class,_,:,_7,{,},<EOF>''',101))

    def test_689(self):
        self.assertTrue(TestLexer.test('''Class _:a{}Class _1_Q:_{Val $1,$_fj_,_:Array [Array [Array [Int ,01],01],0XF];}Class _4_{}Class _:w{}Class _{}Class _:_{}''','''Class,_,:,a,{,},Class,_1_Q,:,_,{,Val,$1,,,$_fj_,,,_,:,Array,[,Array,[,Array,[,Int,,,01,],,,01,],,,0XF,],;,},Class,_4_,{,},Class,_,:,w,{,},Class,_,{,},Class,_,:,_,{,},<EOF>''',101))

    def test_690(self):
        self.assertTrue(TestLexer.test('''Class SI:r2H{_YY__(K:Array [Float ,47];_:Array [Array [String ,0XD],0X2_E_0_5];_,a:Array [Array [Int ,0x4],0XD]){} }''','''Class,SI,:,r2H,{,_YY__,(,K,:,Array,[,Float,,,47,],;,_,:,Array,[,Array,[,String,,,0XD,],,,0X2E05,],;,_,,,a,:,Array,[,Array,[,Int,,,0x4,],,,0XD,],),{,},},<EOF>''',101))

    def test_691(self):
        self.assertTrue(TestLexer.test('''Class Q_:oMn_{$M(e7_,_yH,Q,K_,_:_;G,e,a,_,_4_:Array [Array [Float ,5],89];_:Array [Boolean ,0143];_4:d_9_d;__,E_r4_04__2,C:_a6){}$_6(y:_;_,__2,_:String ){} }''','''Class,Q_,:,oMn_,{,$M,(,e7_,,,_yH,,,Q,,,K_,,,_,:,_,;,G,,,e,,,a,,,_,,,_4_,:,Array,[,Array,[,Float,,,5,],,,89,],;,_,:,Array,[,Boolean,,,0143,],;,_4,:,d_9_d,;,__,,,E_r4_04__2,,,C,:,_a6,),{,},$_6,(,y,:,_,;,_,,,__2,,,_,:,String,),{,},},<EOF>''',101))

    def test_692(self):
        self.assertTrue(TestLexer.test('''Class T1W{Val _3:_;Destructor (){}Destructor (){Continue ;}Destructor (){} }Class II{}Class dr:_{}Class _:c___{Var $_:u;Var _,_:String ;}Class ____:_{}Class _61me:p{}''','''Class,T1W,{,Val,_3,:,_,;,Destructor,(,),{,},Destructor,(,),{,Continue,;,},Destructor,(,),{,},},Class,II,{,},Class,dr,:,_,{,},Class,_,:,c___,{,Var,$_,:,u,;,Var,_,,,_,:,String,;,},Class,____,:,_,{,},Class,_61me,:,p,{,},<EOF>''',101))

    def test_693(self):
        self.assertTrue(TestLexer.test('''Class yY{mq0_M(___,_,__,S,_2:Array [Array [Boolean ,04],0B1_0_1_1];s,aq:String ){} }Class _74{Var $_:Array [Int ,05_7];}''','''Class,yY,{,mq0_M,(,___,,,_,,,__,,,S,,,_2,:,Array,[,Array,[,Boolean,,,04,],,,0B1011,],;,s,,,aq,:,String,),{,},},Class,_74,{,Var,$_,:,Array,[,Int,,,057,],;,},<EOF>''',101))

    def test_694(self):
        self.assertTrue(TestLexer.test('''Class O{Constructor (){}$1(___:Array [Array [Array [Float ,99],07_1],0X9_1_4E];S_1431:Array [Boolean ,4];_:tl){}Constructor (){} }''','''Class,O,{,Constructor,(,),{,},$1,(,___,:,Array,[,Array,[,Array,[,Float,,,99,],,,071,],,,0X914E,],;,S_1431,:,Array,[,Boolean,,,4,],;,_,:,tl,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_695(self):
        self.assertTrue(TestLexer.test('''Class s9{Constructor (_I_:D_;L_,_:Array [Array [Array [Float ,0b11],1821],0B1010110]){Val _1T_:Array [Int ,0B1_1];} }''','''Class,s9,{,Constructor,(,_I_,:,D_,;,L_,,,_,:,Array,[,Array,[,Array,[,Float,,,0b11,],,,1821,],,,0B1010110,],),{,Val,_1T_,:,Array,[,Int,,,0B11,],;,},},<EOF>''',101))

    def test_696(self):
        self.assertTrue(TestLexer.test('''Class h:Y_{$D(H_:Array [Float ,0b1];_,_,f_,Y,_,q,a,_:Array [Float ,48];__P_:Array [String ,0106];zX:Array [Boolean ,994_85_4]){} }''','''Class,h,:,Y_,{,$D,(,H_,:,Array,[,Float,,,0b1,],;,_,,,_,,,f_,,,Y,,,_,,,q,,,a,,,_,:,Array,[,Float,,,48,],;,__P_,:,Array,[,String,,,0106,],;,zX,:,Array,[,Boolean,,,994854,],),{,},},<EOF>''',101))

    def test_697(self):
        self.assertTrue(TestLexer.test('''Class F:g__9{}Class n:__{Val $_2,$7:Array [Array [Float ,0X2FA],40];Destructor (){}$V86_(r_v0_849,E3:Int ;___5:String ){} }Class Z{V__(){} }''','''Class,F,:,g__9,{,},Class,n,:,__,{,Val,$_2,,,$7,:,Array,[,Array,[,Float,,,0X2FA,],,,40,],;,Destructor,(,),{,},$V86_,(,r_v0_849,,,E3,:,Int,;,___5,:,String,),{,},},Class,Z,{,V__,(,),{,},},<EOF>''',101))

    def test_698(self):
        self.assertTrue(TestLexer.test('''Class _K_{}Class _{Var $s7_:Float ;Destructor (){}B(h,l:g1b){Var _,_:_;}Var NcKd,_3_,F,j_,$K,V:String ;Var $_X_:Array [Array [Int ,05],14];}''','''Class,_K_,{,},Class,_,{,Var,$s7_,:,Float,;,Destructor,(,),{,},B,(,h,,,l,:,g1b,),{,Var,_,,,_,:,_,;,},Var,NcKd,,,_3_,,,F,,,j_,,,$K,,,V,:,String,;,Var,$_X_,:,Array,[,Array,[,Int,,,05,],,,14,],;,},<EOF>''',101))

    def test_699(self):
        self.assertTrue(TestLexer.test('''Class _{}Class x{Constructor (v:Array [Array [Array [Array [Boolean ,0B110],24],24],0114];___p,X_TD,l,_t_:Int ;_8,J_i,M,n5,_2:String ){} }''','''Class,_,{,},Class,x,{,Constructor,(,v,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B110,],,,24,],,,24,],,,0114,],;,___p,,,X_TD,,,l,,,_t_,:,Int,;,_8,,,J_i,,,M,,,n5,,,_2,:,String,),{,},},<EOF>''',101))

    def test_700(self):
        self.assertTrue(TestLexer.test('''Class x:U{$_(kDZ,_:Array [String ,030];_:Array [String ,031_72];B,__PW:Int ;w_3_:Int ;v,U,_:String ;_:String ){} }''','''Class,x,:,U,{,$_,(,kDZ,,,_,:,Array,[,String,,,030,],;,_,:,Array,[,String,,,03172,],;,B,,,__PW,:,Int,;,w_3_,:,Int,;,v,,,U,,,_,:,String,;,_,:,String,),{,},},<EOF>''',101))

    def test_701(self):
        self.assertTrue(TestLexer.test('''Class om{Destructor (){Break ;{} }}Class _{Destructor (){Break ;}_(){}M(r,i,ll:Array [Array [Array [Int ,0120],92],0x62]){Return ;}Val _,_:_;}Class D_:b0{Constructor (){} }Class __6_:_pj__{}''','''Class,om,{,Destructor,(,),{,Break,;,{,},},},Class,_,{,Destructor,(,),{,Break,;,},_,(,),{,},M,(,r,,,i,,,ll,:,Array,[,Array,[,Array,[,Int,,,0120,],,,92,],,,0x62,],),{,Return,;,},Val,_,,,_,:,_,;,},Class,D_,:,b0,{,Constructor,(,),{,},},Class,__6_,:,_pj__,{,},<EOF>''',101))

    def test_702(self):
        self.assertTrue(TestLexer.test('''Class S:_{}Class LH2__:v{Var _,_oq,$Oz:Boolean ;}Class A{$T(_706,_,u_,_:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0127],0XC],14],07_45_42],89],0XB],0b111011],0127];bJh_0q:Array [Boolean ,14]){Break ;} }''','''Class,S,:,_,{,},Class,LH2__,:,v,{,Var,_,,,_oq,,,$Oz,:,Boolean,;,},Class,A,{,$T,(,_706,,,_,,,u_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0127,],,,0XC,],,,14,],,,074542,],,,89,],,,0XB,],,,0b111011,],,,0127,],;,bJh_0q,:,Array,[,Boolean,,,14,],),{,Break,;,},},<EOF>''',101))

    def test_703(self):
        self.assertTrue(TestLexer.test('''Class M_:hT9{}Class T{Destructor (){}Constructor (X:___;Z,V9:Float ;_U:String ;q:I){}Var A,$LCEk_,$_1:Array [Array [Boolean ,0xA],04];}''','''Class,M_,:,hT9,{,},Class,T,{,Destructor,(,),{,},Constructor,(,X,:,___,;,Z,,,V9,:,Float,;,_U,:,String,;,q,:,I,),{,},Var,A,,,$LCEk_,,,$_1,:,Array,[,Array,[,Boolean,,,0xA,],,,04,],;,},<EOF>''',101))

    def test_704(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (L,m2:Int ;_3,_,_,_,_:Array [Array [Float ,76],0X4];_p,w,B,_:Array [Array [Float ,064],712];iH,m_:Int ){}Var f:Array [Array [Array [String ,63_8],0B110001],2];}Class _7:x{Val _,$_H2:Array [Array [Float ,0X55],8];}Class _4:jz{Destructor (){}Constructor (){}Destructor (){} }''','''Class,_,{,Constructor,(,L,,,m2,:,Int,;,_3,,,_,,,_,,,_,,,_,:,Array,[,Array,[,Float,,,76,],,,0X4,],;,_p,,,w,,,B,,,_,:,Array,[,Array,[,Float,,,064,],,,712,],;,iH,,,m_,:,Int,),{,},Var,f,:,Array,[,Array,[,Array,[,String,,,638,],,,0B110001,],,,2,],;,},Class,_7,:,x,{,Val,_,,,$_H2,:,Array,[,Array,[,Float,,,0X55,],,,8,],;,},Class,_4,:,jz,{,Destructor,(,),{,},Constructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_705(self):
        self.assertTrue(TestLexer.test('''Class __8a:_{Constructor (_,F:Array [String ,100];vE_,K43:_;Eq:Int ;__5K,q:Int ){} }Class o256:c{Val _,_,$5:Array [Int ,0B1_0];}Class V:_{}Class __:EI2{}Class I_{}''','''Class,__8a,:,_,{,Constructor,(,_,,,F,:,Array,[,String,,,100,],;,vE_,,,K43,:,_,;,Eq,:,Int,;,__5K,,,q,:,Int,),{,},},Class,o256,:,c,{,Val,_,,,_,,,$5,:,Array,[,Int,,,0B10,],;,},Class,V,:,_,{,},Class,__,:,EI2,{,},Class,I_,{,},<EOF>''',101))

    def test_706(self):
        self.assertTrue(TestLexer.test('''Class X{}Class _{Destructor (){} }Class j_:H{}Class _{Var T:_;}Class q:__4r{Val A,$_o,YI,$1,$_X,_:Array [Array [Float ,063],61];}Class z3_{Var $v:Float ;}''','''Class,X,{,},Class,_,{,Destructor,(,),{,},},Class,j_,:,H,{,},Class,_,{,Var,T,:,_,;,},Class,q,:,__4r,{,Val,A,,,$_o,,,YI,,,$1,,,$_X,,,_,:,Array,[,Array,[,Float,,,063,],,,61,],;,},Class,z3_,{,Var,$v,:,Float,;,},<EOF>''',101))

    def test_707(self):
        self.assertTrue(TestLexer.test('''Class _{}Class e4_K_{}Class __{Constructor (_,U_G,x6_68,_,V:Boolean ;_,pn5:_W;H,b_5_S:e;_7q_:Float ){}Val $_:_;Destructor (){}Var _:Float ;}''','''Class,_,{,},Class,e4_K_,{,},Class,__,{,Constructor,(,_,,,U_G,,,x6_68,,,_,,,V,:,Boolean,;,_,,,pn5,:,_W,;,H,,,b_5_S,:,e,;,_7q_,:,Float,),{,},Val,$_,:,_,;,Destructor,(,),{,},Var,_,:,Float,;,},<EOF>''',101))

    def test_708(self):
        self.assertTrue(TestLexer.test('''Class _9{_(){} }Class W979{}Class i_3k2_X{a(_8571_:Int ;sbm_,_:Array [Int ,0X4_A]){Continue ;}$5(){Break ;} }Class M:q1{Var $_:Qv;}''','''Class,_9,{,_,(,),{,},},Class,W979,{,},Class,i_3k2_X,{,a,(,_8571_,:,Int,;,sbm_,,,_,:,Array,[,Int,,,0X4A,],),{,Continue,;,},$5,(,),{,Break,;,},},Class,M,:,q1,{,Var,$_,:,Qv,;,},<EOF>''',101))

    def test_709(self):
        self.assertTrue(TestLexer.test('''Class __7{Val $7_4:Int ;}Class __p_9nb8{Constructor (_:Array [Array [Array [Array [Float ,92],0X21],0X7],590]){ {} }}''','''Class,__7,{,Val,$7_4,:,Int,;,},Class,__p_9nb8,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,92,],,,0X21,],,,0X7,],,,590,],),{,{,},},},<EOF>''',101))

    def test_710(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class D:_{Val Th_:_T_;Var $S,_:Array [Array [Array [Array [Array [Array [Array [String ,0xE],0XAE32],0xA],02],06_1],0b101000],3_99_422];Destructor (){} }''','''Class,_,:,_,{,},Class,D,:,_,{,Val,Th_,:,_T_,;,Var,$S,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0xE,],,,0XAE32,],,,0xA,],,,02,],,,061,],,,0b101000,],,,399422,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_711(self):
        self.assertTrue(TestLexer.test('''Class G:_W{}Class Bv:_{}Class _0M_:X4{Constructor (____1v:E69;M,_6:String ){Var h:Array [Array [Array [Int ,0X4],9_7_6],0B100111];} }Class _6{Val $_:Boolean ;}Class _796_{}''','''Class,G,:,_W,{,},Class,Bv,:,_,{,},Class,_0M_,:,X4,{,Constructor,(,____1v,:,E69,;,M,,,_6,:,String,),{,Var,h,:,Array,[,Array,[,Array,[,Int,,,0X4,],,,976,],,,0B100111,],;,},},Class,_6,{,Val,$_,:,Boolean,;,},Class,_796_,{,},<EOF>''',101))

    def test_712(self):
        self.assertTrue(TestLexer.test('''Class e{}Class h52c{Val pW,$C,_7:Array [Float ,05_2_3];l(_:__4;n:Array [Array [Array [Float ,0x1],61],0X57];nP1:Float ;v,h80,_:eq_k_){} }Class _:T{}Class I1:__{}''','''Class,e,{,},Class,h52c,{,Val,pW,,,$C,,,_7,:,Array,[,Float,,,0523,],;,l,(,_,:,__4,;,n,:,Array,[,Array,[,Array,[,Float,,,0x1,],,,61,],,,0X57,],;,nP1,:,Float,;,v,,,h80,,,_,:,eq_k_,),{,},},Class,_,:,T,{,},Class,I1,:,__,{,},<EOF>''',101))

    def test_713(self):
        self.assertTrue(TestLexer.test('''Class ktwC:____K{$4t_(_m:Array [Array [Array [Array [Array [Float ,0XA],0b1011101],065],0b1],84];MX,Ry,UQ__w4,k_m,_:Array [Array [Array [Array [Int ,0x5B],0b1],06_33],84];_L42,o22_:Array [Float ,0b1011101];_,j_:Float ;_,D,_,mr_b_:Array [Boolean ,0B1000000]){} }''','''Class,ktwC,:,____K,{,$4t_,(,_m,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0XA,],,,0b1011101,],,,065,],,,0b1,],,,84,],;,MX,,,Ry,,,UQ__w4,,,k_m,,,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x5B,],,,0b1,],,,0633,],,,84,],;,_L42,,,o22_,:,Array,[,Float,,,0b1011101,],;,_,,,j_,:,Float,;,_,,,D,,,_,,,mr_b_,:,Array,[,Boolean,,,0B1000000,],),{,},},<EOF>''',101))

    def test_714(self):
        self.assertTrue(TestLexer.test('''Class _h{Var r,_,_0,$r:Array [Array [Int ,0B1000],0X1F];}Class vk_RO{Destructor (){} }Class s7U{}Class k:Qr_{Val o__:Array [Array [Boolean ,5],100];}''','''Class,_h,{,Var,r,,,_,,,_0,,,$r,:,Array,[,Array,[,Int,,,0B1000,],,,0X1F,],;,},Class,vk_RO,{,Destructor,(,),{,},},Class,s7U,{,},Class,k,:,Qr_,{,Val,o__,:,Array,[,Array,[,Boolean,,,5,],,,100,],;,},<EOF>''',101))

    def test_715(self):
        self.assertTrue(TestLexer.test('''Class _X{$32J6(_V,V:Array [Array [Int ,41],0X34]){}Val $7,$Z,X_,$_,$B7n3_,$_9hf_5:_4_;Val f_,_:Array [Int ,0X34];}Class P___{}Class m:__{Var _J4_p6h,$bp,_:Array [Int ,0137];Var K,Z,_:Array [Array [Array [Float ,0B1],0b1],0B1110];}''','''Class,_X,{,$32J6,(,_V,,,V,:,Array,[,Array,[,Int,,,41,],,,0X34,],),{,},Val,$7,,,$Z,,,X_,,,$_,,,$B7n3_,,,$_9hf_5,:,_4_,;,Val,f_,,,_,:,Array,[,Int,,,0X34,],;,},Class,P___,{,},Class,m,:,__,{,Var,_J4_p6h,,,$bp,,,_,:,Array,[,Int,,,0137,],;,Var,K,,,Z,,,_,:,Array,[,Array,[,Array,[,Float,,,0B1,],,,0b1,],,,0B1110,],;,},<EOF>''',101))

    def test_716(self):
        self.assertTrue(TestLexer.test('''Class ETC:J{}Class l{Constructor (){}Destructor (){}Constructor (_,D_:Float ){ {{}Continue ;Continue ;}Return ;Continue ;} }''','''Class,ETC,:,J,{,},Class,l,{,Constructor,(,),{,},Destructor,(,),{,},Constructor,(,_,,,D_,:,Float,),{,{,{,},Continue,;,Continue,;,},Return,;,Continue,;,},},<EOF>''',101))

    def test_717(self):
        self.assertTrue(TestLexer.test('''Class N:_{Constructor (_o_7:Z;_,B,f,n6,Y,p0,_:Array [Float ,0b1]){Continue ;}Val __4_w,A:Array [Float ,07];Destructor (){ {} }Destructor (){} }''','''Class,N,:,_,{,Constructor,(,_o_7,:,Z,;,_,,,B,,,f,,,n6,,,Y,,,p0,,,_,:,Array,[,Float,,,0b1,],),{,Continue,;,},Val,__4_w,,,A,:,Array,[,Float,,,07,],;,Destructor,(,),{,{,},},Destructor,(,),{,},},<EOF>''',101))

    def test_718(self):
        self.assertTrue(TestLexer.test('''Class B6l:_{}Class _:_{}Class _EX{$3(){Var z87_,PP,A,_61,H:l_;}Constructor (pt:Int ){}_8_(Q_E28,_:String ;x:Array [Array [Float ,1_6],21];jOC,i_Q:String ;T:Float ){Continue ;} }''','''Class,B6l,:,_,{,},Class,_,:,_,{,},Class,_EX,{,$3,(,),{,Var,z87_,,,PP,,,A,,,_61,,,H,:,l_,;,},Constructor,(,pt,:,Int,),{,},_8_,(,Q_E28,,,_,:,String,;,x,:,Array,[,Array,[,Float,,,16,],,,21,],;,jOC,,,i_Q,:,String,;,T,:,Float,),{,Continue,;,},},<EOF>''',101))

    def test_719(self):
        self.assertTrue(TestLexer.test('''Class __N{}Class _{}Class _{Var R6,N:__;Var _5o3w,$_:_g;Constructor (_Z4u_:Array [Array [Float ,0x5F],8_5_6];E:__;U,__,wDF_,R_:Array [Array [Boolean ,0x5_D],07];z8:Int ;S:__Y){}_(_,A:Array [Float ,0B110_01_0_0_1_00_1];_O:Array [Array [Array [Array [Boolean ,0b1100010],07],02],0X24]){}Var $d:Array [Array [Array [Boolean ,0X24],07],07];}''','''Class,__N,{,},Class,_,{,},Class,_,{,Var,R6,,,N,:,__,;,Var,_5o3w,,,$_,:,_g,;,Constructor,(,_Z4u_,:,Array,[,Array,[,Float,,,0x5F,],,,856,],;,E,:,__,;,U,,,__,,,wDF_,,,R_,:,Array,[,Array,[,Boolean,,,0x5D,],,,07,],;,z8,:,Int,;,S,:,__Y,),{,},_,(,_,,,A,:,Array,[,Float,,,0B11001001001,],;,_O,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1100010,],,,07,],,,02,],,,0X24,],),{,},Var,$d,:,Array,[,Array,[,Array,[,Boolean,,,0X24,],,,07,],,,07,],;,},<EOF>''',101))

    def test_720(self):
        self.assertTrue(TestLexer.test('''Class l{Destructor (){} }Class BgF:_F{Val n_l,z:Array [Array [Float ,1],8_6];Var $3,$rH_:Boolean ;}Class Pc__6:_5A5{Constructor (Rf8:Boolean ){}Constructor (){}$4c69V(){}$l2N(){} }''','''Class,l,{,Destructor,(,),{,},},Class,BgF,:,_F,{,Val,n_l,,,z,:,Array,[,Array,[,Float,,,1,],,,86,],;,Var,$3,,,$rH_,:,Boolean,;,},Class,Pc__6,:,_5A5,{,Constructor,(,Rf8,:,Boolean,),{,},Constructor,(,),{,},$4c69V,(,),{,},$l2N,(,),{,},},<EOF>''',101))

    def test_721(self):
        self.assertTrue(TestLexer.test('''Class HY4W{$_(L:Array [Float ,0B1001000];_:String ;_,qtX,x:Array [Boolean ,94]){}Val $or:Boolean ;$9(h,_9,C,_:String ;ot,_V__,_:Float ){} }Class K{Val _,_k:B;}Class _{Destructor (){}Destructor (){} }''','''Class,HY4W,{,$_,(,L,:,Array,[,Float,,,0B1001000,],;,_,:,String,;,_,,,qtX,,,x,:,Array,[,Boolean,,,94,],),{,},Val,$or,:,Boolean,;,$9,(,h,,,_9,,,C,,,_,:,String,;,ot,,,_V__,,,_,:,Float,),{,},},Class,K,{,Val,_,,,_k,:,B,;,},Class,_,{,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_722(self):
        self.assertTrue(TestLexer.test('''Class ___S3{T(){}Constructor (rf,A___qU__:Array [Array [Boolean ,0XC],0b1];_f:Array [Float ,010]){}Var _U90,$z,$__,C0_,$_:Array [Array [Array [Array [String ,0xB],98],0X9_D],98];Var $x:c7;R(){} }''','''Class,___S3,{,T,(,),{,},Constructor,(,rf,,,A___qU__,:,Array,[,Array,[,Boolean,,,0XC,],,,0b1,],;,_f,:,Array,[,Float,,,010,],),{,},Var,_U90,,,$z,,,$__,,,C0_,,,$_,:,Array,[,Array,[,Array,[,Array,[,String,,,0xB,],,,98,],,,0X9D,],,,98,],;,Var,$x,:,c7,;,R,(,),{,},},<EOF>''',101))

    def test_723(self):
        self.assertTrue(TestLexer.test('''Class __:B{Destructor (){Continue ;Return ;}Constructor (m,S,I1074ho:String ;__x:Array [Array [Array [Float ,0X7_0],81],0b11]){} }Class P:m{}''','''Class,__,:,B,{,Destructor,(,),{,Continue,;,Return,;,},Constructor,(,m,,,S,,,I1074ho,:,String,;,__x,:,Array,[,Array,[,Array,[,Float,,,0X70,],,,81,],,,0b11,],),{,},},Class,P,:,m,{,},<EOF>''',101))

    def test_724(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (S,Q,__1,_:Float ){} }Class dT{Var _d_,$1K,_:Array [String ,212];}Class U{Destructor (){} }Class _{}''','''Class,_,{,Constructor,(,S,,,Q,,,__1,,,_,:,Float,),{,},},Class,dT,{,Var,_d_,,,$1K,,,_,:,Array,[,String,,,212,],;,},Class,U,{,Destructor,(,),{,},},Class,_,{,},<EOF>''',101))

    def test_725(self):
        self.assertTrue(TestLexer.test('''Class _N9Uc:__{Constructor (Z:Boolean ;_3,eR_6P,_,_:Array [Array [Array [String ,71_6_4],0x31],0X25C8_4ADB];we:Array [Int ,0b11001]){Continue ;Return ;Break ;Continue ;} }Class _T:x5{_9p(_:f;Y:b){} }''','''Class,_N9Uc,:,__,{,Constructor,(,Z,:,Boolean,;,_3,,,eR_6P,,,_,,,_,:,Array,[,Array,[,Array,[,String,,,7164,],,,0x31,],,,0X25C84ADB,],;,we,:,Array,[,Int,,,0b11001,],),{,Continue,;,Return,;,Break,;,Continue,;,},},Class,_T,:,x5,{,_9p,(,_,:,f,;,Y,:,b,),{,},},<EOF>''',101))

    def test_726(self):
        self.assertTrue(TestLexer.test('''Class __6m{Constructor (_,_:Boolean ;_:Array [Array [Array [Array [Array [Boolean ,0B1000110],0XA1D3_A],05_7],05],0B1000110];H4,_,_,_:Int ){} }Class a:b{}''','''Class,__6m,{,Constructor,(,_,,,_,:,Boolean,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1000110,],,,0XA1D3A,],,,057,],,,05,],,,0B1000110,],;,H4,,,_,,,_,,,_,:,Int,),{,},},Class,a,:,b,{,},<EOF>''',101))

    def test_727(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_,f:Boolean ;j2,_p:_O8_X0_;_,__,C,U,p,_1_:Array [Array [Array [Float ,0X6],0xD],0XF];r_,u__:Boolean ){} }Class OJ_{}Class X5_:_{Destructor (){} }''','''Class,_,{,Constructor,(,_,,,f,:,Boolean,;,j2,,,_p,:,_O8_X0_,;,_,,,__,,,C,,,U,,,p,,,_1_,:,Array,[,Array,[,Array,[,Float,,,0X6,],,,0xD,],,,0XF,],;,r_,,,u__,:,Boolean,),{,},},Class,OJ_,{,},Class,X5_,:,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_728(self):
        self.assertTrue(TestLexer.test('''Class _4:_{Val $15_,_,$_:_;}Class K2_{Var $_2:_;Ty1n_(_7Ye,_23_2:String ;_:___;Y,_:Array [String ,80]){} }Class _:_7{}''','''Class,_4,:,_,{,Val,$15_,,,_,,,$_,:,_,;,},Class,K2_,{,Var,$_2,:,_,;,Ty1n_,(,_7Ye,,,_23_2,:,String,;,_,:,___,;,Y,,,_,:,Array,[,String,,,80,],),{,},},Class,_,:,_7,{,},<EOF>''',101))

    def test_729(self):
        self.assertTrue(TestLexer.test('''Class __:_2_{}Class _3{Destructor (){Continue ;}Constructor (){New W1().r().X.W9v();}Destructor (){Continue ;} }''','''Class,__,:,_2_,{,},Class,_3,{,Destructor,(,),{,Continue,;,},Constructor,(,),{,New,W1,(,),.,r,(,),.,X,.,W9v,(,),;,},Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_730(self):
        self.assertTrue(TestLexer.test('''Class __:__{Constructor (_,_9V_:Int ){Return ;} }Class _{}Class _2T_v:_{Var $V:Array [Array [Array [Array [String ,0b100_1_1_1_1],035],0B1_11],75_7];}''','''Class,__,:,__,{,Constructor,(,_,,,_9V_,:,Int,),{,Return,;,},},Class,_,{,},Class,_2T_v,:,_,{,Var,$V,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1001111,],,,035,],,,0B111,],,,757,],;,},<EOF>''',101))

    def test_731(self):
        self.assertTrue(TestLexer.test('''Class _co1_:Hh__8{Var $9,_5:Array [Int ,0B101];}Class c:_{Constructor (_4b_5w,_:Array [Float ,0x6_4_7]){}Var $9:_;Val j:_4pXS;}''','''Class,_co1_,:,Hh__8,{,Var,$9,,,_5,:,Array,[,Int,,,0B101,],;,},Class,c,:,_,{,Constructor,(,_4b_5w,,,_,:,Array,[,Float,,,0x647,],),{,},Var,$9,:,_,;,Val,j,:,_4pXS,;,},<EOF>''',101))

    def test_732(self):
        self.assertTrue(TestLexer.test('''Class JSR56:t__5_0{}Class _:z{$4(_Q,_qp,_:Array [Boolean ,0b1100100];_,_:Boolean ;p,_,fI:_Nl){Continue ;_::$_7__IT_();}$l(_:B){} }''','''Class,JSR56,:,t__5_0,{,},Class,_,:,z,{,$4,(,_Q,,,_qp,,,_,:,Array,[,Boolean,,,0b1100100,],;,_,,,_,:,Boolean,;,p,,,_,,,fI,:,_Nl,),{,Continue,;,_,::,$_7__IT_,(,),;,},$l,(,_,:,B,),{,},},<EOF>''',101))

    def test_733(self):
        self.assertTrue(TestLexer.test('''Class l_:Npp8{}Class __xb{}Class b_:__0{}Class c_O:i7{Val $_P9__:Array [Boolean ,043];Var $5,$Yx:_;Constructor (O:_4;_:_7__7;WC3q_K__:String ;al,_x,_,_,_:Array [Array [Array [Int ,78],5],0b1];vu,__,_:String ;_,j____s:Array [Int ,78]){} }Class _9:_8F{}Class f:w{}Class _:_{}Class y:_{Destructor (){} }''','''Class,l_,:,Npp8,{,},Class,__xb,{,},Class,b_,:,__0,{,},Class,c_O,:,i7,{,Val,$_P9__,:,Array,[,Boolean,,,043,],;,Var,$5,,,$Yx,:,_,;,Constructor,(,O,:,_4,;,_,:,_7__7,;,WC3q_K__,:,String,;,al,,,_x,,,_,,,_,,,_,:,Array,[,Array,[,Array,[,Int,,,78,],,,5,],,,0b1,],;,vu,,,__,,,_,:,String,;,_,,,j____s,:,Array,[,Int,,,78,],),{,},},Class,_9,:,_8F,{,},Class,f,:,w,{,},Class,_,:,_,{,},Class,y,:,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_734(self):
        self.assertTrue(TestLexer.test('''Class J{}Class _7_0_6:X_{Destructor (){Break ;} }Class _h{}Class K:x{Val _,$8_,V_:Array [Float ,040];}Class J{Val c:Float ;}''','''Class,J,{,},Class,_7_0_6,:,X_,{,Destructor,(,),{,Break,;,},},Class,_h,{,},Class,K,:,x,{,Val,_,,,$8_,,,V_,:,Array,[,Float,,,040,],;,},Class,J,{,Val,c,:,Float,;,},<EOF>''',101))

    def test_735(self):
        self.assertTrue(TestLexer.test('''Class e{Constructor (r:Boolean ;_:String ;_:Array [Boolean ,9_2];_7,_c_9:String ;_,_E48,U,__gr,L7_:Int ;O:C;___I5_9_r,_w,Gn7__2_S2q,f_,_,_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,01],07],0B100011],1],0xB],0b1],01],0B100011],0b111110];j,_,ni,__:String ;U__,_:_72n){} }''','''Class,e,{,Constructor,(,r,:,Boolean,;,_,:,String,;,_,:,Array,[,Boolean,,,92,],;,_7,,,_c_9,:,String,;,_,,,_E48,,,U,,,__gr,,,L7_,:,Int,;,O,:,C,;,___I5_9_r,,,_w,,,Gn7__2_S2q,,,f_,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,01,],,,07,],,,0B100011,],,,1,],,,0xB,],,,0b1,],,,01,],,,0B100011,],,,0b111110,],;,j,,,_,,,ni,,,__,:,String,;,U__,,,_,:,_72n,),{,},},<EOF>''',101))

    def test_736(self):
        self.assertTrue(TestLexer.test('''Class __{}Class y_{Destructor (){Continue ;}$6_(){Var mki_:Array [Array [Array [Array [Int ,9],043],0X3C],0x3F];} }''','''Class,__,{,},Class,y_,{,Destructor,(,),{,Continue,;,},$6_,(,),{,Var,mki_,:,Array,[,Array,[,Array,[,Array,[,Int,,,9,],,,043,],,,0X3C,],,,0x3F,],;,},},<EOF>''',101))

    def test_737(self):
        self.assertTrue(TestLexer.test('''Class _8{Val _:_3;BF_1_n5_ic(q,g,s_:Array [Float ,076]){} }Class Y___:s{Constructor (__E7,_qU51,_7:String ){s::$0();}Val _7,_H:_;Val n,_4_I_WRQ6,l:Int ;Val $7_:_;}''','''Class,_8,{,Val,_,:,_3,;,BF_1_n5_ic,(,q,,,g,,,s_,:,Array,[,Float,,,076,],),{,},},Class,Y___,:,s,{,Constructor,(,__E7,,,_qU51,,,_7,:,String,),{,s,::,$0,(,),;,},Val,_7,,,_H,:,_,;,Val,n,,,_4_I_WRQ6,,,l,:,Int,;,Val,$7_,:,_,;,},<EOF>''',101))

    def test_738(self):
        self.assertTrue(TestLexer.test('''Class _Z:Q__{}Class _OR_{Var _:Boolean ;}Class G:t{Constructor (){} }Class X{Constructor (){} }Class _R_{}Class h_1l_{}Class __p{$X(){Continue ;} }''','''Class,_Z,:,Q__,{,},Class,_OR_,{,Var,_,:,Boolean,;,},Class,G,:,t,{,Constructor,(,),{,},},Class,X,{,Constructor,(,),{,},},Class,_R_,{,},Class,h_1l_,{,},Class,__p,{,$X,(,),{,Continue,;,},},<EOF>''',101))

    def test_739(self):
        self.assertTrue(TestLexer.test('''Class _5D:l_{Var $_,$3,$P,$F,c,$7,__C,ss1,$c1,N:Array [Array [Int ,0b1010_0],0x1];Val mQ,$Y:S9;}Class d0g_0N3_:M{}''','''Class,_5D,:,l_,{,Var,$_,,,$3,,,$P,,,$F,,,c,,,$7,,,__C,,,ss1,,,$c1,,,N,:,Array,[,Array,[,Int,,,0b10100,],,,0x1,],;,Val,mQ,,,$Y,:,S9,;,},Class,d0g_0N3_,:,M,{,},<EOF>''',101))

    def test_740(self):
        self.assertTrue(TestLexer.test('''Class _{Var v7:Array [Array [Array [Array [Array [Array [Array [Array [Int ,73],0B1000000],0B1],0X3],0X2C],0X48],0B1000000],0XD];}Class f_{$7_(){} }''','''Class,_,{,Var,v7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,73,],,,0B1000000,],,,0B1,],,,0X3,],,,0X2C,],,,0X48,],,,0B1000000,],,,0XD,],;,},Class,f_,{,$7_,(,),{,},},<EOF>''',101))

    def test_741(self):
        self.assertTrue(TestLexer.test('''Class URK:_G{Val $__z_P:Array [String ,0B1];I_Fw(u_:Array [Int ,0b1];___:Array [Array [Boolean ,41],0136];a950J40e8g_7:L;K_,_,K,e,Y8Q_t_7E_5X,_,C,Q,_8_:_X){} }''','''Class,URK,:,_G,{,Val,$__z_P,:,Array,[,String,,,0B1,],;,I_Fw,(,u_,:,Array,[,Int,,,0b1,],;,___,:,Array,[,Array,[,Boolean,,,41,],,,0136,],;,a950J40e8g_7,:,L,;,K_,,,_,,,K,,,e,,,Y8Q_t_7E_5X,,,_,,,C,,,Q,,,_8_,:,_X,),{,},},<EOF>''',101))

    def test_742(self):
        self.assertTrue(TestLexer.test('''Class _8:__n8Gp{$7(Ll_,P:Array [Array [String ,0115],9]){} }Class _{Val b:Array [Boolean ,0xA4];Destructor (){} }Class k{Destructor (){} }''','''Class,_8,:,__n8Gp,{,$7,(,Ll_,,,P,:,Array,[,Array,[,String,,,0115,],,,9,],),{,},},Class,_,{,Val,b,:,Array,[,Boolean,,,0xA4,],;,Destructor,(,),{,},},Class,k,{,Destructor,(,),{,},},<EOF>''',101))

    def test_743(self):
        self.assertTrue(TestLexer.test('''Class r{Var $_:_2;}Class O{Var $___:Array [Array [Array [Array [Float ,05_16_2],0x6_7],82],074];}Class U4__:_5{}''','''Class,r,{,Var,$_,:,_2,;,},Class,O,{,Var,$___,:,Array,[,Array,[,Array,[,Array,[,Float,,,05162,],,,0x67,],,,82,],,,074,],;,},Class,U4__,:,_5,{,},<EOF>''',101))

    def test_744(self):
        self.assertTrue(TestLexer.test('''Class _{}Class L0:l{l_(_:_4;M_:Array [Array [Float ,0B1],0X43];_,I:Boolean ;OW:Array [Array [Array [Array [Array [Float ,04],87],0b1],073],0X5];_:_){} }''','''Class,_,{,},Class,L0,:,l,{,l_,(,_,:,_4,;,M_,:,Array,[,Array,[,Float,,,0B1,],,,0X43,],;,_,,,I,:,Boolean,;,OW,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,04,],,,87,],,,0b1,],,,073,],,,0X5,],;,_,:,_,),{,},},<EOF>''',101))

    def test_745(self):
        self.assertTrue(TestLexer.test('''Class _:__{}Class b8_qk{}Class Xj{}Class _dz0:V_{Val $_N_F8,E6,B,$9,_,z,Q4Ip:Array [Array [Boolean ,4],0b1];Destructor (){ {} }Var $0:Array [Array [String ,70],036];}''','''Class,_,:,__,{,},Class,b8_qk,{,},Class,Xj,{,},Class,_dz0,:,V_,{,Val,$_N_F8,,,E6,,,B,,,$9,,,_,,,z,,,Q4Ip,:,Array,[,Array,[,Boolean,,,4,],,,0b1,],;,Destructor,(,),{,{,},},Var,$0,:,Array,[,Array,[,String,,,70,],,,036,],;,},<EOF>''',101))

    def test_746(self):
        self.assertTrue(TestLexer.test('''Class F{Constructor (__3:Array [Array [Float ,91],0xE_3_F];_,X5,R_,_5,m_P5:_;_:_s;w,_:Array [Array [Int ,91],91];B:Float ;aM1,z2:HF7;Im1,_:Boolean ){} }''','''Class,F,{,Constructor,(,__3,:,Array,[,Array,[,Float,,,91,],,,0xE3F,],;,_,,,X5,,,R_,,,_5,,,m_P5,:,_,;,_,:,_s,;,w,,,_,:,Array,[,Array,[,Int,,,91,],,,91,],;,B,:,Float,;,aM1,,,z2,:,HF7,;,Im1,,,_,:,Boolean,),{,},},<EOF>''',101))

    def test_747(self):
        self.assertTrue(TestLexer.test('''Class _795{Destructor (){}Constructor (s:String ;_,_,u_:__4Z465b2_;_w_m,__,x,_j,_:Boolean ;__:Array [Array [Array [Array [Float ,0X30],52],0X30],0X5_6];_0dH,w,k,_,_:Float ){} }''','''Class,_795,{,Destructor,(,),{,},Constructor,(,s,:,String,;,_,,,_,,,u_,:,__4Z465b2_,;,_w_m,,,__,,,x,,,_j,,,_,:,Boolean,;,__,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X30,],,,52,],,,0X30,],,,0X56,],;,_0dH,,,w,,,k,,,_,,,_,:,Float,),{,},},<EOF>''',101))

    def test_748(self):
        self.assertTrue(TestLexer.test('''Class s8:Fe{Destructor (){Continue ;}Val _2:Array [Array [Array [Float ,0b100111],0x37],0B1];Destructor (){}Var $P:F_2;}''','''Class,s8,:,Fe,{,Destructor,(,),{,Continue,;,},Val,_2,:,Array,[,Array,[,Array,[,Float,,,0b100111,],,,0x37,],,,0B1,],;,Destructor,(,),{,},Var,$P,:,F_2,;,},<EOF>''',101))

    def test_749(self):
        self.assertTrue(TestLexer.test('''Class l{}Class MTn:d{__(V,_Lj,i7:r;__x6,qT__:Array [Array [Array [Array [Array [Float ,5],0XDF_08D_8],0x51],063],07];_,b6_s:Float ){}Val S,_3:Int ;Var Z____,q____:Array [Float ,0x324_0];}''','''Class,l,{,},Class,MTn,:,d,{,__,(,V,,,_Lj,,,i7,:,r,;,__x6,,,qT__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,5,],,,0XDF08D8,],,,0x51,],,,063,],,,07,],;,_,,,b6_s,:,Float,),{,},Val,S,,,_3,:,Int,;,Var,Z____,,,q____,:,Array,[,Float,,,0x3240,],;,},<EOF>''',101))

    def test_750(self):
        self.assertTrue(TestLexer.test('''Class JR{Var _:O;Val $_:Array [Array [Int ,0120],0120];}Class p:_{}Class _{}Class S{Constructor (k8,V_,_3H3,r,K:d;J:_){Return ;Continue ;Return ;Break ;} }Class D_{}Class __{Constructor (U_7,_:z){} }''','''Class,JR,{,Var,_,:,O,;,Val,$_,:,Array,[,Array,[,Int,,,0120,],,,0120,],;,},Class,p,:,_,{,},Class,_,{,},Class,S,{,Constructor,(,k8,,,V_,,,_3H3,,,r,,,K,:,d,;,J,:,_,),{,Return,;,Continue,;,Return,;,Break,;,},},Class,D_,{,},Class,__,{,Constructor,(,U_7,,,_,:,z,),{,},},<EOF>''',101))

    def test_751(self):
        self.assertTrue(TestLexer.test('''Class k:h70{}Class _{}Class _Ey9:_{$4(O0,c9:Int ){}Val $0,$1:Array [String ,0X25];Destructor (){}Val $8_Oig:H;}''','''Class,k,:,h70,{,},Class,_,{,},Class,_Ey9,:,_,{,$4,(,O0,,,c9,:,Int,),{,},Val,$0,,,$1,:,Array,[,String,,,0X25,],;,Destructor,(,),{,},Val,$8_Oig,:,H,;,},<EOF>''',101))

    def test_752(self):
        self.assertTrue(TestLexer.test('''Class Z{Var _:s;}Class p{Var $5qT0:Boolean ;Val h,$_:Array [Array [Array [Boolean ,7_19],0b1],0b10001];$sZW_4(pf,_1:Boolean ;B3:Z_w8Y_){} }''','''Class,Z,{,Var,_,:,s,;,},Class,p,{,Var,$5qT0,:,Boolean,;,Val,h,,,$_,:,Array,[,Array,[,Array,[,Boolean,,,719,],,,0b1,],,,0b10001,],;,$sZW_4,(,pf,,,_1,:,Boolean,;,B3,:,Z_w8Y_,),{,},},<EOF>''',101))

    def test_753(self):
        self.assertTrue(TestLexer.test('''Class JI:_31{Destructor (){} }Class _:_{Destructor (){} }Class _{$_C1(g:_d__r6017K;_1_:_nT){}Val _7:Array [Int ,6_35];Val K,g1:Float ;}''','''Class,JI,:,_31,{,Destructor,(,),{,},},Class,_,:,_,{,Destructor,(,),{,},},Class,_,{,$_C1,(,g,:,_d__r6017K,;,_1_,:,_nT,),{,},Val,_7,:,Array,[,Int,,,635,],;,Val,K,,,g1,:,Float,;,},<EOF>''',101))

    def test_754(self):
        self.assertTrue(TestLexer.test('''Class l8m0_{}Class IGr{M(){} }Class _{}Class B:_{Var $im6:Array [Boolean ,9_4];Constructor (){Return ;} }Class _:__A_1B{}''','''Class,l8m0_,{,},Class,IGr,{,M,(,),{,},},Class,_,{,},Class,B,:,_,{,Var,$im6,:,Array,[,Boolean,,,94,],;,Constructor,(,),{,Return,;,},},Class,_,:,__A_1B,{,},<EOF>''',101))

    def test_755(self):
        self.assertTrue(TestLexer.test('''Class n0{Constructor (_2,D_O,__:g;_s,_:Array [Boolean ,0x9];R,H,_v,C68,_,_,__:Array [Array [Array [String ,5],0b1001011],0b1]){} }''','''Class,n0,{,Constructor,(,_2,,,D_O,,,__,:,g,;,_s,,,_,:,Array,[,Boolean,,,0x9,],;,R,,,H,,,_v,,,C68,,,_,,,_,,,__,:,Array,[,Array,[,Array,[,String,,,5,],,,0b1001011,],,,0b1,],),{,},},<EOF>''',101))

    def test_756(self):
        self.assertTrue(TestLexer.test('''Class Q:G{}Class _N_{}Class _{Constructor (){} }Class _:_{b(OK_5vy9,mn_m3:Int ;_,_,_j,H9_6:Array [Array [Float ,1],1];_,V9ks1:Int ;k:Array [Array [Boolean ,0X34],51]){}Var $k,$7:_;}''','''Class,Q,:,G,{,},Class,_N_,{,},Class,_,{,Constructor,(,),{,},},Class,_,:,_,{,b,(,OK_5vy9,,,mn_m3,:,Int,;,_,,,_,,,_j,,,H9_6,:,Array,[,Array,[,Float,,,1,],,,1,],;,_,,,V9ks1,:,Int,;,k,:,Array,[,Array,[,Boolean,,,0X34,],,,51,],),{,},Var,$k,,,$7,:,_,;,},<EOF>''',101))

    def test_757(self):
        self.assertTrue(TestLexer.test('''Class mAm_{J(__544,_:__28;OA,Mf_:K9){}Destructor (){}Constructor (Z,n:K___){}Destructor (){_::$r1._();}Val _0:_;}''','''Class,mAm_,{,J,(,__544,,,_,:,__28,;,OA,,,Mf_,:,K9,),{,},Destructor,(,),{,},Constructor,(,Z,,,n,:,K___,),{,},Destructor,(,),{,_,::,$r1,.,_,(,),;,},Val,_0,:,_,;,},<EOF>''',101))

    def test_758(self):
        self.assertTrue(TestLexer.test('''Class __{$1Tb(_:Array [Int ,0b110111];Q,_,_:Boolean ;_h____,_M,C,__3:Array [Float ,0b1];J,_9_,__:_;___nK:T___){} }''','''Class,__,{,$1Tb,(,_,:,Array,[,Int,,,0b110111,],;,Q,,,_,,,_,:,Boolean,;,_h____,,,_M,,,C,,,__3,:,Array,[,Float,,,0b1,],;,J,,,_9_,,,__,:,_,;,___nK,:,T___,),{,},},<EOF>''',101))

    def test_759(self):
        self.assertTrue(TestLexer.test('''Class _{}Class Qd{Var $_,$E,$__15427_kQZ2:_;Destructor (){}Constructor (){}Val $_1,$m,O__,$5,E:Array [Array [Array [String ,013],0x6],0b1010100];}''','''Class,_,{,},Class,Qd,{,Var,$_,,,$E,,,$__15427_kQZ2,:,_,;,Destructor,(,),{,},Constructor,(,),{,},Val,$_1,,,$m,,,O__,,,$5,,,E,:,Array,[,Array,[,Array,[,String,,,013,],,,0x6,],,,0b1010100,],;,},<EOF>''',101))

    def test_760(self):
        self.assertTrue(TestLexer.test('''Class _:c{_(){ {}Return ;}Var _GHWI_:Array [Array [Boolean ,0126],0x2];Val $w:_;Constructor (){Continue ;}Val _3,__,_,$6,$1:Array [Array [String ,03_5],0xF_8F];}Class _:Y{Destructor (){} }''','''Class,_,:,c,{,_,(,),{,{,},Return,;,},Var,_GHWI_,:,Array,[,Array,[,Boolean,,,0126,],,,0x2,],;,Val,$w,:,_,;,Constructor,(,),{,Continue,;,},Val,_3,,,__,,,_,,,$6,,,$1,:,Array,[,Array,[,String,,,035,],,,0xF8F,],;,},Class,_,:,Y,{,Destructor,(,),{,},},<EOF>''',101))

    def test_761(self):
        self.assertTrue(TestLexer.test('''Class ix_L0:x_2{Var $c_F_,$X16:Array [String ,6];Constructor (P:Array [Array [Array [Array [Array [Array [Array [Array [String ,041],0b1],0b1010000],64],0x8],0b10],0b1],05];_:Array [Boolean ,0x3C]){}Var v,p_:Float ;}''','''Class,ix_L0,:,x_2,{,Var,$c_F_,,,$X16,:,Array,[,String,,,6,],;,Constructor,(,P,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,041,],,,0b1,],,,0b1010000,],,,64,],,,0x8,],,,0b10,],,,0b1,],,,05,],;,_,:,Array,[,Boolean,,,0x3C,],),{,},Var,v,,,p_,:,Float,;,},<EOF>''',101))

    def test_762(self):
        self.assertTrue(TestLexer.test('''Class _8G:_{}Class __{}Class _2_:w{}Class SO:_5{Destructor (){} }Class A:K{b(T:_;_88:Float ;_9:Array [String ,0x3]){}Destructor (){} }Class WZ:t{}Class _{}''','''Class,_8G,:,_,{,},Class,__,{,},Class,_2_,:,w,{,},Class,SO,:,_5,{,Destructor,(,),{,},},Class,A,:,K,{,b,(,T,:,_,;,_88,:,Float,;,_9,:,Array,[,String,,,0x3,],),{,},Destructor,(,),{,},},Class,WZ,:,t,{,},Class,_,{,},<EOF>''',101))

    def test_763(self):
        self.assertTrue(TestLexer.test('''Class s_{Constructor (u:Array [Array [Boolean ,0b111011],0XA];dK_7,HQ_62,dW:String ){} }Class _N{Val $4bA,$a,$9,x:_;Constructor (){}Constructor (_0El:String ){} }''','''Class,s_,{,Constructor,(,u,:,Array,[,Array,[,Boolean,,,0b111011,],,,0XA,],;,dK_7,,,HQ_62,,,dW,:,String,),{,},},Class,_N,{,Val,$4bA,,,$a,,,$9,,,x,:,_,;,Constructor,(,),{,},Constructor,(,_0El,:,String,),{,},},<EOF>''',101))

    def test_764(self):
        self.assertTrue(TestLexer.test('''Class V:_1{Var x8,_:Array [Int ,06];Destructor (){}Constructor (_,S_w924,WA__a,_,__,Cn5,___,m,G4,x,_:Array [Array [Int ,0X7],8_7]){Break ;}Val R:Float ;}Class v6{$1(_E,_5T:Float ;_,_:_){} }Class T:Q1{}''','''Class,V,:,_1,{,Var,x8,,,_,:,Array,[,Int,,,06,],;,Destructor,(,),{,},Constructor,(,_,,,S_w924,,,WA__a,,,_,,,__,,,Cn5,,,___,,,m,,,G4,,,x,,,_,:,Array,[,Array,[,Int,,,0X7,],,,87,],),{,Break,;,},Val,R,:,Float,;,},Class,v6,{,$1,(,_E,,,_5T,:,Float,;,_,,,_,:,_,),{,},},Class,T,:,Q1,{,},<EOF>''',101))

    def test_765(self):
        self.assertTrue(TestLexer.test('''Class _:p{Val $_M:Array [Array [Array [Array [Float ,9],01],0B111011],50];_(_,H:Gy){}__(h7:Array [String ,0B111011]){}Var $8_:Array [Array [Float ,07],0x62];}''','''Class,_,:,p,{,Val,$_M,:,Array,[,Array,[,Array,[,Array,[,Float,,,9,],,,01,],,,0B111011,],,,50,],;,_,(,_,,,H,:,Gy,),{,},__,(,h7,:,Array,[,String,,,0B111011,],),{,},Var,$8_,:,Array,[,Array,[,Float,,,07,],,,0x62,],;,},<EOF>''',101))

    def test_766(self):
        self.assertTrue(TestLexer.test('''Class S6{}Class _:_N2{Var $qX0,_:Array [Int ,86];U(I,m:G4;__:Array [Int ,0X13];T:__;D1:l;Y:BK;q,S2:Boolean ){} }Class o{}Class _:_Q{}Class ___{}Class LW2:_{Constructor (_:Int ){} }''','''Class,S6,{,},Class,_,:,_N2,{,Var,$qX0,,,_,:,Array,[,Int,,,86,],;,U,(,I,,,m,:,G4,;,__,:,Array,[,Int,,,0X13,],;,T,:,__,;,D1,:,l,;,Y,:,BK,;,q,,,S2,:,Boolean,),{,},},Class,o,{,},Class,_,:,_Q,{,},Class,___,{,},Class,LW2,:,_,{,Constructor,(,_,:,Int,),{,},},<EOF>''',101))

    def test_767(self):
        self.assertTrue(TestLexer.test('''Class _5:U_k2{Destructor (){} }Class _:____0__{$b(){Break ;} }Class Q:fW{Destructor (){Break ;Break ;} }Class _:Ny_{Constructor (){} }''','''Class,_5,:,U_k2,{,Destructor,(,),{,},},Class,_,:,____0__,{,$b,(,),{,Break,;,},},Class,Q,:,fW,{,Destructor,(,),{,Break,;,Break,;,},},Class,_,:,Ny_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_768(self):
        self.assertTrue(TestLexer.test('''Class ox_o:Q{$_o(_er0_,e_,_:Array [Array [Array [Array [Array [Float ,79],0b1],0XB_80],0b1010],0B1];j,M:Float ){} }Class x2:q{}Class W{}Class F:u3{}Class e_:O7{}''','''Class,ox_o,:,Q,{,$_o,(,_er0_,,,e_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,79,],,,0b1,],,,0XB80,],,,0b1010,],,,0B1,],;,j,,,M,:,Float,),{,},},Class,x2,:,q,{,},Class,W,{,},Class,F,:,u3,{,},Class,e_,:,O7,{,},<EOF>''',101))

    def test_769(self):
        self.assertTrue(TestLexer.test('''Class _:p9{Constructor (){Break ;}$_(H,_:String ;c:wi3_5){}Destructor (){Val _3M9___0,U,iY_0_11_:Array [Array [String ,0B1],0X17];} }''','''Class,_,:,p9,{,Constructor,(,),{,Break,;,},$_,(,H,,,_,:,String,;,c,:,wi3_5,),{,},Destructor,(,),{,Val,_3M9___0,,,U,,,iY_0_11_,:,Array,[,Array,[,String,,,0B1,],,,0X17,],;,},},<EOF>''',101))

    def test_770(self):
        self.assertTrue(TestLexer.test('''Class _:V00_d{}Class _F:w1{Destructor (){ {} }}Class S:j{}Class _{}Class _:U_{Var F,R,dS_:Boolean ;Constructor (){} }Class N371{Var U8:_;}Class _87{Val $7:Q42_;}''','''Class,_,:,V00_d,{,},Class,_F,:,w1,{,Destructor,(,),{,{,},},},Class,S,:,j,{,},Class,_,{,},Class,_,:,U_,{,Var,F,,,R,,,dS_,:,Boolean,;,Constructor,(,),{,},},Class,N371,{,Var,U8,:,_,;,},Class,_87,{,Val,$7,:,Q42_,;,},<EOF>''',101))

    def test_771(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _:G{Constructor (J:Boolean ;_:Array [Float ,0X3];x:Array [Array [Array [Int ,0b1000],35],0X3]){} }''','''Class,_,{,},Class,_,:,G,{,Constructor,(,J,:,Boolean,;,_,:,Array,[,Float,,,0X3,],;,x,:,Array,[,Array,[,Array,[,Int,,,0b1000,],,,35,],,,0X3,],),{,},},<EOF>''',101))

    def test_772(self):
        self.assertTrue(TestLexer.test('''Class P:g97{}Class _:__{$Q(_,__:Array [Int ,0B1000];_34C,Y:Boolean ;F_:Boolean ;_:Boolean ;__:Int ){}$0_(o:Float ;M6,l:Float ;_,__8____G,_,s__pPS,__F1_:h_;_:Boolean ){Continue ;Return ;{} }_(){}Var _25Vw6:Float ;}''','''Class,P,:,g97,{,},Class,_,:,__,{,$Q,(,_,,,__,:,Array,[,Int,,,0B1000,],;,_34C,,,Y,:,Boolean,;,F_,:,Boolean,;,_,:,Boolean,;,__,:,Int,),{,},$0_,(,o,:,Float,;,M6,,,l,:,Float,;,_,,,__8____G,,,_,,,s__pPS,,,__F1_,:,h_,;,_,:,Boolean,),{,Continue,;,Return,;,{,},},_,(,),{,},Var,_25Vw6,:,Float,;,},<EOF>''',101))

    def test_773(self):
        self.assertTrue(TestLexer.test('''Class _W_99{Constructor (__,h:Array [Array [Int ,0XF],65];_,___,Iu__a,_,_81:Array [Float ,0b11100];Y6:_;_:Array [Float ,97_9];V_,_:Float ){} }''','''Class,_W_99,{,Constructor,(,__,,,h,:,Array,[,Array,[,Int,,,0XF,],,,65,],;,_,,,___,,,Iu__a,,,_,,,_81,:,Array,[,Float,,,0b11100,],;,Y6,:,_,;,_,:,Array,[,Float,,,979,],;,V_,,,_,:,Float,),{,},},<EOF>''',101))

    def test_774(self):
        self.assertTrue(TestLexer.test('''Class ej:_{Val $Z,___b,$vm3,jI4ro,_,_:String ;Val _86,_,$0_r,$_,Gm,d,$_,$1__6_,$_:Array [Array [Array [Int ,0B1_0],060],8];}''','''Class,ej,:,_,{,Val,$Z,,,___b,,,$vm3,,,jI4ro,,,_,,,_,:,String,;,Val,_86,,,_,,,$0_r,,,$_,,,Gm,,,d,,,$_,,,$1__6_,,,$_,:,Array,[,Array,[,Array,[,Int,,,0B10,],,,060,],,,8,],;,},<EOF>''',101))

    def test_775(self):
        self.assertTrue(TestLexer.test('''Class _{}Class W:_{}Class vW:H{$7(_,_z,_:Array [Array [Array [Array [Int ,0X5D],0B111010],7260_1],0B1_10];Z:_43;YL2,_,C:Float ){Continue ;} }''','''Class,_,{,},Class,W,:,_,{,},Class,vW,:,H,{,$7,(,_,,,_z,,,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X5D,],,,0B111010,],,,72601,],,,0B110,],;,Z,:,_43,;,YL2,,,_,,,C,:,Float,),{,Continue,;,},},<EOF>''',101))

    def test_776(self):
        self.assertTrue(TestLexer.test('''Class _E{Val Y:Array [Array [Array [Array [Boolean ,80],0263],010],0B1];}Class _:I{$_b(){} }Class _{}Class _{$6(w:d){} }''','''Class,_E,{,Val,Y,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,80,],,,0263,],,,010,],,,0B1,],;,},Class,_,:,I,{,$_b,(,),{,},},Class,_,{,},Class,_,{,$6,(,w,:,d,),{,},},<EOF>''',101))

    def test_777(self):
        self.assertTrue(TestLexer.test('''Class T_:g82{Var $Uhk_:Array [Int ,0X6];$v(){}Var t,$_,$227__,_p:_8_;}Class fRr{_(){Val V,e,_:Array [String ,01];}Var $_:F;}''','''Class,T_,:,g82,{,Var,$Uhk_,:,Array,[,Int,,,0X6,],;,$v,(,),{,},Var,t,,,$_,,,$227__,,,_p,:,_8_,;,},Class,fRr,{,_,(,),{,Val,V,,,e,,,_,:,Array,[,String,,,01,],;,},Var,$_,:,F,;,},<EOF>''',101))

    def test_778(self):
        self.assertTrue(TestLexer.test('''Class _:EB{Var _,_24,XW,$_,$5,$_,_,l:Array [Int ,0X3E];Destructor (){}Constructor (__,_vB:String ;f_:Array [Array [Float ,0X3E],0740];_O:Int ;__,b:Array [Int ,1];j:Array [Array [Boolean ,03],0x3];S_:d_K){Return ;} }''','''Class,_,:,EB,{,Var,_,,,_24,,,XW,,,$_,,,$5,,,$_,,,_,,,l,:,Array,[,Int,,,0X3E,],;,Destructor,(,),{,},Constructor,(,__,,,_vB,:,String,;,f_,:,Array,[,Array,[,Float,,,0X3E,],,,0740,],;,_O,:,Int,;,__,,,b,:,Array,[,Int,,,1,],;,j,:,Array,[,Array,[,Boolean,,,03,],,,0x3,],;,S_,:,d_K,),{,Return,;,},},<EOF>''',101))

    def test_779(self):
        self.assertTrue(TestLexer.test('''Class __38__42_:_{$q(__6,_K,ZB,__:Array [Int ,84];_:Boolean ;Q_o9:Array [Array [Array [String ,5],0x61],0X2];V__T:_6;_:Array [Array [Array [Int ,84],0B1001001],0135];L,E,_:Y;__T__7,_,_:Array [String ,0X2]){Continue ;} }''','''Class,__38__42_,:,_,{,$q,(,__6,,,_K,,,ZB,,,__,:,Array,[,Int,,,84,],;,_,:,Boolean,;,Q_o9,:,Array,[,Array,[,Array,[,String,,,5,],,,0x61,],,,0X2,],;,V__T,:,_6,;,_,:,Array,[,Array,[,Array,[,Int,,,84,],,,0B1001001,],,,0135,],;,L,,,E,,,_,:,Y,;,__T__7,,,_,,,_,:,Array,[,String,,,0X2,],),{,Continue,;,},},<EOF>''',101))

    def test_780(self):
        self.assertTrue(TestLexer.test('''Class w_4B:__{Destructor (){Var _:Array [Array [Array [Array [Array [String ,035],4],0B101],0X5C],062];} }Class H0_{}''','''Class,w_4B,:,__,{,Destructor,(,),{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,035,],,,4,],,,0B101,],,,0X5C,],,,062,],;,},},Class,H0_,{,},<EOF>''',101))

    def test_781(self):
        self.assertTrue(TestLexer.test('''Class G{Constructor (pK:Array [Array [Boolean ,05_411],79];vt:Array [Array [Float ,0b1010001],0B101110];_:Boolean ;c8H,_R,___7,_,e:JG34){}Constructor (){Var _:w6;Break ;} }''','''Class,G,{,Constructor,(,pK,:,Array,[,Array,[,Boolean,,,05411,],,,79,],;,vt,:,Array,[,Array,[,Float,,,0b1010001,],,,0B101110,],;,_,:,Boolean,;,c8H,,,_R,,,___7,,,_,,,e,:,JG34,),{,},Constructor,(,),{,Var,_,:,w6,;,Break,;,},},<EOF>''',101))

    def test_782(self):
        self.assertTrue(TestLexer.test('''Class n{Var $_:Array [Int ,03];Val _Y,k:Array [Array [Array [Array [Array [Array [Int ,06],0b1],0X33],05723_2_6_7_2],9_479],0b10_1];}Class y{}Class _8:_{_X(k0:T_7;__:Int ){} }''','''Class,n,{,Var,$_,:,Array,[,Int,,,03,],;,Val,_Y,,,k,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,06,],,,0b1,],,,0X33,],,,057232672,],,,9479,],,,0b101,],;,},Class,y,{,},Class,_8,:,_,{,_X,(,k0,:,T_7,;,__,:,Int,),{,},},<EOF>''',101))

    def test_783(self):
        self.assertTrue(TestLexer.test('''Class _{Var X,$_,_H,$E,$_:n;Constructor (Y,n7,N:Array [Array [Array [Array [Array [Boolean ,067],0B100101],014_3_566],067],5];_9,_:Array [String ,0X9]){} }''','''Class,_,{,Var,X,,,$_,,,_H,,,$E,,,$_,:,n,;,Constructor,(,Y,,,n7,,,N,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,067,],,,0B100101,],,,0143566,],,,067,],,,5,],;,_9,,,_,:,Array,[,String,,,0X9,],),{,},},<EOF>''',101))

    def test_784(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class __{Constructor (_,__,AnX,_,K,__r_,_,_:Array [Array [Array [Array [Array [Float ,0B1010011],39],0B10_10_01_00],31],4];k:Array [Int ,0B1]){} }''','''Class,_,:,_,{,},Class,__,{,Constructor,(,_,,,__,,,AnX,,,_,,,K,,,__r_,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1010011,],,,39,],,,0B10100100,],,,31,],,,4,],;,k,:,Array,[,Int,,,0B1,],),{,},},<EOF>''',101))

    def test_785(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class T_:_{__6(__b,F3U,N_,_,_,S:Array [Array [Array [String ,0xF],9],9];o,_,x9:Float ){Break ;}Destructor (){Break ;Continue ;}Val _:_;}''','''Class,_,:,_,{,},Class,T_,:,_,{,__6,(,__b,,,F3U,,,N_,,,_,,,_,,,S,:,Array,[,Array,[,Array,[,String,,,0xF,],,,9,],,,9,],;,o,,,_,,,x9,:,Float,),{,Break,;,},Destructor,(,),{,Break,;,Continue,;,},Val,_,:,_,;,},<EOF>''',101))

    def test_786(self):
        self.assertTrue(TestLexer.test('''Class _5:L_{Var zH1,$_:Float ;Val _,b,_F_,R_,$3:Array [Array [Boolean ,0b1],8_2];Var P,$_26_i_,$714:Array [Array [Array [String ,0b1_11],066],0X8];Destructor (){ {} }}''','''Class,_5,:,L_,{,Var,zH1,,,$_,:,Float,;,Val,_,,,b,,,_F_,,,R_,,,$3,:,Array,[,Array,[,Boolean,,,0b1,],,,82,],;,Var,P,,,$_26_i_,,,$714,:,Array,[,Array,[,Array,[,String,,,0b111,],,,066,],,,0X8,],;,Destructor,(,),{,{,},},},<EOF>''',101))

    def test_787(self):
        self.assertTrue(TestLexer.test('''Class Q:_{Var $5_:Array [Int ,29];Constructor (_q2:Boolean ;_D3,W,_,k2,_:Array [Array [Array [Array [Array [Array [Array [Array [String ,06550_1],0X1],29],0xE_5_D],29],0b101110],0XD],0b1];Y:Array [Array [Array [Array [Float ,52],20],0B111001],040]){}Val $v9l:Boolean ;}''','''Class,Q,:,_,{,Var,$5_,:,Array,[,Int,,,29,],;,Constructor,(,_q2,:,Boolean,;,_D3,,,W,,,_,,,k2,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,065501,],,,0X1,],,,29,],,,0xE5D,],,,29,],,,0b101110,],,,0XD,],,,0b1,],;,Y,:,Array,[,Array,[,Array,[,Array,[,Float,,,52,],,,20,],,,0B111001,],,,040,],),{,},Val,$v9l,:,Boolean,;,},<EOF>''',101))

    def test_788(self):
        self.assertTrue(TestLexer.test('''Class _3:_{Var $_4xd,$S,_0_v5RN:Float ;_LM(_,i_,_S,H_,_,_,AvM2,S_5b9_,l7:Int ;__:b;P:Array [Array [Array [Array [Array [Float ,01],0X5F],0xC_C2],0B1001101],0720]){} }Class o_UR{}Class _z:a{}''','''Class,_3,:,_,{,Var,$_4xd,,,$S,,,_0_v5RN,:,Float,;,_LM,(,_,,,i_,,,_S,,,H_,,,_,,,_,,,AvM2,,,S_5b9_,,,l7,:,Int,;,__,:,b,;,P,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,01,],,,0X5F,],,,0xCC2,],,,0B1001101,],,,0720,],),{,},},Class,o_UR,{,},Class,_z,:,a,{,},<EOF>''',101))

    def test_789(self):
        self.assertTrue(TestLexer.test('''Class _4:__r{Constructor (S,Re:Array [Array [Float ,0x57],017044];r_,_r:Float ;_,I__,_,__,__5,g_,oA:String ;_u,__:wy;Z,_,_,q,oD:g2_){Val pf:g6;} }Class _:_V__{Val C:Array [Float ,035];}''','''Class,_4,:,__r,{,Constructor,(,S,,,Re,:,Array,[,Array,[,Float,,,0x57,],,,017044,],;,r_,,,_r,:,Float,;,_,,,I__,,,_,,,__,,,__5,,,g_,,,oA,:,String,;,_u,,,__,:,wy,;,Z,,,_,,,_,,,q,,,oD,:,g2_,),{,Val,pf,:,g6,;,},},Class,_,:,_V__,{,Val,C,:,Array,[,Float,,,035,],;,},<EOF>''',101))

    def test_790(self):
        self.assertTrue(TestLexer.test('''Class T:P_{Destructor (){Val _2r,_:Array [Array [Array [Float ,0B110101],76],0B1_1];}Destructor (){Var __,M_:f_4;Continue ;}Var $p,$_70_:_;Var $9:Array [Array [Array [Boolean ,0x2],0xF],0x32];Constructor (){}Val $_xK,_,_:_;}''','''Class,T,:,P_,{,Destructor,(,),{,Val,_2r,,,_,:,Array,[,Array,[,Array,[,Float,,,0B110101,],,,76,],,,0B11,],;,},Destructor,(,),{,Var,__,,,M_,:,f_4,;,Continue,;,},Var,$p,,,$_70_,:,_,;,Var,$9,:,Array,[,Array,[,Array,[,Boolean,,,0x2,],,,0xF,],,,0x32,],;,Constructor,(,),{,},Val,$_xK,,,_,,,_,:,_,;,},<EOF>''',101))

    def test_791(self):
        self.assertTrue(TestLexer.test('''Class _7_:_{Constructor (_:Int ;_,j_I:Array [Float ,0x3];vC,_:_;_08:m){Break ;} }Class F:e{Val l__,$_,$_:Array [Int ,49_9];}''','''Class,_7_,:,_,{,Constructor,(,_,:,Int,;,_,,,j_I,:,Array,[,Float,,,0x3,],;,vC,,,_,:,_,;,_08,:,m,),{,Break,;,},},Class,F,:,e,{,Val,l__,,,$_,,,$_,:,Array,[,Int,,,499,],;,},<EOF>''',101))

    def test_792(self):
        self.assertTrue(TestLexer.test('''Class _:qC{_J(_,i,ea85h_:Array [Int ,0b1001011]){}Val _5:_;}Class u3{Destructor (){Break ;Return ;{}Return ;Continue ;} }''','''Class,_,:,qC,{,_J,(,_,,,i,,,ea85h_,:,Array,[,Int,,,0b1001011,],),{,},Val,_5,:,_,;,},Class,u3,{,Destructor,(,),{,Break,;,Return,;,{,},Return,;,Continue,;,},},<EOF>''',101))

    def test_793(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{Val $2,A,j1:Array [Array [Array [Array [Array [String ,0B1_0],2_3_8_2],06],0B1],0x1];Var $_,__,P:p_;}''','''Class,_,{,},Class,_,{,Val,$2,,,A,,,j1,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B10,],,,2382,],,,06,],,,0B1,],,,0x1,],;,Var,$_,,,__,,,P,:,p_,;,},<EOF>''',101))

    def test_794(self):
        self.assertTrue(TestLexer.test('''Class _:G2_{}Class _3{Val $P8_8F_1,_6:Array [Array [Array [Int ,0b1000000],0xE_5A],0X4C];$_E6_(){}Constructor (J,__,l65:Int ){}Destructor (){} }''','''Class,_,:,G2_,{,},Class,_3,{,Val,$P8_8F_1,,,_6,:,Array,[,Array,[,Array,[,Int,,,0b1000000,],,,0xE5A,],,,0X4C,],;,$_E6_,(,),{,},Constructor,(,J,,,__,,,l65,:,Int,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_795(self):
        self.assertTrue(TestLexer.test('''Class S1_r{Constructor (){}Constructor (N:Float ;q:Boolean ;H:D3;CN,g2:Int ;_:Array [Array [Int ,7536],0X7];_:q){} }Class r65{}Class SC{}''','''Class,S1_r,{,Constructor,(,),{,},Constructor,(,N,:,Float,;,q,:,Boolean,;,H,:,D3,;,CN,,,g2,:,Int,;,_,:,Array,[,Array,[,Int,,,7536,],,,0X7,],;,_,:,q,),{,},},Class,r65,{,},Class,SC,{,},<EOF>''',101))

    def test_796(self):
        self.assertTrue(TestLexer.test('''Class _n45:_{}Class q:_P{Constructor (){Break ;}Var _uKX3q:_7;}Class __:__1____G{}Class Ih_5{Constructor (){}Var $05_:String ;}''','''Class,_n45,:,_,{,},Class,q,:,_P,{,Constructor,(,),{,Break,;,},Var,_uKX3q,:,_7,;,},Class,__,:,__1____G,{,},Class,Ih_5,{,Constructor,(,),{,},Var,$05_,:,String,;,},<EOF>''',101))

    def test_797(self):
        self.assertTrue(TestLexer.test('''Class Y6q:E_{}Class _{Val $7:Int ;Val N:Array [Array [Array [Boolean ,0130],0b101101],0130];}Class _q__:f{Val $_3:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,0b101101],0X58],52],0130],0130],0B1010],0B1010],0B1010],52],9_3];}''','''Class,Y6q,:,E_,{,},Class,_,{,Val,$7,:,Int,;,Val,N,:,Array,[,Array,[,Array,[,Boolean,,,0130,],,,0b101101,],,,0130,],;,},Class,_q__,:,f,{,Val,$_3,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b101101,],,,0X58,],,,52,],,,0130,],,,0130,],,,0B1010,],,,0B1010,],,,0B1010,],,,52,],,,93,],;,},<EOF>''',101))

    def test_798(self):
        self.assertTrue(TestLexer.test('''Class _X3:_46{}Class L8V{Val $_,$_:Array [Array [Array [Array [Array [Float ,0b1000010],9],0171],0x13],0B111];}Class n9De_:F{Destructor (){}Var $_6_I1:Float ;}Class _c5:_{d8(){} }Class _{Var $V:Array [Array [Array [Array [String ,0B1_1],0b1000010],0B1001100],5];Destructor (){} }''','''Class,_X3,:,_46,{,},Class,L8V,{,Val,$_,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1000010,],,,9,],,,0171,],,,0x13,],,,0B111,],;,},Class,n9De_,:,F,{,Destructor,(,),{,},Var,$_6_I1,:,Float,;,},Class,_c5,:,_,{,d8,(,),{,},},Class,_,{,Var,$V,:,Array,[,Array,[,Array,[,Array,[,String,,,0B11,],,,0b1000010,],,,0B1001100,],,,5,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_799(self):
        self.assertTrue(TestLexer.test('''Class _:_9{}Class _7:_{Destructor (){}Constructor (_:Array [Array [Array [Boolean ,3],8],0X1F];_:Boolean ){} }Class C:i{}''','''Class,_,:,_9,{,},Class,_7,:,_,{,Destructor,(,),{,},Constructor,(,_,:,Array,[,Array,[,Array,[,Boolean,,,3,],,,8,],,,0X1F,],;,_,:,Boolean,),{,},},Class,C,:,i,{,},<EOF>''',101))

    def test_800(self):
        self.assertTrue(TestLexer.test('''Class q82_1__:o{}Class __{$3_V_(j,_c,YR_:Array [String ,9];FR,_,Q:Int ;_E___m_,_:__;c8_3:Array [Array [Array [Float ,3],070],3]){} }''','''Class,q82_1__,:,o,{,},Class,__,{,$3_V_,(,j,,,_c,,,YR_,:,Array,[,String,,,9,],;,FR,,,_,,,Q,:,Int,;,_E___m_,,,_,:,__,;,c8_3,:,Array,[,Array,[,Array,[,Float,,,3,],,,070,],,,3,],),{,},},<EOF>''',101))

    def test_801(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class T:i{Val $2_6,_,_:bN;}Class ___{}Class P{Destructor (){}Constructor (_N,_n09_:String ;c,qf_:String ){}Destructor (){ {} }}''','''Class,_,:,_,{,},Class,T,:,i,{,Val,$2_6,,,_,,,_,:,bN,;,},Class,___,{,},Class,P,{,Destructor,(,),{,},Constructor,(,_N,,,_n09_,:,String,;,c,,,qf_,:,String,),{,},Destructor,(,),{,{,},},},<EOF>''',101))

    def test_802(self):
        self.assertTrue(TestLexer.test('''Class n:O{Val $9__,$T_P:Array [Boolean ,0b10100];Var S:Array [Boolean ,7];Destructor (){ {Break ;}{ {} }}Var $_3:Array [Array [String ,47],0b10100];}''','''Class,n,:,O,{,Val,$9__,,,$T_P,:,Array,[,Boolean,,,0b10100,],;,Var,S,:,Array,[,Boolean,,,7,],;,Destructor,(,),{,{,Break,;,},{,{,},},},Var,$_3,:,Array,[,Array,[,String,,,47,],,,0b10100,],;,},<EOF>''',101))

    def test_803(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _9{$__(_Y,_,_,q,By 5V8G5,c7_9:Array [Array [Boolean ,0105],34];_,_:_sH;rw,_72,_a,V:Array [Array [Array [Array [String ,0105],100],0b100011],9]){} }''','''Class,_,{,},Class,_9,{,$__,(,_Y,,,_,,,_,,,q,,,By,5,V8G5,,,c7_9,:,Array,[,Array,[,Boolean,,,0105,],,,34,],;,_,,,_,:,_sH,;,rw,,,_72,,,_a,,,V,:,Array,[,Array,[,Array,[,Array,[,String,,,0105,],,,100,],,,0b100011,],,,9,],),{,},},<EOF>''',101))

    def test_804(self):
        self.assertTrue(TestLexer.test('''Class _E{Constructor (_,P,__0:Array [Array [Array [Float ,07],0B1010011],0b1011101]){}$W(){}Constructor (X8_,FC:Array [Array [Array [Array [Boolean ,025],0b10],0XE],0x4C]){Return ;}Constructor (r,Wg,F_IC,T:_;N:_;_,J:Array [Array [Int ,0B1010011],34];_:P_){} }''','''Class,_E,{,Constructor,(,_,,,P,,,__0,:,Array,[,Array,[,Array,[,Float,,,07,],,,0B1010011,],,,0b1011101,],),{,},$W,(,),{,},Constructor,(,X8_,,,FC,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,025,],,,0b10,],,,0XE,],,,0x4C,],),{,Return,;,},Constructor,(,r,,,Wg,,,F_IC,,,T,:,_,;,N,:,_,;,_,,,J,:,Array,[,Array,[,Int,,,0B1010011,],,,34,],;,_,:,P_,),{,},},<EOF>''',101))

    def test_805(self):
        self.assertTrue(TestLexer.test('''Class C_{Destructor (){N::$L();}Var _,$423Y,$_:Array [Array [Boolean ,68],04_2_5];}Class o7BZ{}Class d{Constructor (){Return ;}$q_Q9(_:A5t_){} }Class B1UF63:F1{}''','''Class,C_,{,Destructor,(,),{,N,::,$L,(,),;,},Var,_,,,$423Y,,,$_,:,Array,[,Array,[,Boolean,,,68,],,,0425,],;,},Class,o7BZ,{,},Class,d,{,Constructor,(,),{,Return,;,},$q_Q9,(,_,:,A5t_,),{,},},Class,B1UF63,:,F1,{,},<EOF>''',101))

    def test_806(self):
        self.assertTrue(TestLexer.test('''Class r_{}Class _{Val y,$0:__;Val $6,c:__;}Class z{B_(_:String ;M_8:String ){}Var E:Float ;Destructor (){Return ;} }''','''Class,r_,{,},Class,_,{,Val,y,,,$0,:,__,;,Val,$6,,,c,:,__,;,},Class,z,{,B_,(,_,:,String,;,M_8,:,String,),{,},Var,E,:,Float,;,Destructor,(,),{,Return,;,},},<EOF>''',101))

    def test_807(self):
        self.assertTrue(TestLexer.test('''Class v:j1v{Constructor (_:Array [String ,0B1_001];L,i1:String ;_,_:Array [Array [Array [Boolean ,1],0b1],7];z_:Array [Array [Int ,0XF],0B111100];E,_k,m:_){Break ;} }''','''Class,v,:,j1v,{,Constructor,(,_,:,Array,[,String,,,0B1001,],;,L,,,i1,:,String,;,_,,,_,:,Array,[,Array,[,Array,[,Boolean,,,1,],,,0b1,],,,7,],;,z_,:,Array,[,Array,[,Int,,,0XF,],,,0B111100,],;,E,,,_k,,,m,:,_,),{,Break,;,},},<EOF>''',101))

    def test_808(self):
        self.assertTrue(TestLexer.test('''Class _929___m2_:e{Var N,$c:Array [Array [String ,4],0x1B];Val R_,$H9M,E0,jS:Array [Array [Array [Array [Boolean ,0B1],7_9_7_49],0B10_1_1],04_0];}''','''Class,_929___m2_,:,e,{,Var,N,,,$c,:,Array,[,Array,[,String,,,4,],,,0x1B,],;,Val,R_,,,$H9M,,,E0,,,jS,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,79749,],,,0B1011,],,,040,],;,},<EOF>''',101))

    def test_809(self):
        self.assertTrue(TestLexer.test('''Class _29:al{}Class d3{Constructor (){}Destructor (){} }Class __{Val $OZ6_:q;Destructor (){Val _80,_X,__x,_A_,dh9W9,_:Array [Array [Array [Boolean ,0XBC],0b1],0X2];} }''','''Class,_29,:,al,{,},Class,d3,{,Constructor,(,),{,},Destructor,(,),{,},},Class,__,{,Val,$OZ6_,:,q,;,Destructor,(,),{,Val,_80,,,_X,,,__x,,,_A_,,,dh9W9,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0XBC,],,,0b1,],,,0X2,],;,},},<EOF>''',101))

    def test_810(self):
        self.assertTrue(TestLexer.test('''Class c8DD{}Class b_{Val $P_,_,$_:Array [Array [Array [Array [Array [Array [Float ,30_9_2],0X84_6],0XB],01],0b101111],0b101111];}''','''Class,c8DD,{,},Class,b_,{,Val,$P_,,,_,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,3092,],,,0X846,],,,0XB,],,,01,],,,0b101111,],,,0b101111,],;,},<EOF>''',101))

    def test_811(self):
        self.assertTrue(TestLexer.test('''Class Z:_1{}Class _{_(p:Array [Int ,0142]){} }Class _Z__P_3{Val _,_:A;Val $p,__3_,_:F;Constructor (){}Var $K:Array [Array [Boolean ,0XD51],0X2F];}Class n{Destructor (){} }Class O4:_{}Class _G_7{Constructor (_,_4H,D_Ct7__:A;s:Array [Float ,0b100];j:Float ;_:Array [Array [Float ,0B1100011],0x14];e_n_2,o,__:Boolean ;mF,_:I0){} }''','''Class,Z,:,_1,{,},Class,_,{,_,(,p,:,Array,[,Int,,,0142,],),{,},},Class,_Z__P_3,{,Val,_,,,_,:,A,;,Val,$p,,,__3_,,,_,:,F,;,Constructor,(,),{,},Var,$K,:,Array,[,Array,[,Boolean,,,0XD51,],,,0X2F,],;,},Class,n,{,Destructor,(,),{,},},Class,O4,:,_,{,},Class,_G_7,{,Constructor,(,_,,,_4H,,,D_Ct7__,:,A,;,s,:,Array,[,Float,,,0b100,],;,j,:,Float,;,_,:,Array,[,Array,[,Float,,,0B1100011,],,,0x14,],;,e_n_2,,,o,,,__,:,Boolean,;,mF,,,_,:,I0,),{,},},<EOF>''',101))

    def test_812(self):
        self.assertTrue(TestLexer.test('''Class F:_{}Class g8:n_a{}Class sL{Constructor (m,__0:Int ;_hk,B:Float ;P,___5:Array [Float ,8_9_0_47];H:Float ;Sl,h99_:Array [Int ,2_1_2_7];A1,y1,v,_,_,_:Array [Float ,010];_sT,z_f_,_8,Y,s,Lz21:Int ;cW:_v;n_,Z3:_;_:_x){Break ;} }''','''Class,F,:,_,{,},Class,g8,:,n_a,{,},Class,sL,{,Constructor,(,m,,,__0,:,Int,;,_hk,,,B,:,Float,;,P,,,___5,:,Array,[,Float,,,89047,],;,H,:,Float,;,Sl,,,h99_,:,Array,[,Int,,,2127,],;,A1,,,y1,,,v,,,_,,,_,,,_,:,Array,[,Float,,,010,],;,_sT,,,z_f_,,,_8,,,Y,,,s,,,Lz21,:,Int,;,cW,:,_v,;,n_,,,Z3,:,_,;,_,:,_x,),{,Break,;,},},<EOF>''',101))

    def test_813(self):
        self.assertTrue(TestLexer.test('''Class __8__:_{Destructor (){}Constructor (jj_:__;q4,_A,___,e,_,B__E,_:Int ;_:Array [Array [Int ,046],046]){} }Class V{}''','''Class,__8__,:,_,{,Destructor,(,),{,},Constructor,(,jj_,:,__,;,q4,,,_A,,,___,,,e,,,_,,,B__E,,,_,:,Int,;,_,:,Array,[,Array,[,Int,,,046,],,,046,],),{,},},Class,V,{,},<EOF>''',101))

    def test_814(self):
        self.assertTrue(TestLexer.test('''Class _b{}Class P_:_{Constructor (_:Array [Array [Array [Array [Array [Array [Array [String ,30],0X48],0X4_B],016],0x45],0b1000001],30]){Break ;}C2_(O:R;j8:Array [Boolean ,0B111010];P_,__,_:Array [String ,0b1000001];e,k4:Array [Array [Int ,0x45],0B1_0_0];_,_2:Array [Array [String ,016],0b1000001]){} }Class l:h{}''','''Class,_b,{,},Class,P_,:,_,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,30,],,,0X48,],,,0X4B,],,,016,],,,0x45,],,,0b1000001,],,,30,],),{,Break,;,},C2_,(,O,:,R,;,j8,:,Array,[,Boolean,,,0B111010,],;,P_,,,__,,,_,:,Array,[,String,,,0b1000001,],;,e,,,k4,:,Array,[,Array,[,Int,,,0x45,],,,0B100,],;,_,,,_2,:,Array,[,Array,[,String,,,016,],,,0b1000001,],),{,},},Class,l,:,h,{,},<EOF>''',101))

    def test_815(self):
        self.assertTrue(TestLexer.test('''Class _{}Class mZ:L_1{}Class u:_{Constructor (_,_,X,w:String ;_:Xm){_e::$6();}_(s0,kvs,sE,yn9,_,_,_p1:_Q){} }''','''Class,_,{,},Class,mZ,:,L_1,{,},Class,u,:,_,{,Constructor,(,_,,,_,,,X,,,w,:,String,;,_,:,Xm,),{,_e,::,$6,(,),;,},_,(,s0,,,kvs,,,sE,,,yn9,,,_,,,_,,,_p1,:,_Q,),{,},},<EOF>''',101))

    def test_816(self):
        self.assertTrue(TestLexer.test('''Class _:_4{Val P:Array [Float ,0b10];}Class _Z947:_{}Class C_:GF{Constructor (_,q:Boolean ;x:String ){}Destructor (){} }Class v{}Class vL{Val $CG:n;}''','''Class,_,:,_4,{,Val,P,:,Array,[,Float,,,0b10,],;,},Class,_Z947,:,_,{,},Class,C_,:,GF,{,Constructor,(,_,,,q,:,Boolean,;,x,:,String,),{,},Destructor,(,),{,},},Class,v,{,},Class,vL,{,Val,$CG,:,n,;,},<EOF>''',101))

    def test_817(self):
        self.assertTrue(TestLexer.test('''Class Nh{v__(){} }Class U{$7(b_:Array [Int ,0XA];b9:Array [Float ,0B1100100];x85,_2,_,B:_;B__,___6v:Array [Array [Int ,0B1100100],49]){} }''','''Class,Nh,{,v__,(,),{,},},Class,U,{,$7,(,b_,:,Array,[,Int,,,0XA,],;,b9,:,Array,[,Float,,,0B1100100,],;,x85,,,_2,,,_,,,B,:,_,;,B__,,,___6v,:,Array,[,Array,[,Int,,,0B1100100,],,,49,],),{,},},<EOF>''',101))

    def test_818(self):
        self.assertTrue(TestLexer.test('''Class qYA_u:uX_Y5_2{}Class Qw{}Class A_:_x5{}Class _{}Class h_6N:C{Val OHdz,$y_,v,_:Array [Array [Array [Array [String ,73],0B1_1],0103],0103];}''','''Class,qYA_u,:,uX_Y5_2,{,},Class,Qw,{,},Class,A_,:,_x5,{,},Class,_,{,},Class,h_6N,:,C,{,Val,OHdz,,,$y_,,,v,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,73,],,,0B11,],,,0103,],,,0103,],;,},<EOF>''',101))

    def test_819(self):
        self.assertTrue(TestLexer.test('''Class X:_{Destructor (){_fj9_::$C();} }Class _{Constructor (){Break ;}$_(E9,_1,__W:Float ){}$44(xx,__,_,__:Array [String ,0X57]){Continue ;} }''','''Class,X,:,_,{,Destructor,(,),{,_fj9_,::,$C,(,),;,},},Class,_,{,Constructor,(,),{,Break,;,},$_,(,E9,,,_1,,,__W,:,Float,),{,},$44,(,xx,,,__,,,_,,,__,:,Array,[,String,,,0X57,],),{,Continue,;,},},<EOF>''',101))

    def test_820(self):
        self.assertTrue(TestLexer.test('''Class c6:_{}Class _{Constructor (_9J,___g,__9,Q,X_83__7:_57){} }Class Hn_:C{}Class _{Destructor (){} }Class _:_{}''','''Class,c6,:,_,{,},Class,_,{,Constructor,(,_9J,,,___g,,,__9,,,Q,,,X_83__7,:,_57,),{,},},Class,Hn_,:,C,{,},Class,_,{,Destructor,(,),{,},},Class,_,:,_,{,},<EOF>''',101))

    def test_821(self):
        self.assertTrue(TestLexer.test('''Class _{Val _X:_;Val $_W:String ;}Class _{Destructor (){}Constructor (){Break ;} }Class a{Var $0:E_Rlc_F;Val wd6:String ;Val E5_,$_2,$3_1,$_b:Array [Array [Array [Int ,91],0b1],91];}Class D_6{}''','''Class,_,{,Val,_X,:,_,;,Val,$_W,:,String,;,},Class,_,{,Destructor,(,),{,},Constructor,(,),{,Break,;,},},Class,a,{,Var,$0,:,E_Rlc_F,;,Val,wd6,:,String,;,Val,E5_,,,$_2,,,$3_1,,,$_b,:,Array,[,Array,[,Array,[,Int,,,91,],,,0b1,],,,91,],;,},Class,D_6,{,},<EOF>''',101))

    def test_822(self):
        self.assertTrue(TestLexer.test('''Class _{}Class C_{}Class E{}Class X:__{Val Y:Array [Boolean ,33];}Class h{Constructor (k_N:Array [Array [Array [Array [Int ,0B1001010],0x4],0X58],33]){} }''','''Class,_,{,},Class,C_,{,},Class,E,{,},Class,X,:,__,{,Val,Y,:,Array,[,Boolean,,,33,],;,},Class,h,{,Constructor,(,k_N,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1001010,],,,0x4,],,,0X58,],,,33,],),{,},},<EOF>''',101))

    def test_823(self):
        self.assertTrue(TestLexer.test('''Class N6:__{Var $_:C9g_;Constructor (_,h,_6:_D){ {} }Val s1:Array [Array [Array [Array [Array [Array [Float ,0101],0101],0b1_0],04],0xC_E_E],0b111];}Class BY6:__{Constructor (A:Array [Int ,0x3D7AF0];_Z,P:Array [Array [Int ,0x41],0x41]){} }Class _{Constructor (){} }''','''Class,N6,:,__,{,Var,$_,:,C9g_,;,Constructor,(,_,,,h,,,_6,:,_D,),{,{,},},Val,s1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0101,],,,0101,],,,0b10,],,,04,],,,0xCEE,],,,0b111,],;,},Class,BY6,:,__,{,Constructor,(,A,:,Array,[,Int,,,0x3D7AF0,],;,_Z,,,P,:,Array,[,Array,[,Int,,,0x41,],,,0x41,],),{,},},Class,_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_824(self):
        self.assertTrue(TestLexer.test('''Class _:z_{}Class V:z{Constructor (nHA8_,y,q,Zo_,_,_e0_h,M,_,_:Float ;P,lS,__:Y;l,_,b_k1,_:Boolean ;C:Boolean ;_,_:Array [Float ,0X43];N:h){}Destructor (){} }Class s:_{Val $u7_,$0_:_C_;Val $_P,$W:p;}''','''Class,_,:,z_,{,},Class,V,:,z,{,Constructor,(,nHA8_,,,y,,,q,,,Zo_,,,_,,,_e0_h,,,M,,,_,,,_,:,Float,;,P,,,lS,,,__,:,Y,;,l,,,_,,,b_k1,,,_,:,Boolean,;,C,:,Boolean,;,_,,,_,:,Array,[,Float,,,0X43,],;,N,:,h,),{,},Destructor,(,),{,},},Class,s,:,_,{,Val,$u7_,,,$0_,:,_C_,;,Val,$_P,,,$W,:,p,;,},<EOF>''',101))

    def test_825(self):
        self.assertTrue(TestLexer.test('''Class __np{Var s5pc_,$277,$2:Array [String ,65];Constructor (){} }Class F:Qbv8{Val __n4,q:Array [Array [String ,0b1],0xA_0];}Class _I5{Val $4,n,$_,_:Array [Int ,06_3_52];Constructor (){} }Class b8_{}''','''Class,__np,{,Var,s5pc_,,,$277,,,$2,:,Array,[,String,,,65,],;,Constructor,(,),{,},},Class,F,:,Qbv8,{,Val,__n4,,,q,:,Array,[,Array,[,String,,,0b1,],,,0xA0,],;,},Class,_I5,{,Val,$4,,,n,,,$_,,,_,:,Array,[,Int,,,06352,],;,Constructor,(,),{,},},Class,b8_,{,},<EOF>''',101))

    def test_826(self):
        self.assertTrue(TestLexer.test('''Class __{Var $48i2,_,_,ct2,$f,qs,$_A1_:_;}Class t:F0_{}Class a{$YAG_9m(_2_dl,d:_5;S_:_y){} }Class __8{Var _J165,a_oV:_21;}Class _{Destructor (){} }''','''Class,__,{,Var,$48i2,,,_,,,_,,,ct2,,,$f,,,qs,,,$_A1_,:,_,;,},Class,t,:,F0_,{,},Class,a,{,$YAG_9m,(,_2_dl,,,d,:,_5,;,S_,:,_y,),{,},},Class,__8,{,Var,_J165,,,a_oV,:,_21,;,},Class,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_827(self):
        self.assertTrue(TestLexer.test('''Class _2ac__:UMZY{}Class t:_4_{Val $_N,f:Array [Array [Array [Array [Array [Array [Array [Array [String ,31],060],6_2],060],0b10111],40],0b10111],0B1_0110_110];Val $__X_9:Float ;}''','''Class,_2ac__,:,UMZY,{,},Class,t,:,_4_,{,Val,$_N,,,f,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,31,],,,060,],,,62,],,,060,],,,0b10111,],,,40,],,,0b10111,],,,0B10110110,],;,Val,$__X_9,:,Float,;,},<EOF>''',101))

    def test_828(self):
        self.assertTrue(TestLexer.test('''Class _1{}Class q{}Class J:_{Destructor (){}Constructor (_k:_;_C,__:Array [Boolean ,0B1_1_1_1]){} }Class Pu_nQ__:_{}''','''Class,_1,{,},Class,q,{,},Class,J,:,_,{,Destructor,(,),{,},Constructor,(,_k,:,_,;,_C,,,__,:,Array,[,Boolean,,,0B1111,],),{,},},Class,Pu_nQ__,:,_,{,},<EOF>''',101))

    def test_829(self):
        self.assertTrue(TestLexer.test('''Class _:_{Destructor (){}Constructor (_J5,_4lD1,_:Array [Array [Float ,012],012];___:Array [Array [String ,0X3],0b1_000];_U27TP,_L:_){} }Class _:_{}Class hJ4{}''','''Class,_,:,_,{,Destructor,(,),{,},Constructor,(,_J5,,,_4lD1,,,_,:,Array,[,Array,[,Float,,,012,],,,012,],;,___,:,Array,[,Array,[,String,,,0X3,],,,0b1000,],;,_U27TP,,,_L,:,_,),{,},},Class,_,:,_,{,},Class,hJ4,{,},<EOF>''',101))

    def test_830(self):
        self.assertTrue(TestLexer.test('''Class T:u{Val U3,$41__:Array [Array [Array [Array [Int ,0B1_1],0XA_5],0x63],0113];}Class l5:_41{}Class L:___{Var _:s;}Class J_:_2{}''','''Class,T,:,u,{,Val,U3,,,$41__,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B11,],,,0XA5,],,,0x63,],,,0113,],;,},Class,l5,:,_41,{,},Class,L,:,___,{,Var,_,:,s,;,},Class,J_,:,_2,{,},<EOF>''',101))

    def test_831(self):
        self.assertTrue(TestLexer.test('''Class SP939{Constructor (){}Destructor (){}Destructor (){} }Class _L:P3C{Destructor (){Return ;}Destructor (){Break ;} }''','''Class,SP939,{,Constructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,},},Class,_L,:,P3C,{,Destructor,(,),{,Return,;,},Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_832(self):
        self.assertTrue(TestLexer.test('''Class E{Val k,g,$9a,Le,_D:String ;Var T80,_:Int ;}Class _:y_{}Class _s{Constructor (P_9,Ec:Array [Float ,0x14];_8:_g;_Z,_J84,_4,IA,_,r,_,_:_){}Var __e,$_:String ;}''','''Class,E,{,Val,k,,,g,,,$9a,,,Le,,,_D,:,String,;,Var,T80,,,_,:,Int,;,},Class,_,:,y_,{,},Class,_s,{,Constructor,(,P_9,,,Ec,:,Array,[,Float,,,0x14,],;,_8,:,_g,;,_Z,,,_J84,,,_4,,,IA,,,_,,,r,,,_,,,_,:,_,),{,},Var,__e,,,$_,:,String,;,},<EOF>''',101))

    def test_833(self):
        self.assertTrue(TestLexer.test('''Class S:_f{f_V(rix,_,__02:String ;sLiC,T,_K:Array [String ,0b1011011];q:Boolean ;_:Array [Boolean ,0401];_X:Array [Int ,96]){} }''','''Class,S,:,_f,{,f_V,(,rix,,,_,,,__02,:,String,;,sLiC,,,T,,,_K,:,Array,[,String,,,0b1011011,],;,q,:,Boolean,;,_,:,Array,[,Boolean,,,0401,],;,_X,:,Array,[,Int,,,96,],),{,},},<EOF>''',101))

    def test_834(self):
        self.assertTrue(TestLexer.test('''Class __{Constructor (vF__1,_L4,__p:Array [Array [Array [Array [Array [Int ,0B1],0X2],9_4_598],0b1],05_6]){} }''','''Class,__,{,Constructor,(,vF__1,,,_L4,,,__p,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,0X2,],,,94598,],,,0b1,],,,056,],),{,},},<EOF>''',101))

    def test_835(self):
        self.assertTrue(TestLexer.test('''Class _{Val $2:L;}Class E{Constructor (R,Y:Array [Array [Float ,03],0XE1];cMZ:Array [Float ,0XB];__,_,_6_:_9){} }''','''Class,_,{,Val,$2,:,L,;,},Class,E,{,Constructor,(,R,,,Y,:,Array,[,Array,[,Float,,,03,],,,0XE1,],;,cMZ,:,Array,[,Float,,,0XB,],;,__,,,_,,,_6_,:,_9,),{,},},<EOF>''',101))

    def test_836(self):
        self.assertTrue(TestLexer.test('''Class iw{$_7___(__2_,_528puDE____1,_,zI3,gA__0:Array [Boolean ,057];_,jr:Array [String ,61]){Break ;Break ;}Val $_:Float ;Var m:T;}''','''Class,iw,{,$_7___,(,__2_,,,_528puDE____1,,,_,,,zI3,,,gA__0,:,Array,[,Boolean,,,057,],;,_,,,jr,:,Array,[,String,,,61,],),{,Break,;,Break,;,},Val,$_,:,Float,;,Var,m,:,T,;,},<EOF>''',101))

    def test_837(self):
        self.assertTrue(TestLexer.test('''Class K{Var t,Ot,$4_10,_,$e9:Array [Array [Int ,0b1],0x5F];Destructor (){}Val _CjS,_7_t_a,$2,_,$d:Array [String ,6_3];}Class gm{Constructor (){}$4(){}Val $5,$_,__:w_;}''','''Class,K,{,Var,t,,,Ot,,,$4_10,,,_,,,$e9,:,Array,[,Array,[,Int,,,0b1,],,,0x5F,],;,Destructor,(,),{,},Val,_CjS,,,_7_t_a,,,$2,,,_,,,$d,:,Array,[,String,,,63,],;,},Class,gm,{,Constructor,(,),{,},$4,(,),{,},Val,$5,,,$_,,,__,:,w_,;,},<EOF>''',101))

    def test_838(self):
        self.assertTrue(TestLexer.test('''Class _0b7:O_9N{}Class M4:j{}Class _7:__{}Class _{$Q(a,_2:Array [Array [Array [Boolean ,0B110],0b1101],0xD];_,_:Float ){}Var $54s,$5,$_U_,$iU:a__;}Class _{}Class t_:_X{Val _:_;}Class A____4N:W4{Constructor (){} }Class __7:__5__{}''','''Class,_0b7,:,O_9N,{,},Class,M4,:,j,{,},Class,_7,:,__,{,},Class,_,{,$Q,(,a,,,_2,:,Array,[,Array,[,Array,[,Boolean,,,0B110,],,,0b1101,],,,0xD,],;,_,,,_,:,Float,),{,},Var,$54s,,,$5,,,$_U_,,,$iU,:,a__,;,},Class,_,{,},Class,t_,:,_X,{,Val,_,:,_,;,},Class,A____4N,:,W4,{,Constructor,(,),{,},},Class,__7,:,__5__,{,},<EOF>''',101))

    def test_839(self):
        self.assertTrue(TestLexer.test('''Class _76:__Z{Constructor (_,S,_:_){}Destructor (){}__0Y(_:Yw){Continue ;}Constructor (_:Array [Array [Array [String ,0x41],0104],2];__:__R){}Var U:Array [Float ,04];}Class _959__20kU:_2{}Class h{Val X_05,z_C1,_:Float ;Val _7,__,U,$23g,_,_,P_:Array [String ,020];}''','''Class,_76,:,__Z,{,Constructor,(,_,,,S,,,_,:,_,),{,},Destructor,(,),{,},__0Y,(,_,:,Yw,),{,Continue,;,},Constructor,(,_,:,Array,[,Array,[,Array,[,String,,,0x41,],,,0104,],,,2,],;,__,:,__R,),{,},Var,U,:,Array,[,Float,,,04,],;,},Class,_959__20kU,:,_2,{,},Class,h,{,Val,X_05,,,z_C1,,,_,:,Float,;,Val,_7,,,__,,,U,,,$23g,,,_,,,_,,,P_,:,Array,[,String,,,020,],;,},<EOF>''',101))

    def test_840(self):
        self.assertTrue(TestLexer.test('''Class Z{Constructor (____,_:Array [Boolean ,0b1];_f,s__2,_:Array [Float ,25];o:_r6;__9E,_,_j:Q;j,P,l:Boolean ;t:Float ){} }Class S{Val $y:_;}''','''Class,Z,{,Constructor,(,____,,,_,:,Array,[,Boolean,,,0b1,],;,_f,,,s__2,,,_,:,Array,[,Float,,,25,],;,o,:,_r6,;,__9E,,,_,,,_j,:,Q,;,j,,,P,,,l,:,Boolean,;,t,:,Float,),{,},},Class,S,{,Val,$y,:,_,;,},<EOF>''',101))

    def test_841(self):
        self.assertTrue(TestLexer.test('''Class o_{}Class _9_{}Class _9{_i(_IP:Array [String ,0b110110];a,_,_:Int ;l_,_T,_I,_NW,_:Int ;_,_1:_4_){}Destructor (){}Val _l23:Float ;}Class h{}''','''Class,o_,{,},Class,_9_,{,},Class,_9,{,_i,(,_IP,:,Array,[,String,,,0b110110,],;,a,,,_,,,_,:,Int,;,l_,,,_T,,,_I,,,_NW,,,_,:,Int,;,_,,,_1,:,_4_,),{,},Destructor,(,),{,},Val,_l23,:,Float,;,},Class,h,{,},<EOF>''',101))

    def test_842(self):
        self.assertTrue(TestLexer.test('''Class y_G_:_{}Class _h28:__{Val _,$I,_,_,$_:_;Var $YEj:Array [Array [String ,0XD],88];}Class _1:b_5{Constructor (){}$D__(){}Constructor (__,y,c5_E_,_:_A;F,_X69_0F,fQ,O5a_F3,_u:Int ;w,__g_9t_,U5,_:Int ;_8:_3;_:h6;tJ__,J,hp:Array [Array [Boolean ,0B1100010],065]){} }Class _:_{}Class _{Destructor (){Return ;} }''','''Class,y_G_,:,_,{,},Class,_h28,:,__,{,Val,_,,,$I,,,_,,,_,,,$_,:,_,;,Var,$YEj,:,Array,[,Array,[,String,,,0XD,],,,88,],;,},Class,_1,:,b_5,{,Constructor,(,),{,},$D__,(,),{,},Constructor,(,__,,,y,,,c5_E_,,,_,:,_A,;,F,,,_X69_0F,,,fQ,,,O5a_F3,,,_u,:,Int,;,w,,,__g_9t_,,,U5,,,_,:,Int,;,_8,:,_3,;,_,:,h6,;,tJ__,,,J,,,hp,:,Array,[,Array,[,Boolean,,,0B1100010,],,,065,],),{,},},Class,_,:,_,{,},Class,_,{,Destructor,(,),{,Return,;,},},<EOF>''',101))

    def test_843(self):
        self.assertTrue(TestLexer.test('''Class k{Val $B,U,e_v,$0:Float ;}Class K:_{$6U(_,w__d,O_,_,FnR,_,V3:___;__,_:Array [Array [Float ,0b11],1_5]){}__(){Break ;} }''','''Class,k,{,Val,$B,,,U,,,e_v,,,$0,:,Float,;,},Class,K,:,_,{,$6U,(,_,,,w__d,,,O_,,,_,,,FnR,,,_,,,V3,:,___,;,__,,,_,:,Array,[,Array,[,Float,,,0b11,],,,15,],),{,},__,(,),{,Break,;,},},<EOF>''',101))

    def test_844(self):
        self.assertTrue(TestLexer.test('''Class _{$7uU3(z:Array [String ,1_11];_:Array [String ,14_4];_j:Array [Int ,02]){} }Class _5{}Class _{Var $_Cy:Int ;Constructor (){} }''','''Class,_,{,$7uU3,(,z,:,Array,[,String,,,111,],;,_,:,Array,[,String,,,144,],;,_j,:,Array,[,Int,,,02,],),{,},},Class,_5,{,},Class,_,{,Var,$_Cy,:,Int,;,Constructor,(,),{,},},<EOF>''',101))

    def test_845(self):
        self.assertTrue(TestLexer.test('''Class x_{Constructor (__U38f,Y9,_:Array [Boolean ,0X15];_3:Int ;_39:Int ;_,M,_1,__,_1:Array [Int ,0b11]){}Destructor (){}Constructor (_d4,a:_wS6__){Continue ;{} }}''','''Class,x_,{,Constructor,(,__U38f,,,Y9,,,_,:,Array,[,Boolean,,,0X15,],;,_3,:,Int,;,_39,:,Int,;,_,,,M,,,_1,,,__,,,_1,:,Array,[,Int,,,0b11,],),{,},Destructor,(,),{,},Constructor,(,_d4,,,a,:,_wS6__,),{,Continue,;,{,},},},<EOF>''',101))

    def test_846(self):
        self.assertTrue(TestLexer.test('''Class _Ei3__F3kQ_:K5_A{Constructor (T2:String ;P,B_,_EW8_:W;a:Int ;fj76l,pY,A:Array [Array [Array [Float ,0B111011],0B1],83]){Val I,UN,p0,P,_6:Array [Boolean ,83];} }''','''Class,_Ei3__F3kQ_,:,K5_A,{,Constructor,(,T2,:,String,;,P,,,B_,,,_EW8_,:,W,;,a,:,Int,;,fj76l,,,pY,,,A,:,Array,[,Array,[,Array,[,Float,,,0B111011,],,,0B1,],,,83,],),{,Val,I,,,UN,,,p0,,,P,,,_6,:,Array,[,Boolean,,,83,],;,},},<EOF>''',101))

    def test_847(self):
        self.assertTrue(TestLexer.test('''Class d__:qY_{}Class c{}Class H3{}Class _3s6_mXU0:_{Constructor (U,_,u,_,rx,h:_){Return ;}Constructor (_,x:Array [Array [Float ,7_0],0B1_010_10]){Continue ;} }''','''Class,d__,:,qY_,{,},Class,c,{,},Class,H3,{,},Class,_3s6_mXU0,:,_,{,Constructor,(,U,,,_,,,u,,,_,,,rx,,,h,:,_,),{,Return,;,},Constructor,(,_,,,x,:,Array,[,Array,[,Float,,,70,],,,0B101010,],),{,Continue,;,},},<EOF>''',101))

    def test_848(self):
        self.assertTrue(TestLexer.test('''Class _4{Val _:Array [Array [Array [Float ,50],03],50];$_(){}Var B,$w659i_,$_,$4,g,T:_s;Destructor (){}Destructor (){Break ;} }''','''Class,_4,{,Val,_,:,Array,[,Array,[,Array,[,Float,,,50,],,,03,],,,50,],;,$_,(,),{,},Var,B,,,$w659i_,,,$_,,,$4,,,g,,,T,:,_s,;,Destructor,(,),{,},Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_849(self):
        self.assertTrue(TestLexer.test('''Class Z8:____4{Val n,$_742,_,$2g,$X:h6;Constructor (){} }Class __t7:A{Var x0,___,_,S,$80,L:v6a;Var r:Array [Boolean ,047];Constructor (){}Val mw,$67:Int ;}''','''Class,Z8,:,____4,{,Val,n,,,$_742,,,_,,,$2g,,,$X,:,h6,;,Constructor,(,),{,},},Class,__t7,:,A,{,Var,x0,,,___,,,_,,,S,,,$80,,,L,:,v6a,;,Var,r,:,Array,[,Boolean,,,047,],;,Constructor,(,),{,},Val,mw,,,$67,:,Int,;,},<EOF>''',101))

    def test_850(self):
        self.assertTrue(TestLexer.test('''Class N:FYV{Var $u,_,$_93,_,__,_49:Array [Array [Float ,85_1],0x64];}Class _iY:_{$_(){} }Class S:X{}Class A:A7h{}''','''Class,N,:,FYV,{,Var,$u,,,_,,,$_93,,,_,,,__,,,_49,:,Array,[,Array,[,Float,,,851,],,,0x64,],;,},Class,_iY,:,_,{,$_,(,),{,},},Class,S,:,X,{,},Class,A,:,A7h,{,},<EOF>''',101))

    def test_851(self):
        self.assertTrue(TestLexer.test('''Class n{Constructor (){}Constructor (R:_j;_3E_:Float ;_3_,_39V:Float ;_:r;a_:Array [Array [Boolean ,9],04];_:g;P3_8:Array [Array [Array [Array [Array [Int ,0B1010010],0B1_10],0X4],047],06]){}Constructor (x:Array [Float ,047];d48K_v,_h:tp;_:f){ {} }}''','''Class,n,{,Constructor,(,),{,},Constructor,(,R,:,_j,;,_3E_,:,Float,;,_3_,,,_39V,:,Float,;,_,:,r,;,a_,:,Array,[,Array,[,Boolean,,,9,],,,04,],;,_,:,g,;,P3_8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1010010,],,,0B110,],,,0X4,],,,047,],,,06,],),{,},Constructor,(,x,:,Array,[,Float,,,047,],;,d48K_v,,,_h,:,tp,;,_,:,f,),{,{,},},},<EOF>''',101))

    def test_852(self):
        self.assertTrue(TestLexer.test('''Class __:x__{Constructor (){} }Class _{Var $P_:Array [Array [Float ,2],0XA]=!!-----Null ;}Class T:a{}Class _{_(){}_(){} }Class _:k{}Class __{}''','''Class,__,:,x__,{,Constructor,(,),{,},},Class,_,{,Var,$P_,:,Array,[,Array,[,Float,,,2,],,,0XA,],=,!,!,-,-,-,-,-,Null,;,},Class,T,:,a,{,},Class,_,{,_,(,),{,},_,(,),{,},},Class,_,:,k,{,},Class,__,{,},<EOF>''',101))

    def test_853(self):
        self.assertTrue(TestLexer.test('''Class LG:l{Destructor (){}Constructor (FW8:a1;G_:N;E__,_:Array [Array [Array [Array [Array [Array [Array [Float ,0B1001100],6],0XD],6],0x10],0X53],94]){} }''','''Class,LG,:,l,{,Destructor,(,),{,},Constructor,(,FW8,:,a1,;,G_,:,N,;,E__,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1001100,],,,6,],,,0XD,],,,6,],,,0x10,],,,0X53,],,,94,],),{,},},<EOF>''',101))

    def test_854(self):
        self.assertTrue(TestLexer.test('''Class _{}Class y50i:dK{}Class t:J_2{$U(__,k:Array [Array [Float ,0B1001011],0b1];O__4:Array [Array [Array [String ,0X3B],0B1001011],0132];__1:Array [Array [Array [Boolean ,3_2_1],04],39];nh,_3,_:aO_h){} }Class m_:_6j_8{}''','''Class,_,{,},Class,y50i,:,dK,{,},Class,t,:,J_2,{,$U,(,__,,,k,:,Array,[,Array,[,Float,,,0B1001011,],,,0b1,],;,O__4,:,Array,[,Array,[,Array,[,String,,,0X3B,],,,0B1001011,],,,0132,],;,__1,:,Array,[,Array,[,Array,[,Boolean,,,321,],,,04,],,,39,],;,nh,,,_3,,,_,:,aO_h,),{,},},Class,m_,:,_6j_8,{,},<EOF>''',101))

    def test_855(self):
        self.assertTrue(TestLexer.test('''Class _l:F2yt{}Class _E9a:_8{Val w:_;}Class _7D1:K{Constructor (){} }Class U{Var $6:Array [Array [Boolean ,0xE],0XB];}''','''Class,_l,:,F2yt,{,},Class,_E9a,:,_8,{,Val,w,:,_,;,},Class,_7D1,:,K,{,Constructor,(,),{,},},Class,U,{,Var,$6,:,Array,[,Array,[,Boolean,,,0xE,],,,0XB,],;,},<EOF>''',101))

    def test_856(self):
        self.assertTrue(TestLexer.test('''Class _:r{Constructor (){}Destructor (){} }Class Q3:__{v(R0,C,_4:Array [Int ,0137];_:Array [Array [Array [Float ,0B1],0x5B],9];_H:Array [Float ,0XF];WT_N:B){} }''','''Class,_,:,r,{,Constructor,(,),{,},Destructor,(,),{,},},Class,Q3,:,__,{,v,(,R0,,,C,,,_4,:,Array,[,Int,,,0137,],;,_,:,Array,[,Array,[,Array,[,Float,,,0B1,],,,0x5B,],,,9,],;,_H,:,Array,[,Float,,,0XF,],;,WT_N,:,B,),{,},},<EOF>''',101))

    def test_857(self):
        self.assertTrue(TestLexer.test('''Class L_:_{M(_:Array [String ,0107]){Var _g,f,_Qc34:Array [Array [Array [Float ,81],0X17],05_1];Continue ;Return ;} }Class w{}''','''Class,L_,:,_,{,M,(,_,:,Array,[,String,,,0107,],),{,Var,_g,,,f,,,_Qc34,:,Array,[,Array,[,Array,[,Float,,,81,],,,0X17,],,,051,],;,Continue,;,Return,;,},},Class,w,{,},<EOF>''',101))

    def test_858(self):
        self.assertTrue(TestLexer.test('''Class zHE{Var _,$_H,E9b,_D,$N,j,$_,k_l,$Y_,$_,$_:Array [Boolean ,0B1];}Class _4_9:_{Constructor (_:Array [Boolean ,031];_,_,r_2:_;H_yz,_:String ){}Val $y8:Int ;Var $hi,__:Array [Boolean ,83];Val $M4:_6;}''','''Class,zHE,{,Var,_,,,$_H,,,E9b,,,_D,,,$N,,,j,,,$_,,,k_l,,,$Y_,,,$_,,,$_,:,Array,[,Boolean,,,0B1,],;,},Class,_4_9,:,_,{,Constructor,(,_,:,Array,[,Boolean,,,031,],;,_,,,_,,,r_2,:,_,;,H_yz,,,_,:,String,),{,},Val,$y8,:,Int,;,Var,$hi,,,__,:,Array,[,Boolean,,,83,],;,Val,$M4,:,_6,;,},<EOF>''',101))

    def test_859(self):
        self.assertTrue(TestLexer.test('''Class I5{}Class G{Constructor (O:Array [Array [String ,0x1],031];_:Array [Float ,0x5A9];_:Array [Array [Array [Array [Array [Boolean ,0b10000],1_5],7],0x2B],14_5_33_10];G:Array [Int ,8]){} }Class i{Val $e_kY_:Boolean ;}''','''Class,I5,{,},Class,G,{,Constructor,(,O,:,Array,[,Array,[,String,,,0x1,],,,031,],;,_,:,Array,[,Float,,,0x5A9,],;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b10000,],,,15,],,,7,],,,0x2B,],,,1453310,],;,G,:,Array,[,Int,,,8,],),{,},},Class,i,{,Val,$e_kY_,:,Boolean,;,},<EOF>''',101))

    def test_860(self):
        self.assertTrue(TestLexer.test('''Class _:zP{Val X7:Array [String ,24];}Class OF{}Class l23P73_{Constructor (_,_:Array [Array [String ,5_787],0xB_4];c_1:Int ){} }''','''Class,_,:,zP,{,Val,X7,:,Array,[,String,,,24,],;,},Class,OF,{,},Class,l23P73_,{,Constructor,(,_,,,_,:,Array,[,Array,[,String,,,5787,],,,0xB4,],;,c_1,:,Int,),{,},},<EOF>''',101))

    def test_861(self):
        self.assertTrue(TestLexer.test('''Class _:o{Destructor (){Continue ;Val w,_:Array [Int ,33];__Q::$_U3_7();_::$_O();} }Class Y:A54{Destructor (){Break ;} }''','''Class,_,:,o,{,Destructor,(,),{,Continue,;,Val,w,,,_,:,Array,[,Int,,,33,],;,__Q,::,$_U3_7,(,),;,_,::,$_O,(,),;,},},Class,Y,:,A54,{,Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_862(self):
        self.assertTrue(TestLexer.test('''Class __:QO{Var t:String ;Destructor (){Break ;Break ;}Val $13l_5_5S__:_R;}Class _:aC{}Class _{}Class _C8:_91{}''','''Class,__,:,QO,{,Var,t,:,String,;,Destructor,(,),{,Break,;,Break,;,},Val,$13l_5_5S__,:,_R,;,},Class,_,:,aC,{,},Class,_,{,},Class,_C8,:,_91,{,},<EOF>''',101))

    def test_863(self):
        self.assertTrue(TestLexer.test('''Class s{}Class _92:_D7_{$A_(I:Array [Array [Float ,0X64],47];g_:Int ;_,T,B_1sQ6y_,v9:_;h7,Dx6w:_;a,G_:Float ){Break ;} }Class ZN{}''','''Class,s,{,},Class,_92,:,_D7_,{,$A_,(,I,:,Array,[,Array,[,Float,,,0X64,],,,47,],;,g_,:,Int,;,_,,,T,,,B_1sQ6y_,,,v9,:,_,;,h7,,,Dx6w,:,_,;,a,,,G_,:,Float,),{,Break,;,},},Class,ZN,{,},<EOF>''',101))

    def test_864(self):
        self.assertTrue(TestLexer.test('''Class n7:_{}Class _:w{Constructor (_:Array [Array [Int ,8],0B101101];z:Array [Array [Array [Array [Array [String ,0141],01],0B11],0B1],2];N:Boolean ;V2,___:String ){} }''','''Class,n7,:,_,{,},Class,_,:,w,{,Constructor,(,_,:,Array,[,Array,[,Int,,,8,],,,0B101101,],;,z,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0141,],,,01,],,,0B11,],,,0B1,],,,2,],;,N,:,Boolean,;,V2,,,___,:,String,),{,},},<EOF>''',101))

    def test_865(self):
        self.assertTrue(TestLexer.test('''Class V1I{Var D4_,$z,_:Boolean ;$4(_1:Y84;_,l:Float ){} }Class j{Var $_,$5:Float ;a_(){} }Class NG:P{Val HX6:A54M7;}''','''Class,V1I,{,Var,D4_,,,$z,,,_,:,Boolean,;,$4,(,_1,:,Y84,;,_,,,l,:,Float,),{,},},Class,j,{,Var,$_,,,$5,:,Float,;,a_,(,),{,},},Class,NG,:,P,{,Val,HX6,:,A54M7,;,},<EOF>''',101))

    def test_866(self):
        self.assertTrue(TestLexer.test('''Class u:B{}Class _931_:_{Var $72L8:v;Constructor (_b,A:String ;t,Ny:Array [String ,98]){Continue ;} }Class _75:s4_XL0_mq_{}''','''Class,u,:,B,{,},Class,_931_,:,_,{,Var,$72L8,:,v,;,Constructor,(,_b,,,A,:,String,;,t,,,Ny,:,Array,[,String,,,98,],),{,Continue,;,},},Class,_75,:,s4_XL0_mq_,{,},<EOF>''',101))

    def test_867(self):
        self.assertTrue(TestLexer.test('''Class MW{Var _h:Array [Array [Array [Array [Float ,0xF],0X1A],074],0x7];$7W_oG(hk,_O,_,_356l:Array [Float ,0x53];Z_:Array [Array [Array [Array [Boolean ,0x53],21],21],074]){} }Class t{}Class k7{Constructor (_:__){} }''','''Class,MW,{,Var,_h,:,Array,[,Array,[,Array,[,Array,[,Float,,,0xF,],,,0X1A,],,,074,],,,0x7,],;,$7W_oG,(,hk,,,_O,,,_,,,_356l,:,Array,[,Float,,,0x53,],;,Z_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x53,],,,21,],,,21,],,,074,],),{,},},Class,t,{,},Class,k7,{,Constructor,(,_,:,__,),{,},},<EOF>''',101))

    def test_868(self):
        self.assertTrue(TestLexer.test('''Class _:g_{$_5(__r,__,_3,i:Array [Array [Int ,0X5],0X5B];L,___c:String ;_:j;ls,_:Array [Array [Int ,0X5B],0B10_0];y,L,_q,OK:Boolean ){ {} }}''','''Class,_,:,g_,{,$_5,(,__r,,,__,,,_3,,,i,:,Array,[,Array,[,Int,,,0X5,],,,0X5B,],;,L,,,___c,:,String,;,_,:,j,;,ls,,,_,:,Array,[,Array,[,Int,,,0X5B,],,,0B100,],;,y,,,L,,,_q,,,OK,:,Boolean,),{,{,},},},<EOF>''',101))

    def test_869(self):
        self.assertTrue(TestLexer.test('''Class vb{}Class _:O{}Class H___{Destructor (){}Constructor (_,E,_,_:Float ;s,v,D12:Array [String ,0X51];Mt:vy7;u:Float ;l6,Q:F0;_:Array [Array [Array [Array [Boolean ,0x5_F],0B1],0627],70]){} }Class _{}''','''Class,vb,{,},Class,_,:,O,{,},Class,H___,{,Destructor,(,),{,},Constructor,(,_,,,E,,,_,,,_,:,Float,;,s,,,v,,,D12,:,Array,[,String,,,0X51,],;,Mt,:,vy7,;,u,:,Float,;,l6,,,Q,:,F0,;,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x5F,],,,0B1,],,,0627,],,,70,],),{,},},Class,_,{,},<EOF>''',101))

    def test_870(self):
        self.assertTrue(TestLexer.test('''Class J:s7M{Constructor (_,d,_,_6sp:Boolean ;_:Array [Array [Int ,0x5F],0b100]){}Constructor (){}Constructor (){} }''','''Class,J,:,s7M,{,Constructor,(,_,,,d,,,_,,,_6sp,:,Boolean,;,_,:,Array,[,Array,[,Int,,,0x5F,],,,0b100,],),{,},Constructor,(,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_871(self):
        self.assertTrue(TestLexer.test('''Class z2_:u{$61(_Q9:_;_,o_:_3Z){Break ;} }Class o__73{Val $A4:Array [Array [Boolean ,85],0x6];}Class _1{Var $1_8:Array [Array [Array [Array [Float ,01_6],0B1110],0103],0103];}''','''Class,z2_,:,u,{,$61,(,_Q9,:,_,;,_,,,o_,:,_3Z,),{,Break,;,},},Class,o__73,{,Val,$A4,:,Array,[,Array,[,Boolean,,,85,],,,0x6,],;,},Class,_1,{,Var,$1_8,:,Array,[,Array,[,Array,[,Array,[,Float,,,016,],,,0B1110,],,,0103,],,,0103,],;,},<EOF>''',101))

    def test_872(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (W:Int ;t_,m:Array [String ,0b110011];t0,_b:String ){} }Class p:Z{Var $5D,$2,_,sRs7,$Z_,$_,tF_,q:Array [Array [Int ,0x1F5_1],0x94];}''','''Class,_,{,Constructor,(,W,:,Int,;,t_,,,m,:,Array,[,String,,,0b110011,],;,t0,,,_b,:,String,),{,},},Class,p,:,Z,{,Var,$5D,,,$2,,,_,,,sRs7,,,$Z_,,,$_,,,tF_,,,q,:,Array,[,Array,[,Int,,,0x1F51,],,,0x94,],;,},<EOF>''',101))

    def test_873(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _:m_{Constructor (){}Constructor (R_4j,P:B;_:Array [Array [String ,050],10];o6,T:Int ;gP,Q_,R:_){}Destructor (){} }''','''Class,_,{,},Class,_,:,m_,{,Constructor,(,),{,},Constructor,(,R_4j,,,P,:,B,;,_,:,Array,[,Array,[,String,,,050,],,,10,],;,o6,,,T,:,Int,;,gP,,,Q_,,,R,:,_,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_874(self):
        self.assertTrue(TestLexer.test('''Class Z{}Class _:_{Var $3,uP_1FT3,$7,$_:Boolean ;}Class _:_q{Val $_D:Array [Array [Array [Array [String ,9],73],03],0b100101];}Class Xs{}''','''Class,Z,{,},Class,_,:,_,{,Var,$3,,,uP_1FT3,,,$7,,,$_,:,Boolean,;,},Class,_,:,_q,{,Val,$_D,:,Array,[,Array,[,Array,[,Array,[,String,,,9,],,,73,],,,03,],,,0b100101,],;,},Class,Xs,{,},<EOF>''',101))

    def test_875(self):
        self.assertTrue(TestLexer.test('''Class L{Constructor (_U_,E,i:Boolean ){}Val $6_67,$M2i8y,_:O_;i(_5_M,__0c_,u__o_:Array [Array [Int ,6],84];S5_,UC:Array [Array [String ,0x8_A_D1_63],84]){} }''','''Class,L,{,Constructor,(,_U_,,,E,,,i,:,Boolean,),{,},Val,$6_67,,,$M2i8y,,,_,:,O_,;,i,(,_5_M,,,__0c_,,,u__o_,:,Array,[,Array,[,Int,,,6,],,,84,],;,S5_,,,UC,:,Array,[,Array,[,String,,,0x8AD163,],,,84,],),{,},},<EOF>''',101))

    def test_876(self):
        self.assertTrue(TestLexer.test('''Class __:_CG{}Class _{$_m(){}Val $P_3,$i_:g_;Constructor (){}$D(z8,b_,A__,C,__,_Y,_:Array [Float ,0335_1_2];c4:Float ){}Var _,l:Float ;}Class h:_{}''','''Class,__,:,_CG,{,},Class,_,{,$_m,(,),{,},Val,$P_3,,,$i_,:,g_,;,Constructor,(,),{,},$D,(,z8,,,b_,,,A__,,,C,,,__,,,_Y,,,_,:,Array,[,Float,,,033512,],;,c4,:,Float,),{,},Var,_,,,l,:,Float,;,},Class,h,:,_,{,},<EOF>''',101))

    def test_877(self):
        self.assertTrue(TestLexer.test('''Class __{Var _Zf,$y_:String ;Constructor (P,f__I,D_0_N,SQ6,p_,u_,_h__d:_w_2__F;_:_635;L:Array [Float ,2];_:Boolean ;__:c){} }Class _:_{}Class g{Constructor (){}Var R1:Float ;}Class _:H{}Class L_{}''','''Class,__,{,Var,_Zf,,,$y_,:,String,;,Constructor,(,P,,,f__I,,,D_0_N,,,SQ6,,,p_,,,u_,,,_h__d,:,_w_2__F,;,_,:,_635,;,L,:,Array,[,Float,,,2,],;,_,:,Boolean,;,__,:,c,),{,},},Class,_,:,_,{,},Class,g,{,Constructor,(,),{,},Var,R1,:,Float,;,},Class,_,:,H,{,},Class,L_,{,},<EOF>''',101))

    def test_878(self):
        self.assertTrue(TestLexer.test('''Class Y:I{$p6(_:Boolean ){_2_3R::$5_();}Constructor (){Continue ;Return ;}Var _:Int ;}Class u:G_{}Class _:_{}Class V:_{}''','''Class,Y,:,I,{,$p6,(,_,:,Boolean,),{,_2_3R,::,$5_,(,),;,},Constructor,(,),{,Continue,;,Return,;,},Var,_,:,Int,;,},Class,u,:,G_,{,},Class,_,:,_,{,},Class,V,:,_,{,},<EOF>''',101))

    def test_879(self):
        self.assertTrue(TestLexer.test('''Class bC:s{Constructor (W,_41rr4,I:q8){}$M__(N:_490;C:String ;_r,t:Array [String ,0B11011];_:Array [Array [String ,040],0x47];_:Int ;__1,_a,I1LI_,n:_l){} }''','''Class,bC,:,s,{,Constructor,(,W,,,_41rr4,,,I,:,q8,),{,},$M__,(,N,:,_490,;,C,:,String,;,_r,,,t,:,Array,[,String,,,0B11011,],;,_,:,Array,[,Array,[,String,,,040,],,,0x47,],;,_,:,Int,;,__1,,,_a,,,I1LI_,,,n,:,_l,),{,},},<EOF>''',101))

    def test_880(self):
        self.assertTrue(TestLexer.test('''Class L:_{}Class Q_1{Constructor (_N6689,_:Array [String ,0x32];_0,h_m,_:Array [Array [Array [Boolean ,0x32],0x2],012]){} }''','''Class,L,:,_,{,},Class,Q_1,{,Constructor,(,_N6689,,,_,:,Array,[,String,,,0x32,],;,_0,,,h_m,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0x32,],,,0x2,],,,012,],),{,},},<EOF>''',101))

    def test_881(self):
        self.assertTrue(TestLexer.test('''Class Iz{_(_:_3_s;___A:G_){}Constructor (uK:Array [Array [Array [Array [Int ,0X1B],0143],0X19],64];_:_m){Return ;} }Class _B5___NTy{Var Pa_,cZ:String ;}Class __4:_m{}Class _{}Class a:__Z5{}''','''Class,Iz,{,_,(,_,:,_3_s,;,___A,:,G_,),{,},Constructor,(,uK,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X1B,],,,0143,],,,0X19,],,,64,],;,_,:,_m,),{,Return,;,},},Class,_B5___NTy,{,Var,Pa_,,,cZ,:,String,;,},Class,__4,:,_m,{,},Class,_,{,},Class,a,:,__Z5,{,},<EOF>''',101))

    def test_882(self):
        self.assertTrue(TestLexer.test('''Class g_z5{Var _:Array [Array [Array [Array [Array [Boolean ,015],0X3D],0X3D],015],4];Var $m_D_,_t4:String ;}Class U:S{}''','''Class,g_z5,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,015,],,,0X3D,],,,0X3D,],,,015,],,,4,],;,Var,$m_D_,,,_t4,:,String,;,},Class,U,:,S,{,},<EOF>''',101))

    def test_883(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_1,_3_:Array [Array [String ,1],0xD];eT7_:Array [Array [String ,0B111001],0X9]){Var y6,_3a9,_:String ;} }''','''Class,_,{,Constructor,(,_1,,,_3_,:,Array,[,Array,[,String,,,1,],,,0xD,],;,eT7_,:,Array,[,Array,[,String,,,0B111001,],,,0X9,],),{,Var,y6,,,_3a9,,,_,:,String,;,},},<EOF>''',101))

    def test_884(self):
        self.assertTrue(TestLexer.test('''Class w{Var $eW:Boolean ;}Class X_k:B35{Val $_:Array [Array [Float ,075],13];Val $8:Array [Array [Array [Boolean ,01],13],0b1_1];}''','''Class,w,{,Var,$eW,:,Boolean,;,},Class,X_k,:,B35,{,Val,$_,:,Array,[,Array,[,Float,,,075,],,,13,],;,Val,$8,:,Array,[,Array,[,Array,[,Boolean,,,01,],,,13,],,,0b11,],;,},<EOF>''',101))

    def test_885(self):
        self.assertTrue(TestLexer.test('''Class _x{}Class S:jy{}Class _Pw_0_{}Class q{Destructor (){Return ;Return ;}Constructor (aY___,M5:Array [String ,0110];_:Array [Array [Int ,0110],0110];r,_7:String ;g,_:Array [Array [Array [Boolean ,06],07_4_3],0x10]){} }''','''Class,_x,{,},Class,S,:,jy,{,},Class,_Pw_0_,{,},Class,q,{,Destructor,(,),{,Return,;,Return,;,},Constructor,(,aY___,,,M5,:,Array,[,String,,,0110,],;,_,:,Array,[,Array,[,Int,,,0110,],,,0110,],;,r,,,_7,:,String,;,g,,,_,:,Array,[,Array,[,Array,[,Boolean,,,06,],,,0743,],,,0x10,],),{,},},<EOF>''',101))

    def test_886(self):
        self.assertTrue(TestLexer.test('''Class Q6I:z{}Class _{Ln__j(fQ6,_,_,_,_0,A_Q,i:Array [Array [Array [Int ,0X5B],0x3],0X5B];_:String ){} }Class _6_z6{}''','''Class,Q6I,:,z,{,},Class,_,{,Ln__j,(,fQ6,,,_,,,_,,,_,,,_0,,,A_Q,,,i,:,Array,[,Array,[,Array,[,Int,,,0X5B,],,,0x3,],,,0X5B,],;,_,:,String,),{,},},Class,_6_z6,{,},<EOF>''',101))

    def test_887(self):
        self.assertTrue(TestLexer.test('''Class R_:__X2{}Class _{}Class _2:_{}Class _91{Constructor (_7s_29A0_Qa7U,Hl:Array [Int ,39]){Val _:Boolean ;{} }Var X,$_q77_:w_4;Var $Ug:Float ;}''','''Class,R_,:,__X2,{,},Class,_,{,},Class,_2,:,_,{,},Class,_91,{,Constructor,(,_7s_29A0_Qa7U,,,Hl,:,Array,[,Int,,,39,],),{,Val,_,:,Boolean,;,{,},},Var,X,,,$_q77_,:,w_4,;,Var,$Ug,:,Float,;,},<EOF>''',101))

    def test_888(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class __XQ:_Z_0{$_(_,_:Array [Array [Array [Array [Array [Float ,7],047],02],98],0X1D];_3,_4:_){}t(){Var B,w5:Array [String ,0b1];} }Class T:Jx{}''','''Class,_,:,_,{,},Class,__XQ,:,_Z_0,{,$_,(,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,7,],,,047,],,,02,],,,98,],,,0X1D,],;,_3,,,_4,:,_,),{,},t,(,),{,Var,B,,,w5,:,Array,[,String,,,0b1,],;,},},Class,T,:,Jx,{,},<EOF>''',101))

    def test_889(self):
        self.assertTrue(TestLexer.test('''Class e{Destructor (){}Val u_87:Array [Array [Int ,21],032_1_2_4_3_1];Val _,$1,$2_bez:Float ;}Class _:b{}Class _:_{}Class _0{}Class _{Constructor (_:P7_;j:Array [Array [Array [Int ,0x34],0B1001],7];r,_1:Float ){} }Class _:_zv0{Var $_:_g__;}Class __{Var $L__,_:Boolean ;}''','''Class,e,{,Destructor,(,),{,},Val,u_87,:,Array,[,Array,[,Int,,,21,],,,03212431,],;,Val,_,,,$1,,,$2_bez,:,Float,;,},Class,_,:,b,{,},Class,_,:,_,{,},Class,_0,{,},Class,_,{,Constructor,(,_,:,P7_,;,j,:,Array,[,Array,[,Array,[,Int,,,0x34,],,,0B1001,],,,7,],;,r,,,_1,:,Float,),{,},},Class,_,:,_zv0,{,Var,$_,:,_g__,;,},Class,__,{,Var,$L__,,,_,:,Boolean,;,},<EOF>''',101))

    def test_890(self):
        self.assertTrue(TestLexer.test('''Class b45__7{$_2(){} }Class sB:_{Constructor (){}Val G:Array [Float ,0B1001100];Var $_5R,$_g:Array [Array [Float ,0X4_8_5],0b111001];}''','''Class,b45__7,{,$_2,(,),{,},},Class,sB,:,_,{,Constructor,(,),{,},Val,G,:,Array,[,Float,,,0B1001100,],;,Var,$_5R,,,$_g,:,Array,[,Array,[,Float,,,0X485,],,,0b111001,],;,},<EOF>''',101))

    def test_891(self):
        self.assertTrue(TestLexer.test('''Class _:It6Ej{Val cq____:Int ;Var s,$7,m_,$x:Array [Boolean ,0x71];Val _g:Array [Float ,0XA];_A2_5(_,_,_3,_0K,I_:Int ;_:Int ;H6,V8:Array [Array [Array [String ,042],0x31],5_4];_:Int ;_:Array [String ,042];_,k,z_,_:Boolean ;__:K_){} }Class B:__{}Class w_:_2_h0{}Class _:J8{}Class _{}''','''Class,_,:,It6Ej,{,Val,cq____,:,Int,;,Var,s,,,$7,,,m_,,,$x,:,Array,[,Boolean,,,0x71,],;,Val,_g,:,Array,[,Float,,,0XA,],;,_A2_5,(,_,,,_,,,_3,,,_0K,,,I_,:,Int,;,_,:,Int,;,H6,,,V8,:,Array,[,Array,[,Array,[,String,,,042,],,,0x31,],,,54,],;,_,:,Int,;,_,:,Array,[,String,,,042,],;,_,,,k,,,z_,,,_,:,Boolean,;,__,:,K_,),{,},},Class,B,:,__,{,},Class,w_,:,_2_h0,{,},Class,_,:,J8,{,},Class,_,{,},<EOF>''',101))

    def test_892(self):
        self.assertTrue(TestLexer.test('''Class __1:dBYS{Var $_,$9S0:Array [Array [Array [Array [Array [Int ,0B1_0],03],0b110110],2],4_17_6];}Class w_{}Class J8_rd6g1Z:___GM{}''','''Class,__1,:,dBYS,{,Var,$_,,,$9S0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B10,],,,03,],,,0b110110,],,,2,],,,4176,],;,},Class,w_,{,},Class,J8_rd6g1Z,:,___GM,{,},<EOF>''',101))

    def test_893(self):
        self.assertTrue(TestLexer.test('''Class p:_{}Class f{}Class G_{}Class _41:__{}Class _:_Yn{}Class _:_59K{}Class i:_{}Class _:__5_{}Class _{Var $A:String ;Val $_:Array [String ,0X1F];}Class O:_{Destructor (){ {}{Return ;} }}Class _:_{}''','''Class,p,:,_,{,},Class,f,{,},Class,G_,{,},Class,_41,:,__,{,},Class,_,:,_Yn,{,},Class,_,:,_59K,{,},Class,i,:,_,{,},Class,_,:,__5_,{,},Class,_,{,Var,$A,:,String,;,Val,$_,:,Array,[,String,,,0X1F,],;,},Class,O,:,_,{,Destructor,(,),{,{,},{,Return,;,},},},Class,_,:,_,{,},<EOF>''',101))

    def test_894(self):
        self.assertTrue(TestLexer.test('''Class _:X{$f(){ {}Val H,_,At09:Array [Array [Array [Array [Array [Array [Array [Float ,0b10_10],0X58],0B1011010],0X58],0B11],0b1011111],4];}Constructor (){} }''','''Class,_,:,X,{,$f,(,),{,{,},Val,H,,,_,,,At09,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1010,],,,0X58,],,,0B1011010,],,,0X58,],,,0B11,],,,0b1011111,],,,4,],;,},Constructor,(,),{,},},<EOF>''',101))

    def test_895(self):
        self.assertTrue(TestLexer.test('''Class _:V{}Class b:L3_{Var j,$4:Boolean ;Val $ZC:D;Var $_l_:Array [String ,2];}Class B_2R9h{Var bp:String ;}Class S{}''','''Class,_,:,V,{,},Class,b,:,L3_,{,Var,j,,,$4,:,Boolean,;,Val,$ZC,:,D,;,Var,$_l_,:,Array,[,String,,,2,],;,},Class,B_2R9h,{,Var,bp,:,String,;,},Class,S,{,},<EOF>''',101))

    def test_896(self):
        self.assertTrue(TestLexer.test('''Class _60{}Class bs8:_{$1__WV5(_7_2f,H,_,_0:Array [Boolean ,79_8];v_,ZA,_8,_0:Array [Array [Int ,78],5_1_4_8]){} }''','''Class,_60,{,},Class,bs8,:,_,{,$1__WV5,(,_7_2f,,,H,,,_,,,_0,:,Array,[,Boolean,,,798,],;,v_,,,ZA,,,_8,,,_0,:,Array,[,Array,[,Int,,,78,],,,5148,],),{,},},<EOF>''',101))

    def test_897(self):
        self.assertTrue(TestLexer.test('''Class ey7:_U_829Y0__o{}Class _{}Class mf3_P{}Class __:_{$_(___3:Boolean ;__8:String ){Break ;}Val X:Array [Float ,06];}Class YB1z_6eC_W{Var $7:L;}''','''Class,ey7,:,_U_829Y0__o,{,},Class,_,{,},Class,mf3_P,{,},Class,__,:,_,{,$_,(,___3,:,Boolean,;,__8,:,String,),{,Break,;,},Val,X,:,Array,[,Float,,,06,],;,},Class,YB1z_6eC_W,{,Var,$7,:,L,;,},<EOF>''',101))

    def test_898(self):
        self.assertTrue(TestLexer.test('''Class _xF_99{Val $H_:Boolean ;}Class hW_:O{$9(_7:Boolean ){}Var SM:Int ;Destructor (){} }Class w:_K{Destructor (){_::$_();} }''','''Class,_xF_99,{,Val,$H_,:,Boolean,;,},Class,hW_,:,O,{,$9,(,_7,:,Boolean,),{,},Var,SM,:,Int,;,Destructor,(,),{,},},Class,w,:,_K,{,Destructor,(,),{,_,::,$_,(,),;,},},<EOF>''',101))

    def test_899(self):
        self.assertTrue(TestLexer.test('''Class D_D__E0_{}Class _57_:__{}Class _v{Constructor (T_:Int ){}Val $H0,$__:Array [Boolean ,3_7_3_5];Constructor (W:_;e75:Boolean ){} }''','''Class,D_D__E0_,{,},Class,_57_,:,__,{,},Class,_v,{,Constructor,(,T_,:,Int,),{,},Val,$H0,,,$__,:,Array,[,Boolean,,,3735,],;,Constructor,(,W,:,_,;,e75,:,Boolean,),{,},},<EOF>''',101))

    def test_900(self):
        self.assertTrue(TestLexer.test('''Class Hw:w8__zc{}Class _0:_7{_(){}Var $S,$V_:Array [Array [Array [Array [Float ,8_3658_8],0xB_8_E_EA],053],0b100011];}''','''Class,Hw,:,w8__zc,{,},Class,_0,:,_7,{,_,(,),{,},Var,$S,,,$V_,:,Array,[,Array,[,Array,[,Array,[,Float,,,836588,],,,0xB8EEA,],,,053,],,,0b100011,],;,},<EOF>''',101))

    def test_901(self):
        self.assertTrue(TestLexer.test('''Class zK_{Constructor (w:Array [String ,0X55];_99,G0rHX_71:Float ){}Val $g8y4_,$_,$A,_r,$_:Array [Boolean ,0XF6];Val v89:Int ;}''','''Class,zK_,{,Constructor,(,w,:,Array,[,String,,,0X55,],;,_99,,,G0rHX_71,:,Float,),{,},Val,$g8y4_,,,$_,,,$A,,,_r,,,$_,:,Array,[,Boolean,,,0XF6,],;,Val,v89,:,Int,;,},<EOF>''',101))

    def test_902(self):
        self.assertTrue(TestLexer.test('''Class lc:__v__{}Class o5_1_:_6{Val $b__:Array [Array [Array [Float ,0XA05_7A],0X9_F],0X64];Val $j,$_LO1_e_yr,$k:v;Val _5:Boolean ;Val _f:Array [Boolean ,4];}Class __{}''','''Class,lc,:,__v__,{,},Class,o5_1_,:,_6,{,Val,$b__,:,Array,[,Array,[,Array,[,Float,,,0XA057A,],,,0X9F,],,,0X64,],;,Val,$j,,,$_LO1_e_yr,,,$k,:,v,;,Val,_5,:,Boolean,;,Val,_f,:,Array,[,Boolean,,,4,],;,},Class,__,{,},<EOF>''',101))

    def test_903(self):
        self.assertTrue(TestLexer.test('''Class d{Val _5,$K,$_:Array [Array [Array [Array [Array [Array [Array [Boolean ,0B1],0b1],93],0x2A],0b1],01],0xF_8];Constructor (_:String ;_:Array [String ,0b1]){ {{Break ;} }Break ;}Val v:Array [Array [String ,93],23];}''','''Class,d,{,Val,_5,,,$K,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0b1,],,,93,],,,0x2A,],,,0b1,],,,01,],,,0xF8,],;,Constructor,(,_,:,String,;,_,:,Array,[,String,,,0b1,],),{,{,{,Break,;,},},Break,;,},Val,v,:,Array,[,Array,[,String,,,93,],,,23,],;,},<EOF>''',101))

    def test_904(self):
        self.assertTrue(TestLexer.test('''Class b{Var Z,hI:Array [Float ,6];Val $2k_,z:Array [Int ,0107];$____P_(_,_,p6P5:Int ){__7q55j3::$P();}Destructor (){}Destructor (){} }''','''Class,b,{,Var,Z,,,hI,:,Array,[,Float,,,6,],;,Val,$2k_,,,z,:,Array,[,Int,,,0107,],;,$____P_,(,_,,,_,,,p6P5,:,Int,),{,__7q55j3,::,$P,(,),;,},Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_905(self):
        self.assertTrue(TestLexer.test('''Class wN:_{Constructor (_:___6;n,G_:Float ;S__T8S5:Array [Boolean ,0X15];_,_,_,X8:k){}Val _4:R_;}Class __:_3n93{Var $9:h_4;}''','''Class,wN,:,_,{,Constructor,(,_,:,___6,;,n,,,G_,:,Float,;,S__T8S5,:,Array,[,Boolean,,,0X15,],;,_,,,_,,,_,,,X8,:,k,),{,},Val,_4,:,R_,;,},Class,__,:,_3n93,{,Var,$9,:,h_4,;,},<EOF>''',101))

    def test_906(self):
        self.assertTrue(TestLexer.test('''Class u20_:_{}Class Ew_5:__v6_{Var _,$___,$_,BQ1:Array [Array [Array [Float ,040],02],0b1011100];}Class _{Var $6:Array [Boolean ,0B1_0100_1]=_c::$Q1h0.N;Destructor (){}Constructor (){}Var $_,$47:String ;}Class _:_{}Class d{Destructor (){} }Class _5:W4__{}''','''Class,u20_,:,_,{,},Class,Ew_5,:,__v6_,{,Var,_,,,$___,,,$_,,,BQ1,:,Array,[,Array,[,Array,[,Float,,,040,],,,02,],,,0b1011100,],;,},Class,_,{,Var,$6,:,Array,[,Boolean,,,0B101001,],=,_c,::,$Q1h0,.,N,;,Destructor,(,),{,},Constructor,(,),{,},Var,$_,,,$47,:,String,;,},Class,_,:,_,{,},Class,d,{,Destructor,(,),{,},},Class,_5,:,W4__,{,},<EOF>''',101))

    def test_907(self):
        self.assertTrue(TestLexer.test('''Class kK:k{Destructor (){}Constructor (__:Array [Array [Array [Int ,0131],0B1010101],66]){ {} }}Class a:x{Var _5I8,$_Q:n3;}''','''Class,kK,:,k,{,Destructor,(,),{,},Constructor,(,__,:,Array,[,Array,[,Array,[,Int,,,0131,],,,0B1010101,],,,66,],),{,{,},},},Class,a,:,x,{,Var,_5I8,,,$_Q,:,n3,;,},<EOF>''',101))

    def test_908(self):
        self.assertTrue(TestLexer.test('''Class p{}Class _95{}Class _{Constructor (X,E__,_c:Array [Array [String ,0x4_8_5_9],024]){} }Class T{Val $_LU_,d,_Z:e;}''','''Class,p,{,},Class,_95,{,},Class,_,{,Constructor,(,X,,,E__,,,_c,:,Array,[,Array,[,String,,,0x4859,],,,024,],),{,},},Class,T,{,Val,$_LU_,,,d,,,_Z,:,e,;,},<EOF>''',101))

    def test_909(self):
        self.assertTrue(TestLexer.test('''Class c_{Constructor (){Val _,_6:_3_;}$__(_5,_9__7,_681:Array [Array [String ,03],25];__,_D2,B,_0:Array [Float ,0b1100001];P:Boolean ;_9:D;h5c3:T;K_,_:Array [Array [Array [String ,25],0xC],06_34]){} }''','''Class,c_,{,Constructor,(,),{,Val,_,,,_6,:,_3_,;,},$__,(,_5,,,_9__7,,,_681,:,Array,[,Array,[,String,,,03,],,,25,],;,__,,,_D2,,,B,,,_0,:,Array,[,Float,,,0b1100001,],;,P,:,Boolean,;,_9,:,D,;,h5c3,:,T,;,K_,,,_,:,Array,[,Array,[,Array,[,String,,,25,],,,0xC,],,,0634,],),{,},},<EOF>''',101))

    def test_910(self):
        self.assertTrue(TestLexer.test('''Class __{}Class BE:_{Constructor (__,_:Float ){} }Class d:_c_{}Class _d:L{}Class _:_{Destructor (){Continue ;}Val j,__,_S1_1_:_;}''','''Class,__,{,},Class,BE,:,_,{,Constructor,(,__,,,_,:,Float,),{,},},Class,d,:,_c_,{,},Class,_d,:,L,{,},Class,_,:,_,{,Destructor,(,),{,Continue,;,},Val,j,,,__,,,_S1_1_,:,_,;,},<EOF>''',101))

    def test_911(self):
        self.assertTrue(TestLexer.test('''Class _:_{Var _1g__8:Array [Array [Array [Float ,1],0x7E],0B1011001]=!Null *!!!-_05L::$_().v9L;Destructor (){} }Class oD{}Class _{}''','''Class,_,:,_,{,Var,_1g__8,:,Array,[,Array,[,Array,[,Float,,,1,],,,0x7E,],,,0B1011001,],=,!,Null,*,!,!,!,-,_05L,::,$_,(,),.,v9L,;,Destructor,(,),{,},},Class,oD,{,},Class,_,{,},<EOF>''',101))

    def test_912(self):
        self.assertTrue(TestLexer.test('''Class c{Val _0,d:e;Val e_,t:Array [Float ,0XE];}Class _k79{}Class z:xy{Val $0_,$i_,a7_:Array [Array [Array [Array [Boolean ,0x5_F],06],0X2_28],07];Destructor (){Continue ;} }''','''Class,c,{,Val,_0,,,d,:,e,;,Val,e_,,,t,:,Array,[,Float,,,0XE,],;,},Class,_k79,{,},Class,z,:,xy,{,Val,$0_,,,$i_,,,a7_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x5F,],,,06,],,,0X228,],,,07,],;,Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_913(self):
        self.assertTrue(TestLexer.test('''Class __K__{Constructor (_:_;_x,_f:_;_,d,_:_;__1:Array [String ,0b10101];_,_:Float ;m6:__p;_,x,TN,__c_,yC:T){} }Class _:z_{}Class Q:_{}''','''Class,__K__,{,Constructor,(,_,:,_,;,_x,,,_f,:,_,;,_,,,d,,,_,:,_,;,__1,:,Array,[,String,,,0b10101,],;,_,,,_,:,Float,;,m6,:,__p,;,_,,,x,,,TN,,,__c_,,,yC,:,T,),{,},},Class,_,:,z_,{,},Class,Q,:,_,{,},<EOF>''',101))

    def test_914(self):
        self.assertTrue(TestLexer.test('''Class _:__G_{$8(){}Var _6,A71:Array [Array [Array [String ,0B1_0_1_1],055],6];Constructor (_4,_3D7F_,u:Array [String ,47_7]){Break ;}Destructor (){} }Class q{}Class _:__D3{$6(T:Array [Array [Array [String ,0XE5],8],055];_,_u:M;_6_,k,bo:Array [Array [Array [Array [Array [Int ,07_14_6_2],07],0X46],036],0B101101]){} }Class _{}''','''Class,_,:,__G_,{,$8,(,),{,},Var,_6,,,A71,:,Array,[,Array,[,Array,[,String,,,0B1011,],,,055,],,,6,],;,Constructor,(,_4,,,_3D7F_,,,u,:,Array,[,String,,,477,],),{,Break,;,},Destructor,(,),{,},},Class,q,{,},Class,_,:,__D3,{,$6,(,T,:,Array,[,Array,[,Array,[,String,,,0XE5,],,,8,],,,055,],;,_,,,_u,:,M,;,_6_,,,k,,,bo,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,071462,],,,07,],,,0X46,],,,036,],,,0B101101,],),{,},},Class,_,{,},<EOF>''',101))

    def test_915(self):
        self.assertTrue(TestLexer.test('''Class _{Var __,_s,$3,$_7:Array [Int ,84];Constructor (_R2__4:__08Lk;_4:Array [Array [Array [Int ,84],0b11],0141]){}Var _,_,_,$_:Array [Array [Array [String ,0b1],0x5_6],3];}''','''Class,_,{,Var,__,,,_s,,,$3,,,$_7,:,Array,[,Int,,,84,],;,Constructor,(,_R2__4,:,__08Lk,;,_4,:,Array,[,Array,[,Array,[,Int,,,84,],,,0b11,],,,0141,],),{,},Var,_,,,_,,,_,,,$_,:,Array,[,Array,[,Array,[,String,,,0b1,],,,0x56,],,,3,],;,},<EOF>''',101))

    def test_916(self):
        self.assertTrue(TestLexer.test('''Class Ejeb7_2:K{}Class f:_{Val U,Q7H_f:Boolean ;}Class _:_{Constructor (s,_,__7:F_;u:Array [Array [Array [Array [Array [Boolean ,0100],0x11],9],0100],05_6]){Var f_:Array [Float ,0100];} }''','''Class,Ejeb7_2,:,K,{,},Class,f,:,_,{,Val,U,,,Q7H_f,:,Boolean,;,},Class,_,:,_,{,Constructor,(,s,,,_,,,__7,:,F_,;,u,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0100,],,,0x11,],,,9,],,,0100,],,,056,],),{,Var,f_,:,Array,[,Float,,,0100,],;,},},<EOF>''',101))

    def test_917(self):
        self.assertTrue(TestLexer.test('''Class x:_{}Class r__{Val $5,f,_1567,$M:Array [Int ,81];}Class _:F{}Class _1:vD{}Class O4_:d{Constructor (_:Int ){} }''','''Class,x,:,_,{,},Class,r__,{,Val,$5,,,f,,,_1567,,,$M,:,Array,[,Int,,,81,],;,},Class,_,:,F,{,},Class,_1,:,vD,{,},Class,O4_,:,d,{,Constructor,(,_,:,Int,),{,},},<EOF>''',101))

    def test_918(self):
        self.assertTrue(TestLexer.test('''Class _4{Constructor (_,_,_:Array [Array [Array [Array [Array [Array [Float ,0X2C],0B1_1],0B1],2],0xA],1];tW_,Dk,Y:e;ltnl:Boolean ){Break ;} }''','''Class,_4,{,Constructor,(,_,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X2C,],,,0B11,],,,0B1,],,,2,],,,0xA,],,,1,],;,tW_,,,Dk,,,Y,:,e,;,ltnl,:,Boolean,),{,Break,;,},},<EOF>''',101))

    def test_919(self):
        self.assertTrue(TestLexer.test('''Class _u_58{}Class w{Constructor (_6H:Array [String ,072];zS978:Float ;_K:Array [Array [Boolean ,0X6_B_E_E6],39];Tv1T_7n:Array [Boolean ,0B10];C_:Array [Array [Float ,0XF],02]){} }Class _:D64{Val _1,$0:ca;}Class _8{}''','''Class,_u_58,{,},Class,w,{,Constructor,(,_6H,:,Array,[,String,,,072,],;,zS978,:,Float,;,_K,:,Array,[,Array,[,Boolean,,,0X6BEE6,],,,39,],;,Tv1T_7n,:,Array,[,Boolean,,,0B10,],;,C_,:,Array,[,Array,[,Float,,,0XF,],,,02,],),{,},},Class,_,:,D64,{,Val,_1,,,$0,:,ca,;,},Class,_8,{,},<EOF>''',101))

    def test_920(self):
        self.assertTrue(TestLexer.test('''Class P:_x{}Class ad{}Class _7:D{Var o_U,$_w08__:_O98_T;}Class _9_8_32:p2{}Class J_O:L{Val $_b:Array [String ,0X5F];Constructor (){ {Continue ;} }}''','''Class,P,:,_x,{,},Class,ad,{,},Class,_7,:,D,{,Var,o_U,,,$_w08__,:,_O98_T,;,},Class,_9_8_32,:,p2,{,},Class,J_O,:,L,{,Val,$_b,:,Array,[,String,,,0X5F,],;,Constructor,(,),{,{,Continue,;,},},},<EOF>''',101))

    def test_921(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (h_,px:Array [Array [String ,33],0X926_7_E];O2,R___:_;e4V,RiP,__,b,__,_5w:Array [String ,0b1]){} }''','''Class,_,{,Constructor,(,h_,,,px,:,Array,[,Array,[,String,,,33,],,,0X9267E,],;,O2,,,R___,:,_,;,e4V,,,RiP,,,__,,,b,,,__,,,_5w,:,Array,[,String,,,0b1,],),{,},},<EOF>''',101))

    def test_922(self):
        self.assertTrue(TestLexer.test('''Class _6_y_1_{Constructor (){u::$kY7__3n().Lfa();Val _:Array [Array [Array [Array [Array [Float ,0B1],010],0b1000],0b1],0X3B];} }Class O0{}''','''Class,_6_y_1_,{,Constructor,(,),{,u,::,$kY7__3n,(,),.,Lfa,(,),;,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1,],,,010,],,,0b1000,],,,0b1,],,,0X3B,],;,},},Class,O0,{,},<EOF>''',101))

    def test_923(self):
        self.assertTrue(TestLexer.test('''Class _4{Destructor (){Break ;{} }Val _5__X,_,Q_:String ;}Class __{}Class _O:b_0_6U3{$_(_:_;I_0:String ){}Constructor (){}__(){}Destructor (){}Constructor (){} }''','''Class,_4,{,Destructor,(,),{,Break,;,{,},},Val,_5__X,,,_,,,Q_,:,String,;,},Class,__,{,},Class,_O,:,b_0_6U3,{,$_,(,_,:,_,;,I_0,:,String,),{,},Constructor,(,),{,},__,(,),{,},Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_924(self):
        self.assertTrue(TestLexer.test('''Class q{Constructor (_,_,_,_,x,y,IOKJA:Array [Boolean ,045_4];l_V:Int ;_7:Array [Array [Array [Array [Array [Array [Int ,0B11011],0x35],0xC6],0b1],0X30],0262_0]){ {Val _:Array [Int ,0X30];} }}Class X{}Class _h{}''','''Class,q,{,Constructor,(,_,,,_,,,_,,,_,,,x,,,y,,,IOKJA,:,Array,[,Boolean,,,0454,],;,l_V,:,Int,;,_7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B11011,],,,0x35,],,,0xC6,],,,0b1,],,,0X30,],,,02620,],),{,{,Val,_,:,Array,[,Int,,,0X30,],;,},},},Class,X,{,},Class,_h,{,},<EOF>''',101))

    def test_925(self):
        self.assertTrue(TestLexer.test('''Class U0__2{}Class p{}Class c:f{Val n7,__1u,_70l5,G:Array [String ,03];B_(X,_J:Array [Boolean ,0B1];vgl_,_4:_7;W,k2:_;n,_,__V2WG269,_,X:___6_){} }Class v_m3_{Constructor (){} }Class G{Val $0_8z:f8;}Class _9_{Val c:Float ;}Class _:Lw{}Class b{Val _4:Boolean ;Var r,Ps:Array [Array [Array [String ,0xA0],0B1],0B10_1];Val $d,E___,X1_,_J7:Int ;}''','''Class,U0__2,{,},Class,p,{,},Class,c,:,f,{,Val,n7,,,__1u,,,_70l5,,,G,:,Array,[,String,,,03,],;,B_,(,X,,,_J,:,Array,[,Boolean,,,0B1,],;,vgl_,,,_4,:,_7,;,W,,,k2,:,_,;,n,,,_,,,__V2WG269,,,_,,,X,:,___6_,),{,},},Class,v_m3_,{,Constructor,(,),{,},},Class,G,{,Val,$0_8z,:,f8,;,},Class,_9_,{,Val,c,:,Float,;,},Class,_,:,Lw,{,},Class,b,{,Val,_4,:,Boolean,;,Var,r,,,Ps,:,Array,[,Array,[,Array,[,String,,,0xA0,],,,0B1,],,,0B101,],;,Val,$d,,,E___,,,X1_,,,_J7,:,Int,;,},<EOF>''',101))

    def test_926(self):
        self.assertTrue(TestLexer.test('''Class r{}Class _Aq_{}Class N:n60{Var $i_,_8_9,$_t:Boolean ;Constructor (S:Array [Array [Array [Float ,3],0b1_0],061]){Continue ;} }''','''Class,r,{,},Class,_Aq_,{,},Class,N,:,n60,{,Var,$i_,,,_8_9,,,$_t,:,Boolean,;,Constructor,(,S,:,Array,[,Array,[,Array,[,Float,,,3,],,,0b10,],,,061,],),{,Continue,;,},},<EOF>''',101))

    def test_927(self):
        self.assertTrue(TestLexer.test('''Class _:_J{$0g8(sv,X_:_;_:KlW40_02;_,__2pC1_T:Array [Array [Array [String ,0X5F],48],07_2_0_6];_,___,Q,_6__:Array [String ,0141];___:String ){}Var $_140n,$8_,w_8:Array [Float ,0141];Destructor (){} }''','''Class,_,:,_J,{,$0g8,(,sv,,,X_,:,_,;,_,:,KlW40_02,;,_,,,__2pC1_T,:,Array,[,Array,[,Array,[,String,,,0X5F,],,,48,],,,07206,],;,_,,,___,,,Q,,,_6__,:,Array,[,String,,,0141,],;,___,:,String,),{,},Var,$_140n,,,$8_,,,w_8,:,Array,[,Float,,,0141,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_928(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _W{P67_(_,__1:Array [String ,7];S,__:String ){} }Class a:__{Val $P,$A,C:_;}Class _:G{Constructor (){} }Class _Kz{}Class j{}Class __{Destructor (){} }Class _9{}Class y:A{}''','''Class,_,{,},Class,_W,{,P67_,(,_,,,__1,:,Array,[,String,,,7,],;,S,,,__,:,String,),{,},},Class,a,:,__,{,Val,$P,,,$A,,,C,:,_,;,},Class,_,:,G,{,Constructor,(,),{,},},Class,_Kz,{,},Class,j,{,},Class,__,{,Destructor,(,),{,},},Class,_9,{,},Class,y,:,A,{,},<EOF>''',101))

    def test_929(self):
        self.assertTrue(TestLexer.test('''Class Qao5{}Class p:KP{}Class _:_{Constructor (U,a_0G:_){Return ;Return ;}Constructor (){} }Class _{}Class _:O{Constructor (){} }''','''Class,Qao5,{,},Class,p,:,KP,{,},Class,_,:,_,{,Constructor,(,U,,,a_0G,:,_,),{,Return,;,Return,;,},Constructor,(,),{,},},Class,_,{,},Class,_,:,O,{,Constructor,(,),{,},},<EOF>''',101))

    def test_930(self):
        self.assertTrue(TestLexer.test('''Class x2:_{_(c,K_,_z:Array [Array [Boolean ,55],020];W,f:q;_,Z_:E;E:n){}Var $___,J:String ;}Class rx:_{Destructor (){} }Class _r:__64gP{}Class __:_O{}''','''Class,x2,:,_,{,_,(,c,,,K_,,,_z,:,Array,[,Array,[,Boolean,,,55,],,,020,],;,W,,,f,:,q,;,_,,,Z_,:,E,;,E,:,n,),{,},Var,$___,,,J,:,String,;,},Class,rx,:,_,{,Destructor,(,),{,},},Class,_r,:,__64gP,{,},Class,__,:,_O,{,},<EOF>''',101))

    def test_931(self):
        self.assertTrue(TestLexer.test('''Class F{$K7i(){} }Class Z{Val P_,F_9_:s;}Class _{Destructor (){Break ;} }Class __:L___{Val $o:Array [Array [String ,0x5],14];}Class _:_{}''','''Class,F,{,$K7i,(,),{,},},Class,Z,{,Val,P_,,,F_9_,:,s,;,},Class,_,{,Destructor,(,),{,Break,;,},},Class,__,:,L___,{,Val,$o,:,Array,[,Array,[,String,,,0x5,],,,14,],;,},Class,_,:,_,{,},<EOF>''',101))

    def test_932(self):
        self.assertTrue(TestLexer.test('''Class W:i{Var $q1_V_j2z_:String ;}Class _1:Y{}Class N{Var $X8_,_i,$O8,_2:Array [Int ,91];}Class __{}Class _:__3_{}''','''Class,W,:,i,{,Var,$q1_V_j2z_,:,String,;,},Class,_1,:,Y,{,},Class,N,{,Var,$X8_,,,_i,,,$O8,,,_2,:,Array,[,Int,,,91,],;,},Class,__,{,},Class,_,:,__3_,{,},<EOF>''',101))

    def test_933(self):
        self.assertTrue(TestLexer.test('''Class __{Val ___:G_FF;$vL_(_,_:String ;__:Float ;_,d:V_;P_7,_:Array [Array [Array [Array [Int ,82],0x60],0103],0b11]){} }Class wuU{Destructor (){} }''','''Class,__,{,Val,___,:,G_FF,;,$vL_,(,_,,,_,:,String,;,__,:,Float,;,_,,,d,:,V_,;,P_7,,,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,82,],,,0x60,],,,0103,],,,0b11,],),{,},},Class,wuU,{,Destructor,(,),{,},},<EOF>''',101))

    def test_934(self):
        self.assertTrue(TestLexer.test('''Class r{$_(h:Array [Array [Array [Array [Array [Array [Boolean ,0617_55],0b1111],0b1_11],0B11010],6],0b1];_N7i,A_:Boolean ){} }Class _{}Class ___:_{}''','''Class,r,{,$_,(,h,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,061755,],,,0b1111,],,,0b111,],,,0B11010,],,,6,],,,0b1,],;,_N7i,,,A_,:,Boolean,),{,},},Class,_,{,},Class,___,:,_,{,},<EOF>''',101))

    def test_935(self):
        self.assertTrue(TestLexer.test('''Class u2P:_8{Destructor (){} }Class __D:e4{}Class _{Var g,$1U1f_,$h_:_;Var X,u_:Int ;}Class K:_{}Class d85__1{}Class ___2:_{}Class m_2:g{Var $__S,P:Int ;}''','''Class,u2P,:,_8,{,Destructor,(,),{,},},Class,__D,:,e4,{,},Class,_,{,Var,g,,,$1U1f_,,,$h_,:,_,;,Var,X,,,u_,:,Int,;,},Class,K,:,_,{,},Class,d85__1,{,},Class,___2,:,_,{,},Class,m_2,:,g,{,Var,$__S,,,P,:,Int,;,},<EOF>''',101))

    def test_936(self):
        self.assertTrue(TestLexer.test('''Class D:_{Constructor (_Xk,_,____e__at,H4x3_M,__:String ){ {Val r,i:Array [Array [Array [Boolean ,0130],02_21_3_74],55];Break ;Continue ;} }Val R_:Array [Array [String ,0130],0B1];}''','''Class,D,:,_,{,Constructor,(,_Xk,,,_,,,____e__at,,,H4x3_M,,,__,:,String,),{,{,Val,r,,,i,:,Array,[,Array,[,Array,[,Boolean,,,0130,],,,0221374,],,,55,],;,Break,;,Continue,;,},},Val,R_,:,Array,[,Array,[,String,,,0130,],,,0B1,],;,},<EOF>''',101))

    def test_937(self):
        self.assertTrue(TestLexer.test('''Class uw{Val $B_4:Array [Array [Array [Array [Array [Boolean ,04],07],0X3],88],0b1];Val __9:Array [String ,04];$_u(C6_6k,__6Y_:Int ){} }Class J{Destructor (){}Val $_t14,T_79_2B__5,_s29k,_,$r:x;Constructor (){} }''','''Class,uw,{,Val,$B_4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,04,],,,07,],,,0X3,],,,88,],,,0b1,],;,Val,__9,:,Array,[,String,,,04,],;,$_u,(,C6_6k,,,__6Y_,:,Int,),{,},},Class,J,{,Destructor,(,),{,},Val,$_t14,,,T_79_2B__5,,,_s29k,,,_,,,$r,:,x,;,Constructor,(,),{,},},<EOF>''',101))

    def test_938(self):
        self.assertTrue(TestLexer.test('''Class _:s{}Class F_{Var $A5,$J_:Array [Int ,0x19];}Class _5:_{Constructor (){}$2(_,C0,G:Boolean ){}Var _v,m39_,$X,$__m:Float ;}''','''Class,_,:,s,{,},Class,F_,{,Var,$A5,,,$J_,:,Array,[,Int,,,0x19,],;,},Class,_5,:,_,{,Constructor,(,),{,},$2,(,_,,,C0,,,G,:,Boolean,),{,},Var,_v,,,m39_,,,$X,,,$__m,:,Float,;,},<EOF>''',101))

    def test_939(self):
        self.assertTrue(TestLexer.test('''Class _3:_{Constructor (j1k,a8__:Array [Boolean ,0x5];a:Array [Array [Array [Array [Boolean ,0b1000111],0X7D],0x3],0b1000111];X,_6:_3;y,L5:Float ;m_:Boolean ){} }Class q{}''','''Class,_3,:,_,{,Constructor,(,j1k,,,a8__,:,Array,[,Boolean,,,0x5,],;,a,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1000111,],,,0X7D,],,,0x3,],,,0b1000111,],;,X,,,_6,:,_3,;,y,,,L5,:,Float,;,m_,:,Boolean,),{,},},Class,q,{,},<EOF>''',101))

    def test_940(self):
        self.assertTrue(TestLexer.test('''Class _:Z__{Destructor (){}Val $__,$_9,P5:D;Val $_Y,$9_1_:Array [Float ,07_3];Constructor (_,_,_:Array [String ,0B1010101]){}Constructor (){} }Class _0_{}''','''Class,_,:,Z__,{,Destructor,(,),{,},Val,$__,,,$_9,,,P5,:,D,;,Val,$_Y,,,$9_1_,:,Array,[,Float,,,073,],;,Constructor,(,_,,,_,,,_,:,Array,[,String,,,0B1010101,],),{,},Constructor,(,),{,},},Class,_0_,{,},<EOF>''',101))

    def test_941(self):
        self.assertTrue(TestLexer.test('''Class Y0:_{Constructor (d95,Am:Array [Array [Array [Array [Array [Boolean ,0b1001000],0b1],0X4],037],0X18];_:t;_,c:Boolean ;__:Boolean ){} }''','''Class,Y0,:,_,{,Constructor,(,d95,,,Am,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1001000,],,,0b1,],,,0X4,],,,037,],,,0X18,],;,_,:,t,;,_,,,c,:,Boolean,;,__,:,Boolean,),{,},},<EOF>''',101))

    def test_942(self):
        self.assertTrue(TestLexer.test('''Class c:dX4{Val _:Int ;$__Z(bk:Int ;W:Array [Array [Float ,05],0B1_1];_1:Boolean ;m,_:Array [Array [Array [Array [Array [Array [Array [Array [Float ,01],01],01],0B101001],01],0X719],7],055]){} }Class _V{}''','''Class,c,:,dX4,{,Val,_,:,Int,;,$__Z,(,bk,:,Int,;,W,:,Array,[,Array,[,Float,,,05,],,,0B11,],;,_1,:,Boolean,;,m,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,01,],,,01,],,,01,],,,0B101001,],,,01,],,,0X719,],,,7,],,,055,],),{,},},Class,_V,{,},<EOF>''',101))

    def test_943(self):
        self.assertTrue(TestLexer.test('''Class _{Var _,$_6:String ;}Class J{Var $Nd_:Array [Array [Array [String ,05_3],0X5D],0x62];}Class u{}Class q{}Class I:_{}Class _{}Class __V{Destructor (){} }''','''Class,_,{,Var,_,,,$_6,:,String,;,},Class,J,{,Var,$Nd_,:,Array,[,Array,[,Array,[,String,,,053,],,,0X5D,],,,0x62,],;,},Class,u,{,},Class,q,{,},Class,I,:,_,{,},Class,_,{,},Class,__V,{,Destructor,(,),{,},},<EOF>''',101))

    def test_944(self):
        self.assertTrue(TestLexer.test('''Class _l3:Re{Constructor (_:Array [Float ,2];_,m,__:Array [Array [Array [Array [Array [Boolean ,04_1],0X27],8_21],0X27],59]){Break ;} }Class _m:m_{}''','''Class,_l3,:,Re,{,Constructor,(,_,:,Array,[,Float,,,2,],;,_,,,m,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,041,],,,0X27,],,,821,],,,0X27,],,,59,],),{,Break,;,},},Class,_m,:,m_,{,},<EOF>''',101))

    def test_945(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){Break ;}Var CH,K_T2:a;_xq_(){}Var $7,$M:Array [Array [Int ,49],8_4_61];}Class _{}Class _4{}''','''Class,_,{,Destructor,(,),{,Break,;,},Var,CH,,,K_T2,:,a,;,_xq_,(,),{,},Var,$7,,,$M,:,Array,[,Array,[,Int,,,49,],,,8461,],;,},Class,_,{,},Class,_4,{,},<EOF>''',101))

    def test_946(self):
        self.assertTrue(TestLexer.test('''Class a{Var G:Boolean ;$3(){}Destructor (){Var _j,K__:Boolean ;}Val $Z4J,__38:Array [Array [Float ,052767_31],48];Var m:_;}''','''Class,a,{,Var,G,:,Boolean,;,$3,(,),{,},Destructor,(,),{,Var,_j,,,K__,:,Boolean,;,},Val,$Z4J,,,__38,:,Array,[,Array,[,Float,,,05276731,],,,48,],;,Var,m,:,_,;,},<EOF>''',101))

    def test_947(self):
        self.assertTrue(TestLexer.test('''Class x___:_3{}Class _V:_{Val _:Array [Array [Array [Int ,0124],0b1],0b1];}Class _:_2{Destructor (){}Destructor (){} }''','''Class,x___,:,_3,{,},Class,_V,:,_,{,Val,_,:,Array,[,Array,[,Array,[,Int,,,0124,],,,0b1,],,,0b1,],;,},Class,_,:,_2,{,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_948(self):
        self.assertTrue(TestLexer.test('''Class _3{$9(N,_V__,_:Int ;_P,_M:Array [Array [Array [Array [Array [Boolean ,03],0122],0b1011000],0B1],0B101111]){ {}Continue ;Break ;} }''','''Class,_3,{,$9,(,N,,,_V__,,,_,:,Int,;,_P,,,_M,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,03,],,,0122,],,,0b1011000,],,,0B1,],,,0B101111,],),{,{,},Continue,;,Break,;,},},<EOF>''',101))

    def test_949(self):
        self.assertTrue(TestLexer.test('''Class __a:q{}Class d_P1g8Q{Val $3,$oI,_,$_0,r:Array [Array [String ,0X40],0x8];Destructor (){Continue ;{Break ;} }}''','''Class,__a,:,q,{,},Class,d_P1g8Q,{,Val,$3,,,$oI,,,_,,,$_0,,,r,:,Array,[,Array,[,String,,,0X40,],,,0x8,],;,Destructor,(,),{,Continue,;,{,Break,;,},},},<EOF>''',101))

    def test_950(self):
        self.assertTrue(TestLexer.test('''Class i{Val $Z8__X,$a_7_q,$___3:Array [Array [Array [Array [Array [Array [Boolean ,0xC],0b1010001],8_2],5],0B1010111],48];}''','''Class,i,{,Val,$Z8__X,,,$a_7_q,,,$___3,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xC,],,,0b1010001,],,,82,],,,5,],,,0B1010111,],,,48,],;,},<EOF>''',101))

    def test_951(self):
        self.assertTrue(TestLexer.test('''Class __:L{}Class __41i{Destructor (){}Val _:Boolean ;$5(w,u1,_,sk,_EQ,_9,_,_3_:Array [String ,0b1]){Continue ;Continue ;} }Class _:_{$4(){} }''','''Class,__,:,L,{,},Class,__41i,{,Destructor,(,),{,},Val,_,:,Boolean,;,$5,(,w,,,u1,,,_,,,sk,,,_EQ,,,_9,,,_,,,_3_,:,Array,[,String,,,0b1,],),{,Continue,;,Continue,;,},},Class,_,:,_,{,$4,(,),{,},},<EOF>''',101))

    def test_952(self):
        self.assertTrue(TestLexer.test('''Class __:_66{Constructor (_:Boolean ;____:Array [Array [Array [Array [Float ,0b1110],0B110011],020],0X55];x3_oD,M:Q0R;_r:Float ){}Destructor (){} }Class _:p{}''','''Class,__,:,_66,{,Constructor,(,_,:,Boolean,;,____,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1110,],,,0B110011,],,,020,],,,0X55,],;,x3_oD,,,M,:,Q0R,;,_r,:,Float,),{,},Destructor,(,),{,},},Class,_,:,p,{,},<EOF>''',101))

    def test_953(self):
        self.assertTrue(TestLexer.test('''Class bH:_{}Class _:RE5_{_5(){}F7_(){}Val $_QG,$8:Array [Array [Array [String ,01],05],0B1001101];Var $P,_:Boolean ;Val _:Array [Array [Array [Float ,0XF_D_F],6_5],0x5D];Constructor (_:String ){} }Class d:w_7_{Val K:__j;Destructor (){Break ;} }Class m{Val HS:Array [Array [Int ,0B1001101],0b1];Val _m:Float ;}Class _{}Class _{}Class __9:N{}Class Z{}Class DF1:l{}''','''Class,bH,:,_,{,},Class,_,:,RE5_,{,_5,(,),{,},F7_,(,),{,},Val,$_QG,,,$8,:,Array,[,Array,[,Array,[,String,,,01,],,,05,],,,0B1001101,],;,Var,$P,,,_,:,Boolean,;,Val,_,:,Array,[,Array,[,Array,[,Float,,,0XFDF,],,,65,],,,0x5D,],;,Constructor,(,_,:,String,),{,},},Class,d,:,w_7_,{,Val,K,:,__j,;,Destructor,(,),{,Break,;,},},Class,m,{,Val,HS,:,Array,[,Array,[,Int,,,0B1001101,],,,0b1,],;,Val,_m,:,Float,;,},Class,_,{,},Class,_,{,},Class,__9,:,N,{,},Class,Z,{,},Class,DF1,:,l,{,},<EOF>''',101))

    def test_954(self):
        self.assertTrue(TestLexer.test('''Class G_7pA_5{Constructor (){}Destructor (){}Val wg_,$C,_,S,$_p_:Array [Array [Array [String ,0X15],1],0xA];}''','''Class,G_7pA_5,{,Constructor,(,),{,},Destructor,(,),{,},Val,wg_,,,$C,,,_,,,S,,,$_p_,:,Array,[,Array,[,Array,[,String,,,0X15,],,,1,],,,0xA,],;,},<EOF>''',101))

    def test_955(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (){}Val $__,$_57:Float ;Constructor (){ {} }Constructor (c__,O:Float ;_7Pt_,_,C8_,a:Array [Array [Boolean ,0X2A],0b1001];J:Array [Array [Float ,0B1010],0X2A];_:Array [Boolean ,0b1011011];v_,m0:Array [Array [Array [Array [Int ,0x36],0xDF],0x36],0B1_01_0]){} }''','''Class,_,:,_,{,Constructor,(,),{,},Val,$__,,,$_57,:,Float,;,Constructor,(,),{,{,},},Constructor,(,c__,,,O,:,Float,;,_7Pt_,,,_,,,C8_,,,a,:,Array,[,Array,[,Boolean,,,0X2A,],,,0b1001,],;,J,:,Array,[,Array,[,Float,,,0B1010,],,,0X2A,],;,_,:,Array,[,Boolean,,,0b1011011,],;,v_,,,m0,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x36,],,,0xDF,],,,0x36,],,,0B1010,],),{,},},<EOF>''',101))

    def test_956(self):
        self.assertTrue(TestLexer.test('''Class i_3:Y{}Class __:_{Var $_:Array [Float ,075];c__(s4F,_J:l_;M:Array [Array [Array [Array [Array [String ,3_85],075],0b110100],99],0b110100]){} }Class e_l:_{}Class A9{}Class _2{}Class F7_6n:___G{Val R,V:K;}''','''Class,i_3,:,Y,{,},Class,__,:,_,{,Var,$_,:,Array,[,Float,,,075,],;,c__,(,s4F,,,_J,:,l_,;,M,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,385,],,,075,],,,0b110100,],,,99,],,,0b110100,],),{,},},Class,e_l,:,_,{,},Class,A9,{,},Class,_2,{,},Class,F7_6n,:,___G,{,Val,R,,,V,:,K,;,},<EOF>''',101))

    def test_957(self):
        self.assertTrue(TestLexer.test('''Class P_{Destructor (){} }Class Dh:j3{Var $V,_2,A,$4,$H:Array [Array [String ,0121],0b111];Var $9:Array [Int ,0X6];}''','''Class,P_,{,Destructor,(,),{,},},Class,Dh,:,j3,{,Var,$V,,,_2,,,A,,,$4,,,$H,:,Array,[,Array,[,String,,,0121,],,,0b111,],;,Var,$9,:,Array,[,Int,,,0X6,],;,},<EOF>''',101))

    def test_958(self):
        self.assertTrue(TestLexer.test('''Class C_{Val __:Array [Array [Array [String ,072],0b1],3];}Class _8:d{Val $10,$4,W:Array [Array [Int ,4_90_8],0b1_0];}''','''Class,C_,{,Val,__,:,Array,[,Array,[,Array,[,String,,,072,],,,0b1,],,,3,],;,},Class,_8,:,d,{,Val,$10,,,$4,,,W,:,Array,[,Array,[,Int,,,4908,],,,0b10,],;,},<EOF>''',101))

    def test_959(self):
        self.assertTrue(TestLexer.test('''Class OD{j_5xv1aW_0(_:Int ;ui83K:Array [Array [Array [Array [Array [Array [Boolean ,0X57],07],0b111_0],041],0x9],0X57];G00:Array [Array [Array [Array [String ,041],071_4],0B1],7];i:Array [Array [Array [Array [Array [Array [Array [Int ,041],0b10100],02_7],0B1010010],041],0B1010010],0X57]){} }''','''Class,OD,{,j_5xv1aW_0,(,_,:,Int,;,ui83K,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X57,],,,07,],,,0b1110,],,,041,],,,0x9,],,,0X57,],;,G00,:,Array,[,Array,[,Array,[,Array,[,String,,,041,],,,0714,],,,0B1,],,,7,],;,i,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,041,],,,0b10100,],,,027,],,,0B1010010,],,,041,],,,0B1010010,],,,0X57,],),{,},},<EOF>''',101))

    def test_960(self):
        self.assertTrue(TestLexer.test('''Class _iu_:I_{Var $_:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0x58],062],05_6],0XB],48],0XB],0XB],0B101101];}''','''Class,_iu_,:,I_,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x58,],,,062,],,,056,],,,0XB,],,,48,],,,0XB,],,,0XB,],,,0B101101,],;,},<EOF>''',101))

    def test_961(self):
        self.assertTrue(TestLexer.test('''Class dT{}Class oT{Var u,$H:_25_;y(_m5,o64,E:Array [Boolean ,0X5B];_,_:Array [Array [String ,8_7],0x6];_:Float ){Break ;}Destructor (){Break ;} }''','''Class,dT,{,},Class,oT,{,Var,u,,,$H,:,_25_,;,y,(,_m5,,,o64,,,E,:,Array,[,Boolean,,,0X5B,],;,_,,,_,:,Array,[,Array,[,String,,,87,],,,0x6,],;,_,:,Float,),{,Break,;,},Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_962(self):
        self.assertTrue(TestLexer.test('''Class Q_{}Class _{}Class o_:__{Constructor (_,p:Float ;_l,h,o,W:Float ;_,F,Z:Array [Boolean ,0B111100];_6:Array [Array [String ,70],07]){Break ;} }''','''Class,Q_,{,},Class,_,{,},Class,o_,:,__,{,Constructor,(,_,,,p,:,Float,;,_l,,,h,,,o,,,W,:,Float,;,_,,,F,,,Z,:,Array,[,Boolean,,,0B111100,],;,_6,:,Array,[,Array,[,String,,,70,],,,07,],),{,Break,;,},},<EOF>''',101))

    def test_963(self):
        self.assertTrue(TestLexer.test('''Class _{}Class C_:_{}Class _{Val __3,G:Float ;Var $_:Boolean ;}Class __:Q{}Class _{_(v:Array [Array [Int ,0B10_01_11],0116]){} }''','''Class,_,{,},Class,C_,:,_,{,},Class,_,{,Val,__3,,,G,:,Float,;,Var,$_,:,Boolean,;,},Class,__,:,Q,{,},Class,_,{,_,(,v,:,Array,[,Array,[,Int,,,0B100111,],,,0116,],),{,},},<EOF>''',101))

    def test_964(self):
        self.assertTrue(TestLexer.test('''Class Ma_4{}Class __hQ__g_7{Constructor (U:Boolean ;A_h,_6,_ys6o:Array [Array [Float ,0X5B],30]){_::$4_();Break ;}Constructor (){} }''','''Class,Ma_4,{,},Class,__hQ__g_7,{,Constructor,(,U,:,Boolean,;,A_h,,,_6,,,_ys6o,:,Array,[,Array,[,Float,,,0X5B,],,,30,],),{,_,::,$4_,(,),;,Break,;,},Constructor,(,),{,},},<EOF>''',101))

    def test_965(self):
        self.assertTrue(TestLexer.test('''Class m9_:b___{}Class _5{Constructor (){}Constructor (__:Boolean ;_5:Float ;N1_192,b:Array [Array [Int ,0B101101],01]){} }Class _6r0{}Class _:___{}Class OiA46:_{}''','''Class,m9_,:,b___,{,},Class,_5,{,Constructor,(,),{,},Constructor,(,__,:,Boolean,;,_5,:,Float,;,N1_192,,,b,:,Array,[,Array,[,Int,,,0B101101,],,,01,],),{,},},Class,_6r0,{,},Class,_,:,___,{,},Class,OiA46,:,_,{,},<EOF>''',101))

    def test_966(self):
        self.assertTrue(TestLexer.test('''Class __:_{Destructor (){} }Class __:_4{}Class i{}Class _{Destructor (){}Destructor (){}Destructor (){}$__8(){}Var L_:f;}''','''Class,__,:,_,{,Destructor,(,),{,},},Class,__,:,_4,{,},Class,i,{,},Class,_,{,Destructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,},$__8,(,),{,},Var,L_,:,f,;,},<EOF>''',101))

    def test_967(self):
        self.assertTrue(TestLexer.test('''Class _C:_{Var $O,$8,G,F,_,$3_G:Array [Boolean ,4_6];Var e,$3__GRO,_:Array [Array [Int ,0XD],0XC];}Class c_:e_{}''','''Class,_C,:,_,{,Var,$O,,,$8,,,G,,,F,,,_,,,$3_G,:,Array,[,Boolean,,,46,],;,Var,e,,,$3__GRO,,,_,:,Array,[,Array,[,Int,,,0XD,],,,0XC,],;,},Class,c_,:,e_,{,},<EOF>''',101))

    def test_968(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){ {} }}Class u{$N(){} }Class __2a:_{}Class _z4_:_{_(OX6,H_N_,_1o,b:Array [Array [String ,0b100010],07];W,K:l){} }''','''Class,_,{,Destructor,(,),{,{,},},},Class,u,{,$N,(,),{,},},Class,__2a,:,_,{,},Class,_z4_,:,_,{,_,(,OX6,,,H_N_,,,_1o,,,b,:,Array,[,Array,[,String,,,0b100010,],,,07,],;,W,,,K,:,l,),{,},},<EOF>''',101))

    def test_969(self):
        self.assertTrue(TestLexer.test('''Class _3__774:__5_{Constructor (G,M2,_:K;_9_,_Rv,_:Array [Int ,88];_:Array [Array [Array [Float ,0102],07],0x1A];UE:_C){Break ;} }Class Ug{}''','''Class,_3__774,:,__5_,{,Constructor,(,G,,,M2,,,_,:,K,;,_9_,,,_Rv,,,_,:,Array,[,Int,,,88,],;,_,:,Array,[,Array,[,Array,[,Float,,,0102,],,,07,],,,0x1A,],;,UE,:,_C,),{,Break,;,},},Class,Ug,{,},<EOF>''',101))

    def test_970(self):
        self.assertTrue(TestLexer.test('''Class F5{b_(dNm,l,d:Array [Array [Array [Boolean ,0B1100001],8],0XD];_,j_:Array [Boolean ,0b1]){Return ;Continue ;} }''','''Class,F5,{,b_,(,dNm,,,l,,,d,:,Array,[,Array,[,Array,[,Boolean,,,0B1100001,],,,8,],,,0XD,],;,_,,,j_,:,Array,[,Boolean,,,0b1,],),{,Return,;,Continue,;,},},<EOF>''',101))

    def test_971(self):
        self.assertTrue(TestLexer.test('''Class _:B5xXj_{_(_:L2){}Constructor (I,_n,_:String ;J:Array [Array [Array [Array [Int ,78],4_70_6],070],0x44];_,Z:Boolean ){} }''','''Class,_,:,B5xXj_,{,_,(,_,:,L2,),{,},Constructor,(,I,,,_n,,,_,:,String,;,J,:,Array,[,Array,[,Array,[,Array,[,Int,,,78,],,,4706,],,,070,],,,0x44,],;,_,,,Z,:,Boolean,),{,},},<EOF>''',101))

    def test_972(self):
        self.assertTrue(TestLexer.test('''Class n6_G{_8d_(G,E,V:Array [Array [Array [Float ,6_08],6355_3],0B1];_:String ;p5,_,i,n2,m_,Z_:Array [Boolean ,0B1_1]){} }Class ShRt_:_5{Var $_,$96:_85;Val $O:Array [Array [Float ,39],74];Destructor (){} }''','''Class,n6_G,{,_8d_,(,G,,,E,,,V,:,Array,[,Array,[,Array,[,Float,,,608,],,,63553,],,,0B1,],;,_,:,String,;,p5,,,_,,,i,,,n2,,,m_,,,Z_,:,Array,[,Boolean,,,0B11,],),{,},},Class,ShRt_,:,_5,{,Var,$_,,,$96,:,_85,;,Val,$O,:,Array,[,Array,[,Float,,,39,],,,74,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_973(self):
        self.assertTrue(TestLexer.test('''Class X:J_76{Constructor (V:T){} }Class _{Val $_,__x5:_c6_;I(){}Var $38:Array [String ,0114];Destructor (){Continue ;} }Class _tZ:tG_7_R{}''','''Class,X,:,J_76,{,Constructor,(,V,:,T,),{,},},Class,_,{,Val,$_,,,__x5,:,_c6_,;,I,(,),{,},Var,$38,:,Array,[,String,,,0114,],;,Destructor,(,),{,Continue,;,},},Class,_tZ,:,tG_7_R,{,},<EOF>''',101))

    def test_974(self):
        self.assertTrue(TestLexer.test('''Class J:y{Val $B9_,Z,$0,Pj:Int ;Val _6:Array [Array [Array [Array [Array [String ,0xDD],72],7],0B1000001],0b1];}Class a{}''','''Class,J,:,y,{,Val,$B9_,,,Z,,,$0,,,Pj,:,Int,;,Val,_6,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0xDD,],,,72,],,,7,],,,0B1000001,],,,0b1,],;,},Class,a,{,},<EOF>''',101))

    def test_975(self):
        self.assertTrue(TestLexer.test('''Class __398{Constructor (R,Y2,__,P:Array [Array [String ,4_9],15];K5,_CWKlx2:z;Y___hD_A,__,_:Boolean ;f0:Array [Boolean ,33]){} }Class _29u_:Z1{r(_,Y_F0s_:Array [Array [Float ,0X8],33]){} }Class _5__F__Y_2041:_sH{Destructor (){} }''','''Class,__398,{,Constructor,(,R,,,Y2,,,__,,,P,:,Array,[,Array,[,String,,,49,],,,15,],;,K5,,,_CWKlx2,:,z,;,Y___hD_A,,,__,,,_,:,Boolean,;,f0,:,Array,[,Boolean,,,33,],),{,},},Class,_29u_,:,Z1,{,r,(,_,,,Y_F0s_,:,Array,[,Array,[,Float,,,0X8,],,,33,],),{,},},Class,_5__F__Y_2041,:,_sH,{,Destructor,(,),{,},},<EOF>''',101))

    def test_976(self):
        self.assertTrue(TestLexer.test('''Class _G5{}Class n_{}Class Q{B(E85_,Z:Int ;z_:Array [String ,032]){}Val $_,$e:Int ;Val $__7Q,$r,T:Float ;Q(){} }''','''Class,_G5,{,},Class,n_,{,},Class,Q,{,B,(,E85_,,,Z,:,Int,;,z_,:,Array,[,String,,,032,],),{,},Val,$_,,,$e,:,Int,;,Val,$__7Q,,,$r,,,T,:,Float,;,Q,(,),{,},},<EOF>''',101))

    def test_977(self):
        self.assertTrue(TestLexer.test('''Class t{Constructor (){}Destructor (){}$7(t_,_6F_,O7:Array [Array [Array [Int ,0x5A1],04],0B1];_,_:g2_){} }Class G:__r{}Class _{}''','''Class,t,{,Constructor,(,),{,},Destructor,(,),{,},$7,(,t_,,,_6F_,,,O7,:,Array,[,Array,[,Array,[,Int,,,0x5A1,],,,04,],,,0B1,],;,_,,,_,:,g2_,),{,},},Class,G,:,__r,{,},Class,_,{,},<EOF>''',101))

    def test_978(self):
        self.assertTrue(TestLexer.test('''Class _3{Var __:Int ;}Class y{}Class K{}Class Z_{Constructor (_,zQ02_:Array [Array [Array [Array [Boolean ,88],0X7],01],0x7_EB]){} }''','''Class,_3,{,Var,__,:,Int,;,},Class,y,{,},Class,K,{,},Class,Z_,{,Constructor,(,_,,,zQ02_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,88,],,,0X7,],,,01,],,,0x7EB,],),{,},},<EOF>''',101))

    def test_979(self):
        self.assertTrue(TestLexer.test('''Class uU3{Var Y_,$7,j:Array [Float ,0x8];Var F7:Array [String ,0XF];Constructor (_,_,G5,_,___,_:wmX__6;h_4,_:Y){} }Class _R0_6{}''','''Class,uU3,{,Var,Y_,,,$7,,,j,:,Array,[,Float,,,0x8,],;,Var,F7,:,Array,[,String,,,0XF,],;,Constructor,(,_,,,_,,,G5,,,_,,,___,,,_,:,wmX__6,;,h_4,,,_,:,Y,),{,},},Class,_R0_6,{,},<EOF>''',101))

    def test_980(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (_,_,___:Array [Array [String ,0136],0b1]){}$_z1(la,_W_:Array [Array [String ,0x40],0b1]){} }''','''Class,_,:,_,{,Constructor,(,_,,,_,,,___,:,Array,[,Array,[,String,,,0136,],,,0b1,],),{,},$_z1,(,la,,,_W_,:,Array,[,Array,[,String,,,0x40,],,,0b1,],),{,},},<EOF>''',101))

    def test_981(self):
        self.assertTrue(TestLexer.test('''Class g_{}Class _y{}Class t{Constructor (_,a_Eo:Array [Array [Array [Array [String ,0X1B],0B1_1],0b110101],0b1_0]){} }''','''Class,g_,{,},Class,_y,{,},Class,t,{,Constructor,(,_,,,a_Eo,:,Array,[,Array,[,Array,[,Array,[,String,,,0X1B,],,,0B11,],,,0b110101,],,,0b10,],),{,},},<EOF>''',101))

    def test_982(self):
        self.assertTrue(TestLexer.test('''Class m9_{}Class _7{Val _:String ;Var $9f,Pm_:Array [Array [Boolean ,04],04_7];}Class _{}Class _A_:_{Destructor (){} }Class W:B{}''','''Class,m9_,{,},Class,_7,{,Val,_,:,String,;,Var,$9f,,,Pm_,:,Array,[,Array,[,Boolean,,,04,],,,047,],;,},Class,_,{,},Class,_A_,:,_,{,Destructor,(,),{,},},Class,W,:,B,{,},<EOF>''',101))

    def test_983(self):
        self.assertTrue(TestLexer.test('''Class g_{}Class w_{Destructor (){}Constructor (_,_,_74:Array [Int ,36];n:Array [String ,025];W,X,h08,_,Q,D4:Int ){} }''','''Class,g_,{,},Class,w_,{,Destructor,(,),{,},Constructor,(,_,,,_,,,_74,:,Array,[,Int,,,36,],;,n,:,Array,[,String,,,025,],;,W,,,X,,,h08,,,_,,,Q,,,D4,:,Int,),{,},},<EOF>''',101))

    def test_984(self):
        self.assertTrue(TestLexer.test('''Class b9_G{}Class LD{}Class _E_:j{}Class __:_{Constructor (__22,_0:_;_:Array [Float ,0x12];O:Array [Array [Array [Array [Array [Int ,0b11010_11_110],36],36],0b1],0B10011]){}Val _:Array [Int ,8_3];Destructor (){} }''','''Class,b9_G,{,},Class,LD,{,},Class,_E_,:,j,{,},Class,__,:,_,{,Constructor,(,__22,,,_0,:,_,;,_,:,Array,[,Float,,,0x12,],;,O,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b1101011110,],,,36,],,,36,],,,0b1,],,,0B10011,],),{,},Val,_,:,Array,[,Int,,,83,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_985(self):
        self.assertTrue(TestLexer.test('''Class _a2:_{Val $q:Array [Array [Boolean ,0141],0X24];Destructor (){}Destructor (){} }Class Q:_{}Class s{Destructor (){} }''','''Class,_a2,:,_,{,Val,$q,:,Array,[,Array,[,Boolean,,,0141,],,,0X24,],;,Destructor,(,),{,},Destructor,(,),{,},},Class,Q,:,_,{,},Class,s,{,Destructor,(,),{,},},<EOF>''',101))

    def test_986(self):
        self.assertTrue(TestLexer.test('''Class _3e{$_(N:Int ;f:d;m,r8:Array [Array [Int ,0XE3D_2_32B],01_65_4_2];J:Array [Array [Array [Boolean ,39],0b1],0xA]){Var _w,_,_P_:Array [Array [Array [Array [Array [String ,0133],0x1D],06_6],037_772],0x2];}Val $_k:Array [Boolean ,34];}Class ___:R__{}''','''Class,_3e,{,$_,(,N,:,Int,;,f,:,d,;,m,,,r8,:,Array,[,Array,[,Int,,,0XE3D232B,],,,016542,],;,J,:,Array,[,Array,[,Array,[,Boolean,,,39,],,,0b1,],,,0xA,],),{,Var,_w,,,_,,,_P_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0133,],,,0x1D,],,,066,],,,037772,],,,0x2,],;,},Val,$_k,:,Array,[,Boolean,,,34,],;,},Class,___,:,R__,{,},<EOF>''',101))

    def test_987(self):
        self.assertTrue(TestLexer.test('''Class F{Val $wM26:String ;}Class _{Destructor (){Continue ;} }Class _:U__{Constructor (_,_:Array [Float ,0x23];u:Array [Int ,0114];P:Array [Array [Array [Array [Boolean ,0170],0X37],0114],04]){}Var p_G:Float ;}Class m:Dp{}Class _{}''','''Class,F,{,Val,$wM26,:,String,;,},Class,_,{,Destructor,(,),{,Continue,;,},},Class,_,:,U__,{,Constructor,(,_,,,_,:,Array,[,Float,,,0x23,],;,u,:,Array,[,Int,,,0114,],;,P,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0170,],,,0X37,],,,0114,],,,04,],),{,},Var,p_G,:,Float,;,},Class,m,:,Dp,{,},Class,_,{,},<EOF>''',101))

    def test_988(self):
        self.assertTrue(TestLexer.test('''Class R_y{}Class pX3:_2{}Class __:_{}Class _{Val Y_,$1,$_,_l:Y_;Var $sFa,C_,$_P:Array [Boolean ,06];_(_3,_8j,aJ:Array [Array [Array [String ,1],020],0b1]){} }Class i{Val _vM_:String ;Var $L:Boolean ;}''','''Class,R_y,{,},Class,pX3,:,_2,{,},Class,__,:,_,{,},Class,_,{,Val,Y_,,,$1,,,$_,,,_l,:,Y_,;,Var,$sFa,,,C_,,,$_P,:,Array,[,Boolean,,,06,],;,_,(,_3,,,_8j,,,aJ,:,Array,[,Array,[,Array,[,String,,,1,],,,020,],,,0b1,],),{,},},Class,i,{,Val,_vM_,:,String,;,Var,$L,:,Boolean,;,},<EOF>''',101))

    def test_989(self):
        self.assertTrue(TestLexer.test('''Class Z:l{Val _9_,$Q_,$7_,__:Array [Array [Array [Array [Int ,012],0X3C],0xE],04_5_1_35_2];Val $___p:Array [Array [Array [Boolean ,012],0x2_7_8],05_4];}''','''Class,Z,:,l,{,Val,_9_,,,$Q_,,,$7_,,,__,:,Array,[,Array,[,Array,[,Array,[,Int,,,012,],,,0X3C,],,,0xE,],,,0451352,],;,Val,$___p,:,Array,[,Array,[,Array,[,Boolean,,,012,],,,0x278,],,,054,],;,},<EOF>''',101))

    def test_990(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{}Class X:_Z{W(_f:g1){}Var $676,$q:Array [Array [Array [Array [Array [Boolean ,0b111001],26],0b111001],69],69];}Class _:_{}''','''Class,_,{,},Class,_,{,},Class,X,:,_Z,{,W,(,_f,:,g1,),{,},Var,$676,,,$q,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b111001,],,,26,],,,0b111001,],,,69,],,,69,],;,},Class,_,:,_,{,},<EOF>''',101))

    def test_991(self):
        self.assertTrue(TestLexer.test('''Class _O{Constructor (_t43,Db,_,_,_,_:Int ;_5,h211,_,Rc:_;_,D_:Boolean ;L:Array [Array [String ,47],47];u:Array [Boolean ,0X26]){} }''','''Class,_O,{,Constructor,(,_t43,,,Db,,,_,,,_,,,_,,,_,:,Int,;,_5,,,h211,,,_,,,Rc,:,_,;,_,,,D_,:,Boolean,;,L,:,Array,[,Array,[,String,,,47,],,,47,],;,u,:,Array,[,Boolean,,,0X26,],),{,},},<EOF>''',101))

    def test_992(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (_,_:_){} }Class _t{Val K,e,$6S61,_E_,$r_,$85__,$2:Array [Array [Array [Array [Array [Array [Array [String ,0B11_0_0],052],4_6],052],86],9],0x54];}Class Z{}''','''Class,_,:,_,{,Constructor,(,_,,,_,:,_,),{,},},Class,_t,{,Val,K,,,e,,,$6S61,,,_E_,,,$r_,,,$85__,,,$2,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1100,],,,052,],,,46,],,,052,],,,86,],,,9,],,,0x54,],;,},Class,Z,{,},<EOF>''',101))

    def test_993(self):
        self.assertTrue(TestLexer.test('''Class c_{Var _:String ;Constructor (X:String ;_,Z7:Array [Float ,0X16];_:Array [Array [Boolean ,0xC],0B1_0_1_1]){} }Class v1_p9:y{}''','''Class,c_,{,Var,_,:,String,;,Constructor,(,X,:,String,;,_,,,Z7,:,Array,[,Float,,,0X16,],;,_,:,Array,[,Array,[,Boolean,,,0xC,],,,0B1011,],),{,},},Class,v1_p9,:,y,{,},<EOF>''',101))

    def test_994(self):
        self.assertTrue(TestLexer.test('''Class Y{}Class e5_:a{Destructor (){}Var $g8I:Array [Array [Int ,6],06_6];}Class _h:V22{Var _u_,$h,_T,_,_1:Array [Boolean ,0x1A];}''','''Class,Y,{,},Class,e5_,:,a,{,Destructor,(,),{,},Var,$g8I,:,Array,[,Array,[,Int,,,6,],,,066,],;,},Class,_h,:,V22,{,Var,_u_,,,$h,,,_T,,,_,,,_1,:,Array,[,Boolean,,,0x1A,],;,},<EOF>''',101))

    def test_995(self):
        self.assertTrue(TestLexer.test('''Class _A:f_{}Class t:_{Val $J,$8,_,$1,$i:_;_(_,_:Int ){Break ;}Var $_L,$U1_,$E,N_,p_,$w__SM,$78_45:Array [Array [Array [String ,89],0b1_010_0_0],0B1000100];}''','''Class,_A,:,f_,{,},Class,t,:,_,{,Val,$J,,,$8,,,_,,,$1,,,$i,:,_,;,_,(,_,,,_,:,Int,),{,Break,;,},Var,$_L,,,$U1_,,,$E,,,N_,,,p_,,,$w__SM,,,$78_45,:,Array,[,Array,[,Array,[,String,,,89,],,,0b101000,],,,0B1000100,],;,},<EOF>''',101))

    def test_996(self):
        self.assertTrue(TestLexer.test('''Class _:Q{}Class __{d(jQ,I:String ;__f_68o,sk__,MI:tE__;g2:Array [String ,0x85]){Return ;}Destructor (){}Val R:Int ;}''','''Class,_,:,Q,{,},Class,__,{,d,(,jQ,,,I,:,String,;,__f_68o,,,sk__,,,MI,:,tE__,;,g2,:,Array,[,String,,,0x85,],),{,Return,;,},Destructor,(,),{,},Val,R,:,Int,;,},<EOF>''',101))

    def test_997(self):
        self.assertTrue(TestLexer.test('''Class J{Var _,$_1:String ;Nv(_b:String ;_:String ){Break ;}b_m__(D4:Array [Array [Array [Array [Array [Array [Array [Float ,0136],0136],0xAB],0x3E],05],70],0b1000010]){}Constructor (_:Array [String ,0B1001011];__48_4,_Z_:Array [Array [Array [Int ,0b1_1_1_0],0136],0x7];__nh:Array [Int ,0X3]){Continue ;Break ;} }''','''Class,J,{,Var,_,,,$_1,:,String,;,Nv,(,_b,:,String,;,_,:,String,),{,Break,;,},b_m__,(,D4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0136,],,,0136,],,,0xAB,],,,0x3E,],,,05,],,,70,],,,0b1000010,],),{,},Constructor,(,_,:,Array,[,String,,,0B1001011,],;,__48_4,,,_Z_,:,Array,[,Array,[,Array,[,Int,,,0b1110,],,,0136,],,,0x7,],;,__nh,:,Array,[,Int,,,0X3,],),{,Continue,;,Break,;,},},<EOF>''',101))

    def test_998(self):
        self.assertTrue(TestLexer.test('''Class _:_VT{$c52(){} }Class __:_{}Class dp{Var $29_J_:Boolean ;}Class p{}Class A3_{Constructor (__,_:Array [Boolean ,0X28];_,o,_:_){Break ;} }Class IX:j{}''','''Class,_,:,_VT,{,$c52,(,),{,},},Class,__,:,_,{,},Class,dp,{,Var,$29_J_,:,Boolean,;,},Class,p,{,},Class,A3_,{,Constructor,(,__,,,_,:,Array,[,Boolean,,,0X28,],;,_,,,o,,,_,:,_,),{,Break,;,},},Class,IX,:,j,{,},<EOF>''',101))

    def test_999(self):
        self.assertTrue(TestLexer.test('''Class a:vr{_(___:Array [Boolean ,50]){} }Class _{}Class __x0R{Constructor (){ {}Return ;}Constructor (i,_,bX:Array [Array [Float ,0125],0b1]){}Constructor (){Break ;} }Class V2:_L4{Var __:Array [Int ,014];}''','''Class,a,:,vr,{,_,(,___,:,Array,[,Boolean,,,50,],),{,},},Class,_,{,},Class,__x0R,{,Constructor,(,),{,{,},Return,;,},Constructor,(,i,,,_,,,bX,:,Array,[,Array,[,Float,,,0125,],,,0b1,],),{,},Constructor,(,),{,Break,;,},},Class,V2,:,_L4,{,Var,__,:,Array,[,Int,,,014,],;,},<EOF>''',101))

    def test_1000(self):
        self.assertTrue(TestLexer.test('''Class M9U:_oZm{Constructor (_:s63){} }Class _5:Q{Constructor (Co_9,_4,_7,X:B;_,_:Array [Array [Array [Array [Array [Array [Int ,0X6],0b111010],33],0B1000011],33],052]){}Val $_:_;}Class _{}''','''Class,M9U,:,_oZm,{,Constructor,(,_,:,s63,),{,},},Class,_5,:,Q,{,Constructor,(,Co_9,,,_4,,,_7,,,X,:,B,;,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X6,],,,0b111010,],,,33,],,,0B1000011,],,,33,],,,052,],),{,},Val,$_,:,_,;,},Class,_,{,},<EOF>''',101))

    def test_1001(self):
        self.assertTrue(TestLexer.test('''Class _{$v2(__1,_,_:Array [Array [Array [Array [Array [Boolean ,06],6],06],0b1100],0b1100]){}$_p(_,f:u){Aka::$7();}Constructor (){Break ;} }''','''Class,_,{,$v2,(,__1,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,06,],,,6,],,,06,],,,0b1100,],,,0b1100,],),{,},$_p,(,_,,,f,:,u,),{,Aka,::,$7,(,),;,},Constructor,(,),{,Break,;,},},<EOF>''',101))

    def test_1002(self):
        self.assertTrue(TestLexer.test('''Class o_:_{}Class jq{}Class Zx{}Class h:z{}Class _{$4f_h(){}Val $7_51:U;Val $_h__72,e2i,V_,p_,_3_6,_:Array [String ,0xE];Val $7:Array [Array [Int ,54],0xE];}''','''Class,o_,:,_,{,},Class,jq,{,},Class,Zx,{,},Class,h,:,z,{,},Class,_,{,$4f_h,(,),{,},Val,$7_51,:,U,;,Val,$_h__72,,,e2i,,,V_,,,p_,,,_3_6,,,_,:,Array,[,String,,,0xE,],;,Val,$7,:,Array,[,Array,[,Int,,,54,],,,0xE,],;,},<EOF>''',101))

    def test_1003(self):
        self.assertTrue(TestLexer.test('''Class _m:_{}Class _{Constructor (_5,__o:Array [Array [Int ,0X1],031]){}v(){Continue ;} }Class _{$7_(){}$4(_,W:_Ul_;___,_Dy:Array [Float ,0B11100];__N3:Array [String ,0x28];_1w_,EN:Array [Float ,0x28];_Y7,y,_k:_4W4_7_){}Constructor (){Continue ;} }Class I__51aa_h4S:b{}''','''Class,_m,:,_,{,},Class,_,{,Constructor,(,_5,,,__o,:,Array,[,Array,[,Int,,,0X1,],,,031,],),{,},v,(,),{,Continue,;,},},Class,_,{,$7_,(,),{,},$4,(,_,,,W,:,_Ul_,;,___,,,_Dy,:,Array,[,Float,,,0B11100,],;,__N3,:,Array,[,String,,,0x28,],;,_1w_,,,EN,:,Array,[,Float,,,0x28,],;,_Y7,,,y,,,_k,:,_4W4_7_,),{,},Constructor,(,),{,Continue,;,},},Class,I__51aa_h4S,:,b,{,},<EOF>''',101))

    def test_1004(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){Continue ;}Constructor (___,_,_,_5:String ;W,v_,_:Array [String ,06];A,_,_2,K_E_5,_4:_8__;__,P:Float ;_,_9_:_g3;m:Float ;_:M){} }''','''Class,_,{,Destructor,(,),{,Continue,;,},Constructor,(,___,,,_,,,_,,,_5,:,String,;,W,,,v_,,,_,:,Array,[,String,,,06,],;,A,,,_,,,_2,,,K_E_5,,,_4,:,_8__,;,__,,,P,:,Float,;,_,,,_9_,:,_g3,;,m,:,Float,;,_,:,M,),{,},},<EOF>''',101))

    def test_1005(self):
        self.assertTrue(TestLexer.test('''Class f{Var ze,kG:c;}Class G{$5(e,WM_9,_F,_,_:d7_Y;b__,_,W:_0;_,_:Boolean ;_RH0_,_:_;_,y:Array [Int ,0b111]){Break ;} }''','''Class,f,{,Var,ze,,,kG,:,c,;,},Class,G,{,$5,(,e,,,WM_9,,,_F,,,_,,,_,:,d7_Y,;,b__,,,_,,,W,:,_0,;,_,,,_,:,Boolean,;,_RH0_,,,_,:,_,;,_,,,y,:,Array,[,Int,,,0b111,],),{,Break,;,},},<EOF>''',101))

    def test_1006(self):
        self.assertTrue(TestLexer.test('''Class b6f{Destructor (){}Destructor (){} }Class _{$_(_,J:Boolean ;_,__r__,__l,C:Float ;x:Array [Array [Array [Array [Array [String ,04_1_0],0x3D],054],0XE],4]){}Val $y_:Boolean ;}Class A5_tF6_:T{Var $r,$21_,$x:Array [Array [Array [Array [Array [Boolean ,054],45],45],040_7_61],1_1_6];}Class e{}Class y{Destructor (){}Val $8,$806,_,R:T;}Class t{}''','''Class,b6f,{,Destructor,(,),{,},Destructor,(,),{,},},Class,_,{,$_,(,_,,,J,:,Boolean,;,_,,,__r__,,,__l,,,C,:,Float,;,x,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0410,],,,0x3D,],,,054,],,,0XE,],,,4,],),{,},Val,$y_,:,Boolean,;,},Class,A5_tF6_,:,T,{,Var,$r,,,$21_,,,$x,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,054,],,,45,],,,45,],,,040761,],,,116,],;,},Class,e,{,},Class,y,{,Destructor,(,),{,},Val,$8,,,$806,,,_,,,R,:,T,;,},Class,t,{,},<EOF>''',101))

    def test_1007(self):
        self.assertTrue(TestLexer.test('''Class _f_144_S8{}Class L:Q{Val $8C_2oc10,$_,H:_;$9(){}i(V3ZX_Pq_:Array [Float ,0372]){Break ;}Constructor (b:Array [String ,0b10];pq,_,_:_W;___:Array [Array [Array [String ,0b101],0x34],0B11];W,__,K,_,D6:Array [Int ,0b1_11]){} }''','''Class,_f_144_S8,{,},Class,L,:,Q,{,Val,$8C_2oc10,,,$_,,,H,:,_,;,$9,(,),{,},i,(,V3ZX_Pq_,:,Array,[,Float,,,0372,],),{,Break,;,},Constructor,(,b,:,Array,[,String,,,0b10,],;,pq,,,_,,,_,:,_W,;,___,:,Array,[,Array,[,Array,[,String,,,0b101,],,,0x34,],,,0B11,],;,W,,,__,,,K,,,_,,,D6,:,Array,[,Int,,,0b111,],),{,},},<EOF>''',101))

    def test_1008(self):
        self.assertTrue(TestLexer.test('''Class _{Var $_:Array [Array [Array [Array [Array [Int ,32],056],0B11],015],0X1C_4_5];Var $_:Array [Array [Array [Array [String ,015],7],0B11],06];}''','''Class,_,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,32,],,,056,],,,0B11,],,,015,],,,0X1C45,],;,Var,$_,:,Array,[,Array,[,Array,[,Array,[,String,,,015,],,,7,],,,0B11,],,,06,],;,},<EOF>''',101))

    def test_1009(self):
        self.assertTrue(TestLexer.test('''Class v{$4(){} }Class z:_{}Class Gt_:__{}Class _:___{B08___(Ob,__,_,__,Rr:Boolean ){T::$JY().D().a();Continue ;}Var C6AV,B:String ;}Class __gebD:p{}''','''Class,v,{,$4,(,),{,},},Class,z,:,_,{,},Class,Gt_,:,__,{,},Class,_,:,___,{,B08___,(,Ob,,,__,,,_,,,__,,,Rr,:,Boolean,),{,T,::,$JY,(,),.,D,(,),.,a,(,),;,Continue,;,},Var,C6AV,,,B,:,String,;,},Class,__gebD,:,p,{,},<EOF>''',101))

    def test_1010(self):
        self.assertTrue(TestLexer.test('''Class ZJ:h4{}Class MI:_{Var $rX,_I,c43,$_,_,$4,__T,v3A,_:Array [Array [Array [Int ,0b10010],0B101001],0b1];th(__:Boolean ;_nv,X,_0_6,_0:g_){} }''','''Class,ZJ,:,h4,{,},Class,MI,:,_,{,Var,$rX,,,_I,,,c43,,,$_,,,_,,,$4,,,__T,,,v3A,,,_,:,Array,[,Array,[,Array,[,Int,,,0b10010,],,,0B101001,],,,0b1,],;,th,(,__,:,Boolean,;,_nv,,,X,,,_0_6,,,_0,:,g_,),{,},},<EOF>''',101))

    def test_1011(self):
        self.assertTrue(TestLexer.test('''Class _{R(W,rI,We:Array [Array [Array [Array [Boolean ,0XA],0104],0X44],9_4]){Continue ;Continue ;}Var _97:Array [Array [Float ,4],0X6];}''','''Class,_,{,R,(,W,,,rI,,,We,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0XA,],,,0104,],,,0X44,],,,94,],),{,Continue,;,Continue,;,},Var,_97,:,Array,[,Array,[,Float,,,4,],,,0X6,],;,},<EOF>''',101))

    def test_1012(self):
        self.assertTrue(TestLexer.test('''Class f{}Class __:_{Destructor (){} }Class __A2__v_:_sj_Z{Constructor (VGn,_,_:Array [Array [Boolean ,07],37]){} }''','''Class,f,{,},Class,__,:,_,{,Destructor,(,),{,},},Class,__A2__v_,:,_sj_Z,{,Constructor,(,VGn,,,_,,,_,:,Array,[,Array,[,Boolean,,,07,],,,37,],),{,},},<EOF>''',101))

    def test_1013(self):
        self.assertTrue(TestLexer.test('''Class _{}Class S{Destructor (){}Destructor (){}Val $__:Array [Array [Boolean ,06],0B110111];}Class _{Destructor (){}Var $_:Array [Array [Array [String ,06],4],0X1C];}Class c:F{Destructor (){}$8(){Return ;} }''','''Class,_,{,},Class,S,{,Destructor,(,),{,},Destructor,(,),{,},Val,$__,:,Array,[,Array,[,Boolean,,,06,],,,0B110111,],;,},Class,_,{,Destructor,(,),{,},Var,$_,:,Array,[,Array,[,Array,[,String,,,06,],,,4,],,,0X1C,],;,},Class,c,:,F,{,Destructor,(,),{,},$8,(,),{,Return,;,},},<EOF>''',101))

    def test_1014(self):
        self.assertTrue(TestLexer.test('''Class Q:_1{Constructor (_XNAgAg,__w:Array [Array [Array [Boolean ,065],0B1_1_0_1_0],065]){B::$1_();}Val _,_9,_,h_S:Boolean ;}Class _{}Class ___4:ya{}Class _j__p:j{Var Tu:String ;Destructor (){}Destructor (){} }''','''Class,Q,:,_1,{,Constructor,(,_XNAgAg,,,__w,:,Array,[,Array,[,Array,[,Boolean,,,065,],,,0B11010,],,,065,],),{,B,::,$1_,(,),;,},Val,_,,,_9,,,_,,,h_S,:,Boolean,;,},Class,_,{,},Class,___4,:,ya,{,},Class,_j__p,:,j,{,Var,Tu,:,String,;,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_1015(self):
        self.assertTrue(TestLexer.test('''Class lO{}Class h:_7{Destructor (){Continue ;}Constructor (____pE:Array [Int ,8]){} }Class d_781{Var $5,$9_:Int ;}Class _q__{Var L,_,kXf0_,Y1:_f;}''','''Class,lO,{,},Class,h,:,_7,{,Destructor,(,),{,Continue,;,},Constructor,(,____pE,:,Array,[,Int,,,8,],),{,},},Class,d_781,{,Var,$5,,,$9_,:,Int,;,},Class,_q__,{,Var,L,,,_,,,kXf0_,,,Y1,:,_f,;,},<EOF>''',101))

    def test_1016(self):
        self.assertTrue(TestLexer.test('''Class G{Destructor (){Break ;} }Class _{}Class RuEe:_{}Class _:_{Constructor (_,_,___4__i2,_,LI_,_:Array [Array [Float ,0B11_0],5_79]){Continue ;} }Class m_{}''','''Class,G,{,Destructor,(,),{,Break,;,},},Class,_,{,},Class,RuEe,:,_,{,},Class,_,:,_,{,Constructor,(,_,,,_,,,___4__i2,,,_,,,LI_,,,_,:,Array,[,Array,[,Float,,,0B110,],,,579,],),{,Continue,;,},},Class,m_,{,},<EOF>''',101))

    def test_1017(self):
        self.assertTrue(TestLexer.test('''Class TY{$_w426T__(){Var W,_4,_D74,m6,_0,_,__7:Array [Array [Int ,0XB4],0x33];} }Class O:wGS{Constructor (){} }''','''Class,TY,{,$_w426T__,(,),{,Var,W,,,_4,,,_D74,,,m6,,,_0,,,_,,,__7,:,Array,[,Array,[,Int,,,0XB4,],,,0x33,],;,},},Class,O,:,wGS,{,Constructor,(,),{,},},<EOF>''',101))

    def test_1018(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (_,Z,_8NZ,d2:Array [Array [Array [Int ,0XD1],0b1100000],0B110110];_h,_,q:Array [Array [String ,69],030_5];T:_;_,_,_7,_,_:L0_F;m_,g_x01:Array [Array [String ,0x1B],0B11]){}_(_:Array [Array [Array [Array [Array [String ,69],0X2],0x1B],69],0136];_UW__:_){} }''','''Class,_,:,_,{,Constructor,(,_,,,Z,,,_8NZ,,,d2,:,Array,[,Array,[,Array,[,Int,,,0XD1,],,,0b1100000,],,,0B110110,],;,_h,,,_,,,q,:,Array,[,Array,[,String,,,69,],,,0305,],;,T,:,_,;,_,,,_,,,_7,,,_,,,_,:,L0_F,;,m_,,,g_x01,:,Array,[,Array,[,String,,,0x1B,],,,0B11,],),{,},_,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,69,],,,0X2,],,,0x1B,],,,69,],,,0136,],;,_UW__,:,_,),{,},},<EOF>''',101))

    def test_1019(self):
        self.assertTrue(TestLexer.test('''Class j:Cz{Val $7_1,$Oo__4,$77,$_,$2,h_9W:Array [Array [Array [Boolean ,70],05],35];Var D,$8c_80A:Array [Array [Array [Array [Int ,0b11111],0XC_8_5],0B1],076_4];}Class a:w{}''','''Class,j,:,Cz,{,Val,$7_1,,,$Oo__4,,,$77,,,$_,,,$2,,,h_9W,:,Array,[,Array,[,Array,[,Boolean,,,70,],,,05,],,,35,],;,Var,D,,,$8c_80A,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b11111,],,,0XC85,],,,0B1,],,,0764,],;,},Class,a,:,w,{,},<EOF>''',101))

    def test_1020(self):
        self.assertTrue(TestLexer.test('''Class B4{}Class ___{R8(b71:String ;_:Array [Array [Float ,0XD],0b1];_,_:Float ;_5,p__x,dq_:b;N2M,j_:Array [Array [Float ,14],0B1011011];_:Boolean ;_,_a:Array [Float ,0b100000]){} }''','''Class,B4,{,},Class,___,{,R8,(,b71,:,String,;,_,:,Array,[,Array,[,Float,,,0XD,],,,0b1,],;,_,,,_,:,Float,;,_5,,,p__x,,,dq_,:,b,;,N2M,,,j_,:,Array,[,Array,[,Float,,,14,],,,0B1011011,],;,_,:,Boolean,;,_,,,_a,:,Array,[,Float,,,0b100000,],),{,},},<EOF>''',101))

    def test_1021(self):
        self.assertTrue(TestLexer.test('''Class I:__0{}Class W__z:u_{Val __,$_,_:t___QR2;Var $M,$_,$Z,_,_0_,__:A4M_;$M(){} }Class _4:_4{Constructor (Qq__t_5,_,_:Array [Float ,0B11101];s4:_;E:Array [Boolean ,02]){} }''','''Class,I,:,__0,{,},Class,W__z,:,u_,{,Val,__,,,$_,,,_,:,t___QR2,;,Var,$M,,,$_,,,$Z,,,_,,,_0_,,,__,:,A4M_,;,$M,(,),{,},},Class,_4,:,_4,{,Constructor,(,Qq__t_5,,,_,,,_,:,Array,[,Float,,,0B11101,],;,s4,:,_,;,E,:,Array,[,Boolean,,,02,],),{,},},<EOF>''',101))

    def test_1022(self):
        self.assertTrue(TestLexer.test('''Class ____{$_(x:_;J___1TP,o6_,_,T_,_5:L2;h__:String ){}Val $d0,$5_,_:Array [Array [Int ,063],7_14_7];}Class _s_{}Class D_:_{}''','''Class,____,{,$_,(,x,:,_,;,J___1TP,,,o6_,,,_,,,T_,,,_5,:,L2,;,h__,:,String,),{,},Val,$d0,,,$5_,,,_,:,Array,[,Array,[,Int,,,063,],,,7147,],;,},Class,_s_,{,},Class,D_,:,_,{,},<EOF>''',101))

    def test_1023(self):
        self.assertTrue(TestLexer.test('''Class _:L{Destructor (){} }Class __g8{}Class U12_0{}Class _:A{Var _:Array [Array [Array [Boolean ,0b111010],0b111010],01];}Class Ns6_43:p_6Dh{}''','''Class,_,:,L,{,Destructor,(,),{,},},Class,__g8,{,},Class,U12_0,{,},Class,_,:,A,{,Var,_,:,Array,[,Array,[,Array,[,Boolean,,,0b111010,],,,0b111010,],,,01,],;,},Class,Ns6_43,:,p_6Dh,{,},<EOF>''',101))

    def test_1024(self):
        self.assertTrue(TestLexer.test('''Class _76_i{R(n_e02,lA38:Array [Float ,03_5_01];_V,e0,__,y,_b_t6:String ){} }Class y{Destructor (){}Constructor (_:String ){} }''','''Class,_76_i,{,R,(,n_e02,,,lA38,:,Array,[,Float,,,03501,],;,_V,,,e0,,,__,,,y,,,_b_t6,:,String,),{,},},Class,y,{,Destructor,(,),{,},Constructor,(,_,:,String,),{,},},<EOF>''',101))

    def test_1025(self):
        self.assertTrue(TestLexer.test('''Class Z{Constructor (_,HN_0,N__0:n_;_t_78,NJ__:__;n:q1;_9,ni:Array [Array [Array [String ,0xE],0B110000],16];w,S_,_0:String ){} }''','''Class,Z,{,Constructor,(,_,,,HN_0,,,N__0,:,n_,;,_t_78,,,NJ__,:,__,;,n,:,q1,;,_9,,,ni,:,Array,[,Array,[,Array,[,String,,,0xE,],,,0B110000,],,,16,],;,w,,,S_,,,_0,:,String,),{,},},<EOF>''',101))

    def test_1026(self):
        self.assertTrue(TestLexer.test('''Class q{$2O3(_g0,q3_,_S:Int ;_,C,__:Int ;B_:Array [Array [Array [Array [Array [Int ,7],0x25],64],64],0b1];_:r5;x_:n){} }''','''Class,q,{,$2O3,(,_g0,,,q3_,,,_S,:,Int,;,_,,,C,,,__,:,Int,;,B_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,7,],,,0x25,],,,64,],,,64,],,,0b1,],;,_,:,r5,;,x_,:,n,),{,},},<EOF>''',101))

    def test_1027(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _:__c3{$_96(__:Array [Int ,5]){}$f(_4:Array [Array [Array [Int ,34],34],0b100110]){} }Class Nou{}Class xL{}''','''Class,_,{,},Class,_,:,__c3,{,$_96,(,__,:,Array,[,Int,,,5,],),{,},$f,(,_4,:,Array,[,Array,[,Array,[,Int,,,34,],,,34,],,,0b100110,],),{,},},Class,Nou,{,},Class,xL,{,},<EOF>''',101))

    def test_1028(self):
        self.assertTrue(TestLexer.test('''Class __2fe3{Var $__K_,$0_60,$4f:Array [Array [Array [Array [Array [Array [String ,0B1],0XBC],50],06],0b10],0B101110];a(){ {}U2::$12();Continue ;} }''','''Class,__2fe3,{,Var,$__K_,,,$0_60,,,$4f,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,0XBC,],,,50,],,,06,],,,0b10,],,,0B101110,],;,a,(,),{,{,},U2,::,$12,(,),;,Continue,;,},},<EOF>''',101))

    def test_1029(self):
        self.assertTrue(TestLexer.test('''Class _3{}Class B:k{Destructor (){Return ;{} }Var b:Array [Array [Int ,0B1_1_0],0X4];}Class Z{}Class o0_:_q{Var $X,$8,$_7:__;}Class _541{Destructor (){} }''','''Class,_3,{,},Class,B,:,k,{,Destructor,(,),{,Return,;,{,},},Var,b,:,Array,[,Array,[,Int,,,0B110,],,,0X4,],;,},Class,Z,{,},Class,o0_,:,_q,{,Var,$X,,,$8,,,$_7,:,__,;,},Class,_541,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1030(self):
        self.assertTrue(TestLexer.test('''Class a_:M0_{Val $C,$C,df:_p;$__bM_r(m3U:_I_8;_,i:Array [Array [Boolean ,026],0b1];M5,y,g,_,I_:_;t018:_8k){} }Class _:U{}''','''Class,a_,:,M0_,{,Val,$C,,,$C,,,df,:,_p,;,$__bM_r,(,m3U,:,_I_8,;,_,,,i,:,Array,[,Array,[,Boolean,,,026,],,,0b1,],;,M5,,,y,,,g,,,_,,,I_,:,_,;,t018,:,_8k,),{,},},Class,_,:,U,{,},<EOF>''',101))

    def test_1031(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (p:U){}$__(W_,_8,c_s_3,y,_V6,_z,j,_:Array [String ,36];_:J;j___,k:_b__;r_7,d:_;J:U){}Val A,__9,$L,$__:n26;}Class _:Z_i8_{}''','''Class,_,{,Constructor,(,p,:,U,),{,},$__,(,W_,,,_8,,,c_s_3,,,y,,,_V6,,,_z,,,j,,,_,:,Array,[,String,,,36,],;,_,:,J,;,j___,,,k,:,_b__,;,r_7,,,d,:,_,;,J,:,U,),{,},Val,A,,,__9,,,$L,,,$__,:,n26,;,},Class,_,:,Z_i8_,{,},<EOF>''',101))

    def test_1032(self):
        self.assertTrue(TestLexer.test('''Class _{Val $_,$_9Qg:Boolean ;Var $9,B3A3,__D:Array [Array [String ,7],0116];}Class ___F7{Destructor (){Break ;} }Class _{}''','''Class,_,{,Val,$_,,,$_9Qg,:,Boolean,;,Var,$9,,,B3A3,,,__D,:,Array,[,Array,[,String,,,7,],,,0116,],;,},Class,___F7,{,Destructor,(,),{,Break,;,},},Class,_,{,},<EOF>''',101))

    def test_1033(self):
        self.assertTrue(TestLexer.test('''Class Z_{}Class R{Destructor (){}$0(dE:Float ;p:Array [Boolean ,044];S6,____1:Float ;F,f1,e:__){}Constructor (){}Constructor (_,___,x6:String ){}Destructor (){} }''','''Class,Z_,{,},Class,R,{,Destructor,(,),{,},$0,(,dE,:,Float,;,p,:,Array,[,Boolean,,,044,],;,S6,,,____1,:,Float,;,F,,,f1,,,e,:,__,),{,},Constructor,(,),{,},Constructor,(,_,,,___,,,x6,:,String,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_1034(self):
        self.assertTrue(TestLexer.test('''Class R_61:_28{}Class S:Esq{$3cjR(__,_C,z658_304:Array [Array [Boolean ,02],37];n,_6___83:Q;X,_,e:Boolean ;_9,D,W:Array [Int ,02]){}Destructor (){Val _,_1,lL_GY_:Float ;} }Class _:a{}''','''Class,R_61,:,_28,{,},Class,S,:,Esq,{,$3cjR,(,__,,,_C,,,z658_304,:,Array,[,Array,[,Boolean,,,02,],,,37,],;,n,,,_6___83,:,Q,;,X,,,_,,,e,:,Boolean,;,_9,,,D,,,W,:,Array,[,Int,,,02,],),{,},Destructor,(,),{,Val,_,,,_1,,,lL_GY_,:,Float,;,},},Class,_,:,a,{,},<EOF>''',101))

    def test_1035(self):
        self.assertTrue(TestLexer.test('''Class _:v{}Class _:T{}Class b:er{Constructor (W:Array [Array [Array [String ,54],0x4A],0xC_2];q:Array [Array [Int ,0X2A_3],2];D:__){} }''','''Class,_,:,v,{,},Class,_,:,T,{,},Class,b,:,er,{,Constructor,(,W,:,Array,[,Array,[,Array,[,String,,,54,],,,0x4A,],,,0xC2,],;,q,:,Array,[,Array,[,Int,,,0X2A3,],,,2,],;,D,:,__,),{,},},<EOF>''',101))

    def test_1036(self):
        self.assertTrue(TestLexer.test('''Class B_:V_{}Class __d_{$_(G,kS_:Array [Array [Array [Array [Array [Array [String ,0B1],0b1_0],0b1_0],0B1000],5_3],06_2_4]){} }Class s_8{}Class Y{}''','''Class,B_,:,V_,{,},Class,__d_,{,$_,(,G,,,kS_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,0b10,],,,0b10,],,,0B1000,],,,53,],,,0624,],),{,},},Class,s_8,{,},Class,Y,{,},<EOF>''',101))

    def test_1037(self):
        self.assertTrue(TestLexer.test('''Class w0{$eGp_(d:Array [Array [Array [Array [Boolean ,28],0X23],28],0X23];Q,_3_N_,i_ZN_D_,nm,T__t,n:Boolean ){Break ;} }Class _:_{Destructor (){Break ;}Destructor (){Continue ;} }''','''Class,w0,{,$eGp_,(,d,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,28,],,,0X23,],,,28,],,,0X23,],;,Q,,,_3_N_,,,i_ZN_D_,,,nm,,,T__t,,,n,:,Boolean,),{,Break,;,},},Class,_,:,_,{,Destructor,(,),{,Break,;,},Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_1038(self):
        self.assertTrue(TestLexer.test('''Class _:N9{Destructor (){Return ;}Var _,_22,F:Array [Array [Array [Float ,0B1010],0b10],04];}Class L:_{Constructor (){} }''','''Class,_,:,N9,{,Destructor,(,),{,Return,;,},Var,_,,,_22,,,F,:,Array,[,Array,[,Array,[,Float,,,0B1010,],,,0b10,],,,04,],;,},Class,L,:,_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_1039(self):
        self.assertTrue(TestLexer.test('''Class _Kj:_{Var $0,$_,_c__:_4_;Val _:Array [Int ,0143];}Class t_{}Class _1:Z{Var $W,$__57_,_G1:Array [Array [Boolean ,05],0B101101];Val $__X,M,$___,Z:String ;}''','''Class,_Kj,:,_,{,Var,$0,,,$_,,,_c__,:,_4_,;,Val,_,:,Array,[,Int,,,0143,],;,},Class,t_,{,},Class,_1,:,Z,{,Var,$W,,,$__57_,,,_G1,:,Array,[,Array,[,Boolean,,,05,],,,0B101101,],;,Val,$__X,,,M,,,$___,,,Z,:,String,;,},<EOF>''',101))

    def test_1040(self):
        self.assertTrue(TestLexer.test('''Class O{}Class _:_M_1Ww{Constructor (_,y,t:Float ;C,Y:Array [Array [Array [String ,6],0103],0B110100];_:Float ){Break ;}Val $J_:_;}''','''Class,O,{,},Class,_,:,_M_1Ww,{,Constructor,(,_,,,y,,,t,:,Float,;,C,,,Y,:,Array,[,Array,[,Array,[,String,,,6,],,,0103,],,,0B110100,],;,_,:,Float,),{,Break,;,},Val,$J_,:,_,;,},<EOF>''',101))

    def test_1041(self):
        self.assertTrue(TestLexer.test('''Class WKb0_0:_{Var $z,__DA,$E_4,$_:i;Constructor (B3,_s__p,l,_g5_km_,N:Float ;I:D__;_9:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,02_4_4],4_2_06],023],03],0B100],0X28],057],0x6_41_9],0b1_1],15]){} }''','''Class,WKb0_0,:,_,{,Var,$z,,,__DA,,,$E_4,,,$_,:,i,;,Constructor,(,B3,,,_s__p,,,l,,,_g5_km_,,,N,:,Float,;,I,:,D__,;,_9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0244,],,,4206,],,,023,],,,03,],,,0B100,],,,0X28,],,,057,],,,0x6419,],,,0b11,],,,15,],),{,},},<EOF>''',101))

    def test_1042(self):
        self.assertTrue(TestLexer.test('''Class _{$1(d:Array [Array [Array [Array [Array [Array [Int ,0XAFB],0b1001100],022],0X3],067],0B100]){Break ;} }Class _:_{}''','''Class,_,{,$1,(,d,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0XAFB,],,,0b1001100,],,,022,],,,0X3,],,,067,],,,0B100,],),{,Break,;,},},Class,_,:,_,{,},<EOF>''',101))

    def test_1043(self):
        self.assertTrue(TestLexer.test('''Class X{Val $_902KI,$m:Array [Int ,33];Var $8_2,_:o;Destructor (){}Constructor (__8_:wj_s_S__9;_w,_p:Array [Array [Int ,07_3],017];g9___4:q__d;__:Boolean ;_,b:Int ;S:Array [Array [Array [Int ,017],02_27_1],0b1011011];_:Array [Boolean ,02]){} }''','''Class,X,{,Val,$_902KI,,,$m,:,Array,[,Int,,,33,],;,Var,$8_2,,,_,:,o,;,Destructor,(,),{,},Constructor,(,__8_,:,wj_s_S__9,;,_w,,,_p,:,Array,[,Array,[,Int,,,073,],,,017,],;,g9___4,:,q__d,;,__,:,Boolean,;,_,,,b,:,Int,;,S,:,Array,[,Array,[,Array,[,Int,,,017,],,,02271,],,,0b1011011,],;,_,:,Array,[,Boolean,,,02,],),{,},},<EOF>''',101))

    def test_1044(self):
        self.assertTrue(TestLexer.test('''Class y:_T{}Class U{Destructor (){} }Class __{}Class _{Constructor (n,F,xm_,_,Ca:Array [Array [String ,60_7],0x1]){Continue ;Break ;} }''','''Class,y,:,_T,{,},Class,U,{,Destructor,(,),{,},},Class,__,{,},Class,_,{,Constructor,(,n,,,F,,,xm_,,,_,,,Ca,:,Array,[,Array,[,String,,,607,],,,0x1,],),{,Continue,;,Break,;,},},<EOF>''',101))

    def test_1045(self):
        self.assertTrue(TestLexer.test('''Class __5{Var _,$7:Boolean ;Var _:Array [Array [Array [Array [Array [Array [Int ,0B11],0X58_D],0b1111],0B1],0B1],0140];}Class d_2{}Class O{}''','''Class,__5,{,Var,_,,,$7,:,Boolean,;,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B11,],,,0X58D,],,,0b1111,],,,0B1,],,,0B1,],,,0140,],;,},Class,d_2,{,},Class,O,{,},<EOF>''',101))

    def test_1046(self):
        self.assertTrue(TestLexer.test('''Class __D{Constructor (Nku,_,r_,z,_,_Nu:Array [Array [Array [Array [Int ,98],98],0X688_03_35],0144]){Return ;}Destructor (){}Val _,_,$SG:H;F(__,_:Float ){}Destructor (){Continue ;} }Class _4M7__2:_{$1_(_:String ){} }''','''Class,__D,{,Constructor,(,Nku,,,_,,,r_,,,z,,,_,,,_Nu,:,Array,[,Array,[,Array,[,Array,[,Int,,,98,],,,98,],,,0X6880335,],,,0144,],),{,Return,;,},Destructor,(,),{,},Val,_,,,_,,,$SG,:,H,;,F,(,__,,,_,:,Float,),{,},Destructor,(,),{,Continue,;,},},Class,_4M7__2,:,_,{,$1_,(,_,:,String,),{,},},<EOF>''',101))

    def test_1047(self):
        self.assertTrue(TestLexer.test('''Class Rw{}Class xOx{Destructor (){Break ;}Constructor (Oo:j0){ {{Break ;}Break ;} }Constructor (e76_,C:Array [Int ,0xB];__6:Fb___){} }''','''Class,Rw,{,},Class,xOx,{,Destructor,(,),{,Break,;,},Constructor,(,Oo,:,j0,),{,{,{,Break,;,},Break,;,},},Constructor,(,e76_,,,C,:,Array,[,Int,,,0xB,],;,__6,:,Fb___,),{,},},<EOF>''',101))

    def test_1048(self):
        self.assertTrue(TestLexer.test('''Class _{Val F,$D:Float ;Destructor (){} }Class _:_9__1{}Class s5_:__X2{}Class __{$5(F,_X:R){Continue ;}Destructor (){Return ;} }''','''Class,_,{,Val,F,,,$D,:,Float,;,Destructor,(,),{,},},Class,_,:,_9__1,{,},Class,s5_,:,__X2,{,},Class,__,{,$5,(,F,,,_X,:,R,),{,Continue,;,},Destructor,(,),{,Return,;,},},<EOF>''',101))

    def test_1049(self):
        self.assertTrue(TestLexer.test('''Class _{$N_(_W:Array [Array [Array [Array [String ,9],015],0b101110],032];b_3:Boolean ;T,B_20G6:Float ){Continue ;Continue ;} }Class W_1_:FS_52oG{}''','''Class,_,{,$N_,(,_W,:,Array,[,Array,[,Array,[,Array,[,String,,,9,],,,015,],,,0b101110,],,,032,],;,b_3,:,Boolean,;,T,,,B_20G6,:,Float,),{,Continue,;,Continue,;,},},Class,W_1_,:,FS_52oG,{,},<EOF>''',101))

    def test_1050(self):
        self.assertTrue(TestLexer.test('''Class _6:_0{}Class _8_{}Class O:_w7{Var $A,$6,$_s,$7,xRc:Array [Array [Array [String ,0b111011],0x8_E],014];}Class _TUq{Destructor (){} }''','''Class,_6,:,_0,{,},Class,_8_,{,},Class,O,:,_w7,{,Var,$A,,,$6,,,$_s,,,$7,,,xRc,:,Array,[,Array,[,Array,[,String,,,0b111011,],,,0x8E,],,,014,],;,},Class,_TUq,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1051(self):
        self.assertTrue(TestLexer.test('''Class n__X_p{}Class _:_{_(){} }Class _i____:_{}Class _{Constructor (_,_,_,_3,_,_4_:d;t,o:Float ;_,TS4,_:_2_){ {Break ;{} }Break ;} }Class _{}Class _:k{}''','''Class,n__X_p,{,},Class,_,:,_,{,_,(,),{,},},Class,_i____,:,_,{,},Class,_,{,Constructor,(,_,,,_,,,_,,,_3,,,_,,,_4_,:,d,;,t,,,o,:,Float,;,_,,,TS4,,,_,:,_2_,),{,{,Break,;,{,},},Break,;,},},Class,_,{,},Class,_,:,k,{,},<EOF>''',101))

    def test_1052(self):
        self.assertTrue(TestLexer.test('''Class r__HE:_j_6{Var _:Array [Array [String ,037],22];Constructor (_1MCX:_;_:Array [Array [Array [Int ,7],0B1011011],0x4B];_D,x:Int ;_,o:Boolean ;Q9:String ;_,x6:_6){Val s:Boolean ;Return ;Break ;} }''','''Class,r__HE,:,_j_6,{,Var,_,:,Array,[,Array,[,String,,,037,],,,22,],;,Constructor,(,_1MCX,:,_,;,_,:,Array,[,Array,[,Array,[,Int,,,7,],,,0B1011011,],,,0x4B,],;,_D,,,x,:,Int,;,_,,,o,:,Boolean,;,Q9,:,String,;,_,,,x6,:,_6,),{,Val,s,:,Boolean,;,Return,;,Break,;,},},<EOF>''',101))

    def test_1053(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){} }Class _n:Nu{_Vp(_8_H3_V:Array [Boolean ,0XCF9_2_D8];_1_:Array [String ,0B101111];_:Array [Boolean ,0B101111];N,_8,_w_:v4;___:Array [Int ,0b1]){} }''','''Class,_,{,Constructor,(,),{,},},Class,_n,:,Nu,{,_Vp,(,_8_H3_V,:,Array,[,Boolean,,,0XCF92D8,],;,_1_,:,Array,[,String,,,0B101111,],;,_,:,Array,[,Boolean,,,0B101111,],;,N,,,_8,,,_w_,:,v4,;,___,:,Array,[,Int,,,0b1,],),{,},},<EOF>''',101))

    def test_1054(self):
        self.assertTrue(TestLexer.test('''Class _X{zQ_(){}Constructor (){} }Class _:_{Constructor (_50H:Array [String ,3];_n2,L:v4n){}Constructor (){} }''','''Class,_X,{,zQ_,(,),{,},Constructor,(,),{,},},Class,_,:,_,{,Constructor,(,_50H,:,Array,[,String,,,3,],;,_n2,,,L,:,v4n,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_1055(self):
        self.assertTrue(TestLexer.test('''Class _H:_01e_n{$e(){}Constructor (o0_e_u:Array [Array [Array [Array [Boolean ,0XBD2],0b1011],12],0b10_1];U_O,q8:Boolean ;_3_,__,_,XJ,z:String ){} }''','''Class,_H,:,_01e_n,{,$e,(,),{,},Constructor,(,o0_e_u,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0XBD2,],,,0b1011,],,,12,],,,0b101,],;,U_O,,,q8,:,Boolean,;,_3_,,,__,,,_,,,XJ,,,z,:,String,),{,},},<EOF>''',101))

    def test_1056(self):
        self.assertTrue(TestLexer.test('''Class S_3{}Class _:D{}Class _:_{}Class _:xT9{Var $__,$J,$L,m,_:Float ;}Class K{Var k_:I;Destructor (){Continue ;Continue ;} }Class _{}Class o{}''','''Class,S_3,{,},Class,_,:,D,{,},Class,_,:,_,{,},Class,_,:,xT9,{,Var,$__,,,$J,,,$L,,,m,,,_,:,Float,;,},Class,K,{,Var,k_,:,I,;,Destructor,(,),{,Continue,;,Continue,;,},},Class,_,{,},Class,o,{,},<EOF>''',101))

    def test_1057(self):
        self.assertTrue(TestLexer.test('''Class P:_{}Class _9:i1__m{ok(){}Var $_3:_;Constructor (r,_:_D_;_,J,x,_:Array [Array [Array [Boolean ,1_2_3_9_6_778],0B10],0114]){Break ;} }Class _{}Class _:O_{}Class n5:_l{}Class _{}''','''Class,P,:,_,{,},Class,_9,:,i1__m,{,ok,(,),{,},Var,$_3,:,_,;,Constructor,(,r,,,_,:,_D_,;,_,,,J,,,x,,,_,:,Array,[,Array,[,Array,[,Boolean,,,12396778,],,,0B10,],,,0114,],),{,Break,;,},},Class,_,{,},Class,_,:,O_,{,},Class,n5,:,_l,{,},Class,_,{,},<EOF>''',101))

    def test_1058(self):
        self.assertTrue(TestLexer.test('''Class X__:V95_{Constructor (___,g,_tn:Boolean ){} }Class X:_e{}Class W{Val F2,$_:Float ;$_X_(qu6,_,a,aPa,_,___:Array [Array [Array [String ,0b1001010],4_2],05_4_13];_:Boolean ;e___:Boolean ){} }''','''Class,X__,:,V95_,{,Constructor,(,___,,,g,,,_tn,:,Boolean,),{,},},Class,X,:,_e,{,},Class,W,{,Val,F2,,,$_,:,Float,;,$_X_,(,qu6,,,_,,,a,,,aPa,,,_,,,___,:,Array,[,Array,[,Array,[,String,,,0b1001010,],,,42,],,,05413,],;,_,:,Boolean,;,e___,:,Boolean,),{,},},<EOF>''',101))

    def test_1059(self):
        self.assertTrue(TestLexer.test('''Class oF7L{Var _,_6:String ;Constructor (_,M,_:__;JA2:_c;DJ:Array [Array [Int ,0X8C],0102];d:_0;sAq:Array [Array [Array [Boolean ,6],0XA],06];_:_;ttq64:Array [Array [Array [Boolean ,65],65],65]){Continue ;}Destructor (){} }Class O_18{}Class __{}Class _{}''','''Class,oF7L,{,Var,_,,,_6,:,String,;,Constructor,(,_,,,M,,,_,:,__,;,JA2,:,_c,;,DJ,:,Array,[,Array,[,Int,,,0X8C,],,,0102,],;,d,:,_0,;,sAq,:,Array,[,Array,[,Array,[,Boolean,,,6,],,,0XA,],,,06,],;,_,:,_,;,ttq64,:,Array,[,Array,[,Array,[,Boolean,,,65,],,,65,],,,65,],),{,Continue,;,},Destructor,(,),{,},},Class,O_18,{,},Class,__,{,},Class,_,{,},<EOF>''',101))

    def test_1060(self):
        self.assertTrue(TestLexer.test('''Class A_{Val $GZ:Boolean ;Val $_Q_,$o:_b095_K_u;Constructor (Xx,_:Array [Boolean ,0B111111]){}Var qq:Array [Array [Array [Array [Array [String ,0x58],0B111111],0B10],2],0b1100100];}Class __{}Class _{Constructor (_,Q:Array [Boolean ,0b1100100]){} }''','''Class,A_,{,Val,$GZ,:,Boolean,;,Val,$_Q_,,,$o,:,_b095_K_u,;,Constructor,(,Xx,,,_,:,Array,[,Boolean,,,0B111111,],),{,},Var,qq,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x58,],,,0B111111,],,,0B10,],,,2,],,,0b1100100,],;,},Class,__,{,},Class,_,{,Constructor,(,_,,,Q,:,Array,[,Boolean,,,0b1100100,],),{,},},<EOF>''',101))

    def test_1061(self):
        self.assertTrue(TestLexer.test('''Class F{Constructor (){} }Class D:b{Constructor (_:X;CGv9,B4:Array [Array [Array [Array [Array [Float ,98],0b1],3],0X27],053];_2__,_V,R:String ;C4:Array [Array [Array [String ,0X27],0B1_1],0x22]){} }Class v78_7:Z3o_{}''','''Class,F,{,Constructor,(,),{,},},Class,D,:,b,{,Constructor,(,_,:,X,;,CGv9,,,B4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,98,],,,0b1,],,,3,],,,0X27,],,,053,],;,_2__,,,_V,,,R,:,String,;,C4,:,Array,[,Array,[,Array,[,String,,,0X27,],,,0B11,],,,0x22,],),{,},},Class,v78_7,:,Z3o_,{,},<EOF>''',101))

    def test_1062(self):
        self.assertTrue(TestLexer.test('''Class E:o5n_{$9H(_:Boolean ;e_,_,_3_:_;AC_M:Array [Int ,02];k,u:Array [Array [Array [String ,0XA6A],0100],0X3]){} }''','''Class,E,:,o5n_,{,$9H,(,_,:,Boolean,;,e_,,,_,,,_3_,:,_,;,AC_M,:,Array,[,Int,,,02,],;,k,,,u,:,Array,[,Array,[,Array,[,String,,,0XA6A,],,,0100,],,,0X3,],),{,},},<EOF>''',101))

    def test_1063(self):
        self.assertTrue(TestLexer.test('''Class Z6:_{Val $004M___G,$p_:Array [Boolean ,04_04_67];Var $P:Array [Array [String ,30],0b1];Z__(R:Array [Array [Array [String ,30],0B1_1_0_1_0],02_5_77]){} }Class _{}Class u:__v_v{}''','''Class,Z6,:,_,{,Val,$004M___G,,,$p_,:,Array,[,Boolean,,,040467,],;,Var,$P,:,Array,[,Array,[,String,,,30,],,,0b1,],;,Z__,(,R,:,Array,[,Array,[,Array,[,String,,,30,],,,0B11010,],,,02577,],),{,},},Class,_,{,},Class,u,:,__v_v,{,},<EOF>''',101))

    def test_1064(self):
        self.assertTrue(TestLexer.test('''Class ____{_(G,g,_,_:_;_,f9:String ;_,_6_:Array [Array [String ,047],42];K,_,N0:Array [Array [Array [Array [Array [Float ,0b1000001],42],047],0b1],0B10]){}Var $314_:Array [Boolean ,42];Constructor (){p::$_l();} }Class R3a:V{}Class _s37_:_{}''','''Class,____,{,_,(,G,,,g,,,_,,,_,:,_,;,_,,,f9,:,String,;,_,,,_6_,:,Array,[,Array,[,String,,,047,],,,42,],;,K,,,_,,,N0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1000001,],,,42,],,,047,],,,0b1,],,,0B10,],),{,},Var,$314_,:,Array,[,Boolean,,,42,],;,Constructor,(,),{,p,::,$_l,(,),;,},},Class,R3a,:,V,{,},Class,_s37_,:,_,{,},<EOF>''',101))

    def test_1065(self):
        self.assertTrue(TestLexer.test('''Class T{c1(E2_0Y1_6:o_3_4_0;_J:Array [Array [Array [Array [Int ,0B1010000],04],074],05]){} }Class i1{}Class f_47:__{}''','''Class,T,{,c1,(,E2_0Y1_6,:,o_3_4_0,;,_J,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1010000,],,,04,],,,074,],,,05,],),{,},},Class,i1,{,},Class,f_47,:,__,{,},<EOF>''',101))

    def test_1066(self):
        self.assertTrue(TestLexer.test('''Class _:p_{}Class _u{Constructor (E320q_,gf3T,K:h3;d:Array [Array [Array [Array [Array [Float ,0b100000],025],50],8],06]){} }Class _:R711W{}''','''Class,_,:,p_,{,},Class,_u,{,Constructor,(,E320q_,,,gf3T,,,K,:,h3,;,d,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b100000,],,,025,],,,50,],,,8,],,,06,],),{,},},Class,_,:,R711W,{,},<EOF>''',101))

    def test_1067(self):
        self.assertTrue(TestLexer.test('''Class _:Mh{}Class D{Constructor (_L_,__,fk,v,vQ__28F_,C2:String ;b,A,_H1:eV_){} }Class _L{}Class q_{}Class _{}''','''Class,_,:,Mh,{,},Class,D,{,Constructor,(,_L_,,,__,,,fk,,,v,,,vQ__28F_,,,C2,:,String,;,b,,,A,,,_H1,:,eV_,),{,},},Class,_L,{,},Class,q_,{,},Class,_,{,},<EOF>''',101))

    def test_1068(self):
        self.assertTrue(TestLexer.test('''Class __:U{Val B00D,$_,$N1,$_q_:Array [Boolean ,032];Val $DM__1_3,$_:Int ;Var $48:String ;}Class _{Destructor (){ {} }}''','''Class,__,:,U,{,Val,B00D,,,$_,,,$N1,,,$_q_,:,Array,[,Boolean,,,032,],;,Val,$DM__1_3,,,$_,:,Int,;,Var,$48,:,String,;,},Class,_,{,Destructor,(,),{,{,},},},<EOF>''',101))

    def test_1069(self):
        self.assertTrue(TestLexer.test('''Class A:e8_{Destructor (){Val S6:Array [Array [Array [String ,0B10_0],0b1_01],39];Break ;}Val $7,$w,$_:String ;}''','''Class,A,:,e8_,{,Destructor,(,),{,Val,S6,:,Array,[,Array,[,Array,[,String,,,0B100,],,,0b101,],,,39,],;,Break,;,},Val,$7,,,$w,,,$_,:,String,;,},<EOF>''',101))

    def test_1070(self):
        self.assertTrue(TestLexer.test('''Class _3:L2{Constructor (T,_:Array [Float ,72];_,yg:Array [Boolean ,0B11];__,__,_665,___:Array [Float ,72];_,_4_:Array [Array [Array [Array [String ,0x1C],72],0XD],248]){}Var $_b_,$z5:Boolean ;}''','''Class,_3,:,L2,{,Constructor,(,T,,,_,:,Array,[,Float,,,72,],;,_,,,yg,:,Array,[,Boolean,,,0B11,],;,__,,,__,,,_665,,,___,:,Array,[,Float,,,72,],;,_,,,_4_,:,Array,[,Array,[,Array,[,Array,[,String,,,0x1C,],,,72,],,,0XD,],,,248,],),{,},Var,$_b_,,,$z5,:,Boolean,;,},<EOF>''',101))

    def test_1071(self):
        self.assertTrue(TestLexer.test('''Class _9{Constructor (_3_,_8,SA,_,__0:Array [String ,84];c_,_P,_2_Z,sM:D2;_:Float ;_,I:Boolean ){}Var E,___M_:Array [Float ,0B1110];}''','''Class,_9,{,Constructor,(,_3_,,,_8,,,SA,,,_,,,__0,:,Array,[,String,,,84,],;,c_,,,_P,,,_2_Z,,,sM,:,D2,;,_,:,Float,;,_,,,I,:,Boolean,),{,},Var,E,,,___M_,:,Array,[,Float,,,0B1110,],;,},<EOF>''',101))

    def test_1072(self):
        self.assertTrue(TestLexer.test('''Class __{Val C_2F,$B:Int ;Constructor (_,L:Float ;o_,HToK:Array [Array [Float ,030],030]){}Var $9,$6:Float ;}Class s_:e_Y{}''','''Class,__,{,Val,C_2F,,,$B,:,Int,;,Constructor,(,_,,,L,:,Float,;,o_,,,HToK,:,Array,[,Array,[,Float,,,030,],,,030,],),{,},Var,$9,,,$6,:,Float,;,},Class,s_,:,e_Y,{,},<EOF>''',101))

    def test_1073(self):
        self.assertTrue(TestLexer.test('''Class dD:__{Var _2,y,$_q:Array [Array [Array [Array [Boolean ,06],91],0B10],0b110];}Class __5C{Val $_j:String ;}Class _10:_{}''','''Class,dD,:,__,{,Var,_2,,,y,,,$_q,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,06,],,,91,],,,0B10,],,,0b110,],;,},Class,__5C,{,Val,$_j,:,String,;,},Class,_10,:,_,{,},<EOF>''',101))

    def test_1074(self):
        self.assertTrue(TestLexer.test('''Class E{$08(_,__,kC2:M1d;M:Array [Float ,0b1000000]){} }Class _w{}Class O_wr_:D{$C__(){ {} }Constructor (){}Val _,_:Array [String ,0b1_1_1_1];}Class _{}''','''Class,E,{,$08,(,_,,,__,,,kC2,:,M1d,;,M,:,Array,[,Float,,,0b1000000,],),{,},},Class,_w,{,},Class,O_wr_,:,D,{,$C__,(,),{,{,},},Constructor,(,),{,},Val,_,,,_,:,Array,[,String,,,0b1111,],;,},Class,_,{,},<EOF>''',101))

    def test_1075(self):
        self.assertTrue(TestLexer.test('''Class __3_{Constructor (_x:String ;_:Array [Int ,0b100011];_,H,_:Array [Array [Int ,0B1],21];_,_,_,M1:Array [Array [Boolean ,07],07];p,o:Float ){} }Class _:_{}''','''Class,__3_,{,Constructor,(,_x,:,String,;,_,:,Array,[,Int,,,0b100011,],;,_,,,H,,,_,:,Array,[,Array,[,Int,,,0B1,],,,21,],;,_,,,_,,,_,,,M1,:,Array,[,Array,[,Boolean,,,07,],,,07,],;,p,,,o,:,Float,),{,},},Class,_,:,_,{,},<EOF>''',101))

    def test_1076(self):
        self.assertTrue(TestLexer.test('''Class _:_V{$5(g,h,J:Array [String ,0xF]){}$_(j,J:Array [Float ,07];B:Boolean ;_:Array [String ,0130]){}Val $_,$_:String ;Destructor (){}Destructor (){Continue ;} }Class i__{}''','''Class,_,:,_V,{,$5,(,g,,,h,,,J,:,Array,[,String,,,0xF,],),{,},$_,(,j,,,J,:,Array,[,Float,,,07,],;,B,:,Boolean,;,_,:,Array,[,String,,,0130,],),{,},Val,$_,,,$_,:,String,;,Destructor,(,),{,},Destructor,(,),{,Continue,;,},},Class,i__,{,},<EOF>''',101))

    def test_1077(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){} }Class h{Val $x:C;}Class i_{Val $_,$I_:Array [Array [String ,69],05];Var A,S:Array [Array [Boolean ,0106],7];}''','''Class,_,{,Constructor,(,),{,},},Class,h,{,Val,$x,:,C,;,},Class,i_,{,Val,$_,,,$I_,:,Array,[,Array,[,String,,,69,],,,05,],;,Var,A,,,S,:,Array,[,Array,[,Boolean,,,0106,],,,7,],;,},<EOF>''',101))

    def test_1078(self):
        self.assertTrue(TestLexer.test('''Class _{}Class E8:_{}Class _32__{Var $__a:_9;Destructor (){} }Class _8__7o{Val $_,e,$X,__:Array [Array [Array [Boolean ,0B100010],49],032];Val e,AL,J:_k6_4;Destructor (){}Constructor (){} }''','''Class,_,{,},Class,E8,:,_,{,},Class,_32__,{,Var,$__a,:,_9,;,Destructor,(,),{,},},Class,_8__7o,{,Val,$_,,,e,,,$X,,,__,:,Array,[,Array,[,Array,[,Boolean,,,0B100010,],,,49,],,,032,],;,Val,e,,,AL,,,J,:,_k6_4,;,Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_1079(self):
        self.assertTrue(TestLexer.test('''Class c38{Destructor (){Val C,P:Array [String ,0xC];}Var $_1:Array [Array [Array [Float ,044],0B1_11],0XF];}Class _:__{Val FT,$9_,$N_,_,_,f,GhQz,$_,_28,$_:b;}Class D{}''','''Class,c38,{,Destructor,(,),{,Val,C,,,P,:,Array,[,String,,,0xC,],;,},Var,$_1,:,Array,[,Array,[,Array,[,Float,,,044,],,,0B111,],,,0XF,],;,},Class,_,:,__,{,Val,FT,,,$9_,,,$N_,,,_,,,_,,,f,,,GhQz,,,$_,,,_28,,,$_,:,b,;,},Class,D,{,},<EOF>''',101))

    def test_1080(self):
        self.assertTrue(TestLexer.test('''Class i_{}Class D_{Constructor (){}$27C5_1(){}Destructor (){Val _,_m2,h9,_q,__2,e:O4;Break ;_T::$K_();}Destructor (){}Constructor (__v:Int ;a:Array [Boolean ,072]){} }''','''Class,i_,{,},Class,D_,{,Constructor,(,),{,},$27C5_1,(,),{,},Destructor,(,),{,Val,_,,,_m2,,,h9,,,_q,,,__2,,,e,:,O4,;,Break,;,_T,::,$K_,(,),;,},Destructor,(,),{,},Constructor,(,__v,:,Int,;,a,:,Array,[,Boolean,,,072,],),{,},},<EOF>''',101))

    def test_1081(self):
        self.assertTrue(TestLexer.test('''Class _:M{$i(){}Val i_Z__,__:String ;}Class __{}Class wP{Var h_,_,$Bq__:Array [Array [String ,0B1],5];}Class T{}''','''Class,_,:,M,{,$i,(,),{,},Val,i_Z__,,,__,:,String,;,},Class,__,{,},Class,wP,{,Var,h_,,,_,,,$Bq__,:,Array,[,Array,[,String,,,0B1,],,,5,],;,},Class,T,{,},<EOF>''',101))

    def test_1082(self):
        self.assertTrue(TestLexer.test('''Class __:__{Var $_5_:Array [Array [Array [String ,011],047],0XB];}Class o:_{Val _8,$7:Array [Array [Array [Array [String ,0x3A],074],01],011];}''','''Class,__,:,__,{,Var,$_5_,:,Array,[,Array,[,Array,[,String,,,011,],,,047,],,,0XB,],;,},Class,o,:,_,{,Val,_8,,,$7,:,Array,[,Array,[,Array,[,Array,[,String,,,0x3A,],,,074,],,,01,],,,011,],;,},<EOF>''',101))

    def test_1083(self):
        self.assertTrue(TestLexer.test('''Class g:__3{$T(){}Constructor (){} }Class _1_:_1{Constructor (j,_,__,_:Boolean ;VX,oD_:Array [Array [Array [Array [String ,0b1100],0x2_2],0x36],0XF];Y_T3,g_:Boolean ){Var _,YXL,R:Xc1;} }''','''Class,g,:,__3,{,$T,(,),{,},Constructor,(,),{,},},Class,_1_,:,_1,{,Constructor,(,j,,,_,,,__,,,_,:,Boolean,;,VX,,,oD_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1100,],,,0x22,],,,0x36,],,,0XF,],;,Y_T3,,,g_,:,Boolean,),{,Var,_,,,YXL,,,R,:,Xc1,;,},},<EOF>''',101))

    def test_1084(self):
        self.assertTrue(TestLexer.test('''Class S2{$9(_v:J_;Eh_,C_:Array [Array [Float ,50],50];_aJ,G_H_DS_L,I_:_){}$6k(e:Array [Array [Array [String ,3],0127],0X971];B,c:Array [Boolean ,50];F,_B,_:Array [Float ,0B1000100];_4,E,SN_r,z,QIa,p3:Array [String ,0b1010010]){Continue ;}Val _5,$_2:String ;}''','''Class,S2,{,$9,(,_v,:,J_,;,Eh_,,,C_,:,Array,[,Array,[,Float,,,50,],,,50,],;,_aJ,,,G_H_DS_L,,,I_,:,_,),{,},$6k,(,e,:,Array,[,Array,[,Array,[,String,,,3,],,,0127,],,,0X971,],;,B,,,c,:,Array,[,Boolean,,,50,],;,F,,,_B,,,_,:,Array,[,Float,,,0B1000100,],;,_4,,,E,,,SN_r,,,z,,,QIa,,,p3,:,Array,[,String,,,0b1010010,],),{,Continue,;,},Val,_5,,,$_2,:,String,;,},<EOF>''',101))

    def test_1085(self):
        self.assertTrue(TestLexer.test('''Class _9g__:Y{}Class W{Constructor (_:_;_h,_,__,f,__w_6___,_,Ga7,_6,_w:Int ;_B:f6;_,NQ,_s_:v){ {}Continue ;} }Class _{}''','''Class,_9g__,:,Y,{,},Class,W,{,Constructor,(,_,:,_,;,_h,,,_,,,__,,,f,,,__w_6___,,,_,,,Ga7,,,_6,,,_w,:,Int,;,_B,:,f6,;,_,,,NQ,,,_s_,:,v,),{,{,},Continue,;,},},Class,_,{,},<EOF>''',101))

    def test_1086(self):
        self.assertTrue(TestLexer.test('''Class _{}Class n{Var $_l:F=0.UP().t_().__;Destructor (){Return ;} }Class _1:_6M8F{}Class _Fj63_{Val $_:_;Val _J:Array [Array [Int ,66],0B1011];}''','''Class,_,{,},Class,n,{,Var,$_l,:,F,=,0.,UP,(,),.,t_,(,),.,__,;,Destructor,(,),{,Return,;,},},Class,_1,:,_6M8F,{,},Class,_Fj63_,{,Val,$_,:,_,;,Val,_J,:,Array,[,Array,[,Int,,,66,],,,0B1011,],;,},<EOF>''',101))

    def test_1087(self):
        self.assertTrue(TestLexer.test('''Class b{}Class J_:___W_{Var $i5V,$5n6:Array [Array [Array [Array [Array [Array [Array [Float ,045],10],0X39],045],0B1],045],0B1_0];}''','''Class,b,{,},Class,J_,:,___W_,{,Var,$i5V,,,$5n6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,045,],,,10,],,,0X39,],,,045,],,,0B1,],,,045,],,,0B10,],;,},<EOF>''',101))

    def test_1088(self):
        self.assertTrue(TestLexer.test('''Class _2{Destructor (){Break ;Continue ;} }Class iX{Val ____,___,J2Q,__I:Array [Int ,18];}Class _:__{Constructor (P,_wS:Float ){ {} }}Class O{}''','''Class,_2,{,Destructor,(,),{,Break,;,Continue,;,},},Class,iX,{,Val,____,,,___,,,J2Q,,,__I,:,Array,[,Int,,,18,],;,},Class,_,:,__,{,Constructor,(,P,,,_wS,:,Float,),{,{,},},},Class,O,{,},<EOF>''',101))

    def test_1089(self):
        self.assertTrue(TestLexer.test('''Class _:K0{}Class __:Lt{Var $_0_:Array [Float ,037];Var _,Q:q_;}Class J:_9{Val ___:Array [Array [String ,0b101010],47];Constructor (){}Constructor (_,_:Array [String ,0b101010];_9_R:c;__9:Float ;P:m5a3H){} }''','''Class,_,:,K0,{,},Class,__,:,Lt,{,Var,$_0_,:,Array,[,Float,,,037,],;,Var,_,,,Q,:,q_,;,},Class,J,:,_9,{,Val,___,:,Array,[,Array,[,String,,,0b101010,],,,47,],;,Constructor,(,),{,},Constructor,(,_,,,_,:,Array,[,String,,,0b101010,],;,_9_R,:,c,;,__9,:,Float,;,P,:,m5a3H,),{,},},<EOF>''',101))

    def test_1090(self):
        self.assertTrue(TestLexer.test('''Class t{Val $l,_:String ;_nA_sS(){}Val $__:Array [Boolean ,0x8];Constructor (y,_8,Z,E,q_09:String ){} }Class ___uo:e{}Class Mh_{}Class x{}Class _{Constructor (){}Destructor (){}Var $31:Boolean ;}''','''Class,t,{,Val,$l,,,_,:,String,;,_nA_sS,(,),{,},Val,$__,:,Array,[,Boolean,,,0x8,],;,Constructor,(,y,,,_8,,,Z,,,E,,,q_09,:,String,),{,},},Class,___uo,:,e,{,},Class,Mh_,{,},Class,x,{,},Class,_,{,Constructor,(,),{,},Destructor,(,),{,},Var,$31,:,Boolean,;,},<EOF>''',101))

    def test_1091(self):
        self.assertTrue(TestLexer.test('''Class e:h{Constructor (_A:Array [String ,0b1100];__:Array [String ,0B1_1];B,_3:Array [Int ,0b1];__2:Array [Array [Array [Array [Boolean ,0X62],021],9_9],13];__,y:Qq){} }Class Vq6_:_{}''','''Class,e,:,h,{,Constructor,(,_A,:,Array,[,String,,,0b1100,],;,__,:,Array,[,String,,,0B11,],;,B,,,_3,:,Array,[,Int,,,0b1,],;,__2,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X62,],,,021,],,,99,],,,13,],;,__,,,y,:,Qq,),{,},},Class,Vq6_,:,_,{,},<EOF>''',101))

    def test_1092(self):
        self.assertTrue(TestLexer.test('''Class _7:N{}Class _2x{$d(E_:Array [String ,0b1]){}Var _1,$Sq,$WF_:Array [Int ,0X3E];}Class __7:n_{$p(){}Var $0d_:_;}''','''Class,_7,:,N,{,},Class,_2x,{,$d,(,E_,:,Array,[,String,,,0b1,],),{,},Var,_1,,,$Sq,,,$WF_,:,Array,[,Int,,,0X3E,],;,},Class,__7,:,n_,{,$p,(,),{,},Var,$0d_,:,_,;,},<EOF>''',101))

    def test_1093(self):
        self.assertTrue(TestLexer.test('''Class kT{Constructor (){}Destructor (){}Destructor (){}Val h:o9;Constructor (H:String ;_,g,_,E,c,B,k_,_h,M_81,_:Float ){Break ;W::$N_();Break ;} }''','''Class,kT,{,Constructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,},Val,h,:,o9,;,Constructor,(,H,:,String,;,_,,,g,,,_,,,E,,,c,,,B,,,k_,,,_h,,,M_81,,,_,:,Float,),{,Break,;,W,::,$N_,(,),;,Break,;,},},<EOF>''',101))

    def test_1094(self):
        self.assertTrue(TestLexer.test('''Class _6:W{Constructor (f:_319;__:Array [String ,0XE];_:Array [Float ,0X1];_:Array [Array [Array [Array [Float ,38],0110],0B1001100],0110]){} }Class L4:_a5{Constructor (B,_,_,T:Float ;_4:Array [Array [Boolean ,02_15],0110]){}Val r,HY,c_:Array [Array [Array [String ,02],0b1010110],0X2_66];}''','''Class,_6,:,W,{,Constructor,(,f,:,_319,;,__,:,Array,[,String,,,0XE,],;,_,:,Array,[,Float,,,0X1,],;,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,38,],,,0110,],,,0B1001100,],,,0110,],),{,},},Class,L4,:,_a5,{,Constructor,(,B,,,_,,,_,,,T,:,Float,;,_4,:,Array,[,Array,[,Boolean,,,0215,],,,0110,],),{,},Val,r,,,HY,,,c_,:,Array,[,Array,[,Array,[,String,,,02,],,,0b1010110,],,,0X266,],;,},<EOF>''',101))

    def test_1095(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_xX:String ){Break ;} }Class _:T_{Destructor (){ {}{}Var _3:Array [Array [Array [Int ,0b10],0b1],0X30_E];Return ;} }''','''Class,_,{,Constructor,(,_xX,:,String,),{,Break,;,},},Class,_,:,T_,{,Destructor,(,),{,{,},{,},Var,_3,:,Array,[,Array,[,Array,[,Int,,,0b10,],,,0b1,],,,0X30E,],;,Return,;,},},<EOF>''',101))

    def test_1096(self):
        self.assertTrue(TestLexer.test('''Class t{OZh___(__0__:Int ){}Var $6E00:Array [Array [Array [Array [String ,0b1010011],0xC],03],0X44];Val $_3t,e_:Array [Boolean ,32];}Class _:_{Val $K_:Array [Boolean ,05];}''','''Class,t,{,OZh___,(,__0__,:,Int,),{,},Var,$6E00,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1010011,],,,0xC,],,,03,],,,0X44,],;,Val,$_3t,,,e_,:,Array,[,Boolean,,,32,],;,},Class,_,:,_,{,Val,$K_,:,Array,[,Boolean,,,05,],;,},<EOF>''',101))

    def test_1097(self):
        self.assertTrue(TestLexer.test('''Class ___:_{Var $M:Array [Int ,05_5];Constructor (_:Array [Array [Float ,25],0x4]){ {}E::$_();} }Class _QR8:Q{}Class Q:_{}''','''Class,___,:,_,{,Var,$M,:,Array,[,Int,,,055,],;,Constructor,(,_,:,Array,[,Array,[,Float,,,25,],,,0x4,],),{,{,},E,::,$_,(,),;,},},Class,_QR8,:,Q,{,},Class,Q,:,_,{,},<EOF>''',101))

    def test_1098(self):
        self.assertTrue(TestLexer.test('''Class _d:_{}Class rf{}Class Xe{}Class _H{$57(Q:Array [Array [Array [Float ,0X12],0b1010],2_58];_0,__:Int ){}Var yO:Array [Array [String ,0X963],03];Constructor (){}Destructor (){} }''','''Class,_d,:,_,{,},Class,rf,{,},Class,Xe,{,},Class,_H,{,$57,(,Q,:,Array,[,Array,[,Array,[,Float,,,0X12,],,,0b1010,],,,258,],;,_0,,,__,:,Int,),{,},Var,yO,:,Array,[,Array,[,String,,,0X963,],,,03,],;,Constructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_1099(self):
        self.assertTrue(TestLexer.test('''Class W:U{Constructor (){}Constructor (){}Val $18kGc6:Array [Int ,051];}Class _{Val _,_,$_,$0:Array [Float ,1];}Class _5L:h_{}''','''Class,W,:,U,{,Constructor,(,),{,},Constructor,(,),{,},Val,$18kGc6,:,Array,[,Int,,,051,],;,},Class,_,{,Val,_,,,_,,,$_,,,$0,:,Array,[,Float,,,1,],;,},Class,_5L,:,h_,{,},<EOF>''',101))

    def test_1100(self):
        self.assertTrue(TestLexer.test('''Class i{Val s608,$_:_9;Val __,$l:z4;}Class __:_{Var y_:Array [Array [Array [Array [Array [Array [Boolean ,0X9],033],0x5A],033],63],0X15];Var $__:_;}''','''Class,i,{,Val,s608,,,$_,:,_9,;,Val,__,,,$l,:,z4,;,},Class,__,:,_,{,Var,y_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X9,],,,033,],,,0x5A,],,,033,],,,63,],,,0X15,],;,Var,$__,:,_,;,},<EOF>''',101))

    def test_1101(self):
        self.assertTrue(TestLexer.test('''Class _:A{_(_0,_,_,a,__,___,__R2:Array [Array [Array [Array [Array [String ,2],0b11110],0b11110],7_3],034];_:_){}Destructor (){}Destructor (){} }''','''Class,_,:,A,{,_,(,_0,,,_,,,_,,,a,,,__,,,___,,,__R2,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,2,],,,0b11110,],,,0b11110,],,,73,],,,034,],;,_,:,_,),{,},Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_1102(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (D:_;KT:Array [Array [Array [Int ,0314_1_0_7_1],0113],0113];_6_,G,_7:Array [Int ,0113];__5:M){Continue ;Continue ;Break ;} }''','''Class,_,{,Constructor,(,D,:,_,;,KT,:,Array,[,Array,[,Array,[,Int,,,03141071,],,,0113,],,,0113,],;,_6_,,,G,,,_7,:,Array,[,Int,,,0113,],;,__5,:,M,),{,Continue,;,Continue,;,Break,;,},},<EOF>''',101))

    def test_1103(self):
        self.assertTrue(TestLexer.test('''Class __L{dG_Un_5(____,_K_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,01],0b1_0],2_5],0XE],0X9],052],7],0x8],29]){}Destructor (){Break ;{} }Var $c39_z_:Array [Array [String ,0b1011101],32_8]=bQ_o___::$c.D9_6._q;}''','''Class,__L,{,dG_Un_5,(,____,,,_K_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,01,],,,0b10,],,,25,],,,0XE,],,,0X9,],,,052,],,,7,],,,0x8,],,,29,],),{,},Destructor,(,),{,Break,;,{,},},Var,$c39_z_,:,Array,[,Array,[,String,,,0b1011101,],,,328,],=,bQ_o___,::,$c,.,D9_6,.,_q,;,},<EOF>''',101))

    def test_1104(self):
        self.assertTrue(TestLexer.test('''Class n__{Constructor (i_6_:Array [Array [Array [Int ,0X6_B9],7],062_0_73]){}Constructor (A:m;_,K6y,__,_4,_2l0,__6,J0,O5,_:Float ;_,G:Array [Boolean ,0XB]){} }''','''Class,n__,{,Constructor,(,i_6_,:,Array,[,Array,[,Array,[,Int,,,0X6B9,],,,7,],,,062073,],),{,},Constructor,(,A,:,m,;,_,,,K6y,,,__,,,_4,,,_2l0,,,__6,,,J0,,,O5,,,_,:,Float,;,_,,,G,:,Array,[,Boolean,,,0XB,],),{,},},<EOF>''',101))

    def test_1105(self):
        self.assertTrue(TestLexer.test('''Class Q__6_:d{}Class e{}Class _{Val $y_:Boolean ;Constructor (_,K,t1,___7_:Array [String ,0X3D_C_1];Vcx,c,_d,E3,h___,__:Array [Array [Array [Array [Float ,23],8],0b100000],0B1];CO:_P77){Return ;}Val _,_Y_2,_:Array [Array [String ,23],1];Val _:Array [String ,0131];Var _Z5:Array [String ,0b100000];}''','''Class,Q__6_,:,d,{,},Class,e,{,},Class,_,{,Val,$y_,:,Boolean,;,Constructor,(,_,,,K,,,t1,,,___7_,:,Array,[,String,,,0X3DC1,],;,Vcx,,,c,,,_d,,,E3,,,h___,,,__,:,Array,[,Array,[,Array,[,Array,[,Float,,,23,],,,8,],,,0b100000,],,,0B1,],;,CO,:,_P77,),{,Return,;,},Val,_,,,_Y_2,,,_,:,Array,[,Array,[,String,,,23,],,,1,],;,Val,_,:,Array,[,String,,,0131,],;,Var,_Z5,:,Array,[,String,,,0b100000,],;,},<EOF>''',101))

    def test_1106(self):
        self.assertTrue(TestLexer.test('''Class _E:R{Constructor (__,w:Int ;nn5_L59:Array [Array [Array [Array [String ,0X61],5],07],0b1001110]){}Destructor (){} }Class y{Constructor (O,_:Array [Array [String ,0b1_0_1],0x13]){}Val _0_5:Pw=!-"'""<=-_Ad4::$0.__f.__D;}''','''Class,_E,:,R,{,Constructor,(,__,,,w,:,Int,;,nn5_L59,:,Array,[,Array,[,Array,[,Array,[,String,,,0X61,],,,5,],,,07,],,,0b1001110,],),{,},Destructor,(,),{,},},Class,y,{,Constructor,(,O,,,_,:,Array,[,Array,[,String,,,0b101,],,,0x13,],),{,},Val,_0_5,:,Pw,=,!,-,'",<=,-,_Ad4,::,$0,.,__f,.,__D,;,},<EOF>''',101))

    def test_1107(self):
        self.assertTrue(TestLexer.test('''Class __6:a_{Var U:Array [Array [Array [Array [Array [Boolean ,0b10_1],01_5],87],0B1],024];Var $1:Array [Boolean ,012];}Class Gb:K14l2{}Class d6:O{}Class P:_1{}''','''Class,__6,:,a_,{,Var,U,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b101,],,,015,],,,87,],,,0B1,],,,024,],;,Var,$1,:,Array,[,Boolean,,,012,],;,},Class,Gb,:,K14l2,{,},Class,d6,:,O,{,},Class,P,:,_1,{,},<EOF>''',101))

    def test_1108(self):
        self.assertTrue(TestLexer.test('''Class _Y2:U{Val $_,_:Int ;Constructor (__6,_:t;W_:I){} }Class ___e:_{}Class q_9{Var _27_a43:Array [Array [String ,04_0],0X22];}Class H:Dv_{}''','''Class,_Y2,:,U,{,Val,$_,,,_,:,Int,;,Constructor,(,__6,,,_,:,t,;,W_,:,I,),{,},},Class,___e,:,_,{,},Class,q_9,{,Var,_27_a43,:,Array,[,Array,[,String,,,040,],,,0X22,],;,},Class,H,:,Dv_,{,},<EOF>''',101))

    def test_1109(self):
        self.assertTrue(TestLexer.test('''Class _F:dw{Var s,m_:Float ;$_3(_,E:z){ {} }Destructor (){}Destructor (){} }Class N_fGl{Val $f_2,$59_3,_:Array [Array [Array [Array [Array [Int ,0XB_6],4],03_5],0x57],0b101];$1(){}Destructor (){}Val I:Boolean ;}Class _2{_(c67,__9_:Array [Float ,0XC]){} }Class M8{Val $_Bi__3,$s:Array [Array [String ,027],41];Val q_:KM2j_=!_0::$_._9V()._2a._7z_.__;}''','''Class,_F,:,dw,{,Var,s,,,m_,:,Float,;,$_3,(,_,,,E,:,z,),{,{,},},Destructor,(,),{,},Destructor,(,),{,},},Class,N_fGl,{,Val,$f_2,,,$59_3,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0XB6,],,,4,],,,035,],,,0x57,],,,0b101,],;,$1,(,),{,},Destructor,(,),{,},Val,I,:,Boolean,;,},Class,_2,{,_,(,c67,,,__9_,:,Array,[,Float,,,0XC,],),{,},},Class,M8,{,Val,$_Bi__3,,,$s,:,Array,[,Array,[,String,,,027,],,,41,],;,Val,q_,:,KM2j_,=,!,_0,::,$_,.,_9V,(,),.,_2a,.,_7z_,.,__,;,},<EOF>''',101))

    def test_1110(self):
        self.assertTrue(TestLexer.test('''Class _6{}Class u{Var $_:Array [Boolean ,0b1_1];_V(z,_,Mr:p_;n03:Q5_;_1,y_,_w5_:f;D,_P_1:Int ){Break ;Break ;} }''','''Class,_6,{,},Class,u,{,Var,$_,:,Array,[,Boolean,,,0b11,],;,_V,(,z,,,_,,,Mr,:,p_,;,n03,:,Q5_,;,_1,,,y_,,,_w5_,:,f,;,D,,,_P_1,:,Int,),{,Break,;,Break,;,},},<EOF>''',101))

    def test_1111(self):
        self.assertTrue(TestLexer.test('''Class _{$_(_,_:_K_3){}Constructor (aT:Array [Array [Array [Int ,0x18],0272052_45],0x50];_6:Array [Boolean ,05];i_,B_,_,_U:Array [String ,07];_,_o_m_L48_e,J:Int ){} }''','''Class,_,{,$_,(,_,,,_,:,_K_3,),{,},Constructor,(,aT,:,Array,[,Array,[,Array,[,Int,,,0x18,],,,027205245,],,,0x50,],;,_6,:,Array,[,Boolean,,,05,],;,i_,,,B_,,,_,,,_U,:,Array,[,String,,,07,],;,_,,,_o_m_L48_e,,,J,:,Int,),{,},},<EOF>''',101))

    def test_1112(self):
        self.assertTrue(TestLexer.test('''Class _S2:_{Destructor (){} }Class G_6:E{}Class _:c{}Class iA{L_9k_(_p,d:Boolean ;_:_P;i6:n;D:Int ;Q,_j3K_,_:Int ){} }''','''Class,_S2,:,_,{,Destructor,(,),{,},},Class,G_6,:,E,{,},Class,_,:,c,{,},Class,iA,{,L_9k_,(,_p,,,d,:,Boolean,;,_,:,_P,;,i6,:,n,;,D,:,Int,;,Q,,,_j3K_,,,_,:,Int,),{,},},<EOF>''',101))

    def test_1113(self):
        self.assertTrue(TestLexer.test('''Class sC4{Constructor (__3:w;b_:_3_;_:Array [Array [Array [Array [Array [Array [String ,0b11011],016],0b11011],0x55],0b1],0B1];D,G:Array [String ,7];il,X__Z:_m9){} }Class L_{}Class _s_2{}''','''Class,sC4,{,Constructor,(,__3,:,w,;,b_,:,_3_,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b11011,],,,016,],,,0b11011,],,,0x55,],,,0b1,],,,0B1,],;,D,,,G,:,Array,[,String,,,7,],;,il,,,X__Z,:,_m9,),{,},},Class,L_,{,},Class,_s_2,{,},<EOF>''',101))

    def test_1114(self):
        self.assertTrue(TestLexer.test('''Class __:__0{_(n6_M7A:Array [Array [Boolean ,05],65];Wt,fd,_,_:Array [Int ,65];k:String ;_90:Boolean ;E,_:__;_:Boolean ;c,k:__5){}Val $N,n,$__,h99_:Array [Array [Array [Array [Float ,65],0B1],05_444],053];}''','''Class,__,:,__0,{,_,(,n6_M7A,:,Array,[,Array,[,Boolean,,,05,],,,65,],;,Wt,,,fd,,,_,,,_,:,Array,[,Int,,,65,],;,k,:,String,;,_90,:,Boolean,;,E,,,_,:,__,;,_,:,Boolean,;,c,,,k,:,__5,),{,},Val,$N,,,n,,,$__,,,h99_,:,Array,[,Array,[,Array,[,Array,[,Float,,,65,],,,0B1,],,,05444,],,,053,],;,},<EOF>''',101))

    def test_1115(self):
        self.assertTrue(TestLexer.test('''Class z{Constructor (__1_5:bt_;_8,_:Array [Array [Array [Int ,1],0x28],0b1];__,__M:_){Var Qgt:Int ;}Val sk:Int ;Constructor (h,_i_:___3__;Q:Float ){}Var $_H21:String ;}Class _:____95{}Class __:___C{Var Z:_H8P__;}''','''Class,z,{,Constructor,(,__1_5,:,bt_,;,_8,,,_,:,Array,[,Array,[,Array,[,Int,,,1,],,,0x28,],,,0b1,],;,__,,,__M,:,_,),{,Var,Qgt,:,Int,;,},Val,sk,:,Int,;,Constructor,(,h,,,_i_,:,___3__,;,Q,:,Float,),{,},Var,$_H21,:,String,;,},Class,_,:,____95,{,},Class,__,:,___C,{,Var,Z,:,_H8P__,;,},<EOF>''',101))

    def test_1116(self):
        self.assertTrue(TestLexer.test('''Class E{Val y5_6i:Boolean ;}Class vVu_W{}Class _{Constructor (){}Destructor (){} }Class L:t{}Class T798{}Class U_{}''','''Class,E,{,Val,y5_6i,:,Boolean,;,},Class,vVu_W,{,},Class,_,{,Constructor,(,),{,},Destructor,(,),{,},},Class,L,:,t,{,},Class,T798,{,},Class,U_,{,},<EOF>''',101))

    def test_1117(self):
        self.assertTrue(TestLexer.test('''Class b{Destructor (){}Val $6,R,$_,I,_4_,T3,$_q___S,$7,__:mn;}Class h:_{Var $3:Boolean ;Constructor (_W9,M:Array [Int ,03];_,__:Float ;_,oc,H:_;U,_:e27xn1;_,M:Array [Array [Array [Int ,0B1],834],69];__,r,_,_:li){} }''','''Class,b,{,Destructor,(,),{,},Val,$6,,,R,,,$_,,,I,,,_4_,,,T3,,,$_q___S,,,$7,,,__,:,mn,;,},Class,h,:,_,{,Var,$3,:,Boolean,;,Constructor,(,_W9,,,M,:,Array,[,Int,,,03,],;,_,,,__,:,Float,;,_,,,oc,,,H,:,_,;,U,,,_,:,e27xn1,;,_,,,M,:,Array,[,Array,[,Array,[,Int,,,0B1,],,,834,],,,69,],;,__,,,r,,,_,,,_,:,li,),{,},},<EOF>''',101))

    def test_1118(self):
        self.assertTrue(TestLexer.test('''Class _15:q{Destructor (){Return ;Break ;Break ;} }Class A5v__6{_L(cU,_i:s;s_j_:Boolean ){} }Class __d:i33__{Var D:Array [Array [Float ,0B10100],0x8];}Class _:t_{Constructor (){} }''','''Class,_15,:,q,{,Destructor,(,),{,Return,;,Break,;,Break,;,},},Class,A5v__6,{,_L,(,cU,,,_i,:,s,;,s_j_,:,Boolean,),{,},},Class,__d,:,i33__,{,Var,D,:,Array,[,Array,[,Float,,,0B10100,],,,0x8,],;,},Class,_,:,t_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_1119(self):
        self.assertTrue(TestLexer.test('''Class _{}Class D{Constructor (){}Constructor (){} }Class _7__:W{Constructor (sk_9,OR:Array [Array [Array [Float ,0b11010],026_727],0xBA_AD];_,_,Q,ux_:Float ){Return ;Break ;} }''','''Class,_,{,},Class,D,{,Constructor,(,),{,},Constructor,(,),{,},},Class,_7__,:,W,{,Constructor,(,sk_9,,,OR,:,Array,[,Array,[,Array,[,Float,,,0b11010,],,,026727,],,,0xBAAD,],;,_,,,_,,,Q,,,ux_,:,Float,),{,Return,;,Break,;,},},<EOF>''',101))

    def test_1120(self):
        self.assertTrue(TestLexer.test('''Class a33_e_{Var $_f,$_,_,$_,__:Int ;Val $4068_:Array [Boolean ,022];_(_,_J:_;_e,I:Array [Array [Array [Array [Int ,011_5],0X58],0X58],20]){} }''','''Class,a33_e_,{,Var,$_f,,,$_,,,_,,,$_,,,__,:,Int,;,Val,$4068_,:,Array,[,Boolean,,,022,],;,_,(,_,,,_J,:,_,;,_e,,,I,:,Array,[,Array,[,Array,[,Array,[,Int,,,0115,],,,0X58,],,,0X58,],,,20,],),{,},},<EOF>''',101))

    def test_1121(self):
        self.assertTrue(TestLexer.test('''Class _:__{Destructor (){Break ;}$1(){Break ;Var P,_Y9zi,c_:E;} }Class JK{Destructor (){} }Class _C{}Class Z:Hvk{}''','''Class,_,:,__,{,Destructor,(,),{,Break,;,},$1,(,),{,Break,;,Var,P,,,_Y9zi,,,c_,:,E,;,},},Class,JK,{,Destructor,(,),{,},},Class,_C,{,},Class,Z,:,Hvk,{,},<EOF>''',101))

    def test_1122(self):
        self.assertTrue(TestLexer.test('''Class _J:E{Constructor (){}$V_(Z,_:String ;_:Array [Array [Array [Array [Array [Array [Float ,87],076],016],0B110110],87],87]){} }Class _8m5{}Class _{}Class EMdl{}''','''Class,_J,:,E,{,Constructor,(,),{,},$V_,(,Z,,,_,:,String,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,87,],,,076,],,,016,],,,0B110110,],,,87,],,,87,],),{,},},Class,_8m5,{,},Class,_,{,},Class,EMdl,{,},<EOF>''',101))

    def test_1123(self):
        self.assertTrue(TestLexer.test('''Class s_3V8_6T173:__69c{Var __:_q;}Class VH{$0_(){Break ;}Var b0_:Array [Array [Array [Int ,35],35],0X27];}Class _B_lu7{}''','''Class,s_3V8_6T173,:,__69c,{,Var,__,:,_q,;,},Class,VH,{,$0_,(,),{,Break,;,},Var,b0_,:,Array,[,Array,[,Array,[,Int,,,35,],,,35,],,,0X27,],;,},Class,_B_lu7,{,},<EOF>''',101))

    def test_1124(self):
        self.assertTrue(TestLexer.test('''Class _Xu_9L1_8__O8{Constructor (o0,_:_;c,_A:Float ;_,t,_7,L:Array [Array [Array [Array [Array [Array [Array [Array [String ,0X3C],1_3],056],0b1001001],03_1_6_7],04],0X5],072_1];__90,_,_Z:Float ;_3:Array [Array [String ,0X6],0b1001001];__:Int ;c:String ;g:Float ;ae_I1:Array [String ,0B1000110];_,_,_W:String ){} }''','''Class,_Xu_9L1_8__O8,{,Constructor,(,o0,,,_,:,_,;,c,,,_A,:,Float,;,_,,,t,,,_7,,,L,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X3C,],,,13,],,,056,],,,0b1001001,],,,03167,],,,04,],,,0X5,],,,0721,],;,__90,,,_,,,_Z,:,Float,;,_3,:,Array,[,Array,[,String,,,0X6,],,,0b1001001,],;,__,:,Int,;,c,:,String,;,g,:,Float,;,ae_I1,:,Array,[,String,,,0B1000110,],;,_,,,_,,,_W,:,String,),{,},},<EOF>''',101))

    def test_1125(self):
        self.assertTrue(TestLexer.test('''Class _:c{Constructor (_,e:Array [Array [Array [Array [Boolean ,0b1],0b1],0b101000],0b101000];_d:_4_){d_::$__.O2iH.X9();} }Class _5:E{}''','''Class,_,:,c,{,Constructor,(,_,,,e,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,0b1,],,,0b101000,],,,0b101000,],;,_d,:,_4_,),{,d_,::,$__,.,O2iH,.,X9,(,),;,},},Class,_5,:,E,{,},<EOF>''',101))

    def test_1126(self):
        self.assertTrue(TestLexer.test('''Class _{Val $_,$V:c6;Val $Y:_;Var _p4h,$8:Array [Boolean ,06];Y_(_2:Boolean ){Break ;} }Class J8:_{}Class _b__14J:o{}Class ___6{Var $0:String ;Destructor (){Break ;} }''','''Class,_,{,Val,$_,,,$V,:,c6,;,Val,$Y,:,_,;,Var,_p4h,,,$8,:,Array,[,Boolean,,,06,],;,Y_,(,_2,:,Boolean,),{,Break,;,},},Class,J8,:,_,{,},Class,_b__14J,:,o,{,},Class,___6,{,Var,$0,:,String,;,Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_1127(self):
        self.assertTrue(TestLexer.test('''Class j{Constructor (y:String ;_:Array [Array [Array [Boolean ,52_392_1],72],34_4];v_7__,_,uG,PG:Int ;_,G_Kx50,KP,q_9_e1,_4,_,g:Array [Array [Array [Array [Float ,0xD],0102],052_635_6],06];K1_j:Array [Float ,0102];_:Array [Int ,07]){} }Class I:y4{}''','''Class,j,{,Constructor,(,y,:,String,;,_,:,Array,[,Array,[,Array,[,Boolean,,,523921,],,,72,],,,344,],;,v_7__,,,_,,,uG,,,PG,:,Int,;,_,,,G_Kx50,,,KP,,,q_9_e1,,,_4,,,_,,,g,:,Array,[,Array,[,Array,[,Array,[,Float,,,0xD,],,,0102,],,,0526356,],,,06,],;,K1_j,:,Array,[,Float,,,0102,],;,_,:,Array,[,Int,,,07,],),{,},},Class,I,:,y4,{,},<EOF>''',101))

    def test_1128(self):
        self.assertTrue(TestLexer.test('''Class o{}Class E6{__2(z,_2:r;D,A:String ){}V3(_,cx:Int ){}_(_:Array [Array [Array [Array [Array [Boolean ,0b100110],22],0x1],0X3],0130];O_x,_:Array [Array [Array [Array [Boolean ,0130],0B111],0130],22]){} }''','''Class,o,{,},Class,E6,{,__2,(,z,,,_2,:,r,;,D,,,A,:,String,),{,},V3,(,_,,,cx,:,Int,),{,},_,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b100110,],,,22,],,,0x1,],,,0X3,],,,0130,],;,O_x,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0130,],,,0B111,],,,0130,],,,22,],),{,},},<EOF>''',101))

    def test_1129(self):
        self.assertTrue(TestLexer.test('''Class _1:g{Var _28,xT,x,_5,$c__:_Wg;$qEp_(a_0,zY,_:Float ;z__,_,_,_,_sE,_6,_,_,k,J_:Boolean ){ {} }$____(M,_5:String ;_D_:l_u_1;_9,pE:_){}Constructor (){} }''','''Class,_1,:,g,{,Var,_28,,,xT,,,x,,,_5,,,$c__,:,_Wg,;,$qEp_,(,a_0,,,zY,,,_,:,Float,;,z__,,,_,,,_,,,_,,,_sE,,,_6,,,_,,,_,,,k,,,J_,:,Boolean,),{,{,},},$____,(,M,,,_5,:,String,;,_D_,:,l_u_1,;,_9,,,pE,:,_,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_1130(self):
        self.assertTrue(TestLexer.test('''Class Gn{Constructor (_,_b:Array [Array [Boolean ,0b1_1],60];w_152M:Array [Array [Array [Array [Array [Boolean ,0xF_6_E_8B1E],075],60],0X1_A_7],0XD]){}Var __:Boolean ;}''','''Class,Gn,{,Constructor,(,_,,,_b,:,Array,[,Array,[,Boolean,,,0b11,],,,60,],;,w_152M,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xF6E8B1E,],,,075,],,,60,],,,0X1A7,],,,0XD,],),{,},Var,__,:,Boolean,;,},<EOF>''',101))

    def test_1131(self):
        self.assertTrue(TestLexer.test('''Class __{Var $Z:E_;Val $_i,$_e:Eo5;Val $ycn,$9HC,$_y,O,$g:Float ;Var R,_,$3:Array [Array [Array [Array [Boolean ,0B1],0X4E],0XFD],0113];}Class E3:N{}Class _{}''','''Class,__,{,Var,$Z,:,E_,;,Val,$_i,,,$_e,:,Eo5,;,Val,$ycn,,,$9HC,,,$_y,,,O,,,$g,:,Float,;,Var,R,,,_,,,$3,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0X4E,],,,0XFD,],,,0113,],;,},Class,E3,:,N,{,},Class,_,{,},<EOF>''',101))

    def test_1132(self):
        self.assertTrue(TestLexer.test('''Class _2_{}Class e:_{Var _6_c_,X5,k:Array [Array [Float ,0X28],0X28];Destructor (){}Constructor (){}Var $_,$_,I_9,$6:Float ;w_(){} }Class N{}Class T6:z9{}Class b{}''','''Class,_2_,{,},Class,e,:,_,{,Var,_6_c_,,,X5,,,k,:,Array,[,Array,[,Float,,,0X28,],,,0X28,],;,Destructor,(,),{,},Constructor,(,),{,},Var,$_,,,$_,,,I_9,,,$6,:,Float,;,w_,(,),{,},},Class,N,{,},Class,T6,:,z9,{,},Class,b,{,},<EOF>''',101))

    def test_1133(self):
        self.assertTrue(TestLexer.test('''Class k:_{Constructor (X0h:Int ;o45_c,h,_9:String ;__zO,_:Array [Array [String ,0B10],05_6_05_5]){}Constructor (DP:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0b1],0X2B],0B101011],777_3_42],1],0B101011],0B101011],0353]){} }''','''Class,k,:,_,{,Constructor,(,X0h,:,Int,;,o45_c,,,h,,,_9,:,String,;,__zO,,,_,:,Array,[,Array,[,String,,,0B10,],,,056055,],),{,},Constructor,(,DP,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,0X2B,],,,0B101011,],,,777342,],,,1,],,,0B101011,],,,0B101011,],,,0353,],),{,},},<EOF>''',101))

    def test_1134(self):
        self.assertTrue(TestLexer.test('''Class _x_90h{Destructor (){}Var __,$_:Array [Int ,023];}Class c{Val a:Array [Array [Array [Float ,0x5],0X4A],0x7_0];Val $_:_0;}''','''Class,_x_90h,{,Destructor,(,),{,},Var,__,,,$_,:,Array,[,Int,,,023,],;,},Class,c,{,Val,a,:,Array,[,Array,[,Array,[,Float,,,0x5,],,,0X4A,],,,0x70,],;,Val,$_,:,_0,;,},<EOF>''',101))

    def test_1135(self):
        self.assertTrue(TestLexer.test('''Class __12{}Class _:C2{}Class y:_{Constructor (_U:Array [String ,0x2B];M:Array [Array [Array [Array [Int ,0b1100001],0437],0X14],7_5];wA,_:Float ){} }Class _:E___94{Val _,$_:Jik__;}''','''Class,__12,{,},Class,_,:,C2,{,},Class,y,:,_,{,Constructor,(,_U,:,Array,[,String,,,0x2B,],;,M,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1100001,],,,0437,],,,0X14,],,,75,],;,wA,,,_,:,Float,),{,},},Class,_,:,E___94,{,Val,_,,,$_,:,Jik__,;,},<EOF>''',101))

    def test_1136(self):
        self.assertTrue(TestLexer.test('''Class f:_A1j{}Class ___{}Class r_:w_7___4___{Val _L537,$54_:Float ;}Class wxwN:v{}Class _Q_:m5{Constructor (){} }Class K47:l{$e(H,S,s:u;t,_e_,_:Boolean ){}Destructor (){} }Class _{}Class vU_:c4{Val _4:Array [String ,0B1];Constructor (){}Constructor (Q,_,__:Array [Array [Array [String ,4],61_0],043]){}Constructor (f,f_,_D7b,OV_hw9:Float ){Break ;} }''','''Class,f,:,_A1j,{,},Class,___,{,},Class,r_,:,w_7___4___,{,Val,_L537,,,$54_,:,Float,;,},Class,wxwN,:,v,{,},Class,_Q_,:,m5,{,Constructor,(,),{,},},Class,K47,:,l,{,$e,(,H,,,S,,,s,:,u,;,t,,,_e_,,,_,:,Boolean,),{,},Destructor,(,),{,},},Class,_,{,},Class,vU_,:,c4,{,Val,_4,:,Array,[,String,,,0B1,],;,Constructor,(,),{,},Constructor,(,Q,,,_,,,__,:,Array,[,Array,[,Array,[,String,,,4,],,,610,],,,043,],),{,},Constructor,(,f,,,f_,,,_D7b,,,OV_hw9,:,Float,),{,Break,;,},},<EOF>''',101))

    def test_1137(self):
        self.assertTrue(TestLexer.test('''Class _:i_{Constructor (j5rl,_,m6,_,h_P_G,I_,_,__:Array [Array [Array [Float ,33],20],33];m:Array [Array [Array [Boolean ,01],0b1],0117];_,iwS_,u:Boolean ){} }Class _:y{}''','''Class,_,:,i_,{,Constructor,(,j5rl,,,_,,,m6,,,_,,,h_P_G,,,I_,,,_,,,__,:,Array,[,Array,[,Array,[,Float,,,33,],,,20,],,,33,],;,m,:,Array,[,Array,[,Array,[,Boolean,,,01,],,,0b1,],,,0117,],;,_,,,iwS_,,,u,:,Boolean,),{,},},Class,_,:,y,{,},<EOF>''',101))

    def test_1138(self):
        self.assertTrue(TestLexer.test('''Class V:P{}Class _:_M{Var $29,_g6:Array [Int ,0B1];Var p53_:Array [Array [Float ,01],8];}Class _2:_{Var $_,__:Boolean ;Var Aj9,_4,$b2:Boolean ;}Class _{Constructor (_K_:Boolean ){} }''','''Class,V,:,P,{,},Class,_,:,_M,{,Var,$29,,,_g6,:,Array,[,Int,,,0B1,],;,Var,p53_,:,Array,[,Array,[,Float,,,01,],,,8,],;,},Class,_2,:,_,{,Var,$_,,,__,:,Boolean,;,Var,Aj9,,,_4,,,$b2,:,Boolean,;,},Class,_,{,Constructor,(,_K_,:,Boolean,),{,},},<EOF>''',101))

    def test_1139(self):
        self.assertTrue(TestLexer.test('''Class n{Destructor (){}Var y,$_W_:Array [Boolean ,8_914];Destructor (){}Val R,$_j:Array [Array [Float ,0B1_0],024_6_3];}''','''Class,n,{,Destructor,(,),{,},Var,y,,,$_W_,:,Array,[,Boolean,,,8914,],;,Destructor,(,),{,},Val,R,,,$_j,:,Array,[,Array,[,Float,,,0B10,],,,02463,],;,},<EOF>''',101))

    def test_1140(self):
        self.assertTrue(TestLexer.test('''Class O:i__{}Class _6M{Var _y,$U,q:Array [Boolean ,6];Destructor (){Break ;}Constructor (____:Array [Array [Boolean ,2],80]){} }Class x_0:s_L{}''','''Class,O,:,i__,{,},Class,_6M,{,Var,_y,,,$U,,,q,:,Array,[,Boolean,,,6,],;,Destructor,(,),{,Break,;,},Constructor,(,____,:,Array,[,Array,[,Boolean,,,2,],,,80,],),{,},},Class,x_0,:,s_L,{,},<EOF>''',101))

    def test_1141(self):
        self.assertTrue(TestLexer.test('''Class _5ay0{_(_,___:Array [Int ,34];A_,_0101_,o,vD,_D1:Array [Array [Float ,0XD_B9],0x4]){}Var d_:Array [Array [Array [String ,017],0xD4],0X9_B_C];Destructor (){} }''','''Class,_5ay0,{,_,(,_,,,___,:,Array,[,Int,,,34,],;,A_,,,_0101_,,,o,,,vD,,,_D1,:,Array,[,Array,[,Float,,,0XDB9,],,,0x4,],),{,},Var,d_,:,Array,[,Array,[,Array,[,String,,,017,],,,0xD4,],,,0X9BC,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_1142(self):
        self.assertTrue(TestLexer.test('''Class _:u{Destructor (){}_C(_7,_,pd_N8_:Array [Int ,0X8];f_:Int ;O,E:Array [Array [Array [Float ,05],042],4_6]){}Var $9_,$s,dA_,LT:Array [Float ,0x53];}Class t_:r{$WI(f:I6d_;E_s96,m,X,_,h,_:String ){} }Class T_{Destructor (){} }''','''Class,_,:,u,{,Destructor,(,),{,},_C,(,_7,,,_,,,pd_N8_,:,Array,[,Int,,,0X8,],;,f_,:,Int,;,O,,,E,:,Array,[,Array,[,Array,[,Float,,,05,],,,042,],,,46,],),{,},Var,$9_,,,$s,,,dA_,,,LT,:,Array,[,Float,,,0x53,],;,},Class,t_,:,r,{,$WI,(,f,:,I6d_,;,E_s96,,,m,,,X,,,_,,,h,,,_,:,String,),{,},},Class,T_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1143(self):
        self.assertTrue(TestLexer.test('''Class j21{}Class ____:i{Var _b,$_6S:ME_R_Ee__;Var _,$7F:Array [Array [Array [String ,0705_3],72],0x27];}Class __{Val $_:Array [Boolean ,63];}''','''Class,j21,{,},Class,____,:,i,{,Var,_b,,,$_6S,:,ME_R_Ee__,;,Var,_,,,$7F,:,Array,[,Array,[,Array,[,String,,,07053,],,,72,],,,0x27,],;,},Class,__,{,Val,$_,:,Array,[,Boolean,,,63,],;,},<EOF>''',101))

    def test_1144(self):
        self.assertTrue(TestLexer.test('''Class _{}Class k{Constructor (_,__z,C,_N_:Boolean ){Val _:Array [Array [Array [String ,89],0B101000],0B1];}Constructor (w,Z_,_,_xx,D__L,_w_g9079,_F1:Array [Float ,070];r:Pp;x_:Array [Boolean ,070];_,_,__C:Array [Boolean ,0x8F];q:nx){Return ;}Val _:_;_n74(){} }''','''Class,_,{,},Class,k,{,Constructor,(,_,,,__z,,,C,,,_N_,:,Boolean,),{,Val,_,:,Array,[,Array,[,Array,[,String,,,89,],,,0B101000,],,,0B1,],;,},Constructor,(,w,,,Z_,,,_,,,_xx,,,D__L,,,_w_g9079,,,_F1,:,Array,[,Float,,,070,],;,r,:,Pp,;,x_,:,Array,[,Boolean,,,070,],;,_,,,_,,,__C,:,Array,[,Boolean,,,0x8F,],;,q,:,nx,),{,Return,;,},Val,_,:,_,;,_n74,(,),{,},},<EOF>''',101))

    def test_1145(self):
        self.assertTrue(TestLexer.test('''Class _:_71_{Constructor (_,_,_so9:_){Continue ;} }Class _:_o{j(_2:cm;o:__;_,_:_Y;_:Array [Boolean ,0X6_D_C_F]){ {} }}''','''Class,_,:,_71_,{,Constructor,(,_,,,_,,,_so9,:,_,),{,Continue,;,},},Class,_,:,_o,{,j,(,_2,:,cm,;,o,:,__,;,_,,,_,:,_Y,;,_,:,Array,[,Boolean,,,0X6DCF,],),{,{,},},},<EOF>''',101))

    def test_1146(self):
        self.assertTrue(TestLexer.test('''Class x:l{Constructor (){} }Class K{}Class _re:v{Var _:String ;Destructor (){}Var g,$A,___,_,_:Array [Boolean ,0X3];}''','''Class,x,:,l,{,Constructor,(,),{,},},Class,K,{,},Class,_re,:,v,{,Var,_,:,String,;,Destructor,(,),{,},Var,g,,,$A,,,___,,,_,,,_,:,Array,[,Boolean,,,0X3,],;,},<EOF>''',101))

    def test_1147(self):
        self.assertTrue(TestLexer.test('''Class zW:tCf2{}Class _d___0:_0{$__44_9D(M_21,d:Array [Array [Float ,39],0122];_a,_5:O;V,_:Int ;I6K:_){}Val $3:Float ;_(){} }''','''Class,zW,:,tCf2,{,},Class,_d___0,:,_0,{,$__44_9D,(,M_21,,,d,:,Array,[,Array,[,Float,,,39,],,,0122,],;,_a,,,_5,:,O,;,V,,,_,:,Int,;,I6K,:,_,),{,},Val,$3,:,Float,;,_,(,),{,},},<EOF>''',101))

    def test_1148(self):
        self.assertTrue(TestLexer.test('''Class _:__{}Class _H:_4_8{Destructor (){}Constructor (_8h,b,Rx,__:Array [String ,0b1];U,_v3,_,_,_,__H1:_;v,e:String ;j:M;u815:Array [Boolean ,37]){}$_(){ {}Return ;}Destructor (){} }''','''Class,_,:,__,{,},Class,_H,:,_4_8,{,Destructor,(,),{,},Constructor,(,_8h,,,b,,,Rx,,,__,:,Array,[,String,,,0b1,],;,U,,,_v3,,,_,,,_,,,_,,,__H1,:,_,;,v,,,e,:,String,;,j,:,M,;,u815,:,Array,[,Boolean,,,37,],),{,},$_,(,),{,{,},Return,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_1149(self):
        self.assertTrue(TestLexer.test('''Class e{Constructor (R:String ;_,J,_8:Boolean ;_:G89E_;e,_5_,__:___;tD,__,H,D,u__,Di9:String ){} }Class Vc:_{}''','''Class,e,{,Constructor,(,R,:,String,;,_,,,J,,,_8,:,Boolean,;,_,:,G89E_,;,e,,,_5_,,,__,:,___,;,tD,,,__,,,H,,,D,,,u__,,,Di9,:,String,),{,},},Class,Vc,:,_,{,},<EOF>''',101))

    def test_1150(self):
        self.assertTrue(TestLexer.test('''Class _:J{Var $_z:String ;Val $6:Array [Array [Array [Float ,0X6_D],73],0B1];Constructor (___,_:Boolean ){Return ;} }''','''Class,_,:,J,{,Var,$_z,:,String,;,Val,$6,:,Array,[,Array,[,Array,[,Float,,,0X6D,],,,73,],,,0B1,],;,Constructor,(,___,,,_,:,Boolean,),{,Return,;,},},<EOF>''',101))

    def test_1151(self):
        self.assertTrue(TestLexer.test('''Class _{Val $p:Array [Float ,44];Val $5,$Q,v:Boolean ;}Class F{}Class __{$q(IF_,l:Array [Boolean ,0B1];_e8:Int ;U:G;_:Array [Boolean ,94]){}S(uw:_){Continue ;}Var $_:Array [Array [Float ,0xA],1];}Class _X:_{}''','''Class,_,{,Val,$p,:,Array,[,Float,,,44,],;,Val,$5,,,$Q,,,v,:,Boolean,;,},Class,F,{,},Class,__,{,$q,(,IF_,,,l,:,Array,[,Boolean,,,0B1,],;,_e8,:,Int,;,U,:,G,;,_,:,Array,[,Boolean,,,94,],),{,},S,(,uw,:,_,),{,Continue,;,},Var,$_,:,Array,[,Array,[,Float,,,0xA,],,,1,],;,},Class,_X,:,_,{,},<EOF>''',101))

    def test_1152(self):
        self.assertTrue(TestLexer.test('''Class J:_{Val $S_0,$6B__6x:_3;}Class _:p{Val _,$5,o,i7:__3_;Destructor (){} }Class Y:_{}Class _ZW{Var $a:Float ;}''','''Class,J,:,_,{,Val,$S_0,,,$6B__6x,:,_3,;,},Class,_,:,p,{,Val,_,,,$5,,,o,,,i7,:,__3_,;,Destructor,(,),{,},},Class,Y,:,_,{,},Class,_ZW,{,Var,$a,:,Float,;,},<EOF>''',101))

    def test_1153(self):
        self.assertTrue(TestLexer.test('''Class g__:x{$J(_,_,__dNE:Array [Array [Array [Int ,03],8],0116];_:Int ){Break ;} }Class _0w{Var $_,xd_,vA2,$3__7:String ;Val _:v;Val _6,$3:Array [Array [Array [Array [Int ,0X76_95_5],2],5],05];}''','''Class,g__,:,x,{,$J,(,_,,,_,,,__dNE,:,Array,[,Array,[,Array,[,Int,,,03,],,,8,],,,0116,],;,_,:,Int,),{,Break,;,},},Class,_0w,{,Var,$_,,,xd_,,,vA2,,,$3__7,:,String,;,Val,_,:,v,;,Val,_6,,,$3,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X76955,],,,2,],,,5,],,,05,],;,},<EOF>''',101))

    def test_1154(self):
        self.assertTrue(TestLexer.test('''Class _4Wb4:t{Constructor (){} }Class M_2_{Destructor (){Break ;Continue ;} }Class s:fF_Y{__(){}Var $C:Array [Array [Array [Boolean ,041],0B11],05];Destructor (){} }''','''Class,_4Wb4,:,t,{,Constructor,(,),{,},},Class,M_2_,{,Destructor,(,),{,Break,;,Continue,;,},},Class,s,:,fF_Y,{,__,(,),{,},Var,$C,:,Array,[,Array,[,Array,[,Boolean,,,041,],,,0B11,],,,05,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_1155(self):
        self.assertTrue(TestLexer.test('''Class P_:__v{Var $_,o__:_;q(_Z1,F6,_,s___,H:p){}Val $4_:Boolean ;}Class h{Constructor (n,_01Ew:Array [Int ,016];__3_:Array [Array [Float ,0x3D],3];_,m:Int ;t:Array [String ,0xE];_PW_:Int ){}Constructor (Z,__:k;oq:Boolean ;rL:Int ;L____0,F:_FuF){} }''','''Class,P_,:,__v,{,Var,$_,,,o__,:,_,;,q,(,_Z1,,,F6,,,_,,,s___,,,H,:,p,),{,},Val,$4_,:,Boolean,;,},Class,h,{,Constructor,(,n,,,_01Ew,:,Array,[,Int,,,016,],;,__3_,:,Array,[,Array,[,Float,,,0x3D,],,,3,],;,_,,,m,:,Int,;,t,:,Array,[,String,,,0xE,],;,_PW_,:,Int,),{,},Constructor,(,Z,,,__,:,k,;,oq,:,Boolean,;,rL,:,Int,;,L____0,,,F,:,_FuF,),{,},},<EOF>''',101))

    def test_1156(self):
        self.assertTrue(TestLexer.test('''Class _:c_i{Destructor (){}Constructor (_,D_0:Array [Array [Array [Array [Array [Int ,030],0B11001],030],0B11001],0xD];A_:String ){}$V(){} }''','''Class,_,:,c_i,{,Destructor,(,),{,},Constructor,(,_,,,D_0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,030,],,,0B11001,],,,030,],,,0B11001,],,,0xD,],;,A_,:,String,),{,},$V,(,),{,},},<EOF>''',101))

    def test_1157(self):
        self.assertTrue(TestLexer.test('''Class _S:q{Val eR95,Fb,_,$s_,$1:Array [Array [Array [String ,04_3],0b1001111],02];Constructor (l__9:String ){Return ;}__(){}Val _,$_y,$FN,_3,$p:_;}''','''Class,_S,:,q,{,Val,eR95,,,Fb,,,_,,,$s_,,,$1,:,Array,[,Array,[,Array,[,String,,,043,],,,0b1001111,],,,02,],;,Constructor,(,l__9,:,String,),{,Return,;,},__,(,),{,},Val,_,,,$_y,,,$FN,,,_3,,,$p,:,_,;,},<EOF>''',101))

    def test_1158(self):
        self.assertTrue(TestLexer.test('''Class n:N{$9_9_0_(){Break ;} }Class n{Constructor (s:Boolean ;X,__,v_:a;E4:Array [Array [Boolean ,94],0x5F];L:Boolean ){Continue ;} }Class _UF_j{Val _0,$o_,_:Ht79;Var X9,N,_,H:Array [Array [Array [Boolean ,6],0B110010],06_5];$t7(){}Destructor (){} }''','''Class,n,:,N,{,$9_9_0_,(,),{,Break,;,},},Class,n,{,Constructor,(,s,:,Boolean,;,X,,,__,,,v_,:,a,;,E4,:,Array,[,Array,[,Boolean,,,94,],,,0x5F,],;,L,:,Boolean,),{,Continue,;,},},Class,_UF_j,{,Val,_0,,,$o_,,,_,:,Ht79,;,Var,X9,,,N,,,_,,,H,:,Array,[,Array,[,Array,[,Boolean,,,6,],,,0B110010,],,,065,],;,$t7,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_1159(self):
        self.assertTrue(TestLexer.test('''Class w:zZ__{}Class X2_2e:_EE__{Val ku,_,_5,_YC,_,$4K0,$_9,m1Wi3:Float ;Val $_,$w,$R,$_0:Array [String ,040];}''','''Class,w,:,zZ__,{,},Class,X2_2e,:,_EE__,{,Val,ku,,,_,,,_5,,,_YC,,,_,,,$4K0,,,$_9,,,m1Wi3,:,Float,;,Val,$_,,,$w,,,$R,,,$_0,:,Array,[,String,,,040,],;,},<EOF>''',101))

    def test_1160(self):
        self.assertTrue(TestLexer.test('''Class _jm:_{Val $2:_;Val $7:Array [String ,0b10];Constructor (jR:Array [Array [String ,01_2_72],0b10];u:Float ){} }''','''Class,_jm,:,_,{,Val,$2,:,_,;,Val,$7,:,Array,[,String,,,0b10,],;,Constructor,(,jR,:,Array,[,Array,[,String,,,01272,],,,0b10,],;,u,:,Float,),{,},},<EOF>''',101))

    def test_1161(self):
        self.assertTrue(TestLexer.test('''Class _:p{__3(NM:l2;_12_:Int ){} }Class Z{Val $N,_94nP0P:_6__7;_(q__:J;C:Array [Array [Boolean ,063],67];oj6,__:Int ;_10,_,Y_3Z,_:_){} }Class E{}''','''Class,_,:,p,{,__3,(,NM,:,l2,;,_12_,:,Int,),{,},},Class,Z,{,Val,$N,,,_94nP0P,:,_6__7,;,_,(,q__,:,J,;,C,:,Array,[,Array,[,Boolean,,,063,],,,67,],;,oj6,,,__,:,Int,;,_10,,,_,,,Y_3Z,,,_,:,_,),{,},},Class,E,{,},<EOF>''',101))

    def test_1162(self):
        self.assertTrue(TestLexer.test('''Class NR:D48{Destructor (){_::$5._();Var ___,_,__,_R5_:Array [Array [Array [Boolean ,0b1],0B1_0_11],0B1100000];}Val T,$_:String ;}Class _:_{Destructor (){}Val $4,$13,$p:Array [Array [Array [Array [Float ,0B11],0B1100000],0X6],6_7];}Class _4:X_{}Class K:_{Constructor (){}Constructor (){}Val _:String ;}''','''Class,NR,:,D48,{,Destructor,(,),{,_,::,$5,.,_,(,),;,Var,___,,,_,,,__,,,_R5_,:,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,0B1011,],,,0B1100000,],;,},Val,T,,,$_,:,String,;,},Class,_,:,_,{,Destructor,(,),{,},Val,$4,,,$13,,,$p,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B11,],,,0B1100000,],,,0X6,],,,67,],;,},Class,_4,:,X_,{,},Class,K,:,_,{,Constructor,(,),{,},Constructor,(,),{,},Val,_,:,String,;,},<EOF>''',101))

    def test_1163(self):
        self.assertTrue(TestLexer.test('''Class _:__{_ez7__1(_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,2],015],077],0b1111],2],0X63],0XC],2],2],077];_,_:eM_i;Q,_,B:_5__;__,n_:_;M9:_;_5T_O,t7099_B5:Int ){} }''','''Class,_,:,__,{,_ez7__1,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,2,],,,015,],,,077,],,,0b1111,],,,2,],,,0X63,],,,0XC,],,,2,],,,2,],,,077,],;,_,,,_,:,eM_i,;,Q,,,_,,,B,:,_5__,;,__,,,n_,:,_,;,M9,:,_,;,_5T_O,,,t7099_B5,:,Int,),{,},},<EOF>''',101))

    def test_1164(self):
        self.assertTrue(TestLexer.test('''Class q{Constructor (k7,K4_,y:Array [Array [Array [Int ,8_1],0X2A],016];v:Array [Boolean ,0x5F];V_,_,_,f:Boolean ;F_:Array [Float ,06_05]){} }''','''Class,q,{,Constructor,(,k7,,,K4_,,,y,:,Array,[,Array,[,Array,[,Int,,,81,],,,0X2A,],,,016,],;,v,:,Array,[,Boolean,,,0x5F,],;,V_,,,_,,,_,,,f,:,Boolean,;,F_,:,Array,[,Float,,,0605,],),{,},},<EOF>''',101))

    def test_1165(self):
        self.assertTrue(TestLexer.test('''Class E{Constructor (){}Destructor (){}Val n:Array [Array [Int ,0b1],010];_5(c:Array [Array [Array [Int ,061],0B100100],84];_7:Array [String ,010];_15,__59p73:Array [Float ,02];A_1:H){} }''','''Class,E,{,Constructor,(,),{,},Destructor,(,),{,},Val,n,:,Array,[,Array,[,Int,,,0b1,],,,010,],;,_5,(,c,:,Array,[,Array,[,Array,[,Int,,,061,],,,0B100100,],,,84,],;,_7,:,Array,[,String,,,010,],;,_15,,,__59p73,:,Array,[,Float,,,02,],;,A_1,:,H,),{,},},<EOF>''',101))

    def test_1166(self):
        self.assertTrue(TestLexer.test('''Class Nq5{Destructor (){} }Class M{}Class I{Constructor (_,S1:Array [Float ,0B10001];_1a_1,_,G5J:Float ){} }Class __y1{}Class _2:__{}''','''Class,Nq5,{,Destructor,(,),{,},},Class,M,{,},Class,I,{,Constructor,(,_,,,S1,:,Array,[,Float,,,0B10001,],;,_1a_1,,,_,,,G5J,:,Float,),{,},},Class,__y1,{,},Class,_2,:,__,{,},<EOF>''',101))

    def test_1167(self):
        self.assertTrue(TestLexer.test('''Class _S{Constructor (_:Array [Array [Array [Array [Float ,0b1011001],0134],1_55],040_3]){}Constructor (e,I:Array [String ,64];_B__,W_,_,_:Int ;o:Array [Int ,0134];_:K_r;z,_1_:_B;_J33,nk:Array [Array [Array [Array [Int ,64],0b1_1],05_3],64];j,_:Array [Array [Array [Array [Array [Boolean ,0xA],05],8091],07],5];_1_4l0,_,_j:P){} }''','''Class,_S,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1011001,],,,0134,],,,155,],,,0403,],),{,},Constructor,(,e,,,I,:,Array,[,String,,,64,],;,_B__,,,W_,,,_,,,_,:,Int,;,o,:,Array,[,Int,,,0134,],;,_,:,K_r,;,z,,,_1_,:,_B,;,_J33,,,nk,:,Array,[,Array,[,Array,[,Array,[,Int,,,64,],,,0b11,],,,053,],,,64,],;,j,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xA,],,,05,],,,8091,],,,07,],,,5,],;,_1_4l0,,,_,,,_j,:,P,),{,},},<EOF>''',101))

    def test_1168(self):
        self.assertTrue(TestLexer.test('''Class _:_7_{$_(){}Constructor (_6m___:_;_:Array [Int ,9];__odt_,_:Int ){} }Class _9:_a1{Destructor (){} }Class _1:y{Constructor (){} }''','''Class,_,:,_7_,{,$_,(,),{,},Constructor,(,_6m___,:,_,;,_,:,Array,[,Int,,,9,],;,__odt_,,,_,:,Int,),{,},},Class,_9,:,_a1,{,Destructor,(,),{,},},Class,_1,:,y,{,Constructor,(,),{,},},<EOF>''',101))

    def test_1169(self):
        self.assertTrue(TestLexer.test('''Class b{Constructor (S,F_,__,D4VU,_9_:Float ;h,__,A2vOU__1,q6,P9,In :Int ;xX1,cl:Int ;_,U_1M3:__;x__GO,_5gV,T:Array [Boolean ,8];_5qf:_){} }''','''Class,b,{,Constructor,(,S,,,F_,,,__,,,D4VU,,,_9_,:,Float,;,h,,,__,,,A2vOU__1,,,q6,,,P9,,,In,:,Int,;,xX1,,,cl,:,Int,;,_,,,U_1M3,:,__,;,x__GO,,,_5gV,,,T,:,Array,[,Boolean,,,8,],;,_5qf,:,_,),{,},},<EOF>''',101))

    def test_1170(self):
        self.assertTrue(TestLexer.test('''Class b:_{}Class t_{}Class _5:__D{F(T:Int ;_,M__2607:Array [Array [Array [Array [Int ,0B1_1],7_15],52],0x2A];pj_:Float ;_m:Int ;_5_w:Array [Array [Array [Array [Array [Array [Float ,0X5],0X38],0B101],0b1010100],015],57]){} }''','''Class,b,:,_,{,},Class,t_,{,},Class,_5,:,__D,{,F,(,T,:,Int,;,_,,,M__2607,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B11,],,,715,],,,52,],,,0x2A,],;,pj_,:,Float,;,_m,:,Int,;,_5_w,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X5,],,,0X38,],,,0B101,],,,0b1010100,],,,015,],,,57,],),{,},},<EOF>''',101))

    def test_1171(self):
        self.assertTrue(TestLexer.test('''Class _ot_:h{}Class qv{Constructor (_:A9){Var x1,B7m:L;}R(K7L0:Float ;_K,q_00:Float ){}Var wUm2Y1:__;Constructor (Q,XV,VM,_h_:_;_,C18___l:Array [Float ,040]){Continue ;} }Class q:j{}''','''Class,_ot_,:,h,{,},Class,qv,{,Constructor,(,_,:,A9,),{,Var,x1,,,B7m,:,L,;,},R,(,K7L0,:,Float,;,_K,,,q_00,:,Float,),{,},Var,wUm2Y1,:,__,;,Constructor,(,Q,,,XV,,,VM,,,_h_,:,_,;,_,,,C18___l,:,Array,[,Float,,,040,],),{,Continue,;,},},Class,q,:,j,{,},<EOF>''',101))

    def test_1172(self):
        self.assertTrue(TestLexer.test('''Class g479_{}Class _:l4V_{Val $9:Array [Boolean ,86];Constructor (){Break ;}Constructor (Wi_:__;__:Array [Array [String ,0140],0X877];_,__:Int ;n,H__,_C_,_1,__:Array [Array [Int ,0B1],0140]){}Constructor (d7:_;_q:Float ){} }''','''Class,g479_,{,},Class,_,:,l4V_,{,Val,$9,:,Array,[,Boolean,,,86,],;,Constructor,(,),{,Break,;,},Constructor,(,Wi_,:,__,;,__,:,Array,[,Array,[,String,,,0140,],,,0X877,],;,_,,,__,:,Int,;,n,,,H__,,,_C_,,,_1,,,__,:,Array,[,Array,[,Int,,,0B1,],,,0140,],),{,},Constructor,(,d7,:,_,;,_q,:,Float,),{,},},<EOF>''',101))

    def test_1173(self):
        self.assertTrue(TestLexer.test('''Class _:ZZ{Constructor (l:Array [Array [Array [Int ,53],0xC],0X99];z_,_,zQN:Float ;_:Boolean ;_1:B;K,U_:Array [String ,0B1_1];O:__){Continue ;}Destructor (){} }Class d:R2{}''','''Class,_,:,ZZ,{,Constructor,(,l,:,Array,[,Array,[,Array,[,Int,,,53,],,,0xC,],,,0X99,],;,z_,,,_,,,zQN,:,Float,;,_,:,Boolean,;,_1,:,B,;,K,,,U_,:,Array,[,String,,,0B11,],;,O,:,__,),{,Continue,;,},Destructor,(,),{,},},Class,d,:,R2,{,},<EOF>''',101))

    def test_1174(self):
        self.assertTrue(TestLexer.test('''Class H5{Constructor (){} }Class _:qsK{Var $C:Array [Array [Boolean ,3],0B1];Destructor (){ {} }_(_1,_,A,zy,o__,_K,_:_){} }Class _{}''','''Class,H5,{,Constructor,(,),{,},},Class,_,:,qsK,{,Var,$C,:,Array,[,Array,[,Boolean,,,3,],,,0B1,],;,Destructor,(,),{,{,},},_,(,_1,,,_,,,A,,,zy,,,o__,,,_K,,,_,:,_,),{,},},Class,_,{,},<EOF>''',101))

    def test_1175(self):
        self.assertTrue(TestLexer.test('''Class _u{Destructor (){} }Class _h25{w_(_4,r5E_9__4,_2o,_9__jb,D7,__:Int ;_:Boolean ;__:_){}Constructor (){} }Class QSN_:__9{}''','''Class,_u,{,Destructor,(,),{,},},Class,_h25,{,w_,(,_4,,,r5E_9__4,,,_2o,,,_9__jb,,,D7,,,__,:,Int,;,_,:,Boolean,;,__,:,_,),{,},Constructor,(,),{,},},Class,QSN_,:,__9,{,},<EOF>''',101))

    def test_1176(self):
        self.assertTrue(TestLexer.test('''Class __{Var _3__h:_;wv(_2_,Sb,j521n8U:Array [Array [Array [Array [String ,0X23],0115],0X23],0x2F];_:m4Y){}Val $1U,$_9,$9:A;}Class _{}Class y:__{}''','''Class,__,{,Var,_3__h,:,_,;,wv,(,_2_,,,Sb,,,j521n8U,:,Array,[,Array,[,Array,[,Array,[,String,,,0X23,],,,0115,],,,0X23,],,,0x2F,],;,_,:,m4Y,),{,},Val,$1U,,,$_9,,,$9,:,A,;,},Class,_,{,},Class,y,:,__,{,},<EOF>''',101))

    def test_1177(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{}Class F{Constructor (){} }Class _0:_{Constructor (b:_y6U;_:Array [Array [Float ,0x23],011]){p_::$g();} }''','''Class,_,{,},Class,_,{,},Class,F,{,Constructor,(,),{,},},Class,_0,:,_,{,Constructor,(,b,:,_y6U,;,_,:,Array,[,Array,[,Float,,,0x23,],,,011,],),{,p_,::,$g,(,),;,},},<EOF>''',101))

    def test_1178(self):
        self.assertTrue(TestLexer.test('''Class S3_{Val $4_,A6_:Array [Boolean ,0132];}Class _98U_H7_6{Var $4Er,$__I_,_,i85O,$R8_97,_,N:Array [Int ,0B11];}Class O_:rD{u(){} }Class g_C6{}''','''Class,S3_,{,Val,$4_,,,A6_,:,Array,[,Boolean,,,0132,],;,},Class,_98U_H7_6,{,Var,$4Er,,,$__I_,,,_,,,i85O,,,$R8_97,,,_,,,N,:,Array,[,Int,,,0B11,],;,},Class,O_,:,rD,{,u,(,),{,},},Class,g_C6,{,},<EOF>''',101))

    def test_1179(self):
        self.assertTrue(TestLexer.test('''Class _{_(c3,_:Boolean ;J:_n__2;_B,cD4M:_;_,b8,s,Yz:_){ {} }Constructor (_l,_,_,__TF8,w,v:Array [String ,06]){} }Class v_{Val w,_:Array [Array [Int ,05],0X55];}Class J__:_{}Class _:_{Constructor (){} }''','''Class,_,{,_,(,c3,,,_,:,Boolean,;,J,:,_n__2,;,_B,,,cD4M,:,_,;,_,,,b8,,,s,,,Yz,:,_,),{,{,},},Constructor,(,_l,,,_,,,_,,,__TF8,,,w,,,v,:,Array,[,String,,,06,],),{,},},Class,v_,{,Val,w,,,_,:,Array,[,Array,[,Int,,,05,],,,0X55,],;,},Class,J__,:,_,{,},Class,_,:,_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_1180(self):
        self.assertTrue(TestLexer.test('''Class Zsl:_{Destructor (){}Var $S:Array [Array [Int ,0XB],5_9];}Class U{$_(_:Array [String ,0x3];_,__,__6:Int ;s,_,__,_6njY_e7_,__:_E;e_ee6r:Int ){} }''','''Class,Zsl,:,_,{,Destructor,(,),{,},Var,$S,:,Array,[,Array,[,Int,,,0XB,],,,59,],;,},Class,U,{,$_,(,_,:,Array,[,String,,,0x3,],;,_,,,__,,,__6,:,Int,;,s,,,_,,,__,,,_6njY_e7_,,,__,:,_E,;,e_ee6r,:,Int,),{,},},<EOF>''',101))

    def test_1181(self):
        self.assertTrue(TestLexer.test('''Class C{Val $_g:Array [Boolean ,0x50];Constructor (_,_w,l__,N:Int ;dU2,V_:k_uJ9;e,k8_5pqu:Boolean ){}$2g(){} }Class _2:_{w(){} }Class _vfT_D:Y__M{}''','''Class,C,{,Val,$_g,:,Array,[,Boolean,,,0x50,],;,Constructor,(,_,,,_w,,,l__,,,N,:,Int,;,dU2,,,V_,:,k_uJ9,;,e,,,k8_5pqu,:,Boolean,),{,},$2g,(,),{,},},Class,_2,:,_,{,w,(,),{,},},Class,_vfT_D,:,Y__M,{,},<EOF>''',101))

    def test_1182(self):
        self.assertTrue(TestLexer.test('''Class a_{}Class S8J08_{}Class L7{Var $47:Array [Array [Float ,0b11],05];}Class _:_L{Val $_k:Array [Int ,0B1100011];Val $r_5F,$C_O:E2_5;Val _2:Array [String ,0x7];Var A6_I,_,_,_883:Array [Int ,0B1];$_3_(_:String ;yY,_:Boolean ){} }''','''Class,a_,{,},Class,S8J08_,{,},Class,L7,{,Var,$47,:,Array,[,Array,[,Float,,,0b11,],,,05,],;,},Class,_,:,_L,{,Val,$_k,:,Array,[,Int,,,0B1100011,],;,Val,$r_5F,,,$C_O,:,E2_5,;,Val,_2,:,Array,[,String,,,0x7,],;,Var,A6_I,,,_,,,_,,,_883,:,Array,[,Int,,,0B1,],;,$_3_,(,_,:,String,;,yY,,,_,:,Boolean,),{,},},<EOF>''',101))

    def test_1183(self):
        self.assertTrue(TestLexer.test('''Class I_{O_(){} }Class _61:f228{}Class _{Constructor (B2,e,_8:Array [Array [Array [Array [Int ,0b11],0112],0X16],0B10_0];O5:Array [Array [String ,0B1100100],0112];p,s_,_:Array [Float ,0112]){} }Class u{Val _3,$_:X;}''','''Class,I_,{,O_,(,),{,},},Class,_61,:,f228,{,},Class,_,{,Constructor,(,B2,,,e,,,_8,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b11,],,,0112,],,,0X16,],,,0B100,],;,O5,:,Array,[,Array,[,String,,,0B1100100,],,,0112,],;,p,,,s_,,,_,:,Array,[,Float,,,0112,],),{,},},Class,u,{,Val,_3,,,$_,:,X,;,},<EOF>''',101))

    def test_1184(self):
        self.assertTrue(TestLexer.test('''Class zp__{Var $T7,$_Fh_,Z,FHQ,$U,u,_:__;Constructor (_:Array [Array [Array [Float ,0b101010],52],03];_,c7,_H,j,_:Array [Array [Int ,01],041];_d,W,m,LN:Float ;O:Array [Float ,0b101010]){} }''','''Class,zp__,{,Var,$T7,,,$_Fh_,,,Z,,,FHQ,,,$U,,,u,,,_,:,__,;,Constructor,(,_,:,Array,[,Array,[,Array,[,Float,,,0b101010,],,,52,],,,03,],;,_,,,c7,,,_H,,,j,,,_,:,Array,[,Array,[,Int,,,01,],,,041,],;,_d,,,W,,,m,,,LN,:,Float,;,O,:,Array,[,Float,,,0b101010,],),{,},},<EOF>''',101))

    def test_1185(self):
        self.assertTrue(TestLexer.test('''Class Gl{}Class or{$__(_0,t:Float ;_t,_,_,_:s_4;_:_i;E1:Array [Array [Float ,5],5];___B_ya1:Array [Float ,06];z:ug){} }Class _2_V68:N{Val _:String ;}''','''Class,Gl,{,},Class,or,{,$__,(,_0,,,t,:,Float,;,_t,,,_,,,_,,,_,:,s_4,;,_,:,_i,;,E1,:,Array,[,Array,[,Float,,,5,],,,5,],;,___B_ya1,:,Array,[,Float,,,06,],;,z,:,ug,),{,},},Class,_2_V68,:,N,{,Val,_,:,String,;,},<EOF>''',101))

    def test_1186(self):
        self.assertTrue(TestLexer.test('''Class _43:_{}Class q:_{Constructor (_2:Int ){} }Class Np:e7{_(W:Array [Array [Boolean ,0x5_5],04]){Continue ;} }Class j2:j{Destructor (){ {} }}''','''Class,_43,:,_,{,},Class,q,:,_,{,Constructor,(,_2,:,Int,),{,},},Class,Np,:,e7,{,_,(,W,:,Array,[,Array,[,Boolean,,,0x55,],,,04,],),{,Continue,;,},},Class,j2,:,j,{,Destructor,(,),{,{,},},},<EOF>''',101))

    def test_1187(self):
        self.assertTrue(TestLexer.test('''Class w:_A{Val ov,_29:Int ;}Class __26{Val _,x,P,$0_b___8,$__:Array [Int ,0B110101];Constructor (){ {Continue ;}Z96u::$_._();} }''','''Class,w,:,_A,{,Val,ov,,,_29,:,Int,;,},Class,__26,{,Val,_,,,x,,,P,,,$0_b___8,,,$__,:,Array,[,Int,,,0B110101,],;,Constructor,(,),{,{,Continue,;,},Z96u,::,$_,.,_,(,),;,},},<EOF>''',101))

    def test_1188(self):
        self.assertTrue(TestLexer.test('''Class _6_{Constructor (_,_N,i,_D_0:_;P61k:Array [Array [String ,0b11_1_1_0_1],0b111010];_t:Array [String ,0b111010];m2rB_:Boolean ){} }''','''Class,_6_,{,Constructor,(,_,,,_N,,,i,,,_D_0,:,_,;,P61k,:,Array,[,Array,[,String,,,0b111101,],,,0b111010,],;,_t,:,Array,[,String,,,0b111010,],;,m2rB_,:,Boolean,),{,},},<EOF>''',101))

    def test_1189(self):
        self.assertTrue(TestLexer.test('''Class N{$7(){Continue ;}Constructor (){}Constructor (b:Array [Array [Array [Array [Array [Array [String ,0X2C],4],047],5_3],0b1010101],3];_:Float ;I,_,H,_:___73360xE){} }''','''Class,N,{,$7,(,),{,Continue,;,},Constructor,(,),{,},Constructor,(,b,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X2C,],,,4,],,,047,],,,53,],,,0b1010101,],,,3,],;,_,:,Float,;,I,,,_,,,H,,,_,:,___73360xE,),{,},},<EOF>''',101))

    def test_1190(self):
        self.assertTrue(TestLexer.test('''Class Z6{Destructor (){Continue ;} }Class b6_:_8{Destructor (){Break ;}Val $_:Array [Array [Int ,8],0143]=--_::$2.A_01a;Destructor (){} }''','''Class,Z6,{,Destructor,(,),{,Continue,;,},},Class,b6_,:,_8,{,Destructor,(,),{,Break,;,},Val,$_,:,Array,[,Array,[,Int,,,8,],,,0143,],=,-,-,_,::,$2,.,A_01a,;,Destructor,(,),{,},},<EOF>''',101))

    def test_1191(self):
        self.assertTrue(TestLexer.test('''Class _{Val N,$96e:Array [String ,3];Val a,_:Array [Float ,0xA];}Class ___:i{}Class u{}Class __:S7N_Z{_k_6__0W(E,B:__;_:Array [Boolean ,0X47];did,_C:__){} }Class _B{}''','''Class,_,{,Val,N,,,$96e,:,Array,[,String,,,3,],;,Val,a,,,_,:,Array,[,Float,,,0xA,],;,},Class,___,:,i,{,},Class,u,{,},Class,__,:,S7N_Z,{,_k_6__0W,(,E,,,B,:,__,;,_,:,Array,[,Boolean,,,0X47,],;,did,,,_C,:,__,),{,},},Class,_B,{,},<EOF>''',101))

    def test_1192(self):
        self.assertTrue(TestLexer.test('''Class A{Constructor (){Continue ;Break ;} }Class _0{}Class K_:_{Var $b,_9_7I:Array [Float ,0x1];}Class _81:_{Destructor (){} }''','''Class,A,{,Constructor,(,),{,Continue,;,Break,;,},},Class,_0,{,},Class,K_,:,_,{,Var,$b,,,_9_7I,:,Array,[,Float,,,0x1,],;,},Class,_81,:,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1193(self):
        self.assertTrue(TestLexer.test('''Class __2:_{$B(_n:Array [Array [Array [Int ,0b1_1],06],0X63]){Continue ;Break ;Break ;{} }}Class _:_{$___(V6_:Array [Array [Boolean ,7],3]){} }Class W__:_96{Var $__y7,_,__,LVs:Array [Int ,07_6];Val v6M:Array [String ,03];}Class _:L{f(_1__:Float ){}$M(){} }Class _:_H2_245{Destructor (){}Var $S_,$8,$P,$t85_:String ;Constructor (){Continue ;} }Class _:_{}''','''Class,__2,:,_,{,$B,(,_n,:,Array,[,Array,[,Array,[,Int,,,0b11,],,,06,],,,0X63,],),{,Continue,;,Break,;,Break,;,{,},},},Class,_,:,_,{,$___,(,V6_,:,Array,[,Array,[,Boolean,,,7,],,,3,],),{,},},Class,W__,:,_96,{,Var,$__y7,,,_,,,__,,,LVs,:,Array,[,Int,,,076,],;,Val,v6M,:,Array,[,String,,,03,],;,},Class,_,:,L,{,f,(,_1__,:,Float,),{,},$M,(,),{,},},Class,_,:,_H2_245,{,Destructor,(,),{,},Var,$S_,,,$8,,,$P,,,$t85_,:,String,;,Constructor,(,),{,Continue,;,},},Class,_,:,_,{,},<EOF>''',101))

    def test_1194(self):
        self.assertTrue(TestLexer.test('''Class M0_:cd_sgx{Var $_,$_iy,$42___,$4h7,_9,$_:Array [Array [Array [Float ,8],0x64],0x64];Destructor (){} }Class _{Val t3_,R,J:Array [Array [String ,0b1],72];v_(_:_r;_:Int ;NYd7:J;_t:Array [Array [String ,6],0X4];q:Array [Array [Array [Array [Boolean ,0x503_660],0xD],0b111100],0x64]){} }''','''Class,M0_,:,cd_sgx,{,Var,$_,,,$_iy,,,$42___,,,$4h7,,,_9,,,$_,:,Array,[,Array,[,Array,[,Float,,,8,],,,0x64,],,,0x64,],;,Destructor,(,),{,},},Class,_,{,Val,t3_,,,R,,,J,:,Array,[,Array,[,String,,,0b1,],,,72,],;,v_,(,_,:,_r,;,_,:,Int,;,NYd7,:,J,;,_t,:,Array,[,Array,[,String,,,6,],,,0X4,],;,q,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x503660,],,,0xD,],,,0b111100,],,,0x64,],),{,},},<EOF>''',101))

    def test_1195(self):
        self.assertTrue(TestLexer.test('''Class _:F{Var $_q_,_b9:Float ;Var _:_15_;Constructor (SD,H,o,_71L__T_,O,___5,_,_,_:Array [Array [String ,0X7],0134];e9,_,P:L6;_:Int ;P,_,_u_,__T__:Float ;_zX,_G,I,V:Boolean ;D,_99:Float ;B_,__:Array [Int ,30]){} }Class _{}''','''Class,_,:,F,{,Var,$_q_,,,_b9,:,Float,;,Var,_,:,_15_,;,Constructor,(,SD,,,H,,,o,,,_71L__T_,,,O,,,___5,,,_,,,_,,,_,:,Array,[,Array,[,String,,,0X7,],,,0134,],;,e9,,,_,,,P,:,L6,;,_,:,Int,;,P,,,_,,,_u_,,,__T__,:,Float,;,_zX,,,_G,,,I,,,V,:,Boolean,;,D,,,_99,:,Float,;,B_,,,__,:,Array,[,Int,,,30,],),{,},},Class,_,{,},<EOF>''',101))

    def test_1196(self):
        self.assertTrue(TestLexer.test('''Class _:_V{Val _g,b:Array [Array [String ,034],034];Constructor (m:Array [Array [Boolean ,0X26],0XD2];__,_:Array [Float ,06_1]){Continue ;}Var p,$6N_3W_,$17,d3l5,_k,$72Cx_r_:Array [Float ,05_05];_(U1ajg,__,Y:Array [Array [Array [Array [Float ,05],5_7],0b1000011],0xF90];c:Array [Array [String ,034],3];j,_,r,_:Array [Array [Array [Array [Array [Array [Boolean ,8],0b1000011],8],0X4],8],0b1000011];i,_:Float ;M,_:Array [Float ,8_90_0]){} }Class a{}''','''Class,_,:,_V,{,Val,_g,,,b,:,Array,[,Array,[,String,,,034,],,,034,],;,Constructor,(,m,:,Array,[,Array,[,Boolean,,,0X26,],,,0XD2,],;,__,,,_,:,Array,[,Float,,,061,],),{,Continue,;,},Var,p,,,$6N_3W_,,,$17,,,d3l5,,,_k,,,$72Cx_r_,:,Array,[,Float,,,0505,],;,_,(,U1ajg,,,__,,,Y,:,Array,[,Array,[,Array,[,Array,[,Float,,,05,],,,57,],,,0b1000011,],,,0xF90,],;,c,:,Array,[,Array,[,String,,,034,],,,3,],;,j,,,_,,,r,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,8,],,,0b1000011,],,,8,],,,0X4,],,,8,],,,0b1000011,],;,i,,,_,:,Float,;,M,,,_,:,Array,[,Float,,,8900,],),{,},},Class,a,{,},<EOF>''',101))

    def test_1197(self):
        self.assertTrue(TestLexer.test('''Class f:f__{}Class _d6___7{}Class _g{}Class _:_pl_{Var C:bG0_;}Class __:__{Var w1:Array [Int ,0XB_E];}Class o{}Class _ZMR{}''','''Class,f,:,f__,{,},Class,_d6___7,{,},Class,_g,{,},Class,_,:,_pl_,{,Var,C,:,bG0_,;,},Class,__,:,__,{,Var,w1,:,Array,[,Int,,,0XBE,],;,},Class,o,{,},Class,_ZMR,{,},<EOF>''',101))

    def test_1198(self):
        self.assertTrue(TestLexer.test('''Class R:b{Var __5:Array [Array [Array [Array [Boolean ,032],0x43],74],91];Var $8K8,$4,I__4x22,_:Int ;}Class _{Var __:String ;}''','''Class,R,:,b,{,Var,__5,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,032,],,,0x43,],,,74,],,,91,],;,Var,$8K8,,,$4,,,I__4x22,,,_,:,Int,;,},Class,_,{,Var,__,:,String,;,},<EOF>''',101))

    def test_1199(self):
        self.assertTrue(TestLexer.test('''Class Y:___j{}Class v{}Class ____{}Class I_eH2b{}Class s3A_76_{Constructor (){Continue ;}Val Mxl:Array [Array [Array [Boolean ,0B100000],0X2],0B1];}''','''Class,Y,:,___j,{,},Class,v,{,},Class,____,{,},Class,I_eH2b,{,},Class,s3A_76_,{,Constructor,(,),{,Continue,;,},Val,Mxl,:,Array,[,Array,[,Array,[,Boolean,,,0B100000,],,,0X2,],,,0B1,],;,},<EOF>''',101))

    def test_1200(self):
        self.assertTrue(TestLexer.test('''Class ___7:_6{Constructor (){Continue ;}Constructor (J6:Int ;V2_:Array [Boolean ,0100]){} }Class _S{}Class m4:_{}''','''Class,___7,:,_6,{,Constructor,(,),{,Continue,;,},Constructor,(,J6,:,Int,;,V2_,:,Array,[,Boolean,,,0100,],),{,},},Class,_S,{,},Class,m4,:,_,{,},<EOF>''',101))

    def test_1201(self):
        self.assertTrue(TestLexer.test('''Class j_2_r:_{Var K,ySl61_:_;Constructor (___4:Int ){} }Class _:G{}Class z2{}Class p_{Destructor (){}Constructor (){}Var $9,$_,hqMf,C:M___;}Class _O__i{Var K__:Boolean ;}''','''Class,j_2_r,:,_,{,Var,K,,,ySl61_,:,_,;,Constructor,(,___4,:,Int,),{,},},Class,_,:,G,{,},Class,z2,{,},Class,p_,{,Destructor,(,),{,},Constructor,(,),{,},Var,$9,,,$_,,,hqMf,,,C,:,M___,;,},Class,_O__i,{,Var,K__,:,Boolean,;,},<EOF>''',101))

    def test_1202(self):
        self.assertTrue(TestLexer.test('''Class _{$__5(n,_1,_V:Array [Array [Array [Array [Array [Array [Boolean ,055],01],0xF0],055],80],80];__:Array [Array [Int ,0B1],8651];_,_,_89o:_a_;J:nf3BE;g50m:Boolean ){} }''','''Class,_,{,$__5,(,n,,,_1,,,_V,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,055,],,,01,],,,0xF0,],,,055,],,,80,],,,80,],;,__,:,Array,[,Array,[,Int,,,0B1,],,,8651,],;,_,,,_,,,_89o,:,_a_,;,J,:,nf3BE,;,g50m,:,Boolean,),{,},},<EOF>''',101))

    def test_1203(self):
        self.assertTrue(TestLexer.test('''Class ae:f_N0Z{Constructor (_,L,a1,_1:Array [Float ,065];_,c:String ;_,_5,_,I,_2,rf_:_9;eL,R,Y:Array [Int ,0B1];pZ:_7){} }Class __{Val $______6:Float ;xZ(){}Destructor (){} }''','''Class,ae,:,f_N0Z,{,Constructor,(,_,,,L,,,a1,,,_1,:,Array,[,Float,,,065,],;,_,,,c,:,String,;,_,,,_5,,,_,,,I,,,_2,,,rf_,:,_9,;,eL,,,R,,,Y,:,Array,[,Int,,,0B1,],;,pZ,:,_7,),{,},},Class,__,{,Val,$______6,:,Float,;,xZ,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_1204(self):
        self.assertTrue(TestLexer.test('''Class f:g{Destructor (){} }Class b{Constructor (N43:Array [Boolean ,0b1011111]){}Var $3y:Array [Float ,0112];Constructor (A46_,_2:Float ){}$8(_,__,m,u2,i_DP7,K:Float ){} }Class _:T6{}Class Vn:B{}''','''Class,f,:,g,{,Destructor,(,),{,},},Class,b,{,Constructor,(,N43,:,Array,[,Boolean,,,0b1011111,],),{,},Var,$3y,:,Array,[,Float,,,0112,],;,Constructor,(,A46_,,,_2,:,Float,),{,},$8,(,_,,,__,,,m,,,u2,,,i_DP7,,,K,:,Float,),{,},},Class,_,:,T6,{,},Class,Vn,:,B,{,},<EOF>''',101))

    def test_1205(self):
        self.assertTrue(TestLexer.test('''Class Y{}Class a{Val $57_,$6:_Lq;}Class __{}Class N{Var _A:Y;}Class o{}Class v_:_{Val _:Array [Array [Int ,0B1_00],0x58];}Class _:_{Destructor (){}H(){} }''','''Class,Y,{,},Class,a,{,Val,$57_,,,$6,:,_Lq,;,},Class,__,{,},Class,N,{,Var,_A,:,Y,;,},Class,o,{,},Class,v_,:,_,{,Val,_,:,Array,[,Array,[,Int,,,0B100,],,,0x58,],;,},Class,_,:,_,{,Destructor,(,),{,},H,(,),{,},},<EOF>''',101))

    def test_1206(self):
        self.assertTrue(TestLexer.test('''Class _:tV{}Class ___t__4_:E2P{Val _2:n=True .U()*_::$19see_().s_&&!----O_u::$7.D().b_5.__;Val _:Float ;Val _,_:String ;}Class c{Val $8_:X;}Class _o:_{$_(_:String ;l2g,__:Array [Array [Float ,6],0x57];_:_){Return ;} }Class _:_c_{Destructor (){Continue ;} }Class w{}''','''Class,_,:,tV,{,},Class,___t__4_,:,E2P,{,Val,_2,:,n,=,True,.,U,(,),*,_,::,$19see_,(,),.,s_,&&,!,-,-,-,-,O_u,::,$7,.,D,(,),.,b_5,.,__,;,Val,_,:,Float,;,Val,_,,,_,:,String,;,},Class,c,{,Val,$8_,:,X,;,},Class,_o,:,_,{,$_,(,_,:,String,;,l2g,,,__,:,Array,[,Array,[,Float,,,6,],,,0x57,],;,_,:,_,),{,Return,;,},},Class,_,:,_c_,{,Destructor,(,),{,Continue,;,},},Class,w,{,},<EOF>''',101))

    def test_1207(self):
        self.assertTrue(TestLexer.test('''Class m0_:_K{Destructor (){} }Class uYi{Constructor (){} }Class F:c_v_o7{Var r63,K9:Float ;}Class J7:_1{Val _:Int ;}Class C:h{E___4(_7SG_,_R,_7,L:String ;u_356:D){}Constructor (){}Var _:Array [Array [Array [Int ,33],0b100],0B11000];}''','''Class,m0_,:,_K,{,Destructor,(,),{,},},Class,uYi,{,Constructor,(,),{,},},Class,F,:,c_v_o7,{,Var,r63,,,K9,:,Float,;,},Class,J7,:,_1,{,Val,_,:,Int,;,},Class,C,:,h,{,E___4,(,_7SG_,,,_R,,,_7,,,L,:,String,;,u_356,:,D,),{,},Constructor,(,),{,},Var,_,:,Array,[,Array,[,Array,[,Int,,,33,],,,0b100,],,,0B11000,],;,},<EOF>''',101))

    def test_1208(self):
        self.assertTrue(TestLexer.test('''Class R:t_6{Val _:Fb;Constructor (_,h,_5:Array [Array [Array [Array [Float ,0x2],7],04_5_736],1]){} }Class _{}Class _:Y_7J_{}''','''Class,R,:,t_6,{,Val,_,:,Fb,;,Constructor,(,_,,,h,,,_5,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x2,],,,7,],,,045736,],,,1,],),{,},},Class,_,{,},Class,_,:,Y_7J_,{,},<EOF>''',101))

    def test_1209(self):
        self.assertTrue(TestLexer.test('''Class H{Val e:Int ;}Class m:M4{}Class __{}Class _0080p{Constructor (){Break ;}Val $86,RYn,$a8k:Boolean ;}Class _{}''','''Class,H,{,Val,e,:,Int,;,},Class,m,:,M4,{,},Class,__,{,},Class,_0080p,{,Constructor,(,),{,Break,;,},Val,$86,,,RYn,,,$a8k,:,Boolean,;,},Class,_,{,},<EOF>''',101))

    def test_1210(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _3_:R_{}Class n8{}Class _{}Class Vc:_{mf_(_8m:Boolean ;p:Boolean ){} }Class e4k6{Destructor (){} }''','''Class,_,{,},Class,_3_,:,R_,{,},Class,n8,{,},Class,_,{,},Class,Vc,:,_,{,mf_,(,_8m,:,Boolean,;,p,:,Boolean,),{,},},Class,e4k6,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1211(self):
        self.assertTrue(TestLexer.test('''Class _z{Destructor (){Val p_Y:Array [Array [Int ,0B1_1_1010],0b1010001];}Val XhC,$K5kg,S,_ga__:_;Destructor (){Return ;Return ;Continue ;} }Class uc1:P{}''','''Class,_z,{,Destructor,(,),{,Val,p_Y,:,Array,[,Array,[,Int,,,0B111010,],,,0b1010001,],;,},Val,XhC,,,$K5kg,,,S,,,_ga__,:,_,;,Destructor,(,),{,Return,;,Return,;,Continue,;,},},Class,uc1,:,P,{,},<EOF>''',101))

    def test_1212(self):
        self.assertTrue(TestLexer.test('''Class _{Val $_5:Array [Array [Array [Float ,0130],032_7],0X11];_Y6(){}Val $_:Array [Array [Array [Array [String ,04_6],0B11000],98_4],0x9];}Class U:O_H__SY{}Class _5{}''','''Class,_,{,Val,$_5,:,Array,[,Array,[,Array,[,Float,,,0130,],,,0327,],,,0X11,],;,_Y6,(,),{,},Val,$_,:,Array,[,Array,[,Array,[,Array,[,String,,,046,],,,0B11000,],,,984,],,,0x9,],;,},Class,U,:,O_H__SY,{,},Class,_5,{,},<EOF>''',101))

    def test_1213(self):
        self.assertTrue(TestLexer.test('''Class _:D{Var $2,$0_g,_m0,l,_:Array [String ,0B11_1];Destructor (){Continue ;}Q(){Break ;Return ;} }Class q_{}Class f00:ZP{}''','''Class,_,:,D,{,Var,$2,,,$0_g,,,_m0,,,l,,,_,:,Array,[,String,,,0B111,],;,Destructor,(,),{,Continue,;,},Q,(,),{,Break,;,Return,;,},},Class,q_,{,},Class,f00,:,ZP,{,},<EOF>''',101))

    def test_1214(self):
        self.assertTrue(TestLexer.test('''Class r_:_{Val _A:_;Val __V:Array [String ,0B110];}Class _{}Class _n:s{Constructor (){} }Class BW:_0{Val $cB,$_x78vJ25Y,_,_H:_;}''','''Class,r_,:,_,{,Val,_A,:,_,;,Val,__V,:,Array,[,String,,,0B110,],;,},Class,_,{,},Class,_n,:,s,{,Constructor,(,),{,},},Class,BW,:,_0,{,Val,$cB,,,$_x78vJ25Y,,,_,,,_H,:,_,;,},<EOF>''',101))

    def test_1215(self):
        self.assertTrue(TestLexer.test('''Class _l{_62(_5_O,l,P,g:_;_,T,_,_:Array [Array [Array [Array [Array [Array [Float ,010],50],010],061],0B10],015_6]){} }Class B:Cy62{}Class x_{}Class _6:_{Var $2J_:lr;}''','''Class,_l,{,_62,(,_5_O,,,l,,,P,,,g,:,_,;,_,,,T,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,010,],,,50,],,,010,],,,061,],,,0B10,],,,0156,],),{,},},Class,B,:,Cy62,{,},Class,x_,{,},Class,_6,:,_,{,Var,$2J_,:,lr,;,},<EOF>''',101))

    def test_1216(self):
        self.assertTrue(TestLexer.test('''Class nF__:_7{Constructor (){}W(_,_:__){ {} }Constructor (U_,__8Y,Z,p,_,_0:_;_,__5:Array [Boolean ,07_427]){}Var $RV:__g;}''','''Class,nF__,:,_7,{,Constructor,(,),{,},W,(,_,,,_,:,__,),{,{,},},Constructor,(,U_,,,__8Y,,,Z,,,p,,,_,,,_0,:,_,;,_,,,__5,:,Array,[,Boolean,,,07427,],),{,},Var,$RV,:,__g,;,},<EOF>''',101))

    def test_1217(self):
        self.assertTrue(TestLexer.test('''Class _:___{Var N:Array [Array [Array [Array [Array [Int ,0b1010000],0104],0X43],0b1010000],0xB];$M(_86:Array [Boolean ,0x26];R_,_:M;_5f4,_,_:o1c){} }Class _4z{Destructor (){} }''','''Class,_,:,___,{,Var,N,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b1010000,],,,0104,],,,0X43,],,,0b1010000,],,,0xB,],;,$M,(,_86,:,Array,[,Boolean,,,0x26,],;,R_,,,_,:,M,;,_5f4,,,_,,,_,:,o1c,),{,},},Class,_4z,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1218(self):
        self.assertTrue(TestLexer.test('''Class X:_iA{}Class pk{Val $0,$_,_,_,$_:Array [Array [Array [Array [Array [Array [Float ,0B1001],0B11],9_9],86],86],0X3D];}''','''Class,X,:,_iA,{,},Class,pk,{,Val,$0,,,$_,,,_,,,_,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1001,],,,0B11,],,,99,],,,86,],,,86,],,,0X3D,],;,},<EOF>''',101))

    def test_1219(self):
        self.assertTrue(TestLexer.test('''Class F:_{Constructor (_8:Array [String ,0X28];v,_Z93t,s:s_;_g,i9,P_:Int ;L0,Z7:Boolean ){Var _,_,n:Array [Array [Boolean ,0X28],9];} }''','''Class,F,:,_,{,Constructor,(,_8,:,Array,[,String,,,0X28,],;,v,,,_Z93t,,,s,:,s_,;,_g,,,i9,,,P_,:,Int,;,L0,,,Z7,:,Boolean,),{,Var,_,,,_,,,n,:,Array,[,Array,[,Boolean,,,0X28,],,,9,],;,},},<EOF>''',101))

    def test_1220(self):
        self.assertTrue(TestLexer.test('''Class z8D5_:La96{Val $__5__8,_Y_1c:Array [String ,07];Val Z_3,$_i:h;}Class _:k{}Class _:_{Destructor (){} }Class I06:_Q{}Class m:_{}''','''Class,z8D5_,:,La96,{,Val,$__5__8,,,_Y_1c,:,Array,[,String,,,07,],;,Val,Z_3,,,$_i,:,h,;,},Class,_,:,k,{,},Class,_,:,_,{,Destructor,(,),{,},},Class,I06,:,_Q,{,},Class,m,:,_,{,},<EOF>''',101))

    def test_1221(self):
        self.assertTrue(TestLexer.test('''Class D_:m_{}Class _{Var $_:Array [Array [Array [Array [Array [Array [Array [Boolean ,0b11],70],6298_5_6],0b110100],70],8],1];}''','''Class,D_,:,m_,{,},Class,_,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b11,],,,70,],,,629856,],,,0b110100,],,,70,],,,8,],,,1,],;,},<EOF>''',101))

    def test_1222(self):
        self.assertTrue(TestLexer.test('''Class s{Constructor (){}Var $_,_D,$8C,$2:Array [Array [Array [Array [Array [String ,0106],0106],0B1001111],30],0b1100000];Var tK_:Boolean ;}''','''Class,s,{,Constructor,(,),{,},Var,$_,,,_D,,,$8C,,,$2,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0106,],,,0106,],,,0B1001111,],,,30,],,,0b1100000,],;,Var,tK_,:,Boolean,;,},<EOF>''',101))

    def test_1223(self):
        self.assertTrue(TestLexer.test('''Class _9t{Constructor (n:Boolean ;_7Ie:_){}$9_(_9,y,R,_:Array [Array [Int ,0b101100],0XBA_4]){} }Class t_i95:g{}Class g{Destructor (){} }Class _{Destructor (){}Constructor (){ {} }}Class B:_E{}''','''Class,_9t,{,Constructor,(,n,:,Boolean,;,_7Ie,:,_,),{,},$9_,(,_9,,,y,,,R,,,_,:,Array,[,Array,[,Int,,,0b101100,],,,0XBA4,],),{,},},Class,t_i95,:,g,{,},Class,g,{,Destructor,(,),{,},},Class,_,{,Destructor,(,),{,},Constructor,(,),{,{,},},},Class,B,:,_E,{,},<EOF>''',101))

    def test_1224(self):
        self.assertTrue(TestLexer.test('''Class a{}Class L0b_{Constructor (_:Array [String ,49];k:Array [Array [Array [Float ,0X9],0XA],1];_:_){} }Class _h0_:_I_{}Class _oyVr_{Val n,_,_Y,E_,$H,__:P__;}''','''Class,a,{,},Class,L0b_,{,Constructor,(,_,:,Array,[,String,,,49,],;,k,:,Array,[,Array,[,Array,[,Float,,,0X9,],,,0XA,],,,1,],;,_,:,_,),{,},},Class,_h0_,:,_I_,{,},Class,_oyVr_,{,Val,n,,,_,,,_Y,,,E_,,,$H,,,__,:,P__,;,},<EOF>''',101))

    def test_1225(self):
        self.assertTrue(TestLexer.test('''Class x:R{}Class __:e{Val $C,IS:Array [Array [Array [Array [Array [Boolean ,01],0X5D],01],0X5D],0X91_7_3];}Class _ki:ZQ__{S(){Return ;}$e(){}Var _J,_:Array [Array [Int ,0x3A],0X5D];}''','''Class,x,:,R,{,},Class,__,:,e,{,Val,$C,,,IS,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,01,],,,0X5D,],,,01,],,,0X5D,],,,0X9173,],;,},Class,_ki,:,ZQ__,{,S,(,),{,Return,;,},$e,(,),{,},Var,_J,,,_,:,Array,[,Array,[,Int,,,0x3A,],,,0X5D,],;,},<EOF>''',101))

    def test_1226(self):
        self.assertTrue(TestLexer.test('''Class T0_{Var $r,_h_:Boolean ;}Class __{_2H(e:_7;s:_;p98,p,RXS5c:Float ;F_d,_G4,_,_:Array [Array [Boolean ,25],06_2_6];_5O,Hw,_,_,V,Yq:Boolean ){}Destructor (){Break ;Return ;Continue ;{} }Var Q:Array [Float ,0x5C];Constructor (_1:_){}Val f,_4,____,__:_8T;Constructor (){} }''','''Class,T0_,{,Var,$r,,,_h_,:,Boolean,;,},Class,__,{,_2H,(,e,:,_7,;,s,:,_,;,p98,,,p,,,RXS5c,:,Float,;,F_d,,,_G4,,,_,,,_,:,Array,[,Array,[,Boolean,,,25,],,,0626,],;,_5O,,,Hw,,,_,,,_,,,V,,,Yq,:,Boolean,),{,},Destructor,(,),{,Break,;,Return,;,Continue,;,{,},},Var,Q,:,Array,[,Float,,,0x5C,],;,Constructor,(,_1,:,_,),{,},Val,f,,,_4,,,____,,,__,:,_8T,;,Constructor,(,),{,},},<EOF>''',101))

    def test_1227(self):
        self.assertTrue(TestLexer.test('''Class D:u{Var _f_:String ;}Class _{Constructor (){}_(D,_b:String ;_,l,_Qc7_,_,e,_h,_,y2:__){}Destructor (){} }Class _{}Class _2vO{}''','''Class,D,:,u,{,Var,_f_,:,String,;,},Class,_,{,Constructor,(,),{,},_,(,D,,,_b,:,String,;,_,,,l,,,_Qc7_,,,_,,,e,,,_h,,,_,,,y2,:,__,),{,},Destructor,(,),{,},},Class,_,{,},Class,_2vO,{,},<EOF>''',101))

    def test_1228(self):
        self.assertTrue(TestLexer.test('''Class _:A{}Class _{}Class _:l{Destructor (){ {} }Constructor (u:Array [Float ,04];_,C_,_gK,ezF,xC,u:Float ;_dE:s;xE,j_,_PU,_,TW1,_:Float ){_4b_ok::$7__6();} }''','''Class,_,:,A,{,},Class,_,{,},Class,_,:,l,{,Destructor,(,),{,{,},},Constructor,(,u,:,Array,[,Float,,,04,],;,_,,,C_,,,_gK,,,ezF,,,xC,,,u,:,Float,;,_dE,:,s,;,xE,,,j_,,,_PU,,,_,,,TW1,,,_,:,Float,),{,_4b_ok,::,$7__6,(,),;,},},<EOF>''',101))

    def test_1229(self):
        self.assertTrue(TestLexer.test('''Class _VUn:_b{Val _,$M_:String ;Var ___t,$9:Array [Int ,0b111110];}Class _:c{Constructor (_:Array [Float ,01_51];_,h_:hm){_::$c9.t2();} }Class b_{}''','''Class,_VUn,:,_b,{,Val,_,,,$M_,:,String,;,Var,___t,,,$9,:,Array,[,Int,,,0b111110,],;,},Class,_,:,c,{,Constructor,(,_,:,Array,[,Float,,,0151,],;,_,,,h_,:,hm,),{,_,::,$c9,.,t2,(,),;,},},Class,b_,{,},<EOF>''',101))

    def test_1230(self):
        self.assertTrue(TestLexer.test('''Class _{Var $2_,$8_7bN_,$9_:Array [Array [Boolean ,0X97_F],9];Var U:Array [Array [Int ,0b1001110],0X95B];Var $5,_:String ;}Class _T:_h{}''','''Class,_,{,Var,$2_,,,$8_7bN_,,,$9_,:,Array,[,Array,[,Boolean,,,0X97F,],,,9,],;,Var,U,:,Array,[,Array,[,Int,,,0b1001110,],,,0X95B,],;,Var,$5,,,_,:,String,;,},Class,_T,:,_h,{,},<EOF>''',101))

    def test_1231(self):
        self.assertTrue(TestLexer.test('''Class _2P_{Constructor (_,__,q6:Array [Array [Boolean ,0136],0136];m:A2;UwE9:Array [Array [Array [Array [Array [Array [Int ,06],0B1],0B1],49],06_51_55],0B1];_5,u,_:Int ;n,B_:String ;S7U9,N___,O,J_,_,_5:Array [Array [Array [Boolean ,0X21],7],01]){}Constructor (){}Var $6e,_2:_;}''','''Class,_2P_,{,Constructor,(,_,,,__,,,q6,:,Array,[,Array,[,Boolean,,,0136,],,,0136,],;,m,:,A2,;,UwE9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,06,],,,0B1,],,,0B1,],,,49,],,,065155,],,,0B1,],;,_5,,,u,,,_,:,Int,;,n,,,B_,:,String,;,S7U9,,,N___,,,O,,,J_,,,_,,,_5,:,Array,[,Array,[,Array,[,Boolean,,,0X21,],,,7,],,,01,],),{,},Constructor,(,),{,},Var,$6e,,,_2,:,_,;,},<EOF>''',101))

    def test_1232(self):
        self.assertTrue(TestLexer.test('''Class _Ti:_{Val _T,$7,$T6:Boolean ;Destructor (){Break ;}Val $_,$_NXC:Array [Array [Boolean ,15],0B1];Constructor (_5,xr:Float ){} }''','''Class,_Ti,:,_,{,Val,_T,,,$7,,,$T6,:,Boolean,;,Destructor,(,),{,Break,;,},Val,$_,,,$_NXC,:,Array,[,Array,[,Boolean,,,15,],,,0B1,],;,Constructor,(,_5,,,xr,:,Float,),{,},},<EOF>''',101))

    def test_1233(self):
        self.assertTrue(TestLexer.test('''Class _:D71{}Class D{_p(OV:Array [Array [Boolean ,71],6_2];_571:String ;__:Array [Int ,71];RL:W){}Destructor (){Continue ;} }Class _{}''','''Class,_,:,D71,{,},Class,D,{,_p,(,OV,:,Array,[,Array,[,Boolean,,,71,],,,62,],;,_571,:,String,;,__,:,Array,[,Int,,,71,],;,RL,:,W,),{,},Destructor,(,),{,Continue,;,},},Class,_,{,},<EOF>''',101))

    def test_1234(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){}Constructor (_:String ;tI1x:Boolean ;c,E_y_,_:Int ;T:Int ;c9lO0n,_,E_,z9,_,_:Float ){} }''','''Class,_,{,Constructor,(,),{,},Constructor,(,_,:,String,;,tI1x,:,Boolean,;,c,,,E_y_,,,_,:,Int,;,T,:,Int,;,c9lO0n,,,_,,,E_,,,z9,,,_,,,_,:,Float,),{,},},<EOF>''',101))

    def test_1235(self):
        self.assertTrue(TestLexer.test('''Class p:_{Constructor (O,K_0:String ;_:JH8;_,J_60,_6,_,p_:_;D8_,t,Fr__n,L67,k97:Array [Boolean ,37_1];I_T_:String ){}Constructor (){Break ;} }Class U_Eq2:_{}Class tW62_{}''','''Class,p,:,_,{,Constructor,(,O,,,K_0,:,String,;,_,:,JH8,;,_,,,J_60,,,_6,,,_,,,p_,:,_,;,D8_,,,t,,,Fr__n,,,L67,,,k97,:,Array,[,Boolean,,,371,],;,I_T_,:,String,),{,},Constructor,(,),{,Break,;,},},Class,U_Eq2,:,_,{,},Class,tW62_,{,},<EOF>''',101))

    def test_1236(self):
        self.assertTrue(TestLexer.test('''Class t{}Class L{}Class _:d{Var O,_,S:Boolean ;Val $3,_1_:Array [Array [Boolean ,66],0b11];$5(){Break ;} }Class d1:a{Var $_s_k:_;}Class Jz:M0__{}''','''Class,t,{,},Class,L,{,},Class,_,:,d,{,Var,O,,,_,,,S,:,Boolean,;,Val,$3,,,_1_,:,Array,[,Array,[,Boolean,,,66,],,,0b11,],;,$5,(,),{,Break,;,},},Class,d1,:,a,{,Var,$_s_k,:,_,;,},Class,Jz,:,M0__,{,},<EOF>''',101))

    def test_1237(self):
        self.assertTrue(TestLexer.test('''Class __2:_6{}Class b:q{$8_(_:_rJ_;_,p_,_4A,_,J,_:Array [Int ,0XA];yb4_:Array [Array [Array [Boolean ,0b11],02],0XA_E]){} }''','''Class,__2,:,_6,{,},Class,b,:,q,{,$8_,(,_,:,_rJ_,;,_,,,p_,,,_4A,,,_,,,J,,,_,:,Array,[,Int,,,0XA,],;,yb4_,:,Array,[,Array,[,Array,[,Boolean,,,0b11,],,,02,],,,0XAE,],),{,},},<EOF>''',101))

    def test_1238(self):
        self.assertTrue(TestLexer.test('''Class P{}Class _1{Var $_:Boolean ;}Class _{}Class _{Constructor (d8XPZc_4d46F:Array [Int ,043];f,_e,_:Array [Boolean ,7]){} }Class n3:c_{$_8(G6,Sw43:String ){} }''','''Class,P,{,},Class,_1,{,Var,$_,:,Boolean,;,},Class,_,{,},Class,_,{,Constructor,(,d8XPZc_4d46F,:,Array,[,Int,,,043,],;,f,,,_e,,,_,:,Array,[,Boolean,,,7,],),{,},},Class,n3,:,c_,{,$_8,(,G6,,,Sw43,:,String,),{,},},<EOF>''',101))

    def test_1239(self):
        self.assertTrue(TestLexer.test('''Class _y:Dq{_(__6_:Array [Array [Array [Array [Array [Boolean ,6],0x5F],050],0B110010],7_0]){} }Class R{Constructor (){} }''','''Class,_y,:,Dq,{,_,(,__6_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,6,],,,0x5F,],,,050,],,,0B110010,],,,70,],),{,},},Class,R,{,Constructor,(,),{,},},<EOF>''',101))

    def test_1240(self):
        self.assertTrue(TestLexer.test('''Class _K{}Class w{}Class _Z78o{Constructor (spO,t,_y,ShY3,Ri7,d_:String ;_,_,_T,q_5:_J89_X;C__u:String ;t0_s_2b:Float ;L5_:Float ;_,k,_4,_,iz,sz_I:Array [Boolean ,0b11_0];_h3_,Z6,R_3_F_,b:Array [Array [Float ,0X4F],5]){Continue ;}Val $_,O,$_:J;Var _:Array [String ,0b1_10_1];}Class UM{}''','''Class,_K,{,},Class,w,{,},Class,_Z78o,{,Constructor,(,spO,,,t,,,_y,,,ShY3,,,Ri7,,,d_,:,String,;,_,,,_,,,_T,,,q_5,:,_J89_X,;,C__u,:,String,;,t0_s_2b,:,Float,;,L5_,:,Float,;,_,,,k,,,_4,,,_,,,iz,,,sz_I,:,Array,[,Boolean,,,0b110,],;,_h3_,,,Z6,,,R_3_F_,,,b,:,Array,[,Array,[,Float,,,0X4F,],,,5,],),{,Continue,;,},Val,$_,,,O,,,$_,:,J,;,Var,_,:,Array,[,String,,,0b1101,],;,},Class,UM,{,},<EOF>''',101))

    def test_1241(self):
        self.assertTrue(TestLexer.test('''Class c9{$S(u6:Array [Boolean ,041];_:String ){}Var $_2,$1_:Boolean ;Val $3,$a7,$k:Array [Array [Array [Int ,0XC3],50],041];Val $_9,$B,$0SQ:Float ;Destructor (){} }''','''Class,c9,{,$S,(,u6,:,Array,[,Boolean,,,041,],;,_,:,String,),{,},Var,$_2,,,$1_,:,Boolean,;,Val,$3,,,$a7,,,$k,:,Array,[,Array,[,Array,[,Int,,,0XC3,],,,50,],,,041,],;,Val,$_9,,,$B,,,$0SQ,:,Float,;,Destructor,(,),{,},},<EOF>''',101))

    def test_1242(self):
        self.assertTrue(TestLexer.test('''Class K:bDH_6{Constructor (){} }Class o{$u0_(_:Array [Array [Array [Array [Array [Array [String ,0B1],3],0x3_E27],72],0b1001010],03]){} }Class r_:_{}Class v4_:j5{Val $7_,$F:Float ;}''','''Class,K,:,bDH_6,{,Constructor,(,),{,},},Class,o,{,$u0_,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,3,],,,0x3E27,],,,72,],,,0b1001010,],,,03,],),{,},},Class,r_,:,_,{,},Class,v4_,:,j5,{,Val,$7_,,,$F,:,Float,;,},<EOF>''',101))

    def test_1243(self):
        self.assertTrue(TestLexer.test('''Class v84:_{Val n0_M:Array [Int ,0b1011001];}Class _:_{Constructor (){}Var $zs__B,I_:Array [Array [Array [Int ,0b1],0X40],0x4E];}''','''Class,v84,:,_,{,Val,n0_M,:,Array,[,Int,,,0b1011001,],;,},Class,_,:,_,{,Constructor,(,),{,},Var,$zs__B,,,I_,:,Array,[,Array,[,Array,[,Int,,,0b1,],,,0X40,],,,0x4E,],;,},<EOF>''',101))

    def test_1244(self):
        self.assertTrue(TestLexer.test('''Class _4:_j{}Class v5_{Val g:Gl9nwR;}Class k:_P{Constructor (j_,gQ,__J,by:Array [Array [Array [Array [String ,0x3B],0b10],0B1000],07]){}Destructor (){} }Class SB2o_{}Class _5:H{Val $F_,$ma9_0a:Array [Float ,0b11011];Var $h4,h:String ;}''','''Class,_4,:,_j,{,},Class,v5_,{,Val,g,:,Gl9nwR,;,},Class,k,:,_P,{,Constructor,(,j_,,,gQ,,,__J,,,by,:,Array,[,Array,[,Array,[,Array,[,String,,,0x3B,],,,0b10,],,,0B1000,],,,07,],),{,},Destructor,(,),{,},},Class,SB2o_,{,},Class,_5,:,H,{,Val,$F_,,,$ma9_0a,:,Array,[,Float,,,0b11011,],;,Var,$h4,,,h,:,String,;,},<EOF>''',101))

    def test_1245(self):
        self.assertTrue(TestLexer.test('''Class _7_{Var _,$3__7,$n_,$YG,$j74_:Array [Array [Array [Array [Array [Array [Array [Array [Float ,0x2D],0b1],0b11],07_6_4_4],2],0130],0x2D],42];}''','''Class,_7_,{,Var,_,,,$3__7,,,$n_,,,$YG,,,$j74_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x2D,],,,0b1,],,,0b11,],,,07644,],,,2,],,,0130,],,,0x2D,],,,42,],;,},<EOF>''',101))

    def test_1246(self):
        self.assertTrue(TestLexer.test('''Class w_9:_2{__(_,f_,Q,e,T_:h;_,x,E_,_46_:Array [Array [Array [Array [Array [Array [String ,75],01],22_4],0XDA],0x1],0B101100];a,LJ,_5Cb_9,p60X,dS8,_,o,_,CU_:Array [Array [Boolean ,0X47],0b1];_:Boolean ){} }''','''Class,w_9,:,_2,{,__,(,_,,,f_,,,Q,,,e,,,T_,:,h,;,_,,,x,,,E_,,,_46_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,75,],,,01,],,,224,],,,0XDA,],,,0x1,],,,0B101100,],;,a,,,LJ,,,_5Cb_9,,,p60X,,,dS8,,,_,,,o,,,_,,,CU_,:,Array,[,Array,[,Boolean,,,0X47,],,,0b1,],;,_,:,Boolean,),{,},},<EOF>''',101))

    def test_1247(self):
        self.assertTrue(TestLexer.test('''Class o_t:_{Val $l:d5;Constructor (_2,W,m,C:_;Vt:Array [Float ,0b10110];g,j:T;_Fa,_,_,__:Array [Array [Float ,0x58],0b10110]){}Val _:FX__4G;Val p,$94,w6_9j:Array [Array [Array [Boolean ,0B11000],052],0B11000];}Class c6N{}''','''Class,o_t,:,_,{,Val,$l,:,d5,;,Constructor,(,_2,,,W,,,m,,,C,:,_,;,Vt,:,Array,[,Float,,,0b10110,],;,g,,,j,:,T,;,_Fa,,,_,,,_,,,__,:,Array,[,Array,[,Float,,,0x58,],,,0b10110,],),{,},Val,_,:,FX__4G,;,Val,p,,,$94,,,w6_9j,:,Array,[,Array,[,Array,[,Boolean,,,0B11000,],,,052,],,,0B11000,],;,},Class,c6N,{,},<EOF>''',101))

    def test_1248(self):
        self.assertTrue(TestLexer.test('''Class v_G{}Class x2__m{$G(_9c,K,_g__:Array [Array [Array [Array [Array [Float ,0xD],0b1011100],7_6],0X64],0b1];_:String ){} }''','''Class,v_G,{,},Class,x2__m,{,$G,(,_9c,,,K,,,_g__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0xD,],,,0b1011100,],,,76,],,,0X64,],,,0b1,],;,_,:,String,),{,},},<EOF>''',101))

    def test_1249(self):
        self.assertTrue(TestLexer.test('''Class _2b:t{}Class f_:_9{Val _k7:String ;Constructor (L,nF_N,J5,_:Array [Array [Float ,43],0132];_____,c:Int ;p_,_,G:w){} }Class c:_6{}Class _g_:_{}''','''Class,_2b,:,t,{,},Class,f_,:,_9,{,Val,_k7,:,String,;,Constructor,(,L,,,nF_N,,,J5,,,_,:,Array,[,Array,[,Float,,,43,],,,0132,],;,_____,,,c,:,Int,;,p_,,,_,,,G,:,w,),{,},},Class,c,:,_6,{,},Class,_g_,:,_,{,},<EOF>''',101))

    def test_1250(self):
        self.assertTrue(TestLexer.test('''Class g{Constructor (_,H_2_,_V,__GE_N,_,_:Int ;D4_w:Array [Float ,0X24];P,_6:Array [Array [Array [Int ,03],0X28],0X8];_r,__,__q,CD_:Float ){} }''','''Class,g,{,Constructor,(,_,,,H_2_,,,_V,,,__GE_N,,,_,,,_,:,Int,;,D4_w,:,Array,[,Float,,,0X24,],;,P,,,_6,:,Array,[,Array,[,Array,[,Int,,,03,],,,0X28,],,,0X8,],;,_r,,,__,,,__q,,,CD_,:,Float,),{,},},<EOF>''',101))

    def test_1251(self):
        self.assertTrue(TestLexer.test('''Class H_:Y{Val $1,$_:Array [Float ,0b1];Var M,$_,Z,$_:_;Var $_:_7_;$__(_2:Array [Int ,0b11111];_,_,_:hW54_7;_:_4){Val m,P,_9_:Float ;} }''','''Class,H_,:,Y,{,Val,$1,,,$_,:,Array,[,Float,,,0b1,],;,Var,M,,,$_,,,Z,,,$_,:,_,;,Var,$_,:,_7_,;,$__,(,_2,:,Array,[,Int,,,0b11111,],;,_,,,_,,,_,:,hW54_7,;,_,:,_4,),{,Val,m,,,P,,,_9_,:,Float,;,},},<EOF>''',101))

    def test_1252(self):
        self.assertTrue(TestLexer.test('''Class __n{qV(){Continue ;}Constructor (){}Constructor (_1,M:Int ;_:_3;S35:Array [Int ,0XC];G,_3:Array [String ,055]){Val d:Boolean ;} }''','''Class,__n,{,qV,(,),{,Continue,;,},Constructor,(,),{,},Constructor,(,_1,,,M,:,Int,;,_,:,_3,;,S35,:,Array,[,Int,,,0XC,],;,G,,,_3,:,Array,[,String,,,055,],),{,Val,d,:,Boolean,;,},},<EOF>''',101))

    def test_1253(self):
        self.assertTrue(TestLexer.test('''Class __9_:__{Var $Mh:Array [Array [Array [Array [Float ,0x5D],23],03_5_0],0B1];Var U:P;Destructor (){} }Class oV:_{Var $__i29__u,$_14,$_:Array [Int ,0b101_0_0];}Class h:_6{Destructor (){ {}{} }}''','''Class,__9_,:,__,{,Var,$Mh,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x5D,],,,23,],,,0350,],,,0B1,],;,Var,U,:,P,;,Destructor,(,),{,},},Class,oV,:,_,{,Var,$__i29__u,,,$_14,,,$_,:,Array,[,Int,,,0b10100,],;,},Class,h,:,_6,{,Destructor,(,),{,{,},{,},},},<EOF>''',101))

    def test_1254(self):
        self.assertTrue(TestLexer.test('''Class g:_{Constructor (_,__,_,g,_,kX4:Array [Int ,18];_E,K,T:__;d,D:String ){Continue ;} }Class O_CYT{}Class Zb:MA{Destructor (){} }''','''Class,g,:,_,{,Constructor,(,_,,,__,,,_,,,g,,,_,,,kX4,:,Array,[,Int,,,18,],;,_E,,,K,,,T,:,__,;,d,,,D,:,String,),{,Continue,;,},},Class,O_CYT,{,},Class,Zb,:,MA,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1255(self):
        self.assertTrue(TestLexer.test('''Class _YUa:v{Val $_,e_,$__,z,$n__9,c6,$YF:Array [Array [Array [Array [Array [Boolean ,0117],0B1],1],0X9],043];Constructor (){Continue ;} }Class ___:a{}Class r{}''','''Class,_YUa,:,v,{,Val,$_,,,e_,,,$__,,,z,,,$n__9,,,c6,,,$YF,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0117,],,,0B1,],,,1,],,,0X9,],,,043,],;,Constructor,(,),{,Continue,;,},},Class,___,:,a,{,},Class,r,{,},<EOF>''',101))

    def test_1256(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _:_H{Constructor (_:Boolean ;_,_:_0;Nj3_,b:Array [String ,0x22]){}Val $0:Int ;Destructor (){} }''','''Class,_,:,_,{,},Class,_,:,_H,{,Constructor,(,_,:,Boolean,;,_,,,_,:,_0,;,Nj3_,,,b,:,Array,[,String,,,0x22,],),{,},Val,$0,:,Int,;,Destructor,(,),{,},},<EOF>''',101))

    def test_1257(self):
        self.assertTrue(TestLexer.test('''Class _:__{Var _,$_,z_B_:Array [Float ,0x6];Val $F:_2__;Var $Q_,$01:Array [Array [Array [Float ,0b10],9],0x6];}''','''Class,_,:,__,{,Var,_,,,$_,,,z_B_,:,Array,[,Float,,,0x6,],;,Val,$F,:,_2__,;,Var,$Q_,,,$01,:,Array,[,Array,[,Array,[,Float,,,0b10,],,,9,],,,0x6,],;,},<EOF>''',101))

    def test_1258(self):
        self.assertTrue(TestLexer.test('''Class _9{Val m,$__,k:Array [Array [Array [Boolean ,022_75],0b111110],49];}Class l_:_{Destructor (){}Constructor (){} }''','''Class,_9,{,Val,m,,,$__,,,k,:,Array,[,Array,[,Array,[,Boolean,,,02275,],,,0b111110,],,,49,],;,},Class,l_,:,_,{,Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_1259(self):
        self.assertTrue(TestLexer.test('''Class zm{g(Y,o_,_7_C:Array [Float ,0B1110];a:L){Val _:_k;}_(Z,g:Array [Array [Int ,0303],2]){Break ;Return ;} }Class _:_{}Class x:d4{}Class K:_{}''','''Class,zm,{,g,(,Y,,,o_,,,_7_C,:,Array,[,Float,,,0B1110,],;,a,:,L,),{,Val,_,:,_k,;,},_,(,Z,,,g,:,Array,[,Array,[,Int,,,0303,],,,2,],),{,Break,;,Return,;,},},Class,_,:,_,{,},Class,x,:,d4,{,},Class,K,:,_,{,},<EOF>''',101))

    def test_1260(self):
        self.assertTrue(TestLexer.test('''Class __{Val n4:Float ;}Class _{Var $_,_,$411Y3p,$u,A4t:Float ;}Class E{}Class F:__8{}Class __:V7_{}Class E:M{}''','''Class,__,{,Val,n4,:,Float,;,},Class,_,{,Var,$_,,,_,,,$411Y3p,,,$u,,,A4t,:,Float,;,},Class,E,{,},Class,F,:,__8,{,},Class,__,:,V7_,{,},Class,E,:,M,{,},<EOF>''',101))

    def test_1261(self):
        self.assertTrue(TestLexer.test('''Class _5d9_77{Constructor (i2:Array [Boolean ,0x65E];e,_e01,_:_;_5:Array [Array [Float ,6],44];x,_:Array [Int ,0x1CA];q:Boolean ){ {} }}''','''Class,_5d9_77,{,Constructor,(,i2,:,Array,[,Boolean,,,0x65E,],;,e,,,_e01,,,_,:,_,;,_5,:,Array,[,Array,[,Float,,,6,],,,44,],;,x,,,_,:,Array,[,Int,,,0x1CA,],;,q,:,Boolean,),{,{,},},},<EOF>''',101))

    def test_1262(self):
        self.assertTrue(TestLexer.test('''Class _:EL{Constructor (_:Array [Array [Array [Array [Float ,047],74],63],0x1];Y_,Q_4m:Array [Float ,0B1010]){} }Class zr{}''','''Class,_,:,EL,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,047,],,,74,],,,63,],,,0x1,],;,Y_,,,Q_4m,:,Array,[,Float,,,0B1010,],),{,},},Class,zr,{,},<EOF>''',101))

    def test_1263(self):
        self.assertTrue(TestLexer.test('''Class j718{}Class _:___{Var _4_8_9:D1;Destructor (){} }Class s6_:_{Var $A,$U___Q_:E;}Class _:t{Destructor (){} }Class _:__{}''','''Class,j718,{,},Class,_,:,___,{,Var,_4_8_9,:,D1,;,Destructor,(,),{,},},Class,s6_,:,_,{,Var,$A,,,$U___Q_,:,E,;,},Class,_,:,t,{,Destructor,(,),{,},},Class,_,:,__,{,},<EOF>''',101))

    def test_1264(self):
        self.assertTrue(TestLexer.test('''Class E9_8X2__:_{Constructor (){}Constructor (__5_0xC:String ){Continue ;Val y:Array [Array [Array [Array [Int ,89],0X89_F],02],0b1010000];}Val $_n_:String ;}Class _:w5{}''','''Class,E9_8X2__,:,_,{,Constructor,(,),{,},Constructor,(,__5_0xC,:,String,),{,Continue,;,Val,y,:,Array,[,Array,[,Array,[,Array,[,Int,,,89,],,,0X89F,],,,02,],,,0b1010000,],;,},Val,$_n_,:,String,;,},Class,_,:,w5,{,},<EOF>''',101))

    def test_1265(self):
        self.assertTrue(TestLexer.test('''Class u:_g_{Constructor (q,_:B;nX:Float ;r_,cv:Array [Float ,016]){} }Class qQ4{Destructor (){} }Class S_{}Class __q_7Bp{}Class H:_{}Class N6_G_:_{L(){} }''','''Class,u,:,_g_,{,Constructor,(,q,,,_,:,B,;,nX,:,Float,;,r_,,,cv,:,Array,[,Float,,,016,],),{,},},Class,qQ4,{,Destructor,(,),{,},},Class,S_,{,},Class,__q_7Bp,{,},Class,H,:,_,{,},Class,N6_G_,:,_,{,L,(,),{,},},<EOF>''',101))

    def test_1266(self):
        self.assertTrue(TestLexer.test('''Class w8:_{$_2(_,_,p1_:Array [Array [Array [Boolean ,0b1_0],0b1],0B1011010]){}Destructor (){}Val $_1,$1:sG;Val $_,_1:Float ;}''','''Class,w8,:,_,{,$_2,(,_,,,_,,,p1_,:,Array,[,Array,[,Array,[,Boolean,,,0b10,],,,0b1,],,,0B1011010,],),{,},Destructor,(,),{,},Val,$_1,,,$1,:,sG,;,Val,$_,,,_1,:,Float,;,},<EOF>''',101))

    def test_1267(self):
        self.assertTrue(TestLexer.test('''Class __:k{Destructor (){}Constructor (j9:Float ;_,DGj:Float ){} }Class w{}Class _z6_V_:__o_{}Class _{}Class u{}''','''Class,__,:,k,{,Destructor,(,),{,},Constructor,(,j9,:,Float,;,_,,,DGj,:,Float,),{,},},Class,w,{,},Class,_z6_V_,:,__o_,{,},Class,_,{,},Class,u,{,},<EOF>''',101))

    def test_1268(self):
        self.assertTrue(TestLexer.test('''Class _2{Constructor (v:Array [Array [Float ,0b11],80];Z,U,_:Array [String ,0X7_39];X9,T0,X6,_cS,p_oc,B9A:_;n:Int ;_n1u,__,_3,___,_6:Float ){} }Class _:q{Destructor (){}Var $A:_;Var v,$_krF,qo:Array [Array [String ,80],0121];}''','''Class,_2,{,Constructor,(,v,:,Array,[,Array,[,Float,,,0b11,],,,80,],;,Z,,,U,,,_,:,Array,[,String,,,0X739,],;,X9,,,T0,,,X6,,,_cS,,,p_oc,,,B9A,:,_,;,n,:,Int,;,_n1u,,,__,,,_3,,,___,,,_6,:,Float,),{,},},Class,_,:,q,{,Destructor,(,),{,},Var,$A,:,_,;,Var,v,,,$_krF,,,qo,:,Array,[,Array,[,String,,,80,],,,0121,],;,},<EOF>''',101))

    def test_1269(self):
        self.assertTrue(TestLexer.test('''Class _:_lj{}Class _vU_Wg50_:L{Destructor (){Var _:Array [Array [Array [Array [Array [Boolean ,82],0x992],03],72],01];} }''','''Class,_,:,_lj,{,},Class,_vU_Wg50_,:,L,{,Destructor,(,),{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,82,],,,0x992,],,,03,],,,72,],,,01,],;,},},<EOF>''',101))

    def test_1270(self):
        self.assertTrue(TestLexer.test('''Class Y:u35m0{}Class _k:a{Destructor (){}Val $65,$SjM_,$_jJ:Array [Array [Array [Int ,0b1_10_0],60],070];Destructor (){}Destructor (){} }''','''Class,Y,:,u35m0,{,},Class,_k,:,a,{,Destructor,(,),{,},Val,$65,,,$SjM_,,,$_jJ,:,Array,[,Array,[,Array,[,Int,,,0b1100,],,,60,],,,070,],;,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_1271(self):
        self.assertTrue(TestLexer.test('''Class A5_Q:D{Var $8:String ;}Class ___{Val t,$_jPS,_:Float ;Val $w,_,$Ae_,__97_:Array [Array [Array [Float ,78],78],0b111100];}''','''Class,A5_Q,:,D,{,Var,$8,:,String,;,},Class,___,{,Val,t,,,$_jPS,,,_,:,Float,;,Val,$w,,,_,,,$Ae_,,,__97_,:,Array,[,Array,[,Array,[,Float,,,78,],,,78,],,,0b111100,],;,},<EOF>''',101))

    def test_1272(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){} }Class Ep__:_v{Constructor (){}Destructor (){ {} }}Class M:_{}Class _:kQ{}Class A:_{Destructor (){} }Class _{}Class b{}''','''Class,_,{,Destructor,(,),{,},},Class,Ep__,:,_v,{,Constructor,(,),{,},Destructor,(,),{,{,},},},Class,M,:,_,{,},Class,_,:,kQ,{,},Class,A,:,_,{,Destructor,(,),{,},},Class,_,{,},Class,b,{,},<EOF>''',101))

    def test_1273(self):
        self.assertTrue(TestLexer.test('''Class _{H_(_,R,_,_58:Array [Array [Array [String ,0b11010],6],0XE];_3_9:Boolean ;i,q8,C,z47_M,_,_9:String ;P,VT70z:M_){} }Class _{}''','''Class,_,{,H_,(,_,,,R,,,_,,,_58,:,Array,[,Array,[,Array,[,String,,,0b11010,],,,6,],,,0XE,],;,_3_9,:,Boolean,;,i,,,q8,,,C,,,z47_M,,,_,,,_9,:,String,;,P,,,VT70z,:,M_,),{,},},Class,_,{,},<EOF>''',101))

    def test_1274(self):
        self.assertTrue(TestLexer.test('''Class __L_z:__{Val _,_,$_,vL__,$_,$9_4:Array [Array [Array [Float ,80],05],07_446_7];Var $9,v___Tv:Array [Boolean ,07];}''','''Class,__L_z,:,__,{,Val,_,,,_,,,$_,,,vL__,,,$_,,,$9_4,:,Array,[,Array,[,Array,[,Float,,,80,],,,05,],,,074467,],;,Var,$9,,,v___Tv,:,Array,[,Boolean,,,07,],;,},<EOF>''',101))

    def test_1275(self):
        self.assertTrue(TestLexer.test('''Class D:s_{}Class _:__{Constructor (){}Constructor (___,E:_;_7:Array [Array [Array [Array [String ,2],0123],0X3A],0X4_A]){} }''','''Class,D,:,s_,{,},Class,_,:,__,{,Constructor,(,),{,},Constructor,(,___,,,E,:,_,;,_7,:,Array,[,Array,[,Array,[,Array,[,String,,,2,],,,0123,],,,0X3A,],,,0X4A,],),{,},},<EOF>''',101))

    def test_1276(self):
        self.assertTrue(TestLexer.test('''Class _Q{}Class _{}Class _1_TY{}Class _k0{Val _,_,_:Array [Boolean ,0b1];$w(S35,i,z:__){}Constructor (){Val j,Y_4x:_x;} }''','''Class,_Q,{,},Class,_,{,},Class,_1_TY,{,},Class,_k0,{,Val,_,,,_,,,_,:,Array,[,Boolean,,,0b1,],;,$w,(,S35,,,i,,,z,:,__,),{,},Constructor,(,),{,Val,j,,,Y_4x,:,_x,;,},},<EOF>''',101))

    def test_1277(self):
        self.assertTrue(TestLexer.test('''Class __:P5_6{}Class h5_:__{Var _,$EO_,$O_,_9:Array [Array [Int ,0X6_C],0B1000001];$p(_:_){Val _:Float ;}Var $E_,$_f_,_:String ;}''','''Class,__,:,P5_6,{,},Class,h5_,:,__,{,Var,_,,,$EO_,,,$O_,,,_9,:,Array,[,Array,[,Int,,,0X6C,],,,0B1000001,],;,$p,(,_,:,_,),{,Val,_,:,Float,;,},Var,$E_,,,$_f_,,,_,:,String,;,},<EOF>''',101))

    def test_1278(self):
        self.assertTrue(TestLexer.test('''Class _:_e7QY477_{Var d64,$1:Array [String ,0B1];Var p67:q;$_1o(){ {} }}Class _:_{$_5_(_218:Boolean ;_:Float ){} }''','''Class,_,:,_e7QY477_,{,Var,d64,,,$1,:,Array,[,String,,,0B1,],;,Var,p67,:,q,;,$_1o,(,),{,{,},},},Class,_,:,_,{,$_5_,(,_218,:,Boolean,;,_,:,Float,),{,},},<EOF>''',101))

    def test_1279(self):
        self.assertTrue(TestLexer.test('''Class _:_08_{Constructor (_J3,ww1,L,g_:Array [Array [Int ,021],0B1_0];p__1,R,_K9:Int ){}p768(_:_8;_T,_,u:Float ){Break ;} }''','''Class,_,:,_08_,{,Constructor,(,_J3,,,ww1,,,L,,,g_,:,Array,[,Array,[,Int,,,021,],,,0B10,],;,p__1,,,R,,,_K9,:,Int,),{,},p768,(,_,:,_8,;,_T,,,_,,,u,:,Float,),{,Break,;,},},<EOF>''',101))

    def test_1280(self):
        self.assertTrue(TestLexer.test('''Class H__f:W_{Val $_:Boolean ;}Class __{Constructor (s:String ;___8,P5,f,_K:Boolean ;_i:Array [Array [Int ,88_52],0b1]){} }''','''Class,H__f,:,W_,{,Val,$_,:,Boolean,;,},Class,__,{,Constructor,(,s,:,String,;,___8,,,P5,,,f,,,_K,:,Boolean,;,_i,:,Array,[,Array,[,Int,,,8852,],,,0b1,],),{,},},<EOF>''',101))

    def test_1281(self):
        self.assertTrue(TestLexer.test('''Class WD_{$8(_:Float ;K8_:Array [Float ,4];B,f,__,Tp,J_1WB_m,_,f,_L:Int ;t0ZA,wb,_0:Boolean ;k_9,_,_:Array [Int ,0B1001000];_:Array [Array [Int ,4],0b1000001];m59_4,_VO:_;T,_v,V:___H_k4){} }Class S5_:_{}''','''Class,WD_,{,$8,(,_,:,Float,;,K8_,:,Array,[,Float,,,4,],;,B,,,f,,,__,,,Tp,,,J_1WB_m,,,_,,,f,,,_L,:,Int,;,t0ZA,,,wb,,,_0,:,Boolean,;,k_9,,,_,,,_,:,Array,[,Int,,,0B1001000,],;,_,:,Array,[,Array,[,Int,,,4,],,,0b1000001,],;,m59_4,,,_VO,:,_,;,T,,,_v,,,V,:,___H_k4,),{,},},Class,S5_,:,_,{,},<EOF>''',101))

    def test_1282(self):
        self.assertTrue(TestLexer.test('''Class _:_s{$5__(){}$8(K:Array [Float ,0115];_q,W,N,_:Int ;_:Array [Array [String ,0115],0B10110]){}Val $5i_K_3,$_:_25;_(_o,_,Q9_:_;o:Int ;__,_6:Array [Array [Array [Array [Int ,01],0b10],0b1010100],0X4_4_1]){} }Class _{}Class a_1_:_S{}''','''Class,_,:,_s,{,$5__,(,),{,},$8,(,K,:,Array,[,Float,,,0115,],;,_q,,,W,,,N,,,_,:,Int,;,_,:,Array,[,Array,[,String,,,0115,],,,0B10110,],),{,},Val,$5i_K_3,,,$_,:,_25,;,_,(,_o,,,_,,,Q9_,:,_,;,o,:,Int,;,__,,,_6,:,Array,[,Array,[,Array,[,Array,[,Int,,,01,],,,0b10,],,,0b1010100,],,,0X441,],),{,},},Class,_,{,},Class,a_1_,:,_S,{,},<EOF>''',101))

    def test_1283(self):
        self.assertTrue(TestLexer.test('''Class __g:_y0_{Var $j,$1:h;Var F,M8K_6,_6,__:Float ;Val $4_,R,e6,$0:Array [String ,6];Constructor (___:_F;_:_82_){} }''','''Class,__g,:,_y0_,{,Var,$j,,,$1,:,h,;,Var,F,,,M8K_6,,,_6,,,__,:,Float,;,Val,$4_,,,R,,,e6,,,$0,:,Array,[,String,,,6,],;,Constructor,(,___,:,_F,;,_,:,_82_,),{,},},<EOF>''',101))

    def test_1284(self):
        self.assertTrue(TestLexer.test('''Class E1_Je0:M__{$r(_:Boolean ;_1,__g,d7_M,_:String ){} }Class _:_{}Class _8{}Class _:__u_{}Class n{Var $C:_;}''','''Class,E1_Je0,:,M__,{,$r,(,_,:,Boolean,;,_1,,,__g,,,d7_M,,,_,:,String,),{,},},Class,_,:,_,{,},Class,_8,{,},Class,_,:,__u_,{,},Class,n,{,Var,$C,:,_,;,},<EOF>''',101))

    def test_1285(self):
        self.assertTrue(TestLexer.test('''Class gJ:__R0{Constructor (){Continue ;yd_::$4_();}Var _8_:___8;Var $5,X_:Array [String ,065];Constructor (){} }''','''Class,gJ,:,__R0,{,Constructor,(,),{,Continue,;,yd_,::,$4_,(,),;,},Var,_8_,:,___8,;,Var,$5,,,X_,:,Array,[,String,,,065,],;,Constructor,(,),{,},},<EOF>''',101))

    def test_1286(self):
        self.assertTrue(TestLexer.test('''Class w:KH{Constructor (US7,t,_8ul_,t,_:kc;__:_3;_,_3:Boolean ;_:Array [Array [Array [String ,0B1_10_1],02],06]){} }''','''Class,w,:,KH,{,Constructor,(,US7,,,t,,,_8ul_,,,t,,,_,:,kc,;,__,:,_3,;,_,,,_3,:,Boolean,;,_,:,Array,[,Array,[,Array,[,String,,,0B1101,],,,02,],,,06,],),{,},},<EOF>''',101))

    def test_1287(self):
        self.assertTrue(TestLexer.test('''Class Elx:r{Var T_2,$5_:Float ;Constructor (w7,P:Array [String ,0x14]){} }Class _:D_3{}Class _f__G{Destructor (){}Destructor (){} }''','''Class,Elx,:,r,{,Var,T_2,,,$5_,:,Float,;,Constructor,(,w7,,,P,:,Array,[,String,,,0x14,],),{,},},Class,_,:,D_3,{,},Class,_f__G,{,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_1288(self):
        self.assertTrue(TestLexer.test('''Class Z:U{Constructor (_0,m,_3:Float ;__:Float ;ZB:Array [Array [Array [Float ,0b110101],0b10_0_01],06131544]){} }Class C63:xv_G{Val $6414ZB:_;Constructor (){} }''','''Class,Z,:,U,{,Constructor,(,_0,,,m,,,_3,:,Float,;,__,:,Float,;,ZB,:,Array,[,Array,[,Array,[,Float,,,0b110101,],,,0b10001,],,,06131544,],),{,},},Class,C63,:,xv_G,{,Val,$6414ZB,:,_,;,Constructor,(,),{,},},<EOF>''',101))

    def test_1289(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class F_:_{}Class dH:_{Val Ze:Array [Array [String ,0B1],43];Destructor (){}Destructor (){} }Class _a{}''','''Class,_,:,_,{,},Class,F_,:,_,{,},Class,dH,:,_,{,Val,Ze,:,Array,[,Array,[,String,,,0B1,],,,43,],;,Destructor,(,),{,},Destructor,(,),{,},},Class,_a,{,},<EOF>''',101))

    def test_1290(self):
        self.assertTrue(TestLexer.test('''Class _:_75_{Var D2:Boolean ;Constructor (D__Z,_,j_F,W_:Array [Array [Int ,0X15],55_1];f,_:Array [Boolean ,0B1];w_,f:_){ {} }Destructor (){}$___(){Continue ;} }Class _:T95_9{Val _Fb1,_28,_s,h,$_9,$___1:Array [Int ,44_8_6];Val _:Oj;Val $254:String ;}''','''Class,_,:,_75_,{,Var,D2,:,Boolean,;,Constructor,(,D__Z,,,_,,,j_F,,,W_,:,Array,[,Array,[,Int,,,0X15,],,,551,],;,f,,,_,:,Array,[,Boolean,,,0B1,],;,w_,,,f,:,_,),{,{,},},Destructor,(,),{,},$___,(,),{,Continue,;,},},Class,_,:,T95_9,{,Val,_Fb1,,,_28,,,_s,,,h,,,$_9,,,$___1,:,Array,[,Int,,,4486,],;,Val,_,:,Oj,;,Val,$254,:,String,;,},<EOF>''',101))

    def test_1291(self):
        self.assertTrue(TestLexer.test('''Class Og{}Class _{Var _R__E,$_,$_P:Array [Array [Int ,0X2E],0X31E];MV(_:Array [Array [Array [Array [Float ,0x63],0X2],5],03_1_1126]){}Var $7z:Boolean ;}''','''Class,Og,{,},Class,_,{,Var,_R__E,,,$_,,,$_P,:,Array,[,Array,[,Int,,,0X2E,],,,0X31E,],;,MV,(,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x63,],,,0X2,],,,5,],,,0311126,],),{,},Var,$7z,:,Boolean,;,},<EOF>''',101))

    def test_1292(self):
        self.assertTrue(TestLexer.test('''Class fA:V{}Class Q:L{Destructor (){}Val kS,$m_,f_5,__2_ltMN:Array [Int ,0x35];Var $cS:Array [Float ,0X10];Var VR81:_1;Constructor (m,_:Y1_;_,_i,_:Array [Array [Array [Array [Array [Int ,0X10],0563_3],48],05_5],7_4_2];hh,_S:Array [Array [Array [Array [Array [String ,3],0122],48],0B111111],34_2_7];_k6:Array [Int ,48];M,_5R:String ;p_,_:Array [Array [Array [Int ,0122],5_60],0b1];Rk:zJU6){}Val $o210:Array [Array [Float ,0xD_D],0B111111];Constructor (X_:Boolean ){}Constructor (){Var _St27_7:_;} }''','''Class,fA,:,V,{,},Class,Q,:,L,{,Destructor,(,),{,},Val,kS,,,$m_,,,f_5,,,__2_ltMN,:,Array,[,Int,,,0x35,],;,Var,$cS,:,Array,[,Float,,,0X10,],;,Var,VR81,:,_1,;,Constructor,(,m,,,_,:,Y1_,;,_,,,_i,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X10,],,,05633,],,,48,],,,055,],,,742,],;,hh,,,_S,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,3,],,,0122,],,,48,],,,0B111111,],,,3427,],;,_k6,:,Array,[,Int,,,48,],;,M,,,_5R,:,String,;,p_,,,_,:,Array,[,Array,[,Array,[,Int,,,0122,],,,560,],,,0b1,],;,Rk,:,zJU6,),{,},Val,$o210,:,Array,[,Array,[,Float,,,0xDD,],,,0B111111,],;,Constructor,(,X_,:,Boolean,),{,},Constructor,(,),{,Var,_St27_7,:,_,;,},},<EOF>''',101))

    def test_1293(self):
        self.assertTrue(TestLexer.test('''Class _{$6_(_:Int ;_6:Array [Array [Array [Array [Array [Array [Int ,015],0B101],81],5],0x52],90]){}$3_4(){} }Class _:_7_56d_Jf___{$8(){} }Class _5_0:_6_R{Constructor (){} }''','''Class,_,{,$6_,(,_,:,Int,;,_6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,015,],,,0B101,],,,81,],,,5,],,,0x52,],,,90,],),{,},$3_4,(,),{,},},Class,_,:,_7_56d_Jf___,{,$8,(,),{,},},Class,_5_0,:,_6_R,{,Constructor,(,),{,},},<EOF>''',101))

    def test_1294(self):
        self.assertTrue(TestLexer.test('''Class y_:_{}Class i4_{_Sw(a,_,_T,mz,f_,_:Array [String ,017];_,_y_:Float ;l:T;k,_,L,_B2_W,_hiW,V_,f_,Z_3_9,___:l;W1:w2){} }Class _:_{}''','''Class,y_,:,_,{,},Class,i4_,{,_Sw,(,a,,,_,,,_T,,,mz,,,f_,,,_,:,Array,[,String,,,017,],;,_,,,_y_,:,Float,;,l,:,T,;,k,,,_,,,L,,,_B2_W,,,_hiW,,,V_,,,f_,,,Z_3_9,,,___,:,l,;,W1,:,w2,),{,},},Class,_,:,_,{,},<EOF>''',101))

    def test_1295(self):
        self.assertTrue(TestLexer.test('''Class b:_q2{Constructor (){}Var $_,_e,j,V3,$_,_x4:Float ;_7(_:Boolean ){Continue ;}Var $09,$_e,_,$gni,O,_,$_:Array [Float ,0b10];Var C6Yi,h_,$_c,_:Array [Boolean ,0B1];Constructor (_:Array [Array [Float ,0X1B],0B1]){}Destructor (){}Destructor (){_S50704::$_8.f.R_()._5();}Constructor (Myo,N:Array [Boolean ,0b101_0_011_0010];c:Int ){} }Class _8_{Constructor (__:Array [Int ,0B1010100];_f,_3eZ___:Array [Float ,8_3]){__::$1();} }''','''Class,b,:,_q2,{,Constructor,(,),{,},Var,$_,,,_e,,,j,,,V3,,,$_,,,_x4,:,Float,;,_7,(,_,:,Boolean,),{,Continue,;,},Var,$09,,,$_e,,,_,,,$gni,,,O,,,_,,,$_,:,Array,[,Float,,,0b10,],;,Var,C6Yi,,,h_,,,$_c,,,_,:,Array,[,Boolean,,,0B1,],;,Constructor,(,_,:,Array,[,Array,[,Float,,,0X1B,],,,0B1,],),{,},Destructor,(,),{,},Destructor,(,),{,_S50704,::,$_8,.,f,.,R_,(,),.,_5,(,),;,},Constructor,(,Myo,,,N,:,Array,[,Boolean,,,0b10100110010,],;,c,:,Int,),{,},},Class,_8_,{,Constructor,(,__,:,Array,[,Int,,,0B1010100,],;,_f,,,_3eZ___,:,Array,[,Float,,,83,],),{,__,::,$1,(,),;,},},<EOF>''',101))

    def test_1296(self):
        self.assertTrue(TestLexer.test('''Class Q{Constructor (_:_;P,_8,C:Int ){Continue ;}Val $90,_:_;Constructor (__,_,X:z_){} }Class __X_:_{}Class _:_{}Class u{}''','''Class,Q,{,Constructor,(,_,:,_,;,P,,,_8,,,C,:,Int,),{,Continue,;,},Val,$90,,,_,:,_,;,Constructor,(,__,,,_,,,X,:,z_,),{,},},Class,__X_,:,_,{,},Class,_,:,_,{,},Class,u,{,},<EOF>''',101))

    def test_1297(self):
        self.assertTrue(TestLexer.test('''Class Voq{Val P,$av,t,_Bu_V,$82,__:Array [Array [Array [Array [Array [Boolean ,0xC],7_4_7],0b11111],0B1011101],6];Var $j:Array [Boolean ,0xB];}''','''Class,Voq,{,Val,P,,,$av,,,t,,,_Bu_V,,,$82,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xC,],,,747,],,,0b11111,],,,0B1011101,],,,6,],;,Var,$j,:,Array,[,Boolean,,,0xB,],;,},<EOF>''',101))

    def test_1298(self):
        self.assertTrue(TestLexer.test('''Class Nn{}Class HQ{Constructor (){}Var $__s:Array [Array [Array [Array [Array [Array [Int ,0X29],0X1],0x94C],0B1111],0x5],052];}''','''Class,Nn,{,},Class,HQ,{,Constructor,(,),{,},Var,$__s,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X29,],,,0X1,],,,0x94C,],,,0B1111,],,,0x5,],,,052,],;,},<EOF>''',101))

    def test_1299(self):
        self.assertTrue(TestLexer.test('''Class _7{Var $_C:Boolean ;Constructor (_:Array [Boolean ,0xB];_,_,_V:Boolean ){Break ;Return ;}Constructor (){}Destructor (){Break ;} }''','''Class,_7,{,Var,$_C,:,Boolean,;,Constructor,(,_,:,Array,[,Boolean,,,0xB,],;,_,,,_,,,_V,:,Boolean,),{,Break,;,Return,;,},Constructor,(,),{,},Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_1300(self):
        self.assertTrue(TestLexer.test('''Class E91y8R:x_{Constructor (Q_:A8_;_:Array [Array [Array [Array [Array [Float ,0x1],06],07_525_53],052],1]){} }Class op{Val u:Array [Array [Array [Array [String ,0b110],0b1010001],052],05];}Class N{}Class _{}''','''Class,E91y8R,:,x_,{,Constructor,(,Q_,:,A8_,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x1,],,,06,],,,0752553,],,,052,],,,1,],),{,},},Class,op,{,Val,u,:,Array,[,Array,[,Array,[,Array,[,String,,,0b110,],,,0b1010001,],,,052,],,,05,],;,},Class,N,{,},Class,_,{,},<EOF>''',101))

    def test_1301(self):
        self.assertTrue(TestLexer.test('''Class _{}Class H{}Class _:Q1_{Val __:Array [Array [Boolean ,0B1110_0],01_1_6];Constructor (_,_L:Array [Boolean ,0B1011];_____:Array [Float ,0B1]){}Val q:eh33;}''','''Class,_,{,},Class,H,{,},Class,_,:,Q1_,{,Val,__,:,Array,[,Array,[,Boolean,,,0B11100,],,,0116,],;,Constructor,(,_,,,_L,:,Array,[,Boolean,,,0B1011,],;,_____,:,Array,[,Float,,,0B1,],),{,},Val,q,:,eh33,;,},<EOF>''',101))

    def test_1302(self):
        self.assertTrue(TestLexer.test('''Class BU{Val y,$_:Oj81;Var $d3_,$Tf,X28,_:Array [Array [Array [Boolean ,053],11],7_3];$_(g,_,X,__,U:g3A1;_c,_,ZL1,_:B_g){} }Class _88{}Class _:_{}Class b:u_{}''','''Class,BU,{,Val,y,,,$_,:,Oj81,;,Var,$d3_,,,$Tf,,,X28,,,_,:,Array,[,Array,[,Array,[,Boolean,,,053,],,,11,],,,73,],;,$_,(,g,,,_,,,X,,,__,,,U,:,g3A1,;,_c,,,_,,,ZL1,,,_,:,B_g,),{,},},Class,_88,{,},Class,_,:,_,{,},Class,b,:,u_,{,},<EOF>''',101))

    def test_1303(self):
        self.assertTrue(TestLexer.test('''Class t{Var $42a69,_,z_:Array [Boolean ,0X4_D];_(f__M1Z:k;_HB,_:S){}Constructor (){} }Class _:v1{Val _iX__5y6__M___R1F:Float ;Constructor (y9_:_){} }''','''Class,t,{,Var,$42a69,,,_,,,z_,:,Array,[,Boolean,,,0X4D,],;,_,(,f__M1Z,:,k,;,_HB,,,_,:,S,),{,},Constructor,(,),{,},},Class,_,:,v1,{,Val,_iX__5y6__M___R1F,:,Float,;,Constructor,(,y9_,:,_,),{,},},<EOF>''',101))

    def test_1304(self):
        self.assertTrue(TestLexer.test('''Class J{}Class _:u0{Constructor (_,c5,Tk:b6C_;_,L:w_0;q__,_,E:Int ;B1,_,a,_f:Array [String ,0b11101]){} }Class I_{}''','''Class,J,{,},Class,_,:,u0,{,Constructor,(,_,,,c5,,,Tk,:,b6C_,;,_,,,L,:,w_0,;,q__,,,_,,,E,:,Int,;,B1,,,_,,,a,,,_f,:,Array,[,String,,,0b11101,],),{,},},Class,I_,{,},<EOF>''',101))

    def test_1305(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _p_k_:_{Destructor (){}Constructor (c:Array [Array [Boolean ,2],0xE];r7:Array [Boolean ,0B1]){} }''','''Class,_,:,_,{,},Class,_p_k_,:,_,{,Destructor,(,),{,},Constructor,(,c,:,Array,[,Array,[,Boolean,,,2,],,,0xE,],;,r7,:,Array,[,Boolean,,,0B1,],),{,},},<EOF>''',101))

    def test_1306(self):
        self.assertTrue(TestLexer.test('''Class _H88{Constructor (){}Constructor (M:String ;_j:Array [Int ,0XD_55_8_8]){}Constructor (){D::$5_();} }Class _:m{Var _:d;}''','''Class,_H88,{,Constructor,(,),{,},Constructor,(,M,:,String,;,_j,:,Array,[,Int,,,0XD5588,],),{,},Constructor,(,),{,D,::,$5_,(,),;,},},Class,_,:,m,{,Var,_,:,d,;,},<EOF>''',101))

    def test_1307(self):
        self.assertTrue(TestLexer.test('''Class A:_{Destructor (){} }Class J{Constructor (_:String ;_v,_:Array [Array [Array [Int ,0X1],032],0X596];_:_T){} }Class _:u_{}Class B9_j6{Constructor (){} }''','''Class,A,:,_,{,Destructor,(,),{,},},Class,J,{,Constructor,(,_,:,String,;,_v,,,_,:,Array,[,Array,[,Array,[,Int,,,0X1,],,,032,],,,0X596,],;,_,:,_T,),{,},},Class,_,:,u_,{,},Class,B9_j6,{,Constructor,(,),{,},},<EOF>''',101))

    def test_1308(self):
        self.assertTrue(TestLexer.test('''Class _:Uy{h(BI:Array [Array [Array [Array [Array [Boolean ,85227_0],2],45],0XE],0b1010];P_:CG){}Val c_5H,M_:Array [Array [Array [String ,0664],0B1],0X5D];$_F2(_:d_){New X()._().gY();{Return ;} }}Class _:D6{}''','''Class,_,:,Uy,{,h,(,BI,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,852270,],,,2,],,,45,],,,0XE,],,,0b1010,],;,P_,:,CG,),{,},Val,c_5H,,,M_,:,Array,[,Array,[,Array,[,String,,,0664,],,,0B1,],,,0X5D,],;,$_F2,(,_,:,d_,),{,New,X,(,),.,_,(,),.,gY,(,),;,{,Return,;,},},},Class,_,:,D6,{,},<EOF>''',101))

    def test_1309(self):
        self.assertTrue(TestLexer.test('''Class _:L{$M(Sd,e,_,_672P:Float ;_,C3_:_;e:Int ;_h,_:Array [Boolean ,8_1];a:Boolean ;_:T_p;J,R,_:Int ;t,_:Array [Array [Boolean ,40],0x5F]){} }''','''Class,_,:,L,{,$M,(,Sd,,,e,,,_,,,_672P,:,Float,;,_,,,C3_,:,_,;,e,:,Int,;,_h,,,_,:,Array,[,Boolean,,,81,],;,a,:,Boolean,;,_,:,T_p,;,J,,,R,,,_,:,Int,;,t,,,_,:,Array,[,Array,[,Boolean,,,40,],,,0x5F,],),{,},},<EOF>''',101))

    def test_1310(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _:__{Constructor (_Jh,yKZ92,_8K1w:__zT7e){}Destructor (){Continue ;Break ;Var _,E6E1,CF:Boolean ;} }Class o8{}Class Od:L{}''','''Class,_,{,},Class,_,:,__,{,Constructor,(,_Jh,,,yKZ92,,,_8K1w,:,__zT7e,),{,},Destructor,(,),{,Continue,;,Break,;,Var,_,,,E6E1,,,CF,:,Boolean,;,},},Class,o8,{,},Class,Od,:,L,{,},<EOF>''',101))

    def test_1311(self):
        self.assertTrue(TestLexer.test('''Class _6jx:_{Constructor (_,__,bF:Array [Array [String ,0b101100],051];_:Boolean ;bQ52,F,_:Array [Array [Array [Boolean ,0b1_1_0],0741_4],80]){} }''','''Class,_6jx,:,_,{,Constructor,(,_,,,__,,,bF,:,Array,[,Array,[,String,,,0b101100,],,,051,],;,_,:,Boolean,;,bQ52,,,F,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0b110,],,,07414,],,,80,],),{,},},<EOF>''',101))

    def test_1312(self):
        self.assertTrue(TestLexer.test('''Class _:_{__(l,__w___:Array [Array [String ,8],014]){} }Class G:V5{Constructor (){Break ;} }Class _{Var $n:String ;}Class C{}Class __N{}Class s_:k{}Class _3:_{}Class D{_1(G,_G,_4z,X9_e:Array [Array [Int ,0x88E_40],59]){} }Class N:_s{}''','''Class,_,:,_,{,__,(,l,,,__w___,:,Array,[,Array,[,String,,,8,],,,014,],),{,},},Class,G,:,V5,{,Constructor,(,),{,Break,;,},},Class,_,{,Var,$n,:,String,;,},Class,C,{,},Class,__N,{,},Class,s_,:,k,{,},Class,_3,:,_,{,},Class,D,{,_1,(,G,,,_G,,,_4z,,,X9_e,:,Array,[,Array,[,Int,,,0x88E40,],,,59,],),{,},},Class,N,:,_s,{,},<EOF>''',101))

    def test_1313(self):
        self.assertTrue(TestLexer.test('''Class _CgX4X:kN{Constructor (){} }Class __{}Class P2_:_y{}Class __:__{}Class _:J{}Class l{}Class _:_{}Class _:O_{a(h:Float ;_F:Array [Float ,0b1]){Continue ;_l9::$J();} }''','''Class,_CgX4X,:,kN,{,Constructor,(,),{,},},Class,__,{,},Class,P2_,:,_y,{,},Class,__,:,__,{,},Class,_,:,J,{,},Class,l,{,},Class,_,:,_,{,},Class,_,:,O_,{,a,(,h,:,Float,;,_F,:,Array,[,Float,,,0b1,],),{,Continue,;,_l9,::,$J,(,),;,},},<EOF>''',101))

    def test_1314(self):
        self.assertTrue(TestLexer.test('''Class y:_{}Class _d:k_{}Class v1q6___:N{X_(_8x_,W6:Boolean ;__,u,_:v){Var _:Int ;{} }}Class A{Val $1,$_,$J:Int ;}Class _:P_6{}Class ____:_45v_s7{}Class _{}''','''Class,y,:,_,{,},Class,_d,:,k_,{,},Class,v1q6___,:,N,{,X_,(,_8x_,,,W6,:,Boolean,;,__,,,u,,,_,:,v,),{,Var,_,:,Int,;,{,},},},Class,A,{,Val,$1,,,$_,,,$J,:,Int,;,},Class,_,:,P_6,{,},Class,____,:,_45v_s7,{,},Class,_,{,},<EOF>''',101))

    def test_1315(self):
        self.assertTrue(TestLexer.test('''Class U52Vt:__uw_S{$Q3H(J__8C,p7C,C__6_,__:Int ;I,R_:Array [Array [Boolean ,0b1],0B100001];S:_i){L_::$S();Continue ;} }''','''Class,U52Vt,:,__uw_S,{,$Q3H,(,J__8C,,,p7C,,,C__6_,,,__,:,Int,;,I,,,R_,:,Array,[,Array,[,Boolean,,,0b1,],,,0B100001,],;,S,:,_i,),{,L_,::,$S,(,),;,Continue,;,},},<EOF>''',101))

    def test_1316(self):
        self.assertTrue(TestLexer.test('''Class __{}Class _3a6{D(I,A:f___5_;_719F4,r,_,_z,_,y:Array [Boolean ,074]){Continue ;Var k:Array [Array [String ,52],0x24];Val l:Array [Array [Boolean ,52],0X4];}Constructor (){} }Class L{}''','''Class,__,{,},Class,_3a6,{,D,(,I,,,A,:,f___5_,;,_719F4,,,r,,,_,,,_z,,,_,,,y,:,Array,[,Boolean,,,074,],),{,Continue,;,Var,k,:,Array,[,Array,[,String,,,52,],,,0x24,],;,Val,l,:,Array,[,Array,[,Boolean,,,52,],,,0X4,],;,},Constructor,(,),{,},},Class,L,{,},<EOF>''',101))

    def test_1317(self):
        self.assertTrue(TestLexer.test('''Class S:A{a(_,_:__;N:Boolean ;K,S_o:_K;vzS72R,Hse,__L_:Float ;f:v;_2__3:___;_,_MD_,_u:Array [Array [String ,01_2],0127];P,A,_:Array [Array [Boolean ,4],44]){} }Class g8874{}''','''Class,S,:,A,{,a,(,_,,,_,:,__,;,N,:,Boolean,;,K,,,S_o,:,_K,;,vzS72R,,,Hse,,,__L_,:,Float,;,f,:,v,;,_2__3,:,___,;,_,,,_MD_,,,_u,:,Array,[,Array,[,String,,,012,],,,0127,],;,P,,,A,,,_,:,Array,[,Array,[,Boolean,,,4,],,,44,],),{,},},Class,g8874,{,},<EOF>''',101))

    def test_1318(self):
        self.assertTrue(TestLexer.test('''Class KC__{}Class _150a_{Constructor (I,T_:Int ;q,_soK,D:Float ;G5,_:Float ;_:o;h0773_5y,n:Array [Boolean ,01_0];_:Array [Array [Int ,0104],0104];_z4_,Y6,_:Boolean ;_:Z){} }''','''Class,KC__,{,},Class,_150a_,{,Constructor,(,I,,,T_,:,Int,;,q,,,_soK,,,D,:,Float,;,G5,,,_,:,Float,;,_,:,o,;,h0773_5y,,,n,:,Array,[,Boolean,,,010,],;,_,:,Array,[,Array,[,Int,,,0104,],,,0104,],;,_z4_,,,Y6,,,_,:,Boolean,;,_,:,Z,),{,},},<EOF>''',101))

    def test_1319(self):
        self.assertTrue(TestLexer.test('''Class _{Val v_,__:Array [Boolean ,0X3F];Constructor (_,_,r,_:Int ;m:__;f:Array [String ,0X3F]){} }Class _{}Class _:_{}Class _:m_9_{}''','''Class,_,{,Val,v_,,,__,:,Array,[,Boolean,,,0X3F,],;,Constructor,(,_,,,_,,,r,,,_,:,Int,;,m,:,__,;,f,:,Array,[,String,,,0X3F,],),{,},},Class,_,{,},Class,_,:,_,{,},Class,_,:,m_9_,{,},<EOF>''',101))

    def test_1320(self):
        self.assertTrue(TestLexer.test('''Class __r:_{}Class G_:__{Var $_,_:e;Val NB:Array [Boolean ,0X5C];}Class _:rI{}Class y_{}Class _7_V{Destructor (){} }''','''Class,__r,:,_,{,},Class,G_,:,__,{,Var,$_,,,_,:,e,;,Val,NB,:,Array,[,Boolean,,,0X5C,],;,},Class,_,:,rI,{,},Class,y_,{,},Class,_7_V,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1321(self):
        self.assertTrue(TestLexer.test('''Class _{Var _1,$418,$_1d1Z:Array [Array [Array [Array [Int ,0b1_0],38],0x4],06];}Class _:L{}Class _OK:W5{}Class _1_{}''','''Class,_,{,Var,_1,,,$418,,,$_1d1Z,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b10,],,,38,],,,0x4,],,,06,],;,},Class,_,:,L,{,},Class,_OK,:,W5,{,},Class,_1_,{,},<EOF>''',101))

    def test_1322(self):
        self.assertTrue(TestLexer.test('''Class b3aX_2_{Var $3,_u5o:Float ;Constructor (J_:Float ;Ss,_6:Array [Array [Array [Boolean ,01],3_8],1];_bi81:Array [Int ,0xB];_V:Int ){}Constructor (vT_L,_:Array [Array [Array [Int ,0101],0B1001011],0XA_1]){Return ;} }''','''Class,b3aX_2_,{,Var,$3,,,_u5o,:,Float,;,Constructor,(,J_,:,Float,;,Ss,,,_6,:,Array,[,Array,[,Array,[,Boolean,,,01,],,,38,],,,1,],;,_bi81,:,Array,[,Int,,,0xB,],;,_V,:,Int,),{,},Constructor,(,vT_L,,,_,:,Array,[,Array,[,Array,[,Int,,,0101,],,,0B1001011,],,,0XA1,],),{,Return,;,},},<EOF>''',101))

    def test_1323(self):
        self.assertTrue(TestLexer.test('''Class p:i4_{Destructor (){Continue ;} }Class f:_{Var $_,_,u:Array [Array [Array [Array [Array [Array [String ,71],0X51],0b1],9_5],0x2C],3_8];}Class V:_{}''','''Class,p,:,i4_,{,Destructor,(,),{,Continue,;,},},Class,f,:,_,{,Var,$_,,,_,,,u,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,71,],,,0X51,],,,0b1,],,,95,],,,0x2C,],,,38,],;,},Class,V,:,_,{,},<EOF>''',101))

    def test_1324(self):
        self.assertTrue(TestLexer.test('''Class hY:_{}Class w{}Class x{}Class n651b_:___{$0(Y_:Array [Boolean ,17];_,_,_:_50;_,c6:Array [Boolean ,0B100110]){}Val $_:Array [Array [Int ,17],17];}''','''Class,hY,:,_,{,},Class,w,{,},Class,x,{,},Class,n651b_,:,___,{,$0,(,Y_,:,Array,[,Boolean,,,17,],;,_,,,_,,,_,:,_50,;,_,,,c6,:,Array,[,Boolean,,,0B100110,],),{,},Val,$_,:,Array,[,Array,[,Int,,,17,],,,17,],;,},<EOF>''',101))

    def test_1325(self):
        self.assertTrue(TestLexer.test('''Class cH_:o{U_(){}_(Q,_0_0:_3;_B:Float ;_4_9,z:String ){}Var $8Fl7_6,_:q;Constructor (v_,f:_0){Return ;}Constructor (_iP5__,C,U:Boolean ;mj,_l_4Hvr,_,x3,__0z_:m_;_,_83,__jz,g:Boolean ;N2o_,i_:Array [Array [Array [Array [Array [Float ,89],051],0B1_0_0],0116],89];z_5:Array [Boolean ,6]){Var N:F;{} }}''','''Class,cH_,:,o,{,U_,(,),{,},_,(,Q,,,_0_0,:,_3,;,_B,:,Float,;,_4_9,,,z,:,String,),{,},Var,$8Fl7_6,,,_,:,q,;,Constructor,(,v_,,,f,:,_0,),{,Return,;,},Constructor,(,_iP5__,,,C,,,U,:,Boolean,;,mj,,,_l_4Hvr,,,_,,,x3,,,__0z_,:,m_,;,_,,,_83,,,__jz,,,g,:,Boolean,;,N2o_,,,i_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,89,],,,051,],,,0B100,],,,0116,],,,89,],;,z_5,:,Array,[,Boolean,,,6,],),{,Var,N,:,F,;,{,},},},<EOF>''',101))

    def test_1326(self):
        self.assertTrue(TestLexer.test('''Class U{Var $_:Array [Array [Array [Array [Int ,0b10],0B1_1_1111],86],0B1];Val $9___J:Array [Int ,0b110101];_z(){Break ;} }''','''Class,U,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b10,],,,0B111111,],,,86,],,,0B1,],;,Val,$9___J,:,Array,[,Int,,,0b110101,],;,_z,(,),{,Break,;,},},<EOF>''',101))

    def test_1327(self):
        self.assertTrue(TestLexer.test('''Class F:_{$_3(_,O_659_4:_i){Break ;} }Class d:o{_(){}$1(M5,__,_Ga:_;_,hx1,_2E,_,_,h:Array [Boolean ,02]){} }Class _:_{}''','''Class,F,:,_,{,$_3,(,_,,,O_659_4,:,_i,),{,Break,;,},},Class,d,:,o,{,_,(,),{,},$1,(,M5,,,__,,,_Ga,:,_,;,_,,,hx1,,,_2E,,,_,,,_,,,h,:,Array,[,Boolean,,,02,],),{,},},Class,_,:,_,{,},<EOF>''',101))

    def test_1328(self):
        self.assertTrue(TestLexer.test('''Class l4__I:z{__46_(_,q,XX_t3_,__4,_l:_;_6,_:Array [Array [Float ,0B110111],0125];e,__350,Tf,Y:Array [Array [Array [Array [Array [Int ,0XD],67],0125],0X2],4_1_9];_E:Int ){} }''','''Class,l4__I,:,z,{,__46_,(,_,,,q,,,XX_t3_,,,__4,,,_l,:,_,;,_6,,,_,:,Array,[,Array,[,Float,,,0B110111,],,,0125,],;,e,,,__350,,,Tf,,,Y,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0XD,],,,67,],,,0125,],,,0X2,],,,419,],;,_E,:,Int,),{,},},<EOF>''',101))

    def test_1329(self):
        self.assertTrue(TestLexer.test('''Class ___9:_{}Class __{Var $_6i,_,$_:Float ;$v(){Continue ;} }Class HN{}Class ps{Destructor (){} }Class _:_{Constructor (){} }''','''Class,___9,:,_,{,},Class,__,{,Var,$_6i,,,_,,,$_,:,Float,;,$v,(,),{,Continue,;,},},Class,HN,{,},Class,ps,{,Destructor,(,),{,},},Class,_,:,_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_1330(self):
        self.assertTrue(TestLexer.test('''Class _7:_{$628w(c0_s_:Array [Array [Boolean ,0XF1],6_92];m_:Boolean ;e,_5,V:u_d;Iv8,_:Array [Float ,0xCB9];__,A:Int ){} }''','''Class,_7,:,_,{,$628w,(,c0_s_,:,Array,[,Array,[,Boolean,,,0XF1,],,,692,],;,m_,:,Boolean,;,e,,,_5,,,V,:,u_d,;,Iv8,,,_,:,Array,[,Float,,,0xCB9,],;,__,,,A,:,Int,),{,},},<EOF>''',101))

    def test_1331(self):
        self.assertTrue(TestLexer.test('''Class FE_{Destructor (){}Var C,$v8:Array [String ,06];Constructor (A:_6__;g2,_4q_:Array [Array [Boolean ,0b10000],0B10100];N:Float ;_:Float ){} }''','''Class,FE_,{,Destructor,(,),{,},Var,C,,,$v8,:,Array,[,String,,,06,],;,Constructor,(,A,:,_6__,;,g2,,,_4q_,:,Array,[,Array,[,Boolean,,,0b10000,],,,0B10100,],;,N,:,Float,;,_,:,Float,),{,},},<EOF>''',101))

    def test_1332(self):
        self.assertTrue(TestLexer.test('''Class _{Var _969D_,$__1,_4_:Array [Array [Boolean ,0b10000],0132];Constructor (_,_:Boolean ;tk,_8n0,_Iq,_,p7,Q,_3_,_:_){} }''','''Class,_,{,Var,_969D_,,,$__1,,,_4_,:,Array,[,Array,[,Boolean,,,0b10000,],,,0132,],;,Constructor,(,_,,,_,:,Boolean,;,tk,,,_8n0,,,_Iq,,,_,,,p7,,,Q,,,_3_,,,_,:,_,),{,},},<EOF>''',101))

    def test_1333(self):
        self.assertTrue(TestLexer.test('''Class _{T(){Continue ;Break ;l7w_f::$YF();} }Class n3k1:g_{E(_8LO,_:Int ){ {} }Val $S,$_4Q_,$w73r_A:_2E;V(){} }''','''Class,_,{,T,(,),{,Continue,;,Break,;,l7w_f,::,$YF,(,),;,},},Class,n3k1,:,g_,{,E,(,_8LO,,,_,:,Int,),{,{,},},Val,$S,,,$_4Q_,,,$w73r_A,:,_2E,;,V,(,),{,},},<EOF>''',101))

    def test_1334(self):
        self.assertTrue(TestLexer.test('''Class zn{_m_9(_:Array [Array [Array [Array [Float ,0X32],0B1001000],037],0b111110]){} }Class wB:y{Constructor (e:Boolean ){} }Class _{}''','''Class,zn,{,_m_9,(,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X32,],,,0B1001000,],,,037,],,,0b111110,],),{,},},Class,wB,:,y,{,Constructor,(,e,:,Boolean,),{,},},Class,_,{,},<EOF>''',101))

    def test_1335(self):
        self.assertTrue(TestLexer.test('''Class r:_NM{}Class Q:_Q{Destructor (){Break ;}Var R9F,$_7,Vc:_3U;}Class H014{Constructor (__m0:c2_9;_0:Array [Array [Boolean ,067],067];Y_:Float ){_A5::$L();}Destructor (){} }''','''Class,r,:,_NM,{,},Class,Q,:,_Q,{,Destructor,(,),{,Break,;,},Var,R9F,,,$_7,,,Vc,:,_3U,;,},Class,H014,{,Constructor,(,__m0,:,c2_9,;,_0,:,Array,[,Array,[,Boolean,,,067,],,,067,],;,Y_,:,Float,),{,_A5,::,$L,(,),;,},Destructor,(,),{,},},<EOF>''',101))

    def test_1336(self):
        self.assertTrue(TestLexer.test('''Class qA3:_4{Val _,_W_m:_0;}Class j9{_7(p:Array [Array [Int ,4],4]){} }Class W:v{}Class Ahl:_{Var $Y:_qW_;Var X:String ;}''','''Class,qA3,:,_4,{,Val,_,,,_W_m,:,_0,;,},Class,j9,{,_7,(,p,:,Array,[,Array,[,Int,,,4,],,,4,],),{,},},Class,W,:,v,{,},Class,Ahl,:,_,{,Var,$Y,:,_qW_,;,Var,X,:,String,;,},<EOF>''',101))

    def test_1337(self):
        self.assertTrue(TestLexer.test('''Class _:_R5v2{Val $v:Array [String ,02_07];}Class _{}Class _{Val ___,z8__,$_,u,$_,__U71,$k_:_;Var $2,$J0:Array [Array [Array [Int ,0B10],0b1_1_1],0B1_010];}''','''Class,_,:,_R5v2,{,Val,$v,:,Array,[,String,,,0207,],;,},Class,_,{,},Class,_,{,Val,___,,,z8__,,,$_,,,u,,,$_,,,__U71,,,$k_,:,_,;,Var,$2,,,$J0,:,Array,[,Array,[,Array,[,Int,,,0B10,],,,0b111,],,,0B1010,],;,},<EOF>''',101))

    def test_1338(self):
        self.assertTrue(TestLexer.test('''Class AU:_{Destructor (){} }Class _f6:q_03{Constructor (C0,d_:P_1){Break ;}Var $_Yy,$5ZW2_,$_d_:Array [Array [Array [Boolean ,0100],0b11],03];Val E_442_:String ;Var $_G,c,$9:P;}''','''Class,AU,:,_,{,Destructor,(,),{,},},Class,_f6,:,q_03,{,Constructor,(,C0,,,d_,:,P_1,),{,Break,;,},Var,$_Yy,,,$5ZW2_,,,$_d_,:,Array,[,Array,[,Array,[,Boolean,,,0100,],,,0b11,],,,03,],;,Val,E_442_,:,String,;,Var,$_G,,,c,,,$9,:,P,;,},<EOF>''',101))

    def test_1339(self):
        self.assertTrue(TestLexer.test('''Class I:eX_{Constructor (K:Array [Float ,78];_pxb8:Array [Array [Array [Array [Array [Boolean ,062],0B101101],0x6],0xB16_8_C],0b1_10]){}Destructor (){} }Class q:K{Var a9:Float ;Destructor (){} }Class _u:_{}''','''Class,I,:,eX_,{,Constructor,(,K,:,Array,[,Float,,,78,],;,_pxb8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,062,],,,0B101101,],,,0x6,],,,0xB168C,],,,0b110,],),{,},Destructor,(,),{,},},Class,q,:,K,{,Var,a9,:,Float,;,Destructor,(,),{,},},Class,_u,:,_,{,},<EOF>''',101))

    def test_1340(self):
        self.assertTrue(TestLexer.test('''Class _0{Val $4,$4,$W8,_:Array [Array [Array [Array [Array [Array [Array [Int ,0b1_0_01],0X948],0XC_9],0B1],0x25],0x25],224_8];}Class _:Irm{Val $0__p,$5:Array [Float ,24];}''','''Class,_0,{,Val,$4,,,$4,,,$W8,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b1001,],,,0X948,],,,0XC9,],,,0B1,],,,0x25,],,,0x25,],,,2248,],;,},Class,_,:,Irm,{,Val,$0__p,,,$5,:,Array,[,Float,,,24,],;,},<EOF>''',101))

    def test_1341(self):
        self.assertTrue(TestLexer.test('''Class r__:y{_(_:String ;_,L_:Boolean ;K:Array [Array [Array [Array [String ,5229],49],0b1],0x32]){}Constructor (_0:Float ){} }''','''Class,r__,:,y,{,_,(,_,:,String,;,_,,,L_,:,Boolean,;,K,:,Array,[,Array,[,Array,[,Array,[,String,,,5229,],,,49,],,,0b1,],,,0x32,],),{,},Constructor,(,_0,:,Float,),{,},},<EOF>''',101))

    def test_1342(self):
        self.assertTrue(TestLexer.test('''Class Zw:_{}Class q_9:zH{}Class _S:__2{Constructor (__,_,y_:Array [Array [Boolean ,0b101001],037_3];_:Array [Array [Float ,0x1],0xBE_1];C_:Fnf9F;uU:Array [String ,03];_l:_U;_,__Mv_:v;__qV:Array [String ,0x3F];_2_j:Float ;f,E:Array [Array [Float ,6],0143];__:Array [Boolean ,0143]){} }''','''Class,Zw,:,_,{,},Class,q_9,:,zH,{,},Class,_S,:,__2,{,Constructor,(,__,,,_,,,y_,:,Array,[,Array,[,Boolean,,,0b101001,],,,0373,],;,_,:,Array,[,Array,[,Float,,,0x1,],,,0xBE1,],;,C_,:,Fnf9F,;,uU,:,Array,[,String,,,03,],;,_l,:,_U,;,_,,,__Mv_,:,v,;,__qV,:,Array,[,String,,,0x3F,],;,_2_j,:,Float,;,f,,,E,:,Array,[,Array,[,Float,,,6,],,,0143,],;,__,:,Array,[,Boolean,,,0143,],),{,},},<EOF>''',101))

    def test_1343(self):
        self.assertTrue(TestLexer.test('''Class S{Destructor (){Val _:Array [String ,055];}Var _382,z:Array [String ,0X715];Val __:B;}Class __{}Class __u:_{Constructor (_C:__;S,U:Array [Array [String ,30],055];l:_;C5,Z:Float ;r_:String ;__10,Sb:Array [Float ,0b1010001];_w,XO_x:String ){} }''','''Class,S,{,Destructor,(,),{,Val,_,:,Array,[,String,,,055,],;,},Var,_382,,,z,:,Array,[,String,,,0X715,],;,Val,__,:,B,;,},Class,__,{,},Class,__u,:,_,{,Constructor,(,_C,:,__,;,S,,,U,:,Array,[,Array,[,String,,,30,],,,055,],;,l,:,_,;,C5,,,Z,:,Float,;,r_,:,String,;,__10,,,Sb,:,Array,[,Float,,,0b1010001,],;,_w,,,XO_x,:,String,),{,},},<EOF>''',101))

    def test_1344(self):
        self.assertTrue(TestLexer.test('''Class _{Var $X_v6z:Boolean ;Destructor (){Break ;} }Class _4:_{}Class Y0{}Class _6:O{Constructor (y_g,__c:Int ;_,L4:Int ;s:Int ){} }Class _{}''','''Class,_,{,Var,$X_v6z,:,Boolean,;,Destructor,(,),{,Break,;,},},Class,_4,:,_,{,},Class,Y0,{,},Class,_6,:,O,{,Constructor,(,y_g,,,__c,:,Int,;,_,,,L4,:,Int,;,s,:,Int,),{,},},Class,_,{,},<EOF>''',101))

    def test_1345(self):
        self.assertTrue(TestLexer.test('''Class _1:E0375{}Class U__:_{Val _,D4___:Array [Array [Array [Array [Array [Array [Array [Float ,91],0x8],0x33],015],0b1],0X61],91];$5(){} }Class _:__P{}Class _9__MFr0N_I{}''','''Class,_1,:,E0375,{,},Class,U__,:,_,{,Val,_,,,D4___,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,91,],,,0x8,],,,0x33,],,,015,],,,0b1,],,,0X61,],,,91,],;,$5,(,),{,},},Class,_,:,__P,{,},Class,_9__MFr0N_I,{,},<EOF>''',101))

    def test_1346(self):
        self.assertTrue(TestLexer.test('''Class _v02_9{$_3Y(X,__X_,_:Int ){}Var _X:Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,0B1],0X2F],01],0x3],0xF_6],0135],0x3A],0XA],0135];$1(Wm:Boolean ;_F_,_5P:Int ){Break ;}Val $___:Float ;}''','''Class,_v02_9,{,$_3Y,(,X,,,__X_,,,_,:,Int,),{,},Var,_X,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,0X2F,],,,01,],,,0x3,],,,0xF6,],,,0135,],,,0x3A,],,,0XA,],,,0135,],;,$1,(,Wm,:,Boolean,;,_F_,,,_5P,:,Int,),{,Break,;,},Val,$___,:,Float,;,},<EOF>''',101))

    def test_1347(self):
        self.assertTrue(TestLexer.test('''Class Q:q{Var $_,__Y,$6_,__,$t:l_2na;Var $U,_g,_2:Array [Array [Int ,06],025];Constructor (_7:Array [Array [Boolean ,0b100000],0b1]){Break ;Continue ;} }Class T{}''','''Class,Q,:,q,{,Var,$_,,,__Y,,,$6_,,,__,,,$t,:,l_2na,;,Var,$U,,,_g,,,_2,:,Array,[,Array,[,Int,,,06,],,,025,],;,Constructor,(,_7,:,Array,[,Array,[,Boolean,,,0b100000,],,,0b1,],),{,Break,;,Continue,;,},},Class,T,{,},<EOF>''',101))

    def test_1348(self):
        self.assertTrue(TestLexer.test('''Class N5:E{Constructor (q_9_,X,_,_p,r:_;n:__){Var cn,W_,s6,u,_:Array [Array [Array [Array [String ,0B11_1_011_01],0x2],0b111010],032];}Var $N,A___5_,_,$6,$_,$6,_1v,__,$8S___6_,$p:Float ;Var $7:Boolean ;}Class q{}''','''Class,N5,:,E,{,Constructor,(,q_9_,,,X,,,_,,,_p,,,r,:,_,;,n,:,__,),{,Var,cn,,,W_,,,s6,,,u,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0B11101101,],,,0x2,],,,0b111010,],,,032,],;,},Var,$N,,,A___5_,,,_,,,$6,,,$_,,,$6,,,_1v,,,__,,,$8S___6_,,,$p,:,Float,;,Var,$7,:,Boolean,;,},Class,q,{,},<EOF>''',101))

    def test_1349(self):
        self.assertTrue(TestLexer.test('''Class A2{Constructor (){ {} }Destructor (){} }Class c{Constructor (n__,T,_,R:xN_p6;__,D,f11E,_6,_:Int ;_:x4f;___H__,_08,_,_,n_:Array [Array [Array [Array [String ,027],027],0x7],44];_:___3;_:u){}Val $J:p;}''','''Class,A2,{,Constructor,(,),{,{,},},Destructor,(,),{,},},Class,c,{,Constructor,(,n__,,,T,,,_,,,R,:,xN_p6,;,__,,,D,,,f11E,,,_6,,,_,:,Int,;,_,:,x4f,;,___H__,,,_08,,,_,,,_,,,n_,:,Array,[,Array,[,Array,[,Array,[,String,,,027,],,,027,],,,0x7,],,,44,],;,_,:,___3,;,_,:,u,),{,},Val,$J,:,p,;,},<EOF>''',101))

    def test_1350(self):
        self.assertTrue(TestLexer.test('''Class V{Var $0,_8:Array [Array [Int ,71],3];Val $_:Float ;Val _,_4,l:Array [Array [Array [Array [Float ,0B1_1_0],0b1],0b1011001],05];Var e:S_;Val _4,$__A5:Int ;}Class _:Z{}''','''Class,V,{,Var,$0,,,_8,:,Array,[,Array,[,Int,,,71,],,,3,],;,Val,$_,:,Float,;,Val,_,,,_4,,,l,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B110,],,,0b1,],,,0b1011001,],,,05,],;,Var,e,:,S_,;,Val,_4,,,$__A5,:,Int,;,},Class,_,:,Z,{,},<EOF>''',101))

    def test_1351(self):
        self.assertTrue(TestLexer.test('''Class O_n{}Class _:_5{}Class K__{Var cG3,_:r;$3M(){}Constructor (){}Destructor (){Return ;}Constructor (r,o:L71){} }''','''Class,O_n,{,},Class,_,:,_5,{,},Class,K__,{,Var,cG3,,,_,:,r,;,$3M,(,),{,},Constructor,(,),{,},Destructor,(,),{,Return,;,},Constructor,(,r,,,o,:,L71,),{,},},<EOF>''',101))

    def test_1352(self):
        self.assertTrue(TestLexer.test('''Class _9E{$7(_9,Y66:Int ;r,_J_5,c7__14,_m58_3I_,__8I_,_:Array [Boolean ,02_3];D,_,_t:Array [Array [Array [Array [Array [Array [Float ,0x4F],0B1],0X5_D],0b1100100],0b1_1],0X9_A0_A]){} }''','''Class,_9E,{,$7,(,_9,,,Y66,:,Int,;,r,,,_J_5,,,c7__14,,,_m58_3I_,,,__8I_,,,_,:,Array,[,Boolean,,,023,],;,D,,,_,,,_t,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x4F,],,,0B1,],,,0X5D,],,,0b1100100,],,,0b11,],,,0X9A0A,],),{,},},<EOF>''',101))

    def test_1353(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (D:Array [Array [Array [Array [Float ,0xE],7],8_12],93];S:Array [Array [Array [Array [Array [Int ,0X50],93],4],0B10110],4];X_,nQ:String ;K_,r_:Float ){Return ;} }Class _V{}Class G5_{}Class U:y{}''','''Class,_,{,Constructor,(,D,:,Array,[,Array,[,Array,[,Array,[,Float,,,0xE,],,,7,],,,812,],,,93,],;,S,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X50,],,,93,],,,4,],,,0B10110,],,,4,],;,X_,,,nQ,:,String,;,K_,,,r_,:,Float,),{,Return,;,},},Class,_V,{,},Class,G5_,{,},Class,U,:,y,{,},<EOF>''',101))

    def test_1354(self):
        self.assertTrue(TestLexer.test('''Class o:l{}Class MF300I_{}Class r:_h{$B(r8,A,_9,_,_,q,N:k;_Rf:_){}Constructor (_:Boolean ;K,r__,Q:Array [Int ,0xCD_8D]){} }''','''Class,o,:,l,{,},Class,MF300I_,{,},Class,r,:,_h,{,$B,(,r8,,,A,,,_9,,,_,,,_,,,q,,,N,:,k,;,_Rf,:,_,),{,},Constructor,(,_,:,Boolean,;,K,,,r__,,,Q,:,Array,[,Int,,,0xCD8D,],),{,},},<EOF>''',101))

    def test_1355(self):
        self.assertTrue(TestLexer.test('''Class U7_:___{Val $d_:A;}Class _:U{Sj2(){} }Class z{Var $_,_:__;Constructor (){}Constructor (){}Var $_:Array [Float ,0141];}Class O{}Class _:d4{}''','''Class,U7_,:,___,{,Val,$d_,:,A,;,},Class,_,:,U,{,Sj2,(,),{,},},Class,z,{,Var,$_,,,_,:,__,;,Constructor,(,),{,},Constructor,(,),{,},Var,$_,:,Array,[,Float,,,0141,],;,},Class,O,{,},Class,_,:,d4,{,},<EOF>''',101))

    def test_1356(self):
        self.assertTrue(TestLexer.test('''Class L:_Y{Z(){07_5._();}Val JR8x:Array [Array [Boolean ,0b1],0b1];}Class R:_h3_{}Class _{Val $__:Array [String ,98];}Class p{Constructor (M18,N:String ){}Var C:String ;Val E__,_:Boolean ;Var _P:Array [Array [Array [Float ,05_4],1],0X12];}''','''Class,L,:,_Y,{,Z,(,),{,075,.,_,(,),;,},Val,JR8x,:,Array,[,Array,[,Boolean,,,0b1,],,,0b1,],;,},Class,R,:,_h3_,{,},Class,_,{,Val,$__,:,Array,[,String,,,98,],;,},Class,p,{,Constructor,(,M18,,,N,:,String,),{,},Var,C,:,String,;,Val,E__,,,_,:,Boolean,;,Var,_P,:,Array,[,Array,[,Array,[,Float,,,054,],,,1,],,,0X12,],;,},<EOF>''',101))

    def test_1357(self):
        self.assertTrue(TestLexer.test('''Class _9{Constructor (n:_){}_(h:P9;q_5l,__,_9:Boolean ;s_,Fm6_4_:Float ){} }Class _:r_{$494(){}Destructor (){Break ;}Destructor (){} }''','''Class,_9,{,Constructor,(,n,:,_,),{,},_,(,h,:,P9,;,q_5l,,,__,,,_9,:,Boolean,;,s_,,,Fm6_4_,:,Float,),{,},},Class,_,:,r_,{,$494,(,),{,},Destructor,(,),{,Break,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_1358(self):
        self.assertTrue(TestLexer.test('''Class _{}Class ____:_{}Class _mb:B{Val $___:Pmw_13_;}Class _37{Val $9,OZ5,$M__,_,$8i8,$9F:Array [Array [Int ,0b1],021];Val $3:Float ;Val $0:_;}''','''Class,_,{,},Class,____,:,_,{,},Class,_mb,:,B,{,Val,$___,:,Pmw_13_,;,},Class,_37,{,Val,$9,,,OZ5,,,$M__,,,_,,,$8i8,,,$9F,:,Array,[,Array,[,Int,,,0b1,],,,021,],;,Val,$3,:,Float,;,Val,$0,:,_,;,},<EOF>''',101))

    def test_1359(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){Continue ;} }Class __q{Val $Z9_Cj:Array [Array [Array [Int ,53],53],0B1010010];$_8_9(_v:Array [Array [String ,8],0x9];r_v:Array [Boolean ,53];k,_:Array [Array [Array [Int ,0X24],0B1010010],0X24];_5,rA,w_:_){}Val $b:Array [Array [Array [String ,0B1_01_0],0B1_1_0],53];Constructor (M_:Int ){} }Class _:F_4{}''','''Class,_,{,Destructor,(,),{,Continue,;,},},Class,__q,{,Val,$Z9_Cj,:,Array,[,Array,[,Array,[,Int,,,53,],,,53,],,,0B1010010,],;,$_8_9,(,_v,:,Array,[,Array,[,String,,,8,],,,0x9,],;,r_v,:,Array,[,Boolean,,,53,],;,k,,,_,:,Array,[,Array,[,Array,[,Int,,,0X24,],,,0B1010010,],,,0X24,],;,_5,,,rA,,,w_,:,_,),{,},Val,$b,:,Array,[,Array,[,Array,[,String,,,0B1010,],,,0B110,],,,53,],;,Constructor,(,M_,:,Int,),{,},},Class,_,:,F_4,{,},<EOF>''',101))

    def test_1360(self):
        self.assertTrue(TestLexer.test('''Class _{_(W:Array [Boolean ,02_37_2_6];T:Array [Array [Array [Int ,03_3],0XC],0b1_1]){}Val $k:_6aFnL__W;}Class w{$_(){} }''','''Class,_,{,_,(,W,:,Array,[,Boolean,,,023726,],;,T,:,Array,[,Array,[,Array,[,Int,,,033,],,,0XC,],,,0b11,],),{,},Val,$k,:,_6aFnL__W,;,},Class,w,{,$_,(,),{,},},<EOF>''',101))

    def test_1361(self):
        self.assertTrue(TestLexer.test('''Class _{Var $3:L;}Class H{Constructor (_r,F_:Int ;S,____,_,_:k7;__0,Y,_,_,_,_5__:Array [Array [Int ,03],0B10_1_1];R_,df:e_I7){} }Class _:_N__{}Class _{}Class y2w7u{}Class __:_{Val $8:String ;Var s1,fB,$0_N,$__,_:Array [Array [Float ,7],0X6];Var $d,$2:String ;Constructor (){Return ;} }Class _{Z9_(j:b7;_0:x){} }Class B{}Class _2o:Q{}''','''Class,_,{,Var,$3,:,L,;,},Class,H,{,Constructor,(,_r,,,F_,:,Int,;,S,,,____,,,_,,,_,:,k7,;,__0,,,Y,,,_,,,_,,,_,,,_5__,:,Array,[,Array,[,Int,,,03,],,,0B1011,],;,R_,,,df,:,e_I7,),{,},},Class,_,:,_N__,{,},Class,_,{,},Class,y2w7u,{,},Class,__,:,_,{,Val,$8,:,String,;,Var,s1,,,fB,,,$0_N,,,$__,,,_,:,Array,[,Array,[,Float,,,7,],,,0X6,],;,Var,$d,,,$2,:,String,;,Constructor,(,),{,Return,;,},},Class,_,{,Z9_,(,j,:,b7,;,_0,:,x,),{,},},Class,B,{,},Class,_2o,:,Q,{,},<EOF>''',101))

    def test_1362(self):
        self.assertTrue(TestLexer.test('''Class _f{Constructor (I_,_:Array [Boolean ,36];KEq:Array [Array [Array [Array [Float ,0X5],3],1_8],0X9]){}Var _44:I4;}Class _{}''','''Class,_f,{,Constructor,(,I_,,,_,:,Array,[,Boolean,,,36,],;,KEq,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X5,],,,3,],,,18,],,,0X9,],),{,},Var,_44,:,I4,;,},Class,_,{,},<EOF>''',101))

    def test_1363(self):
        self.assertTrue(TestLexer.test('''Class x_:_{Val b:Array [Array [Array [Boolean ,0X36],0X1],0B1];}Class Xo:_{}Class __:_l0_6_{_0__(){} }Class o_u_____{}''','''Class,x_,:,_,{,Val,b,:,Array,[,Array,[,Array,[,Boolean,,,0X36,],,,0X1,],,,0B1,],;,},Class,Xo,:,_,{,},Class,__,:,_l0_6_,{,_0__,(,),{,},},Class,o_u_____,{,},<EOF>''',101))

    def test_1364(self):
        self.assertTrue(TestLexer.test('''Class _{}Class S:_{M(_,_6_,r,_,__34X:Float ){} }Class agp_:v{}Class _lX:_5q5__j__{Var $2__a9_BAI,T:J;Val N,$_,$_8,_1,$p:String ;Constructor (){Val _fLWh:I;Var _,_S6:String ;} }Class j{}''','''Class,_,{,},Class,S,:,_,{,M,(,_,,,_6_,,,r,,,_,,,__34X,:,Float,),{,},},Class,agp_,:,v,{,},Class,_lX,:,_5q5__j__,{,Var,$2__a9_BAI,,,T,:,J,;,Val,N,,,$_,,,$_8,,,_1,,,$p,:,String,;,Constructor,(,),{,Val,_fLWh,:,I,;,Var,_,,,_S6,:,String,;,},},Class,j,{,},<EOF>''',101))

    def test_1365(self):
        self.assertTrue(TestLexer.test('''Class P:s_c_{__(_924_,__:f;N__,_,rJ__E,GK,h,_,Z,_,E0:Array [Array [Array [String ,0X8],0X2B],93];A_:Array [Boolean ,0b1011111];__H,a,_:Float ){} }Class __C:_{}''','''Class,P,:,s_c_,{,__,(,_924_,,,__,:,f,;,N__,,,_,,,rJ__E,,,GK,,,h,,,_,,,Z,,,_,,,E0,:,Array,[,Array,[,Array,[,String,,,0X8,],,,0X2B,],,,93,],;,A_,:,Array,[,Boolean,,,0b1011111,],;,__H,,,a,,,_,:,Float,),{,},},Class,__C,:,_,{,},<EOF>''',101))

    def test_1366(self):
        self.assertTrue(TestLexer.test('''Class _{}Class o{Destructor (){Break ;}Val $7,$_,$4_65_:Array [Array [String ,0B1000111],0b1000011];Destructor (){} }Class L_1:L_{}''','''Class,_,{,},Class,o,{,Destructor,(,),{,Break,;,},Val,$7,,,$_,,,$4_65_,:,Array,[,Array,[,String,,,0B1000111,],,,0b1000011,],;,Destructor,(,),{,},},Class,L_1,:,L_,{,},<EOF>''',101))

    def test_1367(self):
        self.assertTrue(TestLexer.test('''Class __4:S{Q(Un,o,I3:__;_,_,u__:Array [Array [Array [Array [Array [Int ,0x9],0b1_1],02_7_5],0B11_0],0X4]){}Constructor (){ {} }}Class _:_S{}''','''Class,__4,:,S,{,Q,(,Un,,,o,,,I3,:,__,;,_,,,_,,,u__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x9,],,,0b11,],,,0275,],,,0B110,],,,0X4,],),{,},Constructor,(,),{,{,},},},Class,_,:,_S,{,},<EOF>''',101))

    def test_1368(self):
        self.assertTrue(TestLexer.test('''Class i:__{Var w,n,$_2_,V,$A,_6_:String ;Destructor (){}_(WXw3,eY_6:String ;_,O_e:_;M35___:N_){Break ;}Constructor (E:vX4){} }''','''Class,i,:,__,{,Var,w,,,n,,,$_2_,,,V,,,$A,,,_6_,:,String,;,Destructor,(,),{,},_,(,WXw3,,,eY_6,:,String,;,_,,,O_e,:,_,;,M35___,:,N_,),{,Break,;,},Constructor,(,E,:,vX4,),{,},},<EOF>''',101))

    def test_1369(self):
        self.assertTrue(TestLexer.test('''Class y{_(F:_92_;_do4Q:Array [Array [Array [Int ,0x56],0x56],8];_,f:ay;_,_kg_,I7:Boolean ;_:_;y,_5_:Boolean ){} }Class _{}''','''Class,y,{,_,(,F,:,_92_,;,_do4Q,:,Array,[,Array,[,Array,[,Int,,,0x56,],,,0x56,],,,8,],;,_,,,f,:,ay,;,_,,,_kg_,,,I7,:,Boolean,;,_,:,_,;,y,,,_5_,:,Boolean,),{,},},Class,_,{,},<EOF>''',101))

    def test_1370(self):
        self.assertTrue(TestLexer.test('''Class _{}Class q_0{Var $_:Boolean ;}Class N{}Class _{Constructor (){ {} }Val $_52,_:String ;Val $_,$75,Sf,_8,_:Array [Boolean ,0X5];}''','''Class,_,{,},Class,q_0,{,Var,$_,:,Boolean,;,},Class,N,{,},Class,_,{,Constructor,(,),{,{,},},Val,$_52,,,_,:,String,;,Val,$_,,,$75,,,Sf,,,_8,,,_,:,Array,[,Boolean,,,0X5,],;,},<EOF>''',101))

    def test_1371(self):
        self.assertTrue(TestLexer.test('''Class _6d:l7H7{Destructor (){}Var $2,$66:Array [Int ,062];Var _O:Float ;Constructor (nA,x,z_3lt2_,_Qt765:L9_){} }''','''Class,_6d,:,l7H7,{,Destructor,(,),{,},Var,$2,,,$66,:,Array,[,Int,,,062,],;,Var,_O,:,Float,;,Constructor,(,nA,,,x,,,z_3lt2_,,,_Qt765,:,L9_,),{,},},<EOF>''',101))

    def test_1372(self):
        self.assertTrue(TestLexer.test('''Class X:__{Val $6:String ;}Class D9:_{Destructor (){}Constructor (){}$n(__:String ){Continue ;M::$18q57_();} }''','''Class,X,:,__,{,Val,$6,:,String,;,},Class,D9,:,_,{,Destructor,(,),{,},Constructor,(,),{,},$n,(,__,:,String,),{,Continue,;,M,::,$18q57_,(,),;,},},<EOF>''',101))

    def test_1373(self):
        self.assertTrue(TestLexer.test('''Class _:gX{Val _,_b:Array [Array [Array [Array [Array [Array [Boolean ,0b1001101],05],037],037],18],0B1001];Var y_:Array [Array [Array [Array [String ,0B1],037],18],6];}''','''Class,_,:,gX,{,Val,_,,,_b,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1001101,],,,05,],,,037,],,,037,],,,18,],,,0B1001,],;,Var,y_,:,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,037,],,,18,],,,6,],;,},<EOF>''',101))

    def test_1374(self):
        self.assertTrue(TestLexer.test('''Class g4y___{}Class _v:_{Val $__:Array [Array [Array [Array [Array [Int ,0B1000],073],0b10011],0B1],44];}Class __{}Class w:_8{_(){} }Class l4_8{}''','''Class,g4y___,{,},Class,_v,:,_,{,Val,$__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1000,],,,073,],,,0b10011,],,,0B1,],,,44,],;,},Class,__,{,},Class,w,:,_8,{,_,(,),{,},},Class,l4_8,{,},<EOF>''',101))

    def test_1375(self):
        self.assertTrue(TestLexer.test('''Class P:_{$O(__:Int ;_:Array [Boolean ,0B1000100]){Break ;Break ;}Var _dy,__E662:Array [Array [Array [Int ,0X82_8D6],0X15],2];$V(){}Val _g:Int ;}Class _10:_5{}''','''Class,P,:,_,{,$O,(,__,:,Int,;,_,:,Array,[,Boolean,,,0B1000100,],),{,Break,;,Break,;,},Var,_dy,,,__E662,:,Array,[,Array,[,Array,[,Int,,,0X828D6,],,,0X15,],,,2,],;,$V,(,),{,},Val,_g,:,Int,;,},Class,_10,:,_5,{,},<EOF>''',101))

    def test_1376(self):
        self.assertTrue(TestLexer.test('''Class __6:_{Constructor (d,__z5,_,_e,Z_w:Array [Array [Array [Array [Array [Array [Boolean ,10],0b1001111],0112],06],0112],0112]){} }''','''Class,__6,:,_,{,Constructor,(,d,,,__z5,,,_,,,_e,,,Z_w,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,10,],,,0b1001111,],,,0112,],,,06,],,,0112,],,,0112,],),{,},},<EOF>''',101))

    def test_1377(self):
        self.assertTrue(TestLexer.test('''Class _O1:_Xw{Val _,h_5,_s,_,s:_5;}Class R{Val ak,$p:Array [String ,0B1];_(_:Array [Array [String ,0x7_9_E],0113];__:_;_9:Array [Array [Boolean ,0113],0x6]){} }Class _{Var $_2pK_iB,$FR:Boolean ;Constructor (E,ac:String ){} }Class e_:S_3o{}''','''Class,_O1,:,_Xw,{,Val,_,,,h_5,,,_s,,,_,,,s,:,_5,;,},Class,R,{,Val,ak,,,$p,:,Array,[,String,,,0B1,],;,_,(,_,:,Array,[,Array,[,String,,,0x79E,],,,0113,],;,__,:,_,;,_9,:,Array,[,Array,[,Boolean,,,0113,],,,0x6,],),{,},},Class,_,{,Var,$_2pK_iB,,,$FR,:,Boolean,;,Constructor,(,E,,,ac,:,String,),{,},},Class,e_,:,S_3o,{,},<EOF>''',101))

    def test_1378(self):
        self.assertTrue(TestLexer.test('''Class S{$_(_:Array [Float ,0B1001001];__Wi,_P5_j,C7v2,kV_,Z_27ZH,__:Boolean ;_3E,i_q5_3l,d:C){} }Class w:J72lL704{}Class z_1:_6c{}Class _yqzRp{Val Z2UZ1:Int ;}''','''Class,S,{,$_,(,_,:,Array,[,Float,,,0B1001001,],;,__Wi,,,_P5_j,,,C7v2,,,kV_,,,Z_27ZH,,,__,:,Boolean,;,_3E,,,i_q5_3l,,,d,:,C,),{,},},Class,w,:,J72lL704,{,},Class,z_1,:,_6c,{,},Class,_yqzRp,{,Val,Z2UZ1,:,Int,;,},<EOF>''',101))

    def test_1379(self):
        self.assertTrue(TestLexer.test('''Class e{Val _:Array [Array [Boolean ,0xF426_4_2F],052];Destructor (){Return ;} }Class gq__u:z{}Class _6iB__{}Class _{Constructor (){} }Class i:S_p2n{}''','''Class,e,{,Val,_,:,Array,[,Array,[,Boolean,,,0xF42642F,],,,052,],;,Destructor,(,),{,Return,;,},},Class,gq__u,:,z,{,},Class,_6iB__,{,},Class,_,{,Constructor,(,),{,},},Class,i,:,S_p2n,{,},<EOF>''',101))

    def test_1380(self):
        self.assertTrue(TestLexer.test('''Class __:_{}Class nN:_T{Val $_:Array [Boolean ,0X25];Val KoC,_:Array [String ,0B1];Constructor (_:Int ;i:Float ){} }Class l:_828{}''','''Class,__,:,_,{,},Class,nN,:,_T,{,Val,$_,:,Array,[,Boolean,,,0X25,],;,Val,KoC,,,_,:,Array,[,String,,,0B1,],;,Constructor,(,_,:,Int,;,i,:,Float,),{,},},Class,l,:,_828,{,},<EOF>''',101))

    def test_1381(self):
        self.assertTrue(TestLexer.test('''Class _:NS{Var f:Array [Array [Array [Array [Array [Array [Array [Float ,0B11],037],0b1],0x2_1],0x2C],89],03_640_0]=!!!!_::$2;}Class _8{Val _9,$X,$U:_;Constructor (__,__:Array [Int ,06];_Dby,O,H,_2Y:__){} }''','''Class,_,:,NS,{,Var,f,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B11,],,,037,],,,0b1,],,,0x21,],,,0x2C,],,,89,],,,036400,],=,!,!,!,!,_,::,$2,;,},Class,_8,{,Val,_9,,,$X,,,$U,:,_,;,Constructor,(,__,,,__,:,Array,[,Int,,,06,],;,_Dby,,,O,,,H,,,_2Y,:,__,),{,},},<EOF>''',101))

    def test_1382(self):
        self.assertTrue(TestLexer.test('''Class c:z0eZ___{Val $_:_;$__(P:__;_,T6b,Nd_:Array [Int ,05]){}Constructor (x_,_,_8:z_;C4:_;_FQ_,__8,_0b,_,_,A:C;__,_,bcY:Array [Array [Array [Array [Int ,0b1001110],58],07],0B1011101];_,GI:String ;H_:_;_6,_G_:Boolean ){}Val _,$j:Array [Array [Boolean ,4_2],0x9];}Class _{}''','''Class,c,:,z0eZ___,{,Val,$_,:,_,;,$__,(,P,:,__,;,_,,,T6b,,,Nd_,:,Array,[,Int,,,05,],),{,},Constructor,(,x_,,,_,,,_8,:,z_,;,C4,:,_,;,_FQ_,,,__8,,,_0b,,,_,,,_,,,A,:,C,;,__,,,_,,,bcY,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1001110,],,,58,],,,07,],,,0B1011101,],;,_,,,GI,:,String,;,H_,:,_,;,_6,,,_G_,:,Boolean,),{,},Val,_,,,$j,:,Array,[,Array,[,Boolean,,,42,],,,0x9,],;,},Class,_,{,},<EOF>''',101))

    def test_1383(self):
        self.assertTrue(TestLexer.test('''Class W_:ua{Destructor (){Break ;} }Class _{Constructor (_:Array [Float ,033];i,b,Q6,t_,_:Array [Array [Array [Array [Array [String ,0X9E],13],0X1],0B1],0b1010]){}Destructor (){Break ;} }''','''Class,W_,:,ua,{,Destructor,(,),{,Break,;,},},Class,_,{,Constructor,(,_,:,Array,[,Float,,,033,],;,i,,,b,,,Q6,,,t_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X9E,],,,13,],,,0X1,],,,0B1,],,,0b1010,],),{,},Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_1384(self):
        self.assertTrue(TestLexer.test('''Class h{Val _:String ;_J3M(){}$2__1(q,_6,_,_kJ,N,_:Array [Array [Float ,011],0x2D];_7,_,_7_W1,o:Float ;_,x_w,j:Array [Array [String ,0b1_1],025]){} }''','''Class,h,{,Val,_,:,String,;,_J3M,(,),{,},$2__1,(,q,,,_6,,,_,,,_kJ,,,N,,,_,:,Array,[,Array,[,Float,,,011,],,,0x2D,],;,_7,,,_,,,_7_W1,,,o,:,Float,;,_,,,x_w,,,j,:,Array,[,Array,[,String,,,0b11,],,,025,],),{,},},<EOF>''',101))

    def test_1385(self):
        self.assertTrue(TestLexer.test('''Class _:sO3_{Var _,_jC,$q_aGD_,$7,_S,$o_Y_k:g;Destructor (){Self .V_();} }Class pw3{Bp(_,_85:Array [String ,04_5]){}Var $_:Array [Array [Float ,0B1_1],0B1];}Class j6__:V73p7{}''','''Class,_,:,sO3_,{,Var,_,,,_jC,,,$q_aGD_,,,$7,,,_S,,,$o_Y_k,:,g,;,Destructor,(,),{,Self,.,V_,(,),;,},},Class,pw3,{,Bp,(,_,,,_85,:,Array,[,String,,,045,],),{,},Var,$_,:,Array,[,Array,[,Float,,,0B11,],,,0B1,],;,},Class,j6__,:,V73p7,{,},<EOF>''',101))

    def test_1386(self):
        self.assertTrue(TestLexer.test('''Class _{Var z:Array [Int ,0X37];Constructor (GZ_,U_,_:_5;m,T,_,N9lL__4x:Array [Array [Boolean ,0x11],89]){Break ;}Var $2:___;}''','''Class,_,{,Var,z,:,Array,[,Int,,,0X37,],;,Constructor,(,GZ_,,,U_,,,_,:,_5,;,m,,,T,,,_,,,N9lL__4x,:,Array,[,Array,[,Boolean,,,0x11,],,,89,],),{,Break,;,},Var,$2,:,___,;,},<EOF>''',101))

    def test_1387(self):
        self.assertTrue(TestLexer.test('''Class m{Constructor (__1,_z,M,W:Int ){}Val L:Boolean ;Val H,$9_B:Boolean ;}Class _{}Class _8{Val J_,f:Boolean ;}''','''Class,m,{,Constructor,(,__1,,,_z,,,M,,,W,:,Int,),{,},Val,L,:,Boolean,;,Val,H,,,$9_B,:,Boolean,;,},Class,_,{,},Class,_8,{,Val,J_,,,f,:,Boolean,;,},<EOF>''',101))

    def test_1388(self):
        self.assertTrue(TestLexer.test('''Class P5E9_:A{Val $_Ph_:Array [Array [Array [Array [Float ,04],0B11101],0b110100],0X15];Destructor (){} }Class N{Destructor (){} }''','''Class,P5E9_,:,A,{,Val,$_Ph_,:,Array,[,Array,[,Array,[,Array,[,Float,,,04,],,,0B11101,],,,0b110100,],,,0X15,],;,Destructor,(,),{,},},Class,N,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1389(self):
        self.assertTrue(TestLexer.test('''Class ___:vz{_q(l:Array [Array [Boolean ,62],0x5D];_:Array [Int ,0B1000000];Re:sy;M_s,U,JO,tC:l){} }Class _{Destructor (){} }Class u_w:__{}Class _c_:___{__J(y3v24s_2:Float ;d_,_94,Z,l:Array [Array [Int ,0B1000000],07_5_322];_:h){Continue ;}Var _,$t,$_:D;}''','''Class,___,:,vz,{,_q,(,l,:,Array,[,Array,[,Boolean,,,62,],,,0x5D,],;,_,:,Array,[,Int,,,0B1000000,],;,Re,:,sy,;,M_s,,,U,,,JO,,,tC,:,l,),{,},},Class,_,{,Destructor,(,),{,},},Class,u_w,:,__,{,},Class,_c_,:,___,{,__J,(,y3v24s_2,:,Float,;,d_,,,_94,,,Z,,,l,:,Array,[,Array,[,Int,,,0B1000000,],,,075322,],;,_,:,h,),{,Continue,;,},Var,_,,,$t,,,$_,:,D,;,},<EOF>''',101))

    def test_1390(self):
        self.assertTrue(TestLexer.test('''Class ___Y6{Constructor (_E:__7;_2,_:Float ;__61_,_:Array [Int ,03];_u:_;t_T_:Array [Float ,01]){}Destructor (){} }Class E{Val $6B2_,$1:String ;}Class _0F:_{}''','''Class,___Y6,{,Constructor,(,_E,:,__7,;,_2,,,_,:,Float,;,__61_,,,_,:,Array,[,Int,,,03,],;,_u,:,_,;,t_T_,:,Array,[,Float,,,01,],),{,},Destructor,(,),{,},},Class,E,{,Val,$6B2_,,,$1,:,String,;,},Class,_0F,:,_,{,},<EOF>''',101))

    def test_1391(self):
        self.assertTrue(TestLexer.test('''Class _{e_XW(_,_8N:_;V_I,F,_:Array [Float ,0x57];_,f,_:Array [String ,0b10];An3_d04,_,_7s,_,K:Array [Array [String ,0b1_0_1],0B1_1_1];_E,_C_:Array [Float ,6];H,_:String ;BCe,u:B;n:Array [Float ,0b1100001]){} }''','''Class,_,{,e_XW,(,_,,,_8N,:,_,;,V_I,,,F,,,_,:,Array,[,Float,,,0x57,],;,_,,,f,,,_,:,Array,[,String,,,0b10,],;,An3_d04,,,_,,,_7s,,,_,,,K,:,Array,[,Array,[,String,,,0b101,],,,0B111,],;,_E,,,_C_,:,Array,[,Float,,,6,],;,H,,,_,:,String,;,BCe,,,u,:,B,;,n,:,Array,[,Float,,,0b1100001,],),{,},},<EOF>''',101))

    def test_1392(self):
        self.assertTrue(TestLexer.test('''Class G{Constructor (O,_:Int ;C,y_:__;_8c3,lJ:Array [Float ,7_8]){}$_(_,_:LK;_:_Ci225;Bo,l_:V5;_:String ;_:__6){} }''','''Class,G,{,Constructor,(,O,,,_,:,Int,;,C,,,y_,:,__,;,_8c3,,,lJ,:,Array,[,Float,,,78,],),{,},$_,(,_,,,_,:,LK,;,_,:,_Ci225,;,Bo,,,l_,:,V5,;,_,:,String,;,_,:,__6,),{,},},<EOF>''',101))

    def test_1393(self):
        self.assertTrue(TestLexer.test('''Class _{Var $Ql:Array [String ,053];Var b,$22,__0,$G,$_03,$1:String ;Val P,u4,$_3:_;}Class _{Val $_,$8,$1Vj:Int ;}''','''Class,_,{,Var,$Ql,:,Array,[,String,,,053,],;,Var,b,,,$22,,,__0,,,$G,,,$_03,,,$1,:,String,;,Val,P,,,u4,,,$_3,:,_,;,},Class,_,{,Val,$_,,,$8,,,$1Vj,:,Int,;,},<EOF>''',101))

    def test_1394(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){} }Class _{AuB459(_:String ;K54,_,_:_;W,__1:Array [Array [Array [Array [Boolean ,0B1001111],37],37],2];f_R,tQ:Boolean ;k:Int ){}Constructor (R_4R,_:Boolean ;_,r6:Array [Array [Array [Array [Array [Array [Array [Array [String ,0B1],0114],0114],0x9_6],157],06_5],04],02]){ {}Return ;} }''','''Class,_,{,Destructor,(,),{,},},Class,_,{,AuB459,(,_,:,String,;,K54,,,_,,,_,:,_,;,W,,,__1,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1001111,],,,37,],,,37,],,,2,],;,f_R,,,tQ,:,Boolean,;,k,:,Int,),{,},Constructor,(,R_4R,,,_,:,Boolean,;,_,,,r6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,0114,],,,0114,],,,0x96,],,,157,],,,065,],,,04,],,,02,],),{,{,},Return,;,},},<EOF>''',101))

    def test_1395(self):
        self.assertTrue(TestLexer.test('''Class _{}Class X_{Constructor (jh:Float ;C:Int ;l:l;_EG:_l){ {Continue ;} }Destructor (){__::$Y();Var _81_0:Array [Array [Float ,1_0],0B1_0];Break ;Continue ;} }Class u_58_:_{Val $C,$u:Int ;}''','''Class,_,{,},Class,X_,{,Constructor,(,jh,:,Float,;,C,:,Int,;,l,:,l,;,_EG,:,_l,),{,{,Continue,;,},},Destructor,(,),{,__,::,$Y,(,),;,Var,_81_0,:,Array,[,Array,[,Float,,,10,],,,0B10,],;,Break,;,Continue,;,},},Class,u_58_,:,_,{,Val,$C,,,$u,:,Int,;,},<EOF>''',101))

    def test_1396(self):
        self.assertTrue(TestLexer.test('''Class __2u:_{Val ___:String ;Var L,___7_c:is5;Val __4_X_9,$0T:Array [Array [Array [Array [String ,63],0517_1],03],0x3C];Var $2,_5E:String ;}Class _7F3{}''','''Class,__2u,:,_,{,Val,___,:,String,;,Var,L,,,___7_c,:,is5,;,Val,__4_X_9,,,$0T,:,Array,[,Array,[,Array,[,Array,[,String,,,63,],,,05171,],,,03,],,,0x3C,],;,Var,$2,,,_5E,:,String,;,},Class,_7F3,{,},<EOF>''',101))

    def test_1397(self):
        self.assertTrue(TestLexer.test('''Class __:M_i__{}Class _{Var _N6,_,uC8,_,x__,$8_pQi4:Float ;Constructor (_k,__z,_,_Nv,f,T,sY:String ;b8:G){} }Class _{Val _3,v__9,_:u;}''','''Class,__,:,M_i__,{,},Class,_,{,Var,_N6,,,_,,,uC8,,,_,,,x__,,,$8_pQi4,:,Float,;,Constructor,(,_k,,,__z,,,_,,,_Nv,,,f,,,T,,,sY,:,String,;,b8,:,G,),{,},},Class,_,{,Val,_3,,,v__9,,,_,:,u,;,},<EOF>''',101))

    def test_1398(self):
        self.assertTrue(TestLexer.test('''Class Uv{Constructor (){}Var $9,$z,gV6_:Array [Array [Array [Array [String ,0XE],5],0xD],076];Constructor (){} }Class P_5{Var F:_;}''','''Class,Uv,{,Constructor,(,),{,},Var,$9,,,$z,,,gV6_,:,Array,[,Array,[,Array,[,Array,[,String,,,0XE,],,,5,],,,0xD,],,,076,],;,Constructor,(,),{,},},Class,P_5,{,Var,F,:,_,;,},<EOF>''',101))

    def test_1399(self):
        self.assertTrue(TestLexer.test('''Class _P_{_A_5(){Val _Um65:Int ;}Val z:Int ;Var u,$_:Array [Array [Array [Array [Array [Array [Array [String ,0b1],0b1],010],0B110001],0B110001],67],0x1];}Class I:__F{Var $_,$1:Array [Array [Boolean ,06_1_4_0],0x1];}''','''Class,_P_,{,_A_5,(,),{,Val,_Um65,:,Int,;,},Val,z,:,Int,;,Var,u,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,0b1,],,,010,],,,0B110001,],,,0B110001,],,,67,],,,0x1,],;,},Class,I,:,__F,{,Var,$_,,,$1,:,Array,[,Array,[,Boolean,,,06140,],,,0x1,],;,},<EOF>''',101))

    def test_1400(self):
        self.assertTrue(TestLexer.test('''Class p__:w0{Destructor (){}_(u,_,p,_,w:eG__){}$_(_:Int ){}Constructor (_,_:__P;L_qP,_,_7,s,v,_50,ZX,u:Float ){} }''','''Class,p__,:,w0,{,Destructor,(,),{,},_,(,u,,,_,,,p,,,_,,,w,:,eG__,),{,},$_,(,_,:,Int,),{,},Constructor,(,_,,,_,:,__P,;,L_qP,,,_,,,_7,,,s,,,v,,,_50,,,ZX,,,u,:,Float,),{,},},<EOF>''',101))

    def test_1401(self):
        self.assertTrue(TestLexer.test('''Class g{Constructor (){Var p:Array [Array [Array [Array [Array [String ,43],0B10110],0x42],43],0b110101];}Val Z,$_,$6:Array [Array [Int ,0x8_B],6];Destructor (){} }Class t_:__{Val q:String ;}''','''Class,g,{,Constructor,(,),{,Var,p,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,43,],,,0B10110,],,,0x42,],,,43,],,,0b110101,],;,},Val,Z,,,$_,,,$6,:,Array,[,Array,[,Int,,,0x8B,],,,6,],;,Destructor,(,),{,},},Class,t_,:,__,{,Val,q,:,String,;,},<EOF>''',101))

    def test_1402(self):
        self.assertTrue(TestLexer.test('''Class x:_8{}Class k{Constructor (k,_B,_2:Array [Array [Int ,0b1],0B1_10];_E:String ){} }Class _HV:t{}Class _:z5{}Class M{Destructor (){} }Class E8{Var J:Boolean ;}Class _{Var $f:String ;}''','''Class,x,:,_8,{,},Class,k,{,Constructor,(,k,,,_B,,,_2,:,Array,[,Array,[,Int,,,0b1,],,,0B110,],;,_E,:,String,),{,},},Class,_HV,:,t,{,},Class,_,:,z5,{,},Class,M,{,Destructor,(,),{,},},Class,E8,{,Var,J,:,Boolean,;,},Class,_,{,Var,$f,:,String,;,},<EOF>''',101))

    def test_1403(self):
        self.assertTrue(TestLexer.test('''Class _Xp:_01ck3{$0p(){} }Class _:__6_t{Destructor (){}$_m(){}Val $__,$_j,wdb_J,_,L:Int ;Var $8__,_:Boolean ;}''','''Class,_Xp,:,_01ck3,{,$0p,(,),{,},},Class,_,:,__6_t,{,Destructor,(,),{,},$_m,(,),{,},Val,$__,,,$_j,,,wdb_J,,,_,,,L,:,Int,;,Var,$8__,,,_,:,Boolean,;,},<EOF>''',101))

    def test_1404(self):
        self.assertTrue(TestLexer.test('''Class _:__{$x(z_56,_2:Array [Array [Array [Array [Array [Array [Array [Float ,4],0137],8_7],0137],0B1001001],7_5],10]){}U7(K3B,__n_:_;A:String ;_,b,L,_:Array [Array [String ,0x8C],07];k:m1){} }''','''Class,_,:,__,{,$x,(,z_56,,,_2,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,4,],,,0137,],,,87,],,,0137,],,,0B1001001,],,,75,],,,10,],),{,},U7,(,K3B,,,__n_,:,_,;,A,:,String,;,_,,,b,,,L,,,_,:,Array,[,Array,[,String,,,0x8C,],,,07,],;,k,:,m1,),{,},},<EOF>''',101))

    def test_1405(self):
        self.assertTrue(TestLexer.test('''Class __:_{$_(K,g,_,po_:Array [Boolean ,0x32]){Break ;} }Class P06:O{$_g_(D:Float ){}Var _8,_V__0k6:Boolean ;}Class t:_{Var $Ur_,y6:Array [Array [Array [Boolean ,9],0x29C],0X6];}''','''Class,__,:,_,{,$_,(,K,,,g,,,_,,,po_,:,Array,[,Boolean,,,0x32,],),{,Break,;,},},Class,P06,:,O,{,$_g_,(,D,:,Float,),{,},Var,_8,,,_V__0k6,:,Boolean,;,},Class,t,:,_,{,Var,$Ur_,,,y6,:,Array,[,Array,[,Array,[,Boolean,,,9,],,,0x29C,],,,0X6,],;,},<EOF>''',101))

    def test_1406(self):
        self.assertTrue(TestLexer.test('''Class _:Y___QH_{}Class _{_(){}Constructor (v,_,h__0:t;t:Array [String ,0130]){}Destructor (){}Var $zs:Array [Float ,0X1];}''','''Class,_,:,Y___QH_,{,},Class,_,{,_,(,),{,},Constructor,(,v,,,_,,,h__0,:,t,;,t,:,Array,[,String,,,0130,],),{,},Destructor,(,),{,},Var,$zs,:,Array,[,Float,,,0X1,],;,},<EOF>''',101))

    def test_1407(self):
        self.assertTrue(TestLexer.test('''Class H:_A_X{}Class _5:u{}Class _v:j_{Constructor (_,D_,Fj__j5:_;L7_v:Array [Array [String ,04],0X23];_:Array [Array [Boolean ,011],0b1_0]){}Destructor (){ {_::$3();} }}Class a0D:_{}''','''Class,H,:,_A_X,{,},Class,_5,:,u,{,},Class,_v,:,j_,{,Constructor,(,_,,,D_,,,Fj__j5,:,_,;,L7_v,:,Array,[,Array,[,String,,,04,],,,0X23,],;,_,:,Array,[,Array,[,Boolean,,,011,],,,0b10,],),{,},Destructor,(,),{,{,_,::,$3,(,),;,},},},Class,a0D,:,_,{,},<EOF>''',101))

    def test_1408(self):
        self.assertTrue(TestLexer.test('''Class _:_{Val _,o_,T:Array [Array [Int ,0B1001110],0B1001110];Constructor (K_0,R:Array [Boolean ,0X1_3B3]){} }Class _Tm6{Var $_,$_w,Y_x_,$1669,$IZ,Cs_A6,$_:_0I;}''','''Class,_,:,_,{,Val,_,,,o_,,,T,:,Array,[,Array,[,Int,,,0B1001110,],,,0B1001110,],;,Constructor,(,K_0,,,R,:,Array,[,Boolean,,,0X13B3,],),{,},},Class,_Tm6,{,Var,$_,,,$_w,,,Y_x_,,,$1669,,,$IZ,,,Cs_A6,,,$_,:,_0I,;,},<EOF>''',101))

    def test_1409(self):
        self.assertTrue(TestLexer.test('''Class _:x__2{Val _T,$E:Array [Array [Array [Int ,0X59],1],0B10];}Class _{}Class l{Val Ba,$6_:Array [Array [Array [Int ,0B1_01_1],37],0X4];$_9(){Continue ;}$73j(){}Val $_:Int ;}Class Tv__31M3:_{a(Zbt:_02){} }''','''Class,_,:,x__2,{,Val,_T,,,$E,:,Array,[,Array,[,Array,[,Int,,,0X59,],,,1,],,,0B10,],;,},Class,_,{,},Class,l,{,Val,Ba,,,$6_,:,Array,[,Array,[,Array,[,Int,,,0B1011,],,,37,],,,0X4,],;,$_9,(,),{,Continue,;,},$73j,(,),{,},Val,$_,:,Int,;,},Class,Tv__31M3,:,_,{,a,(,Zbt,:,_02,),{,},},<EOF>''',101))

    def test_1410(self):
        self.assertTrue(TestLexer.test('''Class _:_j_{Constructor (){} }Class __d_:t{Val $69_:Array [Array [Boolean ,0b1_01],02];Destructor (){}Var $___W:Int ;}''','''Class,_,:,_j_,{,Constructor,(,),{,},},Class,__d_,:,t,{,Val,$69_,:,Array,[,Array,[,Boolean,,,0b101,],,,02,],;,Destructor,(,),{,},Var,$___W,:,Int,;,},<EOF>''',101))

    def test_1411(self):
        self.assertTrue(TestLexer.test('''Class ___3:__{}Class _:y{}Class _0_{Var $z,_0,x_3_,z_f16,$__,$_8,$U8053,_N,$k:Array [Int ,06];}Class MH{Var $_9:Int ;}''','''Class,___3,:,__,{,},Class,_,:,y,{,},Class,_0_,{,Var,$z,,,_0,,,x_3_,,,z_f16,,,$__,,,$_8,,,$U8053,,,_N,,,$k,:,Array,[,Int,,,06,],;,},Class,MH,{,Var,$_9,:,Int,;,},<EOF>''',101))

    def test_1412(self):
        self.assertTrue(TestLexer.test('''Class _e{Constructor (_D:String ){}Var $6_:Int ;Constructor (__0,_:Float ;__,_75,_,c:Array [String ,064]){Return ;}Var $8j,$JC5_,$28:__;}''','''Class,_e,{,Constructor,(,_D,:,String,),{,},Var,$6_,:,Int,;,Constructor,(,__0,,,_,:,Float,;,__,,,_75,,,_,,,c,:,Array,[,String,,,064,],),{,Return,;,},Var,$8j,,,$JC5_,,,$28,:,__,;,},<EOF>''',101))

    def test_1413(self):
        self.assertTrue(TestLexer.test('''Class _:q_A5{Var _cg4:Array [String ,0b11];Constructor (_:__VU;_,_J5:String ;e,g3:_8d;c_2,O,_X,q,Y:Array [String ,05_4_3];H_H,__,N2II,_:Array [Array [Array [Array [Array [Array [Array [Int ,0b1_0],0X4],19],0b101000],7_3],0XB],060]){} }Class _:_{}Class e__:_{Var J,_0:Z7__;}''','''Class,_,:,q_A5,{,Var,_cg4,:,Array,[,String,,,0b11,],;,Constructor,(,_,:,__VU,;,_,,,_J5,:,String,;,e,,,g3,:,_8d,;,c_2,,,O,,,_X,,,q,,,Y,:,Array,[,String,,,0543,],;,H_H,,,__,,,N2II,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b10,],,,0X4,],,,19,],,,0b101000,],,,73,],,,0XB,],,,060,],),{,},},Class,_,:,_,{,},Class,e__,:,_,{,Var,J,,,_0,:,Z7__,;,},<EOF>''',101))

    def test_1414(self):
        self.assertTrue(TestLexer.test('''Class g_:_3G{Val $_,$i:Array [Array [Boolean ,80],56];Destructor (){}Constructor (){} }Class A:_7{$I(){} }Class q_:W{Val $5_:R;}Class w____2X:sh4s{}''','''Class,g_,:,_3G,{,Val,$_,,,$i,:,Array,[,Array,[,Boolean,,,80,],,,56,],;,Destructor,(,),{,},Constructor,(,),{,},},Class,A,:,_7,{,$I,(,),{,},},Class,q_,:,W,{,Val,$5_,:,R,;,},Class,w____2X,:,sh4s,{,},<EOF>''',101))

    def test_1415(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{Var Y:String ;Var $44,_8,$_a5,$i9:Float ;Val $_2__,_5rV:Array [Array [String ,06066242],0b11110];}''','''Class,_,{,},Class,_,{,Var,Y,:,String,;,Var,$44,,,_8,,,$_a5,,,$i9,:,Float,;,Val,$_2__,,,_5rV,:,Array,[,Array,[,String,,,06066242,],,,0b11110,],;,},<EOF>''',101))

    def test_1416(self):
        self.assertTrue(TestLexer.test('''Class __9{}Class _T:oS_{Destructor (){}Destructor (){Break ;} }Class K{Constructor (_,_,_:Array [Array [Array [Float ,0B1_1],30],053]){} }''','''Class,__9,{,},Class,_T,:,oS_,{,Destructor,(,),{,},Destructor,(,),{,Break,;,},},Class,K,{,Constructor,(,_,,,_,,,_,:,Array,[,Array,[,Array,[,Float,,,0B11,],,,30,],,,053,],),{,},},<EOF>''',101))

    def test_1417(self):
        self.assertTrue(TestLexer.test('''Class _:_{$_(){}Constructor (U_:_;u9_Yv,_,_0:_;x_0a,_:Array [String ,75];_nR,_,_,F:_;_0,_:_o){} }Class _{}Class _{}''','''Class,_,:,_,{,$_,(,),{,},Constructor,(,U_,:,_,;,u9_Yv,,,_,,,_0,:,_,;,x_0a,,,_,:,Array,[,String,,,75,],;,_nR,,,_,,,_,,,F,:,_,;,_0,,,_,:,_o,),{,},},Class,_,{,},Class,_,{,},<EOF>''',101))

    def test_1418(self):
        self.assertTrue(TestLexer.test('''Class _7{}Class _:c{Destructor (){c_X::$_();}Val $k:Array [Int ,0B1010000];}Class v:_{}Class j:H{}Class _:_J{}Class _M{}''','''Class,_7,{,},Class,_,:,c,{,Destructor,(,),{,c_X,::,$_,(,),;,},Val,$k,:,Array,[,Int,,,0B1010000,],;,},Class,v,:,_,{,},Class,j,:,H,{,},Class,_,:,_J,{,},Class,_M,{,},<EOF>''',101))

    def test_1419(self):
        self.assertTrue(TestLexer.test('''Class u{Val $4_:String ;Destructor (){Val j2:String ;Val _,_9,_lVE:Array [Float ,0b1011000];}Destructor (){} }Class rr{}''','''Class,u,{,Val,$4_,:,String,;,Destructor,(,),{,Val,j2,:,String,;,Val,_,,,_9,,,_lVE,:,Array,[,Float,,,0b1011000,],;,},Destructor,(,),{,},},Class,rr,{,},<EOF>''',101))

    def test_1420(self):
        self.assertTrue(TestLexer.test('''Class _D:D_3F6{Constructor (I:jF;i:Array [Float ,0x3D]){Continue ;} }Class _:E{}Class R_{Constructor (__:Array [Int ,0B10111];_,_j3,l:String ){}_8(){} }''','''Class,_D,:,D_3F6,{,Constructor,(,I,:,jF,;,i,:,Array,[,Float,,,0x3D,],),{,Continue,;,},},Class,_,:,E,{,},Class,R_,{,Constructor,(,__,:,Array,[,Int,,,0B10111,],;,_,,,_j3,,,l,:,String,),{,},_8,(,),{,},},<EOF>''',101))

    def test_1421(self):
        self.assertTrue(TestLexer.test('''Class _395_e4:OFY4___{Constructor (u___F31,o2:Array [Array [Float ,055],0B1];_k,l,x_,__,__y,I___,_0,y:Float ;_:Boolean ;__,_,n,_3E:Boolean ){} }''','''Class,_395_e4,:,OFY4___,{,Constructor,(,u___F31,,,o2,:,Array,[,Array,[,Float,,,055,],,,0B1,],;,_k,,,l,,,x_,,,__,,,__y,,,I___,,,_0,,,y,:,Float,;,_,:,Boolean,;,__,,,_,,,n,,,_3E,:,Boolean,),{,},},<EOF>''',101))

    def test_1422(self):
        self.assertTrue(TestLexer.test('''Class D{Val $M_,$Y,_j8:Float ;Constructor (__,_M,x:Array [Array [String ,0B11101],06]){} }Class g{Var $0_,$Jq75,_:Boolean ;}''','''Class,D,{,Val,$M_,,,$Y,,,_j8,:,Float,;,Constructor,(,__,,,_M,,,x,:,Array,[,Array,[,String,,,0B11101,],,,06,],),{,},},Class,g,{,Var,$0_,,,$Jq75,,,_,:,Boolean,;,},<EOF>''',101))

    def test_1423(self):
        self.assertTrue(TestLexer.test('''Class d3hk_:N{_4H_3_(I:Array [Array [Boolean ,0B10],07];_:Array [Boolean ,0B110101];_:L;_,Y97,y,M:Int ;___,__:___){}Constructor (){} }''','''Class,d3hk_,:,N,{,_4H_3_,(,I,:,Array,[,Array,[,Boolean,,,0B10,],,,07,],;,_,:,Array,[,Boolean,,,0B110101,],;,_,:,L,;,_,,,Y97,,,y,,,M,:,Int,;,___,,,__,:,___,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_1424(self):
        self.assertTrue(TestLexer.test('''Class _{}Class B_6:Y726_{Constructor (){}_2J__(P:Array [String ,05];__H8,_:Array [Array [String ,98],0b110_1]){Break ;}Destructor (){} }''','''Class,_,{,},Class,B_6,:,Y726_,{,Constructor,(,),{,},_2J__,(,P,:,Array,[,String,,,05,],;,__H8,,,_,:,Array,[,Array,[,String,,,98,],,,0b1101,],),{,Break,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_1425(self):
        self.assertTrue(TestLexer.test('''Class X:U{$1(B,r:__;_,m_,G,_:f4_;_6:Array [Int ,0x4B];eT1,_,_7,_,K_X_99N8,_T,wf,W6:_){Continue ;Break ;Break ;}Var $7_:T;}Class Cy_L:_{}''','''Class,X,:,U,{,$1,(,B,,,r,:,__,;,_,,,m_,,,G,,,_,:,f4_,;,_6,:,Array,[,Int,,,0x4B,],;,eT1,,,_,,,_7,,,_,,,K_X_99N8,,,_T,,,wf,,,W6,:,_,),{,Continue,;,Break,;,Break,;,},Var,$7_,:,T,;,},Class,Cy_L,:,_,{,},<EOF>''',101))

    def test_1426(self):
        self.assertTrue(TestLexer.test('''Class N:_{Constructor (_,ApB:_7;y:Array [Array [Array [Array [Array [String ,0141],0xB],7],0141],040];b:Array [Int ,0141]){Break ;} }''','''Class,N,:,_,{,Constructor,(,_,,,ApB,:,_7,;,y,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0141,],,,0xB,],,,7,],,,0141,],,,040,],;,b,:,Array,[,Int,,,0141,],),{,Break,;,},},<EOF>''',101))

    def test_1427(self):
        self.assertTrue(TestLexer.test('''Class _{}Class FH_{}Class __{Destructor (){}Var $_,$9x_:Uy;Constructor (__,___:_;l:_;rQ:Array [Float ,0x7]){} }''','''Class,_,{,},Class,FH_,{,},Class,__,{,Destructor,(,),{,},Var,$_,,,$9x_,:,Uy,;,Constructor,(,__,,,___,:,_,;,l,:,_,;,rQ,:,Array,[,Float,,,0x7,],),{,},},<EOF>''',101))

    def test_1428(self):
        self.assertTrue(TestLexer.test('''Class _5_{Var _:Array [Boolean ,0B1];Constructor (){Break ;} }Class T:Ny{Val $0m:Int ;Constructor (_o:Array [String ,0B1];b:Float ;Mb_,cV2,__:y7L;Z,c7,__R_1:Float ){ {} }}''','''Class,_5_,{,Var,_,:,Array,[,Boolean,,,0B1,],;,Constructor,(,),{,Break,;,},},Class,T,:,Ny,{,Val,$0m,:,Int,;,Constructor,(,_o,:,Array,[,String,,,0B1,],;,b,:,Float,;,Mb_,,,cV2,,,__,:,y7L,;,Z,,,c7,,,__R_1,:,Float,),{,{,},},},<EOF>''',101))

    def test_1429(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{}Class _{}Class M:_{Constructor (){}$_(){}_(){}Var $_:Int ;Constructor (a,_Lb_,__:_){} }Class h81:I{}''','''Class,_,{,},Class,_,{,},Class,_,{,},Class,M,:,_,{,Constructor,(,),{,},$_,(,),{,},_,(,),{,},Var,$_,:,Int,;,Constructor,(,a,,,_Lb_,,,__,:,_,),{,},},Class,h81,:,I,{,},<EOF>''',101))

    def test_1430(self):
        self.assertTrue(TestLexer.test('''Class p_6:LF_{}Class T{}Class _:L_{}Class _:__D9{Constructor (s8,__k_2hx_H:s_;_,p_5M_,F_:Array [Int ,0xE];Jt472_:Boolean ;__,_M:Array [String ,0xDFB];g:Array [Boolean ,6]){Val _:String ;} }''','''Class,p_6,:,LF_,{,},Class,T,{,},Class,_,:,L_,{,},Class,_,:,__D9,{,Constructor,(,s8,,,__k_2hx_H,:,s_,;,_,,,p_5M_,,,F_,:,Array,[,Int,,,0xE,],;,Jt472_,:,Boolean,;,__,,,_M,:,Array,[,String,,,0xDFB,],;,g,:,Array,[,Boolean,,,6,],),{,Val,_,:,String,;,},},<EOF>''',101))

    def test_1431(self):
        self.assertTrue(TestLexer.test('''Class _:__{}Class V:D{$9_6(M:Array [Array [Boolean ,0B100111],0x54];H,s_,_8:Int ){Break ;} }Class _:a{Val $W_,$Jy_y,$7Z,_,_,g:Array [String ,0X33];$A(__,_,_,l,z2_:Int ;_M___:_GYH){}Var e:Array [Boolean ,0117];}''','''Class,_,:,__,{,},Class,V,:,D,{,$9_6,(,M,:,Array,[,Array,[,Boolean,,,0B100111,],,,0x54,],;,H,,,s_,,,_8,:,Int,),{,Break,;,},},Class,_,:,a,{,Val,$W_,,,$Jy_y,,,$7Z,,,_,,,_,,,g,:,Array,[,String,,,0X33,],;,$A,(,__,,,_,,,_,,,l,,,z2_,:,Int,;,_M___,:,_GYH,),{,},Var,e,:,Array,[,Boolean,,,0117,],;,},<EOF>''',101))

    def test_1432(self):
        self.assertTrue(TestLexer.test('''Class t{Val Pq_:Array [Boolean ,02];Var $7_:String ;$_(_:String ;_:Int ){ {} }Destructor (){} }Class J:_{o(__:Boolean ){Break ;} }Class _:b{Constructor (_A:Array [Array [Array [Float ,0X8],39],0XC]){}Var _,$NA,N,K:Array [Array [Boolean ,0B1010000],0b1_1];}Class E61{}Class IQ:tj_K{}''','''Class,t,{,Val,Pq_,:,Array,[,Boolean,,,02,],;,Var,$7_,:,String,;,$_,(,_,:,String,;,_,:,Int,),{,{,},},Destructor,(,),{,},},Class,J,:,_,{,o,(,__,:,Boolean,),{,Break,;,},},Class,_,:,b,{,Constructor,(,_A,:,Array,[,Array,[,Array,[,Float,,,0X8,],,,39,],,,0XC,],),{,},Var,_,,,$NA,,,N,,,K,:,Array,[,Array,[,Boolean,,,0B1010000,],,,0b11,],;,},Class,E61,{,},Class,IQ,:,tj_K,{,},<EOF>''',101))

    def test_1433(self):
        self.assertTrue(TestLexer.test('''Class _:B_{}Class l{L(v:Array [Float ,0X5E];LJ:Array [Array [Int ,0b1],69];_,nc_:Array [Array [Array [Array [Boolean ,0b1],0x2],69],0B11100];_1A:Array [Boolean ,0B11100]){Val ___I7,t:_6__I;}Var $4:Array [Int ,0b1_1_1_1_0_00];}''','''Class,_,:,B_,{,},Class,l,{,L,(,v,:,Array,[,Float,,,0X5E,],;,LJ,:,Array,[,Array,[,Int,,,0b1,],,,69,],;,_,,,nc_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,0x2,],,,69,],,,0B11100,],;,_1A,:,Array,[,Boolean,,,0B11100,],),{,Val,___I7,,,t,:,_6__I,;,},Var,$4,:,Array,[,Int,,,0b1111000,],;,},<EOF>''',101))

    def test_1434(self):
        self.assertTrue(TestLexer.test('''Class __:_{}Class N5Ad:U{Val $0,_,$4:Array [Float ,030];}Class _:_j7{Constructor (){ {} }Val _,$7_:Array [Array [Array [Array [Array [String ,1],0B101010],030],0b10001],0x58];}''','''Class,__,:,_,{,},Class,N5Ad,:,U,{,Val,$0,,,_,,,$4,:,Array,[,Float,,,030,],;,},Class,_,:,_j7,{,Constructor,(,),{,{,},},Val,_,,,$7_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,1,],,,0B101010,],,,030,],,,0b10001,],,,0x58,],;,},<EOF>''',101))

    def test_1435(self):
        self.assertTrue(TestLexer.test('''Class Rr{}Class xe{$8(K,_,___:Array [Int ,0X28];_:Array [Array [Array [Array [Int ,02],7_65_5],04_1_26_36_2],58]){}Destructor (){}Constructor (_,Y:_;m,_:Array [Array [Array [Array [Array [Boolean ,06],05],79],01],0X28]){Break ;} }Class P:__{}Class _{}Class p:_5M_0{}''','''Class,Rr,{,},Class,xe,{,$8,(,K,,,_,,,___,:,Array,[,Int,,,0X28,],;,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,02,],,,7655,],,,04126362,],,,58,],),{,},Destructor,(,),{,},Constructor,(,_,,,Y,:,_,;,m,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,06,],,,05,],,,79,],,,01,],,,0X28,],),{,Break,;,},},Class,P,:,__,{,},Class,_,{,},Class,p,:,_5M_0,{,},<EOF>''',101))

    def test_1436(self):
        self.assertTrue(TestLexer.test('''Class cu{}Class _0_585{F(_0,____5,_:_2){} }Class cU598:u{Val _:Array [Array [Boolean ,04],55_7];}Class F1:_N{Val $__:_;Val $8_:_S;}''','''Class,cu,{,},Class,_0_585,{,F,(,_0,,,____5,,,_,:,_2,),{,},},Class,cU598,:,u,{,Val,_,:,Array,[,Array,[,Boolean,,,04,],,,557,],;,},Class,F1,:,_N,{,Val,$__,:,_,;,Val,$8_,:,_S,;,},<EOF>''',101))

    def test_1437(self):
        self.assertTrue(TestLexer.test('''Class _:_X___8_{Val $Ja_D,$_3_:UPZe8__8;Val $r,m7_,V,$33,$9:q;Var _O,_,$8_,$5:oP;Var $M,I__:Array [Float ,0X2];}Class c0_:_9_7{Destructor (){} }Class x{}''','''Class,_,:,_X___8_,{,Val,$Ja_D,,,$_3_,:,UPZe8__8,;,Val,$r,,,m7_,,,V,,,$33,,,$9,:,q,;,Var,_O,,,_,,,$8_,,,$5,:,oP,;,Var,$M,,,I__,:,Array,[,Float,,,0X2,],;,},Class,c0_,:,_9_7,{,Destructor,(,),{,},},Class,x,{,},<EOF>''',101))

    def test_1438(self):
        self.assertTrue(TestLexer.test('''Class __:__n_y_Y{Val aH9,_j,__,$5gT,$HLr,$_:Q25__8;$Ap(__i8v:Array [Array [Array [Array [Array [Array [Int ,0xD],19],0X9],0xC_F],0x3D],045];__:M;t_:Array [Int ,0B1111_0_1];c,_:Float ){} }''','''Class,__,:,__n_y_Y,{,Val,aH9,,,_j,,,__,,,$5gT,,,$HLr,,,$_,:,Q25__8,;,$Ap,(,__i8v,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0xD,],,,19,],,,0X9,],,,0xCF,],,,0x3D,],,,045,],;,__,:,M,;,t_,:,Array,[,Int,,,0B111101,],;,c,,,_,:,Float,),{,},},<EOF>''',101))

    def test_1439(self):
        self.assertTrue(TestLexer.test('''Class fo38_3{Val $3:Array [Array [Array [Array [Float ,0B100001],0123],0b1_10],0x24];}Class q{}Class __9:s6{Val $o:M;Var _4_962:String ;}''','''Class,fo38_3,{,Val,$3,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B100001,],,,0123,],,,0b110,],,,0x24,],;,},Class,q,{,},Class,__9,:,s6,{,Val,$o,:,M,;,Var,_4_962,:,String,;,},<EOF>''',101))

    def test_1440(self):
        self.assertTrue(TestLexer.test('''Class _:i{Constructor (){} }Class _7{Constructor (){} }Class m_{Destructor (){}Constructor (Kj:String ;_:String ;___,s7:String ;v_YY:Int ){} }Class __1{}''','''Class,_,:,i,{,Constructor,(,),{,},},Class,_7,{,Constructor,(,),{,},},Class,m_,{,Destructor,(,),{,},Constructor,(,Kj,:,String,;,_,:,String,;,___,,,s7,:,String,;,v_YY,:,Int,),{,},},Class,__1,{,},<EOF>''',101))

    def test_1441(self):
        self.assertTrue(TestLexer.test('''Class PyT{_(u_:A_){} }Class _a:q{Val B,$_62:Array [Array [Array [Float ,06_3_3],0x29_C_5],0x62];Var _,$JS:Array [Boolean ,0X15];}''','''Class,PyT,{,_,(,u_,:,A_,),{,},},Class,_a,:,q,{,Val,B,,,$_62,:,Array,[,Array,[,Array,[,Float,,,0633,],,,0x29C5,],,,0x62,],;,Var,_,,,$JS,:,Array,[,Boolean,,,0X15,],;,},<EOF>''',101))

    def test_1442(self):
        self.assertTrue(TestLexer.test('''Class zW8sw2{Constructor (_q,_:f2;L:String ;_43,o_,b_:_;O:Array [String ,0X37]){ {}o_::$_F._3._.o00_ZP2._();} }Class _:_{}''','''Class,zW8sw2,{,Constructor,(,_q,,,_,:,f2,;,L,:,String,;,_43,,,o_,,,b_,:,_,;,O,:,Array,[,String,,,0X37,],),{,{,},o_,::,$_F,.,_3,.,_,.,o00_ZP2,.,_,(,),;,},},Class,_,:,_,{,},<EOF>''',101))

    def test_1443(self):
        self.assertTrue(TestLexer.test('''Class S:V8{_(_o,irX__86:Int ;__6e_:Int ;Y:String ;x:Int ;V10C44Mb:Float ;m_:String ;b:Int ;O:Array [Int ,0X83_1]){} }Class _:g{}''','''Class,S,:,V8,{,_,(,_o,,,irX__86,:,Int,;,__6e_,:,Int,;,Y,:,String,;,x,:,Int,;,V10C44Mb,:,Float,;,m_,:,String,;,b,:,Int,;,O,:,Array,[,Int,,,0X831,],),{,},},Class,_,:,g,{,},<EOF>''',101))

    def test_1444(self):
        self.assertTrue(TestLexer.test('''Class l:G__Z{Constructor (_G:String ;_:Float ;e__9_N:Float ){} }Class _{Destructor (){} }Class a__:H{Val $P_F,_:Int ;}''','''Class,l,:,G__Z,{,Constructor,(,_G,:,String,;,_,:,Float,;,e__9_N,:,Float,),{,},},Class,_,{,Destructor,(,),{,},},Class,a__,:,H,{,Val,$P_F,,,_,:,Int,;,},<EOF>''',101))

    def test_1445(self):
        self.assertTrue(TestLexer.test('''Class _:__{_3(){}Constructor (F,H,g:c;Z,ro:Float ;O,_,hM,_,d:__;WPz:_6y){}m(){}r(__N,w:Array [Array [Array [Array [Int ,4_327],2],1_4],01];h,to_0,o,CS:A3){Continue ;} }Class __ad:_Oo8_{Var $_:Array [Int ,0X1C];}''','''Class,_,:,__,{,_3,(,),{,},Constructor,(,F,,,H,,,g,:,c,;,Z,,,ro,:,Float,;,O,,,_,,,hM,,,_,,,d,:,__,;,WPz,:,_6y,),{,},m,(,),{,},r,(,__N,,,w,:,Array,[,Array,[,Array,[,Array,[,Int,,,4327,],,,2,],,,14,],,,01,],;,h,,,to_0,,,o,,,CS,:,A3,),{,Continue,;,},},Class,__ad,:,_Oo8_,{,Var,$_,:,Array,[,Int,,,0X1C,],;,},<EOF>''',101))

    def test_1446(self):
        self.assertTrue(TestLexer.test('''Class E5{Constructor (_T2,_:Float ;__,qh,L:String ;__:Array [Array [Array [String ,57],0X10],5_1];h_Y_b:Array [Boolean ,0b1]){} }''','''Class,E5,{,Constructor,(,_T2,,,_,:,Float,;,__,,,qh,,,L,:,String,;,__,:,Array,[,Array,[,Array,[,String,,,57,],,,0X10,],,,51,],;,h_Y_b,:,Array,[,Boolean,,,0b1,],),{,},},<EOF>''',101))

    def test_1447(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_Vi,_,___:Array [Array [Array [String ,0x3_8],0103],0103]){}Val C,$2_u:Boolean ;}Class ___{}Class F{}''','''Class,_,{,Constructor,(,_Vi,,,_,,,___,:,Array,[,Array,[,Array,[,String,,,0x38,],,,0103,],,,0103,],),{,},Val,C,,,$2_u,:,Boolean,;,},Class,___,{,},Class,F,{,},<EOF>''',101))

    def test_1448(self):
        self.assertTrue(TestLexer.test('''Class _B{}Class X{_(izR23:Array [Array [Array [Boolean ,062],0x8_3],05];_87:Array [Array [String ,0B10010],0B10010]){} }''','''Class,_B,{,},Class,X,{,_,(,izR23,:,Array,[,Array,[,Array,[,Boolean,,,062,],,,0x83,],,,05,],;,_87,:,Array,[,Array,[,String,,,0B10010,],,,0B10010,],),{,},},<EOF>''',101))

    def test_1449(self):
        self.assertTrue(TestLexer.test('''Class r{}Class m:k_{}Class I7{Var $_T,$1Y:Float ;Val $__8,$_,$7_6,i_,$3D8:Array [Boolean ,0b11];}Class _:_G3{Var $sK_:Int ;Var $8:w_98;}''','''Class,r,{,},Class,m,:,k_,{,},Class,I7,{,Var,$_T,,,$1Y,:,Float,;,Val,$__8,,,$_,,,$7_6,,,i_,,,$3D8,:,Array,[,Boolean,,,0b11,],;,},Class,_,:,_G3,{,Var,$sK_,:,Int,;,Var,$8,:,w_98,;,},<EOF>''',101))

    def test_1450(self):
        self.assertTrue(TestLexer.test('''Class _E_0_{Destructor (){} }Class Z{Constructor (__,_,_:String ;_8_4__:Array [Boolean ,0b1010100];_o20:Int ;_:O){}Destructor (){} }''','''Class,_E_0_,{,Destructor,(,),{,},},Class,Z,{,Constructor,(,__,,,_,,,_,:,String,;,_8_4__,:,Array,[,Boolean,,,0b1010100,],;,_o20,:,Int,;,_,:,O,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_1451(self):
        self.assertTrue(TestLexer.test('''Class _GC_{Val $_,_,_8OwAa:Array [Array [Array [String ,0b1],0X6],0X8];Val O_V5_:V;}Class __o{}Class K2{}Class r{Var _7_:Boolean ;}''','''Class,_GC_,{,Val,$_,,,_,,,_8OwAa,:,Array,[,Array,[,Array,[,String,,,0b1,],,,0X6,],,,0X8,],;,Val,O_V5_,:,V,;,},Class,__o,{,},Class,K2,{,},Class,r,{,Var,_7_,:,Boolean,;,},<EOF>''',101))

    def test_1452(self):
        self.assertTrue(TestLexer.test('''Class _:T{q_(X,___c6,a_:Array [Int ,11];O,n_j7:_E;p:String ;_:String ;__8_:String ){} }Class ___:d{Val g_:Array [Float ,05];Var R:_;}''','''Class,_,:,T,{,q_,(,X,,,___c6,,,a_,:,Array,[,Int,,,11,],;,O,,,n_j7,:,_E,;,p,:,String,;,_,:,String,;,__8_,:,String,),{,},},Class,___,:,d,{,Val,g_,:,Array,[,Float,,,05,],;,Var,R,:,_,;,},<EOF>''',101))

    def test_1453(self):
        self.assertTrue(TestLexer.test('''Class __:n166E{_(_:Array [Boolean ,0131]){}G(I:Array [Int ,03];_:Array [Boolean ,0X9];D:_m;g:Array [Array [Boolean ,8_9],0b10];V_:__5I_){Break ;} }''','''Class,__,:,n166E,{,_,(,_,:,Array,[,Boolean,,,0131,],),{,},G,(,I,:,Array,[,Int,,,03,],;,_,:,Array,[,Boolean,,,0X9,],;,D,:,_m,;,g,:,Array,[,Array,[,Boolean,,,89,],,,0b10,],;,V_,:,__5I_,),{,Break,;,},},<EOF>''',101))

    def test_1454(self):
        self.assertTrue(TestLexer.test('''Class r{}Class _q_9:g{}Class p_{}Class s6__h{Var _,$5M,___H:String ;Var V4o1_5:dz;Val l,__6,_3:Array [String ,0B110001];}''','''Class,r,{,},Class,_q_9,:,g,{,},Class,p_,{,},Class,s6__h,{,Var,_,,,$5M,,,___H,:,String,;,Var,V4o1_5,:,dz,;,Val,l,,,__6,,,_3,:,Array,[,String,,,0B110001,],;,},<EOF>''',101))

    def test_1455(self):
        self.assertTrue(TestLexer.test('''Class DWc:_3{$1(c,_j,_,_,fz056:Array [Array [Array [Array [Int ,0b1],0X5],0X59],0x38];__,f:S_;rT:Int ){Break ;} }Class _{}''','''Class,DWc,:,_3,{,$1,(,c,,,_j,,,_,,,_,,,fz056,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,0X5,],,,0X59,],,,0x38,],;,__,,,f,:,S_,;,rT,:,Int,),{,Break,;,},},Class,_,{,},<EOF>''',101))

    def test_1456(self):
        self.assertTrue(TestLexer.test('''Class Q_ma{___4(_,y_H:Array [Array [Array [Array [Array [Array [Array [Float ,055],0x5E],055],15],055],0X7],0X7]){} }''','''Class,Q_ma,{,___4,(,_,,,y_H,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,055,],,,0x5E,],,,055,],,,15,],,,055,],,,0X7,],,,0X7,],),{,},},<EOF>''',101))

    def test_1457(self):
        self.assertTrue(TestLexer.test('''Class _:h{Val $R,_,U__5,VG0__:Float ;$pe(){Break ;Return ;} }Class _:__9f5G0__{}Class n:_T2_{}Class e:_{Val _:_;Destructor (){}Var $I:Array [Array [Array [Boolean ,0b1010011],037],2];}Class _:q{}''','''Class,_,:,h,{,Val,$R,,,_,,,U__5,,,VG0__,:,Float,;,$pe,(,),{,Break,;,Return,;,},},Class,_,:,__9f5G0__,{,},Class,n,:,_T2_,{,},Class,e,:,_,{,Val,_,:,_,;,Destructor,(,),{,},Var,$I,:,Array,[,Array,[,Array,[,Boolean,,,0b1010011,],,,037,],,,2,],;,},Class,_,:,q,{,},<EOF>''',101))

    def test_1458(self):
        self.assertTrue(TestLexer.test('''Class _{}Class H7:T{}Class _:Nt{}Class Z{Val _,_:Array [Boolean ,0b10_1];Var $34,$1:Array [Array [Int ,0132],0B1];Var $95_,FT,_:Array [Array [String ,0b1],0x9];Val $9:_;}Class _{}''','''Class,_,{,},Class,H7,:,T,{,},Class,_,:,Nt,{,},Class,Z,{,Val,_,,,_,:,Array,[,Boolean,,,0b101,],;,Var,$34,,,$1,:,Array,[,Array,[,Int,,,0132,],,,0B1,],;,Var,$95_,,,FT,,,_,:,Array,[,Array,[,String,,,0b1,],,,0x9,],;,Val,$9,:,_,;,},Class,_,{,},<EOF>''',101))

    def test_1459(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _:B{}Class _:_{Constructor (_N:_;_:oz;k:_Rf_m){m::$g._();} }Class d_:_{Destructor (){} }Class e:a5{}''','''Class,_,{,},Class,_,:,B,{,},Class,_,:,_,{,Constructor,(,_N,:,_,;,_,:,oz,;,k,:,_Rf_m,),{,m,::,$g,.,_,(,),;,},},Class,d_,:,_,{,Destructor,(,),{,},},Class,e,:,a5,{,},<EOF>''',101))

    def test_1460(self):
        self.assertTrue(TestLexer.test('''Class E:_940_2p{Destructor (){Continue ;{} }}Class i_{Val $_3__2,$9:Array [Array [Array [String ,43],0B1],0x24];Val _:Boolean ;}''','''Class,E,:,_940_2p,{,Destructor,(,),{,Continue,;,{,},},},Class,i_,{,Val,$_3__2,,,$9,:,Array,[,Array,[,Array,[,String,,,43,],,,0B1,],,,0x24,],;,Val,_,:,Boolean,;,},<EOF>''',101))

    def test_1461(self):
        self.assertTrue(TestLexer.test('''Class U:C{Constructor (__,_co,_o_:String ;B:Array [Array [Array [Boolean ,0b1],0b1],0130];_:Float ;_,k8,_,_:String ){}Destructor (){}Var $k,$p_,$Y_9,$_:Float ;}''','''Class,U,:,C,{,Constructor,(,__,,,_co,,,_o_,:,String,;,B,:,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,0b1,],,,0130,],;,_,:,Float,;,_,,,k8,,,_,,,_,:,String,),{,},Destructor,(,),{,},Var,$k,,,$p_,,,$Y_9,,,$_,:,Float,;,},<EOF>''',101))

    def test_1462(self):
        self.assertTrue(TestLexer.test('''Class J{Destructor (){Break ;}Var $_:Array [String ,0b110101];Constructor (_:String ;_oMZ:_){ {} }Constructor (){Var _,y:_;}Destructor (){}Destructor (){}P3(K:String ;_,k:Array [Array [Array [Int ,7],0x5A],0x1]){}Destructor (){}Destructor (){} }''','''Class,J,{,Destructor,(,),{,Break,;,},Var,$_,:,Array,[,String,,,0b110101,],;,Constructor,(,_,:,String,;,_oMZ,:,_,),{,{,},},Constructor,(,),{,Var,_,,,y,:,_,;,},Destructor,(,),{,},Destructor,(,),{,},P3,(,K,:,String,;,_,,,k,:,Array,[,Array,[,Array,[,Int,,,7,],,,0x5A,],,,0x1,],),{,},Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_1463(self):
        self.assertTrue(TestLexer.test('''Class P_{Constructor (W,_,_,nK3K,_,__m:_V;_,_,H:Float ;__:Boolean ;F_2,_2:Array [Boolean ,067]){ {} }}Class _:v{}Class f:__{}''','''Class,P_,{,Constructor,(,W,,,_,,,_,,,nK3K,,,_,,,__m,:,_V,;,_,,,_,,,H,:,Float,;,__,:,Boolean,;,F_2,,,_2,:,Array,[,Boolean,,,067,],),{,{,},},},Class,_,:,v,{,},Class,f,:,__,{,},<EOF>''',101))

    def test_1464(self):
        self.assertTrue(TestLexer.test('''Class m:J{Constructor (Xh,h3_l,x_6_,_,w:Int ;___S:Array [Int ,0b100001];_84a:Float ;_0h,Z,_1,y,_34_,z,_:Array [Array [Float ,44],0b100001]){} }''','''Class,m,:,J,{,Constructor,(,Xh,,,h3_l,,,x_6_,,,_,,,w,:,Int,;,___S,:,Array,[,Int,,,0b100001,],;,_84a,:,Float,;,_0h,,,Z,,,_1,,,y,,,_34_,,,z,,,_,:,Array,[,Array,[,Float,,,44,],,,0b100001,],),{,},},<EOF>''',101))

    def test_1465(self):
        self.assertTrue(TestLexer.test('''Class _F_:T49{}Class ___:_5{}Class a_:_{Var B6:Float ;Destructor (){} }Class _{Val _:_;Destructor (){}Val J,$0:A;$P(___1p:Boolean ){} }Class __A_n_:q{Destructor (){} }''','''Class,_F_,:,T49,{,},Class,___,:,_5,{,},Class,a_,:,_,{,Var,B6,:,Float,;,Destructor,(,),{,},},Class,_,{,Val,_,:,_,;,Destructor,(,),{,},Val,J,,,$0,:,A,;,$P,(,___1p,:,Boolean,),{,},},Class,__A_n_,:,q,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1466(self):
        self.assertTrue(TestLexer.test('''Class R8{Val i,$r:Boolean ;Constructor (){}Val $o__s85,g:Array [Float ,0b1];}Class z{Constructor (_,_:String ;_6_:Array [Array [String ,0B10],5];_0N:Int ;Gdg9_Mi4:Array [Boolean ,34]){} }''','''Class,R8,{,Val,i,,,$r,:,Boolean,;,Constructor,(,),{,},Val,$o__s85,,,g,:,Array,[,Float,,,0b1,],;,},Class,z,{,Constructor,(,_,,,_,:,String,;,_6_,:,Array,[,Array,[,String,,,0B10,],,,5,],;,_0N,:,Int,;,Gdg9_Mi4,:,Array,[,Boolean,,,34,],),{,},},<EOF>''',101))

    def test_1467(self):
        self.assertTrue(TestLexer.test('''Class _:_I{h_e(_:__;SB:B){} }Class _:uX1{}Class S{}Class a_1n_{Val $___,$28,_:_zem;Val _,m,A:hT5;_(){} }Class _5{}Class h{}''','''Class,_,:,_I,{,h_e,(,_,:,__,;,SB,:,B,),{,},},Class,_,:,uX1,{,},Class,S,{,},Class,a_1n_,{,Val,$___,,,$28,,,_,:,_zem,;,Val,_,,,m,,,A,:,hT5,;,_,(,),{,},},Class,_5,{,},Class,h,{,},<EOF>''',101))

    def test_1468(self):
        self.assertTrue(TestLexer.test('''Class __:_{$9_(){} }Class _9p:__Q_aq{Var _:Int ;Constructor (){} }Class A_{}Class I{_2(){Break ;}Var $V1D,$1_I3,l:Boolean ;_8(k:__;_:Array [Array [Int ,77],0b1000]){} }''','''Class,__,:,_,{,$9_,(,),{,},},Class,_9p,:,__Q_aq,{,Var,_,:,Int,;,Constructor,(,),{,},},Class,A_,{,},Class,I,{,_2,(,),{,Break,;,},Var,$V1D,,,$1_I3,,,l,:,Boolean,;,_8,(,k,:,__,;,_,:,Array,[,Array,[,Int,,,77,],,,0b1000,],),{,},},<EOF>''',101))

    def test_1469(self):
        self.assertTrue(TestLexer.test('''Class _{Val ____:Float ;Val P,_,_0:F;Constructor (_,_S,_,_,I,_,_,_ew,L,G,O:Array [Array [String ,0B1_0],0B1010000]){} }Class T__Gh{Destructor (){}$__5(Y,A_,__:Array [Int ,0x14];_8:Float ){Break ;}Var $8VM:e1;}Class H{}Class s:B{Destructor (){} }Class __8{Val $xJ:__;}Class _w:x{}Class P:t{}Class __t_:_7{z_0_m(){}Constructor (){Return ;} }Class Z:_{r_M(){} }Class _gc:Q{}Class g__:_{Constructor (){} }Class iQ:__9{}''','''Class,_,{,Val,____,:,Float,;,Val,P,,,_,,,_0,:,F,;,Constructor,(,_,,,_S,,,_,,,_,,,I,,,_,,,_,,,_ew,,,L,,,G,,,O,:,Array,[,Array,[,String,,,0B10,],,,0B1010000,],),{,},},Class,T__Gh,{,Destructor,(,),{,},$__5,(,Y,,,A_,,,__,:,Array,[,Int,,,0x14,],;,_8,:,Float,),{,Break,;,},Var,$8VM,:,e1,;,},Class,H,{,},Class,s,:,B,{,Destructor,(,),{,},},Class,__8,{,Val,$xJ,:,__,;,},Class,_w,:,x,{,},Class,P,:,t,{,},Class,__t_,:,_7,{,z_0_m,(,),{,},Constructor,(,),{,Return,;,},},Class,Z,:,_,{,r_M,(,),{,},},Class,_gc,:,Q,{,},Class,g__,:,_,{,Constructor,(,),{,},},Class,iQ,:,__9,{,},<EOF>''',101))

    def test_1470(self):
        self.assertTrue(TestLexer.test('''Class _:hZ{Constructor (_u,_,_:Array [Array [Array [Int ,0xD],077],033]){Continue ;}Constructor (__:Array [Float ,5_80]){} }Class _:E{}''','''Class,_,:,hZ,{,Constructor,(,_u,,,_,,,_,:,Array,[,Array,[,Array,[,Int,,,0xD,],,,077,],,,033,],),{,Continue,;,},Constructor,(,__,:,Array,[,Float,,,580,],),{,},},Class,_,:,E,{,},<EOF>''',101))

    def test_1471(self):
        self.assertTrue(TestLexer.test('''Class B:_{Var $3_e_35_,$J,_Q,_:Int ;}Class _{Destructor (){Return ;}$_(_:Array [String ,0X58];yl:Array [Array [Float ,90],0b1_11];_:Array [Float ,0120]){} }''','''Class,B,:,_,{,Var,$3_e_35_,,,$J,,,_Q,,,_,:,Int,;,},Class,_,{,Destructor,(,),{,Return,;,},$_,(,_,:,Array,[,String,,,0X58,],;,yl,:,Array,[,Array,[,Float,,,90,],,,0b111,],;,_,:,Array,[,Float,,,0120,],),{,},},<EOF>''',101))

    def test_1472(self):
        self.assertTrue(TestLexer.test('''Class v:_8{$_3(U_:Int ;_h,W_,_562l:BE;_YAhy16:Array [Float ,0B1];d_,b:Array [Float ,0B11_01];d_u_0:a;__,_:_){} }''','''Class,v,:,_8,{,$_3,(,U_,:,Int,;,_h,,,W_,,,_562l,:,BE,;,_YAhy16,:,Array,[,Float,,,0B1,],;,d_,,,b,:,Array,[,Float,,,0B1101,],;,d_u_0,:,a,;,__,,,_,:,_,),{,},},<EOF>''',101))

    def test_1473(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_,_,Z9p:P;_6,__:Int ){} }Class n{}Class A_:_3{}Class t_a:_{Val Xi:Array [Array [Boolean ,0B1100001],45];Var v,$___:Float ;}''','''Class,_,{,Constructor,(,_,,,_,,,Z9p,:,P,;,_6,,,__,:,Int,),{,},},Class,n,{,},Class,A_,:,_3,{,},Class,t_a,:,_,{,Val,Xi,:,Array,[,Array,[,Boolean,,,0B1100001,],,,45,],;,Var,v,,,$___,:,Float,;,},<EOF>''',101))

    def test_1474(self):
        self.assertTrue(TestLexer.test('''Class _H:_{Destructor (){} }Class Z:_{$_(){Var z,h:Array [Array [Array [Array [Float ,5_14_7],0b10_011_1],0x9C],0B1011110];} }Class Nx5:E2{}''','''Class,_H,:,_,{,Destructor,(,),{,},},Class,Z,:,_,{,$_,(,),{,Var,z,,,h,:,Array,[,Array,[,Array,[,Array,[,Float,,,5147,],,,0b100111,],,,0x9C,],,,0B1011110,],;,},},Class,Nx5,:,E2,{,},<EOF>''',101))

    def test_1475(self):
        self.assertTrue(TestLexer.test('''Class tN:u{}Class N{Constructor (_E:Boolean ;D,_E66:o){}Destructor (){}$_(b_5:Array [Array [Array [Float ,03],0B1],0B10]){} }Class SW_{}''','''Class,tN,:,u,{,},Class,N,{,Constructor,(,_E,:,Boolean,;,D,,,_E66,:,o,),{,},Destructor,(,),{,},$_,(,b_5,:,Array,[,Array,[,Array,[,Float,,,03,],,,0B1,],,,0B10,],),{,},},Class,SW_,{,},<EOF>''',101))

    def test_1476(self):
        self.assertTrue(TestLexer.test('''Class __:__1Jm5_{$_1NM(_:Array [Array [Int ,0B1000],1];_,___,AmX:_;Y_:Array [Int ,02];Z:_e____SH;_:Array [Array [Array [Boolean ,37],04_3],5];_i8,o3:M){} }Class N{}''','''Class,__,:,__1Jm5_,{,$_1NM,(,_,:,Array,[,Array,[,Int,,,0B1000,],,,1,],;,_,,,___,,,AmX,:,_,;,Y_,:,Array,[,Int,,,02,],;,Z,:,_e____SH,;,_,:,Array,[,Array,[,Array,[,Boolean,,,37,],,,043,],,,5,],;,_i8,,,o3,:,M,),{,},},Class,N,{,},<EOF>''',101))

    def test_1477(self):
        self.assertTrue(TestLexer.test('''Class __407_5_qK_{}Class S_:_g_5{Val _05_,$_WB1,h_X0__:String ;s(A7p:_A__){} }Class _:J{}Class e{}Class W:__6mw{}''','''Class,__407_5_qK_,{,},Class,S_,:,_g_5,{,Val,_05_,,,$_WB1,,,h_X0__,:,String,;,s,(,A7p,:,_A__,),{,},},Class,_,:,J,{,},Class,e,{,},Class,W,:,__6mw,{,},<EOF>''',101))

    def test_1478(self):
        self.assertTrue(TestLexer.test('''Class _2:Z{Var $2:_F_y;}Class O4:x{}Class _g540C38__{Constructor (){}Constructor (Y,h,w:Array [Int ,6];_,_:Boolean ;_,d:Array [String ,06];h_R:__;_,i0:Int ){} }''','''Class,_2,:,Z,{,Var,$2,:,_F_y,;,},Class,O4,:,x,{,},Class,_g540C38__,{,Constructor,(,),{,},Constructor,(,Y,,,h,,,w,:,Array,[,Int,,,6,],;,_,,,_,:,Boolean,;,_,,,d,:,Array,[,String,,,06,],;,h_R,:,__,;,_,,,i0,:,Int,),{,},},<EOF>''',101))

    def test_1479(self):
        self.assertTrue(TestLexer.test('''Class _:_____{}Class ___{Val $x:Array [Array [Boolean ,18],10];Val $4,r,$P_,_Z:Array [Array [Array [Float ,0x15],0xA],18];Val $0,$0:Boolean ;Var $90_A__ei,$0_U_:z;}''','''Class,_,:,_____,{,},Class,___,{,Val,$x,:,Array,[,Array,[,Boolean,,,18,],,,10,],;,Val,$4,,,r,,,$P_,,,_Z,:,Array,[,Array,[,Array,[,Float,,,0x15,],,,0xA,],,,18,],;,Val,$0,,,$0,:,Boolean,;,Var,$90_A__ei,,,$0_U_,:,z,;,},<EOF>''',101))

    def test_1480(self):
        self.assertTrue(TestLexer.test('''Class _:_{na7_8_1(){C7::$T.e__();}_(wj93:Array [Array [Int ,0143],4];mp_o5K_,_:vU;iL,_6,_:Z3q__;y,_08:String ){} }''','''Class,_,:,_,{,na7_8_1,(,),{,C7,::,$T,.,e__,(,),;,},_,(,wj93,:,Array,[,Array,[,Int,,,0143,],,,4,],;,mp_o5K_,,,_,:,vU,;,iL,,,_6,,,_,:,Z3q__,;,y,,,_08,:,String,),{,},},<EOF>''',101))

    def test_1481(self):
        self.assertTrue(TestLexer.test('''Class z{Destructor (){} }Class __yqp_g{Var a:Array [Array [Boolean ,0b1],033];}Class Q{Destructor (){} }Class l6WOH_k{}Class g4:K_16V{}''','''Class,z,{,Destructor,(,),{,},},Class,__yqp_g,{,Var,a,:,Array,[,Array,[,Boolean,,,0b1,],,,033,],;,},Class,Q,{,Destructor,(,),{,},},Class,l6WOH_k,{,},Class,g4,:,K_16V,{,},<EOF>''',101))

    def test_1482(self):
        self.assertTrue(TestLexer.test('''Class _L{Constructor (v:j;t,_,_7w1_,tL,B_Qp,_:Array [Array [Array [Boolean ,0X42],8_7],0b1];__,_,x,M,_:_;Z:Boolean ;_7,_,_2,__:Float ;Bh,W:Array [Boolean ,5];g,Z:String ;_d,k,_:Boolean ){Continue ;} }''','''Class,_L,{,Constructor,(,v,:,j,;,t,,,_,,,_7w1_,,,tL,,,B_Qp,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0X42,],,,87,],,,0b1,],;,__,,,_,,,x,,,M,,,_,:,_,;,Z,:,Boolean,;,_7,,,_,,,_2,,,__,:,Float,;,Bh,,,W,:,Array,[,Boolean,,,5,],;,g,,,Z,:,String,;,_d,,,k,,,_,:,Boolean,),{,Continue,;,},},<EOF>''',101))

    def test_1483(self):
        self.assertTrue(TestLexer.test('''Class f_:__3A_{Val $_:Array [Array [Array [Boolean ,074_3_51214_3],7],0XF];}Class s3__w:__{$3_r(){} }Class _J__:S{}''','''Class,f_,:,__3A_,{,Val,$_,:,Array,[,Array,[,Array,[,Boolean,,,0743512143,],,,7,],,,0XF,],;,},Class,s3__w,:,__,{,$3_r,(,),{,},},Class,_J__,:,S,{,},<EOF>''',101))

    def test_1484(self):
        self.assertTrue(TestLexer.test('''Class N_:z{}Class _{Val u_:Array [Array [Array [String ,30],0B1_0],0B1101];Constructor (_Q___,Fv:String ;b_76:_;_2_,G,_:Array [Float ,040]){} }''','''Class,N_,:,z,{,},Class,_,{,Val,u_,:,Array,[,Array,[,Array,[,String,,,30,],,,0B10,],,,0B1101,],;,Constructor,(,_Q___,,,Fv,:,String,;,b_76,:,_,;,_2_,,,G,,,_,:,Array,[,Float,,,040,],),{,},},<EOF>''',101))

    def test_1485(self):
        self.assertTrue(TestLexer.test('''Class _0D:__l108{}Class Ci{Constructor (E,_I8,_2h_,__,_,_,A:U8838){}Val $VE,_i9:Array [Int ,0X4];}Class __:L{}Class R:Hu{}''','''Class,_0D,:,__l108,{,},Class,Ci,{,Constructor,(,E,,,_I8,,,_2h_,,,__,,,_,,,_,,,A,:,U8838,),{,},Val,$VE,,,_i9,:,Array,[,Int,,,0X4,],;,},Class,__,:,L,{,},Class,R,:,Hu,{,},<EOF>''',101))

    def test_1486(self):
        self.assertTrue(TestLexer.test('''Class l:_{Constructor (){} }Class _:_{$_(____A3O46:Array [Array [Float ,074],0b101010];_5_2:Array [Float ,074];_3__6:Array [Boolean ,0x1_8];M:Int ){} }''','''Class,l,:,_,{,Constructor,(,),{,},},Class,_,:,_,{,$_,(,____A3O46,:,Array,[,Array,[,Float,,,074,],,,0b101010,],;,_5_2,:,Array,[,Float,,,074,],;,_3__6,:,Array,[,Boolean,,,0x18,],;,M,:,Int,),{,},},<EOF>''',101))

    def test_1487(self):
        self.assertTrue(TestLexer.test('''Class z{}Class _{Constructor (D:__){}$P_(S_6,_1:_0F){}Destructor (){}Constructor (P:Boolean ;oZ,T_985_w_:vu;Q:Float ){} }''','''Class,z,{,},Class,_,{,Constructor,(,D,:,__,),{,},$P_,(,S_6,,,_1,:,_0F,),{,},Destructor,(,),{,},Constructor,(,P,:,Boolean,;,oZ,,,T_985_w_,:,vu,;,Q,:,Float,),{,},},<EOF>''',101))

    def test_1488(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _7:_t{$S054(){} }Class _{Destructor (){}Destructor (){i::$K._.mn._5();Continue ;} }Class _0_42:i{}''','''Class,_,{,},Class,_7,:,_t,{,$S054,(,),{,},},Class,_,{,Destructor,(,),{,},Destructor,(,),{,i,::,$K,.,_,.,mn,.,_5,(,),;,Continue,;,},},Class,_0_42,:,i,{,},<EOF>''',101))

    def test_1489(self):
        self.assertTrue(TestLexer.test('''Class m{$_l(U_y,_9___,__i2_,_,F_,S,H:Array [Array [Float ,023],0XF_2C];_:t5){Return ;}Var $__,$_:Array [Boolean ,0b1001111];Constructor (){}Destructor (){} }Class _:____66{}''','''Class,m,{,$_l,(,U_y,,,_9___,,,__i2_,,,_,,,F_,,,S,,,H,:,Array,[,Array,[,Float,,,023,],,,0XF2C,],;,_,:,t5,),{,Return,;,},Var,$__,,,$_,:,Array,[,Boolean,,,0b1001111,],;,Constructor,(,),{,},Destructor,(,),{,},},Class,_,:,____66,{,},<EOF>''',101))

    def test_1490(self):
        self.assertTrue(TestLexer.test('''Class i{Val $741:Array [Array [Int ,051],17];}Class _:__V{Var $9,b7,y:t48;}Class L{}Class M{}Class _B{}Class __:f73{}Class _{}''','''Class,i,{,Val,$741,:,Array,[,Array,[,Int,,,051,],,,17,],;,},Class,_,:,__V,{,Var,$9,,,b7,,,y,:,t48,;,},Class,L,{,},Class,M,{,},Class,_B,{,},Class,__,:,f73,{,},Class,_,{,},<EOF>''',101))

    def test_1491(self):
        self.assertTrue(TestLexer.test('''Class T:w1{}Class _:rHL{$X8(r:_;_M8,A6d0_:Array [Array [Array [Boolean ,0b110010],0xA],0b1_0_0]){} }Class _:_z{Val $gc,__O:v;}Class _:yG_{}Class _13__:Xld{}''','''Class,T,:,w1,{,},Class,_,:,rHL,{,$X8,(,r,:,_,;,_M8,,,A6d0_,:,Array,[,Array,[,Array,[,Boolean,,,0b110010,],,,0xA,],,,0b100,],),{,},},Class,_,:,_z,{,Val,$gc,,,__O,:,v,;,},Class,_,:,yG_,{,},Class,_13__,:,Xld,{,},<EOF>''',101))

    def test_1492(self):
        self.assertTrue(TestLexer.test('''Class j{$9(z9:b){Break ;} }Class _{}Class VZ_3_:S{}Class _:_{Var ___:Array [Array [Array [Boolean ,05],05],0B1001111];}''','''Class,j,{,$9,(,z9,:,b,),{,Break,;,},},Class,_,{,},Class,VZ_3_,:,S,{,},Class,_,:,_,{,Var,___,:,Array,[,Array,[,Array,[,Boolean,,,05,],,,05,],,,0B1001111,],;,},<EOF>''',101))

    def test_1493(self):
        self.assertTrue(TestLexer.test('''Class h_:_9{}Class _{Constructor (_,_:Array [Int ,0x4];_,_,_:_;Q5_,_Q:Boolean ;W_I,Q:Hi4){ {} }$_5(){}Val m,$_,_5_8:Array [Boolean ,0b11_0];}''','''Class,h_,:,_9,{,},Class,_,{,Constructor,(,_,,,_,:,Array,[,Int,,,0x4,],;,_,,,_,,,_,:,_,;,Q5_,,,_Q,:,Boolean,;,W_I,,,Q,:,Hi4,),{,{,},},$_5,(,),{,},Val,m,,,$_,,,_5_8,:,Array,[,Boolean,,,0b110,],;,},<EOF>''',101))

    def test_1494(self):
        self.assertTrue(TestLexer.test('''Class p:_cE{}Class _:_{Constructor (__:Array [Array [Int ,54],0b1011010];T5,__p,A__:Array [Array [Array [Int ,0x6],54],0x10]){}Constructor (){} }Class a7_:w{}Class lW_c{Destructor (){Break ;} }''','''Class,p,:,_cE,{,},Class,_,:,_,{,Constructor,(,__,:,Array,[,Array,[,Int,,,54,],,,0b1011010,],;,T5,,,__p,,,A__,:,Array,[,Array,[,Array,[,Int,,,0x6,],,,54,],,,0x10,],),{,},Constructor,(,),{,},},Class,a7_,:,w,{,},Class,lW_c,{,Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_1495(self):
        self.assertTrue(TestLexer.test('''Class tt_:J{Constructor (k7:Boolean ;x0:_4;w_,gvf7v,t,_,_1F,R1_6_,_,__,P:s;_89__5_,q:Int ;_:Float ){} }Class F8{}''','''Class,tt_,:,J,{,Constructor,(,k7,:,Boolean,;,x0,:,_4,;,w_,,,gvf7v,,,t,,,_,,,_1F,,,R1_6_,,,_,,,__,,,P,:,s,;,_89__5_,,,q,:,Int,;,_,:,Float,),{,},},Class,F8,{,},<EOF>''',101))

    def test_1496(self):
        self.assertTrue(TestLexer.test('''Class _:pF_1{Var $_,e:Int ;}Class gOg8{}Class aj{$7(_,__vd,_9,_,___,_0,_6:Array [Boolean ,0x45];AN_t:String ;P0,r___:_7I;V_:E){}Val _,$Aa:Int ;}Class _:__{}''','''Class,_,:,pF_1,{,Var,$_,,,e,:,Int,;,},Class,gOg8,{,},Class,aj,{,$7,(,_,,,__vd,,,_9,,,_,,,___,,,_0,,,_6,:,Array,[,Boolean,,,0x45,],;,AN_t,:,String,;,P0,,,r___,:,_7I,;,V_,:,E,),{,},Val,_,,,$Aa,:,Int,;,},Class,_,:,__,{,},<EOF>''',101))

    def test_1497(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (X,_,S,_:Array [String ,024]){}Val _0w__:String ;Constructor (O:Boolean ;_ht:Array [Array [Array [String ,0b1],0B1_01_0_100],04]){} }''','''Class,_,:,_,{,Constructor,(,X,,,_,,,S,,,_,:,Array,[,String,,,024,],),{,},Val,_0w__,:,String,;,Constructor,(,O,:,Boolean,;,_ht,:,Array,[,Array,[,Array,[,String,,,0b1,],,,0B1010100,],,,04,],),{,},},<EOF>''',101))

    def test_1498(self):
        self.assertTrue(TestLexer.test('''Class G{}Class G_l_Q:Z{Var $87kk:Array [Array [String ,0B100100],06_1];Constructor (){}mt(){}$_(_j_:Int ;I,__:Float ;_O_:r_){} }''','''Class,G,{,},Class,G_l_Q,:,Z,{,Var,$87kk,:,Array,[,Array,[,String,,,0B100100,],,,061,],;,Constructor,(,),{,},mt,(,),{,},$_,(,_j_,:,Int,;,I,,,__,:,Float,;,_O_,:,r_,),{,},},<EOF>''',101))

    def test_1499(self):
        self.assertTrue(TestLexer.test('''Class r:r{}Class Oc94__ow{Constructor (__A,_S_:Int ;_0r,V,Q,__:Array [Array [Array [Array [Array [Array [Array [Int ,3_1],0b11000],0x9],0X5A],8],4_2_8_9],0x9];_,_:_2;_:Array [Boolean ,4_01]){} }''','''Class,r,:,r,{,},Class,Oc94__ow,{,Constructor,(,__A,,,_S_,:,Int,;,_0r,,,V,,,Q,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,31,],,,0b11000,],,,0x9,],,,0X5A,],,,8,],,,4289,],,,0x9,],;,_,,,_,:,_2,;,_,:,Array,[,Boolean,,,401,],),{,},},<EOF>''',101))

    def test_1500(self):
        self.assertTrue(TestLexer.test('''Class _{Var $8:__mq_9;$_(k,_,__:e;_:Array [Array [Array [String ,0xA_5],0XF_5],94];_6,e_:e_t_968_){Return ;} }''','''Class,_,{,Var,$8,:,__mq_9,;,$_,(,k,,,_,,,__,:,e,;,_,:,Array,[,Array,[,Array,[,String,,,0xA5,],,,0XF5,],,,94,],;,_6,,,e_,:,e_t_968_,),{,Return,;,},},<EOF>''',101))

    def test_1501(self):
        self.assertTrue(TestLexer.test('''Class cH:c{Constructor (){}Constructor (){}Val K9:fd2_3_;Var c_,$_,cE5,__LX:Int ;}Class h{Destructor (){}Val cc,$26,_K27y,$4:Boolean ;_(_:Array [Int ,0b11010_0]){}Constructor (){}Val d_:Array [Array [Array [Float ,0x2C],01],0B1];}Class _9_Y{}Class _:Z{}''','''Class,cH,:,c,{,Constructor,(,),{,},Constructor,(,),{,},Val,K9,:,fd2_3_,;,Var,c_,,,$_,,,cE5,,,__LX,:,Int,;,},Class,h,{,Destructor,(,),{,},Val,cc,,,$26,,,_K27y,,,$4,:,Boolean,;,_,(,_,:,Array,[,Int,,,0b110100,],),{,},Constructor,(,),{,},Val,d_,:,Array,[,Array,[,Array,[,Float,,,0x2C,],,,01,],,,0B1,],;,},Class,_9_Y,{,},Class,_,:,Z,{,},<EOF>''',101))

    def test_1502(self):
        self.assertTrue(TestLexer.test('''Class F8:_K2_{Constructor (){Var a,Z:Boolean ;Continue ;Break ;}Val $H,$D:Array [Array [Array [Array [Array [Boolean ,0X6],0b111],55],53],1_6];Val $0_,$X,_:_;}''','''Class,F8,:,_K2_,{,Constructor,(,),{,Var,a,,,Z,:,Boolean,;,Continue,;,Break,;,},Val,$H,,,$D,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X6,],,,0b111,],,,55,],,,53,],,,16,],;,Val,$0_,,,$X,,,_,:,_,;,},<EOF>''',101))

    def test_1503(self):
        self.assertTrue(TestLexer.test('''Class _D{}Class A:_{$_(_U_,HU,_3:Int ;_:Boolean ;_:_;d1:L9;_,u4e,_8__g,F_:_){ {Continue ;} }}Class X{Var $1SQ:Array [Array [String ,2_6],0XC];}Class _nk1:_{}''','''Class,_D,{,},Class,A,:,_,{,$_,(,_U_,,,HU,,,_3,:,Int,;,_,:,Boolean,;,_,:,_,;,d1,:,L9,;,_,,,u4e,,,_8__g,,,F_,:,_,),{,{,Continue,;,},},},Class,X,{,Var,$1SQ,:,Array,[,Array,[,String,,,26,],,,0XC,],;,},Class,_nk1,:,_,{,},<EOF>''',101))

    def test_1504(self):
        self.assertTrue(TestLexer.test('''Class _70I:_8{Constructor (){}Destructor (){}Val $1:Array [Array [Boolean ,0b1],1_8_4];Constructor (w:G){} }Class z5:nT_3a{}''','''Class,_70I,:,_8,{,Constructor,(,),{,},Destructor,(,),{,},Val,$1,:,Array,[,Array,[,Boolean,,,0b1,],,,184,],;,Constructor,(,w,:,G,),{,},},Class,z5,:,nT_3a,{,},<EOF>''',101))

    def test_1505(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (Q:Array [Array [Float ,9],27];t:Boolean ;iu,_7:Array [Array [Array [Array [Array [Float ,71],0B1],047],0B10_00],2];_2C:Boolean ;r,c8,q:Float ){Break ;} }''','''Class,_,{,Constructor,(,Q,:,Array,[,Array,[,Float,,,9,],,,27,],;,t,:,Boolean,;,iu,,,_7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,71,],,,0B1,],,,047,],,,0B1000,],,,2,],;,_2C,:,Boolean,;,r,,,c8,,,q,:,Float,),{,Break,;,},},<EOF>''',101))

    def test_1506(self):
        self.assertTrue(TestLexer.test('''Class F{Val _:Boolean ;}Class M9Xy:_V{Val $C,$66:Int ;$Z(__:Float ;ra,_3_:Array [Int ,4];_,_,c,bQ:Float ;_,q,Q:Array [Boolean ,38];u,h_:Array [String ,0X3A];a:Int ){Continue ;} }''','''Class,F,{,Val,_,:,Boolean,;,},Class,M9Xy,:,_V,{,Val,$C,,,$66,:,Int,;,$Z,(,__,:,Float,;,ra,,,_3_,:,Array,[,Int,,,4,],;,_,,,_,,,c,,,bQ,:,Float,;,_,,,q,,,Q,:,Array,[,Boolean,,,38,],;,u,,,h_,:,Array,[,String,,,0X3A,],;,a,:,Int,),{,Continue,;,},},<EOF>''',101))

    def test_1507(self):
        self.assertTrue(TestLexer.test('''Class M{Constructor (k,G:A){}Destructor (){}Destructor (){ {}Return ;Continue ;} }Class _:_{Constructor (){ {} }}''','''Class,M,{,Constructor,(,k,,,G,:,A,),{,},Destructor,(,),{,},Destructor,(,),{,{,},Return,;,Continue,;,},},Class,_,:,_,{,Constructor,(,),{,{,},},},<EOF>''',101))

    def test_1508(self):
        self.assertTrue(TestLexer.test('''Class _:_9u{}Class __:_5_J{Val i3,$T:Y8;Constructor (){}Destructor (){Continue ;K::$k_();__::$RG();Continue ;} }Class _w2:r{Val _92,_,$Z_:_3;}''','''Class,_,:,_9u,{,},Class,__,:,_5_J,{,Val,i3,,,$T,:,Y8,;,Constructor,(,),{,},Destructor,(,),{,Continue,;,K,::,$k_,(,),;,__,::,$RG,(,),;,Continue,;,},},Class,_w2,:,r,{,Val,_92,,,_,,,$Z_,:,_3,;,},<EOF>''',101))

    def test_1509(self):
        self.assertTrue(TestLexer.test('''Class p__{Constructor (H,zcG:_K;d_00,_:Array [Boolean ,0X29];l,D,Kn:String ){}$G(__:Array [Array [Boolean ,5],0B1];_6_,U_:__){} }Class q1W:__t_{Constructor (){} }''','''Class,p__,{,Constructor,(,H,,,zcG,:,_K,;,d_00,,,_,:,Array,[,Boolean,,,0X29,],;,l,,,D,,,Kn,:,String,),{,},$G,(,__,:,Array,[,Array,[,Boolean,,,5,],,,0B1,],;,_6_,,,U_,:,__,),{,},},Class,q1W,:,__t_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_1510(self):
        self.assertTrue(TestLexer.test('''Class a:_6__{}Class _:V{}Class _{Destructor (){} }Class k{}Class _:H{Destructor (){} }Class __{}Class AK_:_z{}Class __k__K:_{}''','''Class,a,:,_6__,{,},Class,_,:,V,{,},Class,_,{,Destructor,(,),{,},},Class,k,{,},Class,_,:,H,{,Destructor,(,),{,},},Class,__,{,},Class,AK_,:,_z,{,},Class,__k__K,:,_,{,},<EOF>''',101))

    def test_1511(self):
        self.assertTrue(TestLexer.test('''Class zBs2:_{}Class X6fW{Var $_:_;Val $3d:C;Val $w:Array [Array [String ,6_0],8_6_92];}Class _7:I_9I_{}Class _06:U{}''','''Class,zBs2,:,_,{,},Class,X6fW,{,Var,$_,:,_,;,Val,$3d,:,C,;,Val,$w,:,Array,[,Array,[,String,,,60,],,,8692,],;,},Class,_7,:,I_9I_,{,},Class,_06,:,U,{,},<EOF>''',101))

    def test_1512(self):
        self.assertTrue(TestLexer.test('''Class __:v_50{}Class _:eA{Constructor (){}Var V:Array [Array [Array [Array [Array [Int ,0B10_1],0b1100001],0XD],03],0X58];}''','''Class,__,:,v_50,{,},Class,_,:,eA,{,Constructor,(,),{,},Var,V,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B101,],,,0b1100001,],,,0XD,],,,03,],,,0X58,],;,},<EOF>''',101))

    def test_1513(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){}Constructor (P,l9:Array [Array [Array [Int ,01],05],0b1_0_1]){Continue ;}Constructor (V1__:Float ){}Constructor (b_6,bI,G__d,q,_3,_g_:T;_6_,WI1O,d0:S_d_){Continue ;} }Class _{Val $0,$f:Array [Int ,0X2_B];}Class c_O{}Class _7:__{}''','''Class,_,{,Constructor,(,),{,},Constructor,(,P,,,l9,:,Array,[,Array,[,Array,[,Int,,,01,],,,05,],,,0b101,],),{,Continue,;,},Constructor,(,V1__,:,Float,),{,},Constructor,(,b_6,,,bI,,,G__d,,,q,,,_3,,,_g_,:,T,;,_6_,,,WI1O,,,d0,:,S_d_,),{,Continue,;,},},Class,_,{,Val,$0,,,$f,:,Array,[,Int,,,0X2B,],;,},Class,c_O,{,},Class,_7,:,__,{,},<EOF>''',101))

    def test_1514(self):
        self.assertTrue(TestLexer.test('''Class d{}Class _6_{Constructor (_,_,_,i:Float ){}Var $2_:Array [Int ,0116];kI5(){ {} }}Class H_:b{Var $7:String ;Var Ro_y,$7,d,$R,$S9:Boolean ;}''','''Class,d,{,},Class,_6_,{,Constructor,(,_,,,_,,,_,,,i,:,Float,),{,},Var,$2_,:,Array,[,Int,,,0116,],;,kI5,(,),{,{,},},},Class,H_,:,b,{,Var,$7,:,String,;,Var,Ro_y,,,$7,,,d,,,$R,,,$S9,:,Boolean,;,},<EOF>''',101))

    def test_1515(self):
        self.assertTrue(TestLexer.test('''Class M{}Class j2_{_(E:Array [Int ,28];_,___,_,_,z7,_9_,Y4,h,_2_:Array [Boolean ,0b1]){Continue ;} }Class o___{}''','''Class,M,{,},Class,j2_,{,_,(,E,:,Array,[,Int,,,28,],;,_,,,___,,,_,,,_,,,z7,,,_9_,,,Y4,,,h,,,_2_,:,Array,[,Boolean,,,0b1,],),{,Continue,;,},},Class,o___,{,},<EOF>''',101))

    def test_1516(self):
        self.assertTrue(TestLexer.test('''Class _{Val $Qn:R_;Var _w:Array [Array [Array [Boolean ,71],060],060];_(__:T){Break ;} }Class K{Constructor (){} }Class x:__{$51(G:Array [Array [Float ,0X21],04]){} }''','''Class,_,{,Val,$Qn,:,R_,;,Var,_w,:,Array,[,Array,[,Array,[,Boolean,,,71,],,,060,],,,060,],;,_,(,__,:,T,),{,Break,;,},},Class,K,{,Constructor,(,),{,},},Class,x,:,__,{,$51,(,G,:,Array,[,Array,[,Float,,,0X21,],,,04,],),{,},},<EOF>''',101))

    def test_1517(self):
        self.assertTrue(TestLexer.test('''Class _5I2FDq85R:jI_{Constructor (_IU___,_,Z_,_,d:Array [Boolean ,0177];_1__,E,O,_,k05,wc8:Array [Array [String ,85],0B1]){_::$B();}Constructor (F:Array [Array [Array [Array [Boolean ,0XD64],0B101000],0B1_0],0x17]){} }''','''Class,_5I2FDq85R,:,jI_,{,Constructor,(,_IU___,,,_,,,Z_,,,_,,,d,:,Array,[,Boolean,,,0177,],;,_1__,,,E,,,O,,,_,,,k05,,,wc8,:,Array,[,Array,[,String,,,85,],,,0B1,],),{,_,::,$B,(,),;,},Constructor,(,F,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0XD64,],,,0B101000,],,,0B10,],,,0x17,],),{,},},<EOF>''',101))

    def test_1518(self):
        self.assertTrue(TestLexer.test('''Class f:_{Destructor (){Return ;}Val R_6:Array [Boolean ,0B110];}Class _5{}Class _l{Constructor (){} }Class N:__{}''','''Class,f,:,_,{,Destructor,(,),{,Return,;,},Val,R_6,:,Array,[,Boolean,,,0B110,],;,},Class,_5,{,},Class,_l,{,Constructor,(,),{,},},Class,N,:,__,{,},<EOF>''',101))

    def test_1519(self):
        self.assertTrue(TestLexer.test('''Class _{a(D,r_,_,_d,__,_,_,k:Array [Array [Array [Array [Float ,021],8],73],0b1]){} }Class R:x{Val $_L0x,$d,$_,_:Int ;}''','''Class,_,{,a,(,D,,,r_,,,_,,,_d,,,__,,,_,,,_,,,k,:,Array,[,Array,[,Array,[,Array,[,Float,,,021,],,,8,],,,73,],,,0b1,],),{,},},Class,R,:,x,{,Val,$_L0x,,,$d,,,$_,,,_,:,Int,;,},<EOF>''',101))

    def test_1520(self):
        self.assertTrue(TestLexer.test('''Class X0:__{}Class b{}Class vC_{}Class w{Constructor (b,Q8___B,u,_v:Int ;V:String ;N,L,F3_t21:String ;_,Z:h){} }''','''Class,X0,:,__,{,},Class,b,{,},Class,vC_,{,},Class,w,{,Constructor,(,b,,,Q8___B,,,u,,,_v,:,Int,;,V,:,String,;,N,,,L,,,F3_t21,:,String,;,_,,,Z,:,h,),{,},},<EOF>''',101))

    def test_1521(self):
        self.assertTrue(TestLexer.test('''Class o3:D{$1__(o6fG,_:__y1;u,_,S_2lWi393:Array [Array [Boolean ,0503],033];D_:Array [Array [Array [Float ,06],7],0XFC5]){} }Class Fu{}''','''Class,o3,:,D,{,$1__,(,o6fG,,,_,:,__y1,;,u,,,_,,,S_2lWi393,:,Array,[,Array,[,Boolean,,,0503,],,,033,],;,D_,:,Array,[,Array,[,Array,[,Float,,,06,],,,7,],,,0XFC5,],),{,},},Class,Fu,{,},<EOF>''',101))

    def test_1522(self):
        self.assertTrue(TestLexer.test('''Class yq{}Class _:dyD{Constructor (_0,_k,O_5:Float ;R_5,L7:Array [Array [Array [Array [Int ,0b100],0b100],0142],0x2];f:I){} }''','''Class,yq,{,},Class,_,:,dyD,{,Constructor,(,_0,,,_k,,,O_5,:,Float,;,R_5,,,L7,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b100,],,,0b100,],,,0142,],,,0x2,],;,f,:,I,),{,},},<EOF>''',101))

    def test_1523(self):
        self.assertTrue(TestLexer.test('''Class m:_4{Constructor (_2:_K;h:String ;_9nz_:Array [String ,0X46];yG:Float ;_:Int ){Val _:v;}Constructor (_g_5,q:Array [String ,0134];d:_P_){} }''','''Class,m,:,_4,{,Constructor,(,_2,:,_K,;,h,:,String,;,_9nz_,:,Array,[,String,,,0X46,],;,yG,:,Float,;,_,:,Int,),{,Val,_,:,v,;,},Constructor,(,_g_5,,,q,:,Array,[,String,,,0134,],;,d,:,_P_,),{,},},<EOF>''',101))

    def test_1524(self):
        self.assertTrue(TestLexer.test('''Class _:_D{_(_,_y3,_:w;_9,T,piL_vc2I:Array [Array [Array [Array [Boolean ,3_7],24],04],0B1];h3:Float ;_,Rj5:Array [Boolean ,6]){} }Class l{}''','''Class,_,:,_D,{,_,(,_,,,_y3,,,_,:,w,;,_9,,,T,,,piL_vc2I,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,37,],,,24,],,,04,],,,0B1,],;,h3,:,Float,;,_,,,Rj5,:,Array,[,Boolean,,,6,],),{,},},Class,l,{,},<EOF>''',101))

    def test_1525(self):
        self.assertTrue(TestLexer.test('''Class g{}Class cw031_5:A{Var $I,$__:Array [Array [Float ,0B1000001],656];Var $_4_2,$__:_34T;Val $3F_12,$mQK:Array [Int ,0XB];}''','''Class,g,{,},Class,cw031_5,:,A,{,Var,$I,,,$__,:,Array,[,Array,[,Float,,,0B1000001,],,,656,],;,Var,$_4_2,,,$__,:,_34T,;,Val,$3F_12,,,$mQK,:,Array,[,Int,,,0XB,],;,},<EOF>''',101))

    def test_1526(self):
        self.assertTrue(TestLexer.test('''Class a{Constructor (){}b(_26,g:Array [Array [Float ,030_5_0],022];L:String ;i3:Array [Array [Array [Array [Array [Array [Int ,0x7],0133],0133],0133],0x3A],0b11_01];_3,_,_i_7I,_2L_:Boolean ;_,t6Vy4__:Boolean ){}Constructor (_,_,znl:Array [Int ,39]){}Var $Z,$674:p9;}''','''Class,a,{,Constructor,(,),{,},b,(,_26,,,g,:,Array,[,Array,[,Float,,,03050,],,,022,],;,L,:,String,;,i3,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x7,],,,0133,],,,0133,],,,0133,],,,0x3A,],,,0b1101,],;,_3,,,_,,,_i_7I,,,_2L_,:,Boolean,;,_,,,t6Vy4__,:,Boolean,),{,},Constructor,(,_,,,_,,,znl,:,Array,[,Int,,,39,],),{,},Var,$Z,,,$674,:,p9,;,},<EOF>''',101))

    def test_1527(self):
        self.assertTrue(TestLexer.test('''Class R{$n__(){}Destructor (){}Destructor (){}_(_:Int ;_0__:Array [Array [Array [Array [String ,05],067],03_6],0X46]){Break ;} }Class _:_{}''','''Class,R,{,$n__,(,),{,},Destructor,(,),{,},Destructor,(,),{,},_,(,_,:,Int,;,_0__,:,Array,[,Array,[,Array,[,Array,[,String,,,05,],,,067,],,,036,],,,0X46,],),{,Break,;,},},Class,_,:,_,{,},<EOF>''',101))

    def test_1528(self):
        self.assertTrue(TestLexer.test('''Class _{Val $2IC:_;Destructor (){}Destructor (){ {} }Var $q41R:Array [Array [Array [Float ,0107],0107],0X7];Constructor (){} }''','''Class,_,{,Val,$2IC,:,_,;,Destructor,(,),{,},Destructor,(,),{,{,},},Var,$q41R,:,Array,[,Array,[,Array,[,Float,,,0107,],,,0107,],,,0X7,],;,Constructor,(,),{,},},<EOF>''',101))

    def test_1529(self):
        self.assertTrue(TestLexer.test('''Class _{r5(L,FN__,_,F:E;_b:_;_:Array [Float ,4_513]){Val s,i:Array [String ,0b110010];}$_(h,U0:Array [Int ,0B100000];l:Int ){Return ;Break ;} }''','''Class,_,{,r5,(,L,,,FN__,,,_,,,F,:,E,;,_b,:,_,;,_,:,Array,[,Float,,,4513,],),{,Val,s,,,i,:,Array,[,String,,,0b110010,],;,},$_,(,h,,,U0,:,Array,[,Int,,,0B100000,],;,l,:,Int,),{,Return,;,Break,;,},},<EOF>''',101))

    def test_1530(self):
        self.assertTrue(TestLexer.test('''Class e{Val $_:_5EA1__;$7(_0:_;__i,__:Int ;F_,x,O4__m,n9gF,U,L5:Array [Int ,0B1000];_z_:E7h;Z,_h_,_:_1;_:Int ){Var V1,__,W:String ;{} }}''','''Class,e,{,Val,$_,:,_5EA1__,;,$7,(,_0,:,_,;,__i,,,__,:,Int,;,F_,,,x,,,O4__m,,,n9gF,,,U,,,L5,:,Array,[,Int,,,0B1000,],;,_z_,:,E7h,;,Z,,,_h_,,,_,:,_1,;,_,:,Int,),{,Var,V1,,,__,,,W,:,String,;,{,},},},<EOF>''',101))

    def test_1531(self):
        self.assertTrue(TestLexer.test('''Class W{Destructor (){}Q_H(__,_c0:Int ;V,_T8,_3C:Array [Array [Int ,0b101],0B11];___:Array [Array [String ,0B1011111],03_0];M_Vt,U_,z:W){} }Class A57:b{}''','''Class,W,{,Destructor,(,),{,},Q_H,(,__,,,_c0,:,Int,;,V,,,_T8,,,_3C,:,Array,[,Array,[,Int,,,0b101,],,,0B11,],;,___,:,Array,[,Array,[,String,,,0B1011111,],,,030,],;,M_Vt,,,U_,,,z,:,W,),{,},},Class,A57,:,b,{,},<EOF>''',101))

    def test_1532(self):
        self.assertTrue(TestLexer.test('''Class _T:x{Val $u6__oq:Array [Array [Float ,2],15];}Class MV_:_T1_{Constructor (_:Float ){}Destructor (){}N_t(){Var v,q0_q:Array [Array [String ,0b11010],0B10];} }''','''Class,_T,:,x,{,Val,$u6__oq,:,Array,[,Array,[,Float,,,2,],,,15,],;,},Class,MV_,:,_T1_,{,Constructor,(,_,:,Float,),{,},Destructor,(,),{,},N_t,(,),{,Var,v,,,q0_q,:,Array,[,Array,[,String,,,0b11010,],,,0B10,],;,},},<EOF>''',101))

    def test_1533(self):
        self.assertTrue(TestLexer.test('''Class _{}Class y{}Class _{}Class b_:R{Do(_j84m:_){}u(_3,_9,_:__2;A:Array [String ,0x54]){ {} }Val D2:Int ;R9Z_(){}Var $4:J_;}''','''Class,_,{,},Class,y,{,},Class,_,{,},Class,b_,:,R,{,Do,(,_j84m,:,_,),{,},u,(,_3,,,_9,,,_,:,__2,;,A,:,Array,[,String,,,0x54,],),{,{,},},Val,D2,:,Int,;,R9Z_,(,),{,},Var,$4,:,J_,;,},<EOF>''',101))

    def test_1534(self):
        self.assertTrue(TestLexer.test('''Class g:_1{}Class __24_{}Class _{Constructor (_,V_4,_,_,J,X:_;V:_){Break ;} }Class K8{$0_(){} }Class __iR32i:Z{}Class Q_:_{}''','''Class,g,:,_1,{,},Class,__24_,{,},Class,_,{,Constructor,(,_,,,V_4,,,_,,,_,,,J,,,X,:,_,;,V,:,_,),{,Break,;,},},Class,K8,{,$0_,(,),{,},},Class,__iR32i,:,Z,{,},Class,Q_,:,_,{,},<EOF>''',101))

    def test_1535(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{}Class b{}Class _i_:Iv{Constructor (_,_,i_9:Int ;_,HHJ:Array [Array [Array [Int ,8],041],0b1]){} }''','''Class,_,{,},Class,_,{,},Class,b,{,},Class,_i_,:,Iv,{,Constructor,(,_,,,_,,,i_9,:,Int,;,_,,,HHJ,:,Array,[,Array,[,Array,[,Int,,,8,],,,041,],,,0b1,],),{,},},<EOF>''',101))

    def test_1536(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){}pa_6(_,G_06,_,s_:Boolean ;UaC:Array [Array [Array [Boolean ,0B1001011],0X3_31_D],077_3];_,e:Array [String ,02]){} }''','''Class,_,{,Constructor,(,),{,},pa_6,(,_,,,G_06,,,_,,,s_,:,Boolean,;,UaC,:,Array,[,Array,[,Array,[,Boolean,,,0B1001011,],,,0X331D,],,,0773,],;,_,,,e,:,Array,[,String,,,02,],),{,},},<EOF>''',101))

    def test_1537(self):
        self.assertTrue(TestLexer.test('''Class s:X{Constructor (__g_5,xD,jm4:Int ;h,___w:_J_9_E;_z:Int ;_R6,P5:Array [Array [Boolean ,78],4];_,_,iS:Float ){}Constructor (_:String ;p:Array [Int ,0b10001];U_:Int ;_60:Array [Boolean ,0b10001];B_:_e){}Var $q:V7;}Class _{}''','''Class,s,:,X,{,Constructor,(,__g_5,,,xD,,,jm4,:,Int,;,h,,,___w,:,_J_9_E,;,_z,:,Int,;,_R6,,,P5,:,Array,[,Array,[,Boolean,,,78,],,,4,],;,_,,,_,,,iS,:,Float,),{,},Constructor,(,_,:,String,;,p,:,Array,[,Int,,,0b10001,],;,U_,:,Int,;,_60,:,Array,[,Boolean,,,0b10001,],;,B_,:,_e,),{,},Var,$q,:,V7,;,},Class,_,{,},<EOF>''',101))

    def test_1538(self):
        self.assertTrue(TestLexer.test('''Class Y{Constructor (___:_;T_,_:Array [Array [Array [Array [Array [Array [Array [Boolean ,0X60],1],0B1_0_10],0b1000011],052],051],03];_5,_v,hg6:P5L){}Destructor (){} }''','''Class,Y,{,Constructor,(,___,:,_,;,T_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X60,],,,1,],,,0B1010,],,,0b1000011,],,,052,],,,051,],,,03,],;,_5,,,_v,,,hg6,:,P5L,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_1539(self):
        self.assertTrue(TestLexer.test('''Class _tV{Var _8_9_:Array [Int ,067];Destructor (){Continue ;Break ;Continue ;}Var $7,_8:Float ;}Class k_:i9{}Class A6_P:_{}''','''Class,_tV,{,Var,_8_9_,:,Array,[,Int,,,067,],;,Destructor,(,),{,Continue,;,Break,;,Continue,;,},Var,$7,,,_8,:,Float,;,},Class,k_,:,i9,{,},Class,A6_P,:,_,{,},<EOF>''',101))

    def test_1540(self):
        self.assertTrue(TestLexer.test('''Class _:__0c_J{Constructor (){}Constructor (){Continue ;} }Class _{}Class m_{$_(_8:Int ){}Destructor (){ {} }}Class j{}''','''Class,_,:,__0c_J,{,Constructor,(,),{,},Constructor,(,),{,Continue,;,},},Class,_,{,},Class,m_,{,$_,(,_8,:,Int,),{,},Destructor,(,),{,{,},},},Class,j,{,},<EOF>''',101))

    def test_1541(self):
        self.assertTrue(TestLexer.test('''Class L:_9W5_{}Class _{Constructor (T:f_;_,H,K,yk7:Array [Float ,0X2C]){} }Class _:_{Val v,$m:Array [Array [Array [Array [Array [Boolean ,0121],0B1010001],27],0X8],27];$18__(){}Val s:E;Constructor (){} }''','''Class,L,:,_9W5_,{,},Class,_,{,Constructor,(,T,:,f_,;,_,,,H,,,K,,,yk7,:,Array,[,Float,,,0X2C,],),{,},},Class,_,:,_,{,Val,v,,,$m,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0121,],,,0B1010001,],,,27,],,,0X8,],,,27,],;,$18__,(,),{,},Val,s,:,E,;,Constructor,(,),{,},},<EOF>''',101))

    def test_1542(self):
        self.assertTrue(TestLexer.test('''Class _:f_{}Class _068{Destructor (){}Destructor (){}Constructor (){}Constructor (_1,_9:Array [Float ,075]){}$X(A:Boolean ;X:Array [Array [Int ,0X20],7]){} }Class _{Val $L_9_19,$7_,$E:Float ;}''','''Class,_,:,f_,{,},Class,_068,{,Destructor,(,),{,},Destructor,(,),{,},Constructor,(,),{,},Constructor,(,_1,,,_9,:,Array,[,Float,,,075,],),{,},$X,(,A,:,Boolean,;,X,:,Array,[,Array,[,Int,,,0X20,],,,7,],),{,},},Class,_,{,Val,$L_9_19,,,$7_,,,$E,:,Float,;,},<EOF>''',101))

    def test_1543(self):
        self.assertTrue(TestLexer.test('''Class _:e2R{Constructor (D,E4:String ;Y,____n_:String ){} }Class ___{F_(t,N1_o,_,w:String ){ {} }}Class _1{}Class s{}Class v_{Constructor (n:Array [Array [Array [Array [String ,0b1],7],05],0b1]){Return ;}Var d4_5,Pc:__8a;}''','''Class,_,:,e2R,{,Constructor,(,D,,,E4,:,String,;,Y,,,____n_,:,String,),{,},},Class,___,{,F_,(,t,,,N1_o,,,_,,,w,:,String,),{,{,},},},Class,_1,{,},Class,s,{,},Class,v_,{,Constructor,(,n,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,7,],,,05,],,,0b1,],),{,Return,;,},Var,d4_5,,,Pc,:,__8a,;,},<EOF>''',101))

    def test_1544(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){}Var $eX:Array [Int ,037];Val _8p_,$__:Array [Float ,07_5];}Class __:r_9{Constructor (_:wT4O_;_0666P_,r__J_2,_5:W5;_:Float ){} }Class _:_h_{}Class _:xW{}''','''Class,_,{,Constructor,(,),{,},Var,$eX,:,Array,[,Int,,,037,],;,Val,_8p_,,,$__,:,Array,[,Float,,,075,],;,},Class,__,:,r_9,{,Constructor,(,_,:,wT4O_,;,_0666P_,,,r__J_2,,,_5,:,W5,;,_,:,Float,),{,},},Class,_,:,_h_,{,},Class,_,:,xW,{,},<EOF>''',101))

    def test_1545(self):
        self.assertTrue(TestLexer.test('''Class Q:uL{}Class V46021:c{}Class TC:_{Constructor (__0,PAm_3,vX,_,_:Array [Array [Array [Array [Array [Array [Array [Int ,9],0100],0x5],0X8],01_7],0xE],0xD]){}N_(){Return ;Break ;} }Class l:PC{Constructor (){Continue ;}d(){} }''','''Class,Q,:,uL,{,},Class,V46021,:,c,{,},Class,TC,:,_,{,Constructor,(,__0,,,PAm_3,,,vX,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,9,],,,0100,],,,0x5,],,,0X8,],,,017,],,,0xE,],,,0xD,],),{,},N_,(,),{,Return,;,Break,;,},},Class,l,:,PC,{,Constructor,(,),{,Continue,;,},d,(,),{,},},<EOF>''',101))

    def test_1546(self):
        self.assertTrue(TestLexer.test('''Class __{$F(Q9h5,_9,_9,a:Boolean ;_H,U:Boolean ;Wu:Array [String ,66];_:Array [String ,0X15];Rv,lW:_;u9_,__o,_:L__R){} }Class __:d_{Val $6:_;Var $d1A,_E:Array [Array [Array [Array [Array [Int ,0xC],66],0X4],011],0b1_00];}Class A:K5_26{Destructor (){} }Class G:_W_{$__(_,__,ATy,Y,GW,_,_4:Array [String ,011]){} }''','''Class,__,{,$F,(,Q9h5,,,_9,,,_9,,,a,:,Boolean,;,_H,,,U,:,Boolean,;,Wu,:,Array,[,String,,,66,],;,_,:,Array,[,String,,,0X15,],;,Rv,,,lW,:,_,;,u9_,,,__o,,,_,:,L__R,),{,},},Class,__,:,d_,{,Val,$6,:,_,;,Var,$d1A,,,_E,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0xC,],,,66,],,,0X4,],,,011,],,,0b100,],;,},Class,A,:,K5_26,{,Destructor,(,),{,},},Class,G,:,_W_,{,$__,(,_,,,__,,,ATy,,,Y,,,GW,,,_,,,_4,:,Array,[,String,,,011,],),{,},},<EOF>''',101))

    def test_1547(self):
        self.assertTrue(TestLexer.test('''Class _3B4{Var a:Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,04_351],05],8],05],6],05],4],0665],0X24];}''','''Class,_3B4,{,Var,a,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,04351,],,,05,],,,8,],,,05,],,,6,],,,05,],,,4,],,,0665,],,,0X24,],;,},<EOF>''',101))

    def test_1548(self):
        self.assertTrue(TestLexer.test('''Class E:_{}Class _{}Class _{Var _:_S;}Class _{Val $4:o;Var d_,_:String ;}Class y6d:F_9{E(J,_,_6:Float ){Continue ;} }Class g3{}''','''Class,E,:,_,{,},Class,_,{,},Class,_,{,Var,_,:,_S,;,},Class,_,{,Val,$4,:,o,;,Var,d_,,,_,:,String,;,},Class,y6d,:,F_9,{,E,(,J,,,_,,,_6,:,Float,),{,Continue,;,},},Class,g3,{,},<EOF>''',101))

    def test_1549(self):
        self.assertTrue(TestLexer.test('''Class _:__S{Var __aMZ:Array [Array [Array [Array [Array [Array [Boolean ,27],0xA],0b11],53],7623],53];}Class _{Val n,_:Boolean ;}''','''Class,_,:,__S,{,Var,__aMZ,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,27,],,,0xA,],,,0b11,],,,53,],,,7623,],,,53,],;,},Class,_,{,Val,n,,,_,:,Boolean,;,},<EOF>''',101))

    def test_1550(self):
        self.assertTrue(TestLexer.test('''Class Q{}Class _RV:_{}Class _1:_{Var $3,$L1:Array [Array [Array [Int ,022],0X3_E],40];Constructor (S1:_){Break ;}Var $_:Array [Int ,0X5B];}Class a8{$_V(_,_9u:__9){} }Class _{}Class _{}''','''Class,Q,{,},Class,_RV,:,_,{,},Class,_1,:,_,{,Var,$3,,,$L1,:,Array,[,Array,[,Array,[,Int,,,022,],,,0X3E,],,,40,],;,Constructor,(,S1,:,_,),{,Break,;,},Var,$_,:,Array,[,Int,,,0X5B,],;,},Class,a8,{,$_V,(,_,,,_9u,:,__9,),{,},},Class,_,{,},Class,_,{,},<EOF>''',101))

    def test_1551(self):
        self.assertTrue(TestLexer.test('''Class _:k{}Class O:X{Constructor (E_P__,_:String ;_n:h;M,__L,_2N:_;o7T,_,Y:w_;_:String ;_:Float ;__,_:Boolean ;_:Float ){ {Val _:Array [Boolean ,0b1];} }}''','''Class,_,:,k,{,},Class,O,:,X,{,Constructor,(,E_P__,,,_,:,String,;,_n,:,h,;,M,,,__L,,,_2N,:,_,;,o7T,,,_,,,Y,:,w_,;,_,:,String,;,_,:,Float,;,__,,,_,:,Boolean,;,_,:,Float,),{,{,Val,_,:,Array,[,Boolean,,,0b1,],;,},},},<EOF>''',101))

    def test_1552(self):
        self.assertTrue(TestLexer.test('''Class _{}Class RS:_{$___E(c,Rc_8:f85;k:String ;___:Array [Array [Boolean ,0x3C],0XC6D_A]){Break ;} }Class _o_5:___{}Class o19{}Class _:_{}Class _Es{Var $2,$sA_pi:s;Val $i2,$J:Array [Array [Int ,063],0x3C];Val $6:Int ;}''','''Class,_,{,},Class,RS,:,_,{,$___E,(,c,,,Rc_8,:,f85,;,k,:,String,;,___,:,Array,[,Array,[,Boolean,,,0x3C,],,,0XC6DA,],),{,Break,;,},},Class,_o_5,:,___,{,},Class,o19,{,},Class,_,:,_,{,},Class,_Es,{,Var,$2,,,$sA_pi,:,s,;,Val,$i2,,,$J,:,Array,[,Array,[,Int,,,063,],,,0x3C,],;,Val,$6,:,Int,;,},<EOF>''',101))

    def test_1553(self):
        self.assertTrue(TestLexer.test('''Class v{}Class _75__M:d{}Class _T{}Class Et4U:XtP{}Class _4r{}Class j9y:_{Var _,x7X77T:Array [Boolean ,96];Destructor (){}Destructor (){New T()._y();} }''','''Class,v,{,},Class,_75__M,:,d,{,},Class,_T,{,},Class,Et4U,:,XtP,{,},Class,_4r,{,},Class,j9y,:,_,{,Var,_,,,x7X77T,:,Array,[,Boolean,,,96,],;,Destructor,(,),{,},Destructor,(,),{,New,T,(,),.,_y,(,),;,},},<EOF>''',101))

    def test_1554(self):
        self.assertTrue(TestLexer.test('''Class _559:Q{Destructor (){Continue ;} }Class _:Q_4_{}Class k5:X__86_{_H8(_,H,hO,k_:e_v_){} }Class _:l0Z4I_{}Class Z{}''','''Class,_559,:,Q,{,Destructor,(,),{,Continue,;,},},Class,_,:,Q_4_,{,},Class,k5,:,X__86_,{,_H8,(,_,,,H,,,hO,,,k_,:,e_v_,),{,},},Class,_,:,l0Z4I_,{,},Class,Z,{,},<EOF>''',101))

    def test_1555(self):
        self.assertTrue(TestLexer.test('''Class Th_{}Class _6e:_{Constructor (l7:_;__,_,v:n7_;Dq,_:Array [Array [Float ,0x9],0b101000];_5,_:Int ;_:I;_,u4:Array [Boolean ,0B1];_7P,_i:B){} }Class __:P{}''','''Class,Th_,{,},Class,_6e,:,_,{,Constructor,(,l7,:,_,;,__,,,_,,,v,:,n7_,;,Dq,,,_,:,Array,[,Array,[,Float,,,0x9,],,,0b101000,],;,_5,,,_,:,Int,;,_,:,I,;,_,,,u4,:,Array,[,Boolean,,,0B1,],;,_7P,,,_i,:,B,),{,},},Class,__,:,P,{,},<EOF>''',101))

    def test_1556(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _:_Z{}Class v_:YL65j{Var $__2,_:Array [Boolean ,85];Constructor (__:Array [Array [Array [String ,04],02],0x7];t5Z,_,_E_:mFY){} }''','''Class,_,{,},Class,_,:,_Z,{,},Class,v_,:,YL65j,{,Var,$__2,,,_,:,Array,[,Boolean,,,85,],;,Constructor,(,__,:,Array,[,Array,[,Array,[,String,,,04,],,,02,],,,0x7,],;,t5Z,,,_,,,_E_,:,mFY,),{,},},<EOF>''',101))

    def test_1557(self):
        self.assertTrue(TestLexer.test('''Class __Z{}Class pK{Val $C,$_6a,$9_A1M,_9_b_,__,____,nII,$__,H:Array [Array [Array [Array [String ,0b10001],0x26],0132],0b10001];Val $_o:Array [Array [Array [Boolean ,07],0B1010001],0132];Destructor (){} }Class _:YI_bN6{Destructor (){} }''','''Class,__Z,{,},Class,pK,{,Val,$C,,,$_6a,,,$9_A1M,,,_9_b_,,,__,,,____,,,nII,,,$__,,,H,:,Array,[,Array,[,Array,[,Array,[,String,,,0b10001,],,,0x26,],,,0132,],,,0b10001,],;,Val,$_o,:,Array,[,Array,[,Array,[,Boolean,,,07,],,,0B1010001,],,,0132,],;,Destructor,(,),{,},},Class,_,:,YI_bN6,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1558(self):
        self.assertTrue(TestLexer.test('''Class _{Var kt:Array [Array [Array [Array [Array [Array [Float ,0b1001100],0XD_B_6],0B1110],0b1],066],0X3D];_(){_::$59_();} }Class v:_8J{}''','''Class,_,{,Var,kt,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1001100,],,,0XDB6,],,,0B1110,],,,0b1,],,,066,],,,0X3D,],;,_,(,),{,_,::,$59_,(,),;,},},Class,v,:,_8J,{,},<EOF>''',101))

    def test_1559(self):
        self.assertTrue(TestLexer.test('''Class _w6{Constructor (_:Boolean ;Y__,y:Float ;M:Float ;On__00c,I6:String ;_:String ;_:Array [Array [Array [String ,5_4],031],0B110101];_:Array [Array [Float ,031],0X9];_,y3,_:Int ;_6E:Int ;N,d6:Array [Array [Int ,7_5_8],4];z:String ;_u_d,_4:BC;J___d:Array [Int ,52]){} }''','''Class,_w6,{,Constructor,(,_,:,Boolean,;,Y__,,,y,:,Float,;,M,:,Float,;,On__00c,,,I6,:,String,;,_,:,String,;,_,:,Array,[,Array,[,Array,[,String,,,54,],,,031,],,,0B110101,],;,_,:,Array,[,Array,[,Float,,,031,],,,0X9,],;,_,,,y3,,,_,:,Int,;,_6E,:,Int,;,N,,,d6,:,Array,[,Array,[,Int,,,758,],,,4,],;,z,:,String,;,_u_d,,,_4,:,BC,;,J___d,:,Array,[,Int,,,52,],),{,},},<EOF>''',101))

    def test_1560(self):
        self.assertTrue(TestLexer.test('''Class q__{$v(A:Array [Boolean ,0x1A0];R,_7:Int ;Y,_:Boolean ;V5_,_:N){} }Class _:__{}Class T{}Class _6_{}Class y:_{}''','''Class,q__,{,$v,(,A,:,Array,[,Boolean,,,0x1A0,],;,R,,,_7,:,Int,;,Y,,,_,:,Boolean,;,V5_,,,_,:,N,),{,},},Class,_,:,__,{,},Class,T,{,},Class,_6_,{,},Class,y,:,_,{,},<EOF>''',101))

    def test_1561(self):
        self.assertTrue(TestLexer.test('''Class ___{Constructor (__,n,_:Boolean ;H:Boolean ;_P,_:Int ;_8:Int ){}$_(){}Constructor (){ {}J::$_();} }Class _N{Constructor (__,a4v,A:Float ){}Val __:Int ;}Class S{}Class _:T_2hF__{}Class F:g{}Class t:V8{}''','''Class,___,{,Constructor,(,__,,,n,,,_,:,Boolean,;,H,:,Boolean,;,_P,,,_,:,Int,;,_8,:,Int,),{,},$_,(,),{,},Constructor,(,),{,{,},J,::,$_,(,),;,},},Class,_N,{,Constructor,(,__,,,a4v,,,A,:,Float,),{,},Val,__,:,Int,;,},Class,S,{,},Class,_,:,T_2hF__,{,},Class,F,:,g,{,},Class,t,:,V8,{,},<EOF>''',101))

    def test_1562(self):
        self.assertTrue(TestLexer.test('''Class gk__or{}Class _{}Class S{J__(bQ:Array [String ,0x3];_h1:__a;q84n:Boolean ){}$__k(){}Constructor (p74___:Array [Float ,7]){} }Class _Ej1:W{Var _7,jGx5,_7:_o_;Var _:Boolean ;Var $_,_:Array [Boolean ,066];}''','''Class,gk__or,{,},Class,_,{,},Class,S,{,J__,(,bQ,:,Array,[,String,,,0x3,],;,_h1,:,__a,;,q84n,:,Boolean,),{,},$__k,(,),{,},Constructor,(,p74___,:,Array,[,Float,,,7,],),{,},},Class,_Ej1,:,W,{,Var,_7,,,jGx5,,,_7,:,_o_,;,Var,_,:,Boolean,;,Var,$_,,,_,:,Array,[,Boolean,,,066,],;,},<EOF>''',101))

    def test_1563(self):
        self.assertTrue(TestLexer.test('''Class _e:_{$6(N:Array [Array [Float ,2],0b1];a4:Array [Float ,0B1];_8__Ie,_,___m7:Array [Array [String ,0b1],0x31];_:Array [Array [Int ,0B1100010],8];_:String ;_x,V,_,_,_,a8__9n,fd,_:String ;B,_23,__:M;__:Array [Array [Array [Array [Array [Int ,06],0xD],06],0B111_0],030]){} }''','''Class,_e,:,_,{,$6,(,N,:,Array,[,Array,[,Float,,,2,],,,0b1,],;,a4,:,Array,[,Float,,,0B1,],;,_8__Ie,,,_,,,___m7,:,Array,[,Array,[,String,,,0b1,],,,0x31,],;,_,:,Array,[,Array,[,Int,,,0B1100010,],,,8,],;,_,:,String,;,_x,,,V,,,_,,,_,,,_,,,a8__9n,,,fd,,,_,:,String,;,B,,,_23,,,__,:,M,;,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,06,],,,0xD,],,,06,],,,0B1110,],,,030,],),{,},},<EOF>''',101))

    def test_1564(self):
        self.assertTrue(TestLexer.test('''Class _{Val $_:Float ;Var $_,__:Array [Array [Array [Array [Array [Int ,41],0B11011],0X42],4_918_86],35_386_2];Destructor (){} }''','''Class,_,{,Val,$_,:,Float,;,Var,$_,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,41,],,,0B11011,],,,0X42,],,,491886,],,,353862,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_1565(self):
        self.assertTrue(TestLexer.test('''Class lr{}Class _{Var k:A;}Class _{}Class _{Constructor (){}Val v,$6_:E_;Constructor (){}$u_3(){Var _P:Float ;} }Class __:_{Var _:p6_;}''','''Class,lr,{,},Class,_,{,Var,k,:,A,;,},Class,_,{,},Class,_,{,Constructor,(,),{,},Val,v,,,$6_,:,E_,;,Constructor,(,),{,},$u_3,(,),{,Var,_P,:,Float,;,},},Class,__,:,_,{,Var,_,:,p6_,;,},<EOF>''',101))

    def test_1566(self):
        self.assertTrue(TestLexer.test('''Class _5:_J_{Var $2:_f9_00;Constructor (){} }Class o:l{$5(S06k:_8;__:Boolean ){Continue ;} }Class C:_{Var $2,$__,__:_;}''','''Class,_5,:,_J_,{,Var,$2,:,_f9_00,;,Constructor,(,),{,},},Class,o,:,l,{,$5,(,S06k,:,_8,;,__,:,Boolean,),{,Continue,;,},},Class,C,:,_,{,Var,$2,,,$__,,,__,:,_,;,},<EOF>''',101))

    def test_1567(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class z:Tk_{_0_(I_:_8n_;_,_,_,W,_93,K:rT;S,_,_5_1A:Boolean ;_,_1:Array [String ,0X5B]){} }Class d00__{}''','''Class,_,:,_,{,},Class,z,:,Tk_,{,_0_,(,I_,:,_8n_,;,_,,,_,,,_,,,W,,,_93,,,K,:,rT,;,S,,,_,,,_5_1A,:,Boolean,;,_,,,_1,:,Array,[,String,,,0X5B,],),{,},},Class,d00__,{,},<EOF>''',101))

    def test_1568(self):
        self.assertTrue(TestLexer.test('''Class __:_{Val $iyH,E_:Array [Boolean ,18];}Class p0A:c{}Class J8z:__{}Class _{Constructor (_,_:Array [Int ,7];_,_:Float ;i_T:Array [Array [Array [Array [Array [Boolean ,0B1],9],02],0B1],18]){} }Class B:W{}''','''Class,__,:,_,{,Val,$iyH,,,E_,:,Array,[,Boolean,,,18,],;,},Class,p0A,:,c,{,},Class,J8z,:,__,{,},Class,_,{,Constructor,(,_,,,_,:,Array,[,Int,,,7,],;,_,,,_,:,Float,;,i_T,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,9,],,,02,],,,0B1,],,,18,],),{,},},Class,B,:,W,{,},<EOF>''',101))

    def test_1569(self):
        self.assertTrue(TestLexer.test('''Class _y{Constructor (_1_:Float ;d_5_,h__7,_:Boolean ;hS_,_,_t,n40K,v:z_xt;__QY7:m_9ebC){}Constructor (){} }''','''Class,_y,{,Constructor,(,_1_,:,Float,;,d_5_,,,h__7,,,_,:,Boolean,;,hS_,,,_,,,_t,,,n40K,,,v,:,z_xt,;,__QY7,:,m_9ebC,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_1570(self):
        self.assertTrue(TestLexer.test('''Class _:hW{Val u,_,___,_,$8:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,2],0b1_01],0b1000101],0x76],075],0x1B],0b1000101],0XB];Constructor (){}Val $4D_m__C_,$6:Array [Array [Array [String ,0b10],0b10],0116];}''','''Class,_,:,hW,{,Val,u,,,_,,,___,,,_,,,$8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,2,],,,0b101,],,,0b1000101,],,,0x76,],,,075,],,,0x1B,],,,0b1000101,],,,0XB,],;,Constructor,(,),{,},Val,$4D_m__C_,,,$6,:,Array,[,Array,[,Array,[,String,,,0b10,],,,0b10,],,,0116,],;,},<EOF>''',101))

    def test_1571(self):
        self.assertTrue(TestLexer.test('''Class _H2:vQ{Constructor (__,_:Boolean ;_83,_,_1_:Boolean ){}$9(_t:Array [Array [String ,0x5B],39]){} }Class O{}Class l{}''','''Class,_H2,:,vQ,{,Constructor,(,__,,,_,:,Boolean,;,_83,,,_,,,_1_,:,Boolean,),{,},$9,(,_t,:,Array,[,Array,[,String,,,0x5B,],,,39,],),{,},},Class,O,{,},Class,l,{,},<EOF>''',101))

    def test_1572(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class Z2_:K{}Class U:m{Var $_5_:_4;V6(){} }Class _:_{}Class I_{Constructor (b:Float ;Y:n){}Var O,j_3:Float ;Var $E,__cu6,b:_;}Class _{Constructor (){} }Class ijD:_S_{}Class c5_{}''','''Class,_,:,_,{,},Class,Z2_,:,K,{,},Class,U,:,m,{,Var,$_5_,:,_4,;,V6,(,),{,},},Class,_,:,_,{,},Class,I_,{,Constructor,(,b,:,Float,;,Y,:,n,),{,},Var,O,,,j_3,:,Float,;,Var,$E,,,__cu6,,,b,:,_,;,},Class,_,{,Constructor,(,),{,},},Class,ijD,:,_S_,{,},Class,c5_,{,},<EOF>''',101))

    def test_1573(self):
        self.assertTrue(TestLexer.test('''Class L{}Class T:_z{Constructor (E,UD:Boolean ;T:Float ;w,_:Array [Array [Int ,0b111100],0B100111]){}Val _cX,_:Int ;}Class Y9{}''','''Class,L,{,},Class,T,:,_z,{,Constructor,(,E,,,UD,:,Boolean,;,T,:,Float,;,w,,,_,:,Array,[,Array,[,Int,,,0b111100,],,,0B100111,],),{,},Val,_cX,,,_,:,Int,;,},Class,Y9,{,},<EOF>''',101))

    def test_1574(self):
        self.assertTrue(TestLexer.test('''Class _o:yE9_{Constructor (D3__:Array [Array [Array [Array [Array [Array [Array [Boolean ,0125],0125],0xD],81],0125],9],25]){}Var _,F1:String ;}''','''Class,_o,:,yE9_,{,Constructor,(,D3__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0125,],,,0125,],,,0xD,],,,81,],,,0125,],,,9,],,,25,],),{,},Var,_,,,F1,:,String,;,},<EOF>''',101))

    def test_1575(self):
        self.assertTrue(TestLexer.test('''Class _{$1i(_,_,L7_32:_U_){Qe::$__()._8()._()._.__();}Var _0W:Array [String ,0X53];}Class zm_P1:k8C2{Var $0_p_L:Array [Array [Int ,07_61_7_6_3_0],8_3_8];Val _99g_:c;Val $_,_:__6f88;}''','''Class,_,{,$1i,(,_,,,_,,,L7_32,:,_U_,),{,Qe,::,$__,(,),.,_8,(,),.,_,(,),.,_,.,__,(,),;,},Var,_0W,:,Array,[,String,,,0X53,],;,},Class,zm_P1,:,k8C2,{,Var,$0_p_L,:,Array,[,Array,[,Int,,,07617630,],,,838,],;,Val,_99g_,:,c,;,Val,$_,,,_,:,__6f88,;,},<EOF>''',101))

    def test_1576(self):
        self.assertTrue(TestLexer.test('''Class K6{}Class _6{}Class _:R{}Class _:__x{N__(Y,L,D,_2_,_4,_5_:Array [Array [Int ,0b101_0],0B100];_,_FTG,_c9,_:Array [Int ,037]){}Constructor (_o:HS;oOA:v){} }''','''Class,K6,{,},Class,_6,{,},Class,_,:,R,{,},Class,_,:,__x,{,N__,(,Y,,,L,,,D,,,_2_,,,_4,,,_5_,:,Array,[,Array,[,Int,,,0b1010,],,,0B100,],;,_,,,_FTG,,,_c9,,,_,:,Array,[,Int,,,037,],),{,},Constructor,(,_o,:,HS,;,oOA,:,v,),{,},},<EOF>''',101))

    def test_1577(self):
        self.assertTrue(TestLexer.test('''Class _6:_{}Class A:w{$_A4(__:Float ;___,NtP2_:String ;T_:Array [Array [Array [Array [Array [Boolean ,0x9],0x1A],057],0B101],0b1]){} }Class j{Var z_,$__,v0,__:Boolean ;}Class _{Constructor (j,X:Array [Array [Array [Boolean ,057],057],057]){}$G(C:String ){Break ;} }Class __w8_{}''','''Class,_6,:,_,{,},Class,A,:,w,{,$_A4,(,__,:,Float,;,___,,,NtP2_,:,String,;,T_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x9,],,,0x1A,],,,057,],,,0B101,],,,0b1,],),{,},},Class,j,{,Var,z_,,,$__,,,v0,,,__,:,Boolean,;,},Class,_,{,Constructor,(,j,,,X,:,Array,[,Array,[,Array,[,Boolean,,,057,],,,057,],,,057,],),{,},$G,(,C,:,String,),{,Break,;,},},Class,__w8_,{,},<EOF>''',101))

    def test_1578(self):
        self.assertTrue(TestLexer.test('''Class _:y_{Var S:Boolean ;}Class _l:___{}Class F20Y:_{Constructor (j8_,_:Array [Array [Int ,0x38],9_80]){Break ;} }''','''Class,_,:,y_,{,Var,S,:,Boolean,;,},Class,_l,:,___,{,},Class,F20Y,:,_,{,Constructor,(,j8_,,,_,:,Array,[,Array,[,Int,,,0x38,],,,980,],),{,Break,;,},},<EOF>''',101))

    def test_1579(self):
        self.assertTrue(TestLexer.test('''Class A{Val _:Array [Array [Array [Float ,01],40],05_7];$_0h(K:Boolean ;v,L,O,_:String ;L_:Boolean ;__:Int ;i,__:Array [String ,0x18]){}Constructor (Z,_,_:Float ;__,_:_){} }Class _7:_38_{}''','''Class,A,{,Val,_,:,Array,[,Array,[,Array,[,Float,,,01,],,,40,],,,057,],;,$_0h,(,K,:,Boolean,;,v,,,L,,,O,,,_,:,String,;,L_,:,Boolean,;,__,:,Int,;,i,,,__,:,Array,[,String,,,0x18,],),{,},Constructor,(,Z,,,_,,,_,:,Float,;,__,,,_,:,_,),{,},},Class,_7,:,_38_,{,},<EOF>''',101))

    def test_1580(self):
        self.assertTrue(TestLexer.test('''Class _{$_(__,___t_:Array [Array [Float ,0b101100],0B1];_,_:Int ){Break ;}Var $S_d,_,$_:_;Val PJ__,_:J;Val R_,$__G,$_:Array [Boolean ,0b101100];}''','''Class,_,{,$_,(,__,,,___t_,:,Array,[,Array,[,Float,,,0b101100,],,,0B1,],;,_,,,_,:,Int,),{,Break,;,},Var,$S_d,,,_,,,$_,:,_,;,Val,PJ__,,,_,:,J,;,Val,R_,,,$__G,,,$_,:,Array,[,Boolean,,,0b101100,],;,},<EOF>''',101))

    def test_1581(self):
        self.assertTrue(TestLexer.test('''Class _4:s5{Constructor (e,C,_d,UZ_Wc:Array [Int ,7];y_:r_){}Var ___,_,__,z,$P_,$_:String ;Val $i:Array [Float ,07_51];}''','''Class,_4,:,s5,{,Constructor,(,e,,,C,,,_d,,,UZ_Wc,:,Array,[,Int,,,7,],;,y_,:,r_,),{,},Var,___,,,_,,,__,,,z,,,$P_,,,$_,:,String,;,Val,$i,:,Array,[,Float,,,0751,],;,},<EOF>''',101))

    def test_1582(self):
        self.assertTrue(TestLexer.test('''Class _1:Z{Val __,$__e:Float ;}Class _31{}Class ___1_{}Class o4{Constructor (){ {} }Constructor (_0_3,K:vF3l;k_:_0n_g){} }Class _{Var A9,H:Array [Float ,0b1];$_l_(L___A,R,jJ1__R,x:Array [Array [Array [Array [Array [String ,0X3],3],02],0x17],02];_:Float ){}Val $_,MZ7:vpS6;}''','''Class,_1,:,Z,{,Val,__,,,$__e,:,Float,;,},Class,_31,{,},Class,___1_,{,},Class,o4,{,Constructor,(,),{,{,},},Constructor,(,_0_3,,,K,:,vF3l,;,k_,:,_0n_g,),{,},},Class,_,{,Var,A9,,,H,:,Array,[,Float,,,0b1,],;,$_l_,(,L___A,,,R,,,jJ1__R,,,x,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X3,],,,3,],,,02,],,,0x17,],,,02,],;,_,:,Float,),{,},Val,$_,,,MZ7,:,vpS6,;,},<EOF>''',101))

    def test_1583(self):
        self.assertTrue(TestLexer.test('''Class V:___o{Constructor (D__,_,NY_wm,e:Int ;P8,_1,_P,_2z,_:_){}Val _5:Float ;}Class D:l_f{$72_Od(G__p8,A,h:Array [Array [Array [Float ,9],062],062]){} }''','''Class,V,:,___o,{,Constructor,(,D__,,,_,,,NY_wm,,,e,:,Int,;,P8,,,_1,,,_P,,,_2z,,,_,:,_,),{,},Val,_5,:,Float,;,},Class,D,:,l_f,{,$72_Od,(,G__p8,,,A,,,h,:,Array,[,Array,[,Array,[,Float,,,9,],,,062,],,,062,],),{,},},<EOF>''',101))

    def test_1584(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _{}Class _{}Class h_{}Class _{Constructor (_h_o_:Float ){Val a,_,_,t:String ;Break ;}Destructor (){} }''','''Class,_,:,_,{,},Class,_,{,},Class,_,{,},Class,h_,{,},Class,_,{,Constructor,(,_h_o_,:,Float,),{,Val,a,,,_,,,_,,,t,:,String,;,Break,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_1585(self):
        self.assertTrue(TestLexer.test('''Class _:_6_Ln_{$E(){} }Class _{Val $_,$_c:_A;}Class __:___{}Class S15___:___{Val _6M,$E:Array [String ,0102];}Class E:P{}''','''Class,_,:,_6_Ln_,{,$E,(,),{,},},Class,_,{,Val,$_,,,$_c,:,_A,;,},Class,__,:,___,{,},Class,S15___,:,___,{,Val,_6M,,,$E,:,Array,[,String,,,0102,],;,},Class,E,:,P,{,},<EOF>''',101))

    def test_1586(self):
        self.assertTrue(TestLexer.test('''Class _:n4{Val _,$56,a:Array [Array [Array [Array [Array [Array [Array [Boolean ,0X8],4],03],0B101001],0X6],05],0B100];}''','''Class,_,:,n4,{,Val,_,,,$56,,,a,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X8,],,,4,],,,03,],,,0B101001,],,,0X6,],,,05,],,,0B100,],;,},<EOF>''',101))

    def test_1587(self):
        self.assertTrue(TestLexer.test('''Class v{h8(_4:String ;_8_:Int ){Break ;} }Class s0:kH{}Class _:h{Val _,$69,$w2_,b:Boolean ;}Class _L:__kO{$32(){_6::$D3e2L6._x();_::$5._();} }''','''Class,v,{,h8,(,_4,:,String,;,_8_,:,Int,),{,Break,;,},},Class,s0,:,kH,{,},Class,_,:,h,{,Val,_,,,$69,,,$w2_,,,b,:,Boolean,;,},Class,_L,:,__kO,{,$32,(,),{,_6,::,$D3e2L6,.,_x,(,),;,_,::,$5,.,_,(,),;,},},<EOF>''',101))

    def test_1588(self):
        self.assertTrue(TestLexer.test('''Class _S_5:__zV{Val _:_z;}Class _:g{Constructor (W1:Array [Array [Array [Array [Array [Int ,076],076],0B1110],0x4_A8],0XAF]){} }''','''Class,_S_5,:,__zV,{,Val,_,:,_z,;,},Class,_,:,g,{,Constructor,(,W1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,076,],,,076,],,,0B1110,],,,0x4A8,],,,0XAF,],),{,},},<EOF>''',101))

    def test_1589(self):
        self.assertTrue(TestLexer.test('''Class ____:j8h{}Class _9:_{__(W5f_S0,X,I_,i:Array [Float ,0b1011101];V,yl:Array [Array [Array [Array [Array [Float ,0b1],99],0XA2],0B10100],0b1_1];IQ:Array [Int ,0B10100]){}Constructor (aS8,_:Array [Array [String ,0x139],99]){} }''','''Class,____,:,j8h,{,},Class,_9,:,_,{,__,(,W5f_S0,,,X,,,I_,,,i,:,Array,[,Float,,,0b1011101,],;,V,,,yl,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,99,],,,0XA2,],,,0B10100,],,,0b11,],;,IQ,:,Array,[,Int,,,0B10100,],),{,},Constructor,(,aS8,,,_,:,Array,[,Array,[,String,,,0x139,],,,99,],),{,},},<EOF>''',101))

    def test_1590(self):
        self.assertTrue(TestLexer.test('''Class Q{}Class __:_0{}Class Fu9S_5_{}Class _:_2{Constructor (){Break ;}Var _8,$f:E__7_t2;Wm6(__:O){Continue ;} }''','''Class,Q,{,},Class,__,:,_0,{,},Class,Fu9S_5_,{,},Class,_,:,_2,{,Constructor,(,),{,Break,;,},Var,_8,,,$f,:,E__7_t2,;,Wm6,(,__,:,O,),{,Continue,;,},},<EOF>''',101))

    def test_1591(self):
        self.assertTrue(TestLexer.test('''Class XJ:h_{}Class _:D{Var k:Array [Array [Int ,06],41];}Class _:_c2{_(){}Var S_00,$_3_:Array [Array [Boolean ,41],014];}''','''Class,XJ,:,h_,{,},Class,_,:,D,{,Var,k,:,Array,[,Array,[,Int,,,06,],,,41,],;,},Class,_,:,_c2,{,_,(,),{,},Var,S_00,,,$_3_,:,Array,[,Array,[,Boolean,,,41,],,,014,],;,},<EOF>''',101))

    def test_1592(self):
        self.assertTrue(TestLexer.test('''Class _6{}Class KT:_{Destructor (){}$84(__:String ;_76i7:Float ){} }Class a_{Val $_4t,hP,$_7_,_0823,d8:Array [Array [Array [Array [Int ,0b111],0X4C],0b1_1],64];Destructor (){}Constructor (_R:Boolean ;u,t87Fs,B_:Int ;Z4:Array [Boolean ,0b10];_353_8_:Array [Array [Boolean ,0b111],021]){} }Class _Z:u{Constructor (){} }''','''Class,_6,{,},Class,KT,:,_,{,Destructor,(,),{,},$84,(,__,:,String,;,_76i7,:,Float,),{,},},Class,a_,{,Val,$_4t,,,hP,,,$_7_,,,_0823,,,d8,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b111,],,,0X4C,],,,0b11,],,,64,],;,Destructor,(,),{,},Constructor,(,_R,:,Boolean,;,u,,,t87Fs,,,B_,:,Int,;,Z4,:,Array,[,Boolean,,,0b10,],;,_353_8_,:,Array,[,Array,[,Boolean,,,0b111,],,,021,],),{,},},Class,_Z,:,u,{,Constructor,(,),{,},},<EOF>''',101))

    def test_1593(self):
        self.assertTrue(TestLexer.test('''Class b9d:__{Destructor (){}$_G(_:Array [Boolean ,0X48];Ai,_n:Array [Array [Array [Array [Array [Array [Float ,81],0x698],39],0x37],81],04];_:String ;__x2l:Array [Int ,0b1_01];_:Array [Array [String ,0b1],5];U:Int ;o_7p,i_,__:Int ;k,_:Array [Float ,0B111000]){ {} }}Class V6I:_{}''','''Class,b9d,:,__,{,Destructor,(,),{,},$_G,(,_,:,Array,[,Boolean,,,0X48,],;,Ai,,,_n,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,81,],,,0x698,],,,39,],,,0x37,],,,81,],,,04,],;,_,:,String,;,__x2l,:,Array,[,Int,,,0b101,],;,_,:,Array,[,Array,[,String,,,0b1,],,,5,],;,U,:,Int,;,o_7p,,,i_,,,__,:,Int,;,k,,,_,:,Array,[,Float,,,0B111000,],),{,{,},},},Class,V6I,:,_,{,},<EOF>''',101))

    def test_1594(self):
        self.assertTrue(TestLexer.test('''Class __{Constructor (){Val _8:Array [Array [Float ,889_2],03];}Constructor (s:_;V,w:Array [Float ,944_3];A_,_:Array [Boolean ,0b101000];n_,V,_k:Array [Int ,0X7]){} }''','''Class,__,{,Constructor,(,),{,Val,_8,:,Array,[,Array,[,Float,,,8892,],,,03,],;,},Constructor,(,s,:,_,;,V,,,w,:,Array,[,Float,,,9443,],;,A_,,,_,:,Array,[,Boolean,,,0b101000,],;,n_,,,V,,,_k,:,Array,[,Int,,,0X7,],),{,},},<EOF>''',101))

    def test_1595(self):
        self.assertTrue(TestLexer.test('''Class _3{}Class _Aw:_z{Constructor (YW:String ;_,gt:Array [Boolean ,0X47]){}Var _W:Array [Array [Array [String ,05_4_42],0X47],0b1];Constructor (){Continue ;} }''','''Class,_3,{,},Class,_Aw,:,_z,{,Constructor,(,YW,:,String,;,_,,,gt,:,Array,[,Boolean,,,0X47,],),{,},Var,_W,:,Array,[,Array,[,Array,[,String,,,05442,],,,0X47,],,,0b1,],;,Constructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_1596(self):
        self.assertTrue(TestLexer.test('''Class _n_{Constructor (C,_o2:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,066],0b1],06_5],0X21],0xC_5],0B1],0B1],0b1100010],0b1100010],066]){ {}Val _,M4__d,__1_:Array [Array [Array [Array [Array [Float ,05],0x21],1_7],0x2],97];Return ;}Destructor (){Break ;} }Class _:U{__I(_hT4:M_Z;G:Boolean ;Wj,i_A:__){}Var _W__e:Int ;Destructor (){} }''','''Class,_n_,{,Constructor,(,C,,,_o2,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,066,],,,0b1,],,,065,],,,0X21,],,,0xC5,],,,0B1,],,,0B1,],,,0b1100010,],,,0b1100010,],,,066,],),{,{,},Val,_,,,M4__d,,,__1_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,05,],,,0x21,],,,17,],,,0x2,],,,97,],;,Return,;,},Destructor,(,),{,Break,;,},},Class,_,:,U,{,__I,(,_hT4,:,M_Z,;,G,:,Boolean,;,Wj,,,i_A,:,__,),{,},Var,_W__e,:,Int,;,Destructor,(,),{,},},<EOF>''',101))

    def test_1597(self):
        self.assertTrue(TestLexer.test('''Class b:_{}Class _v13_G{}Class _{Constructor (_5_:Float ;s__:Array [Int ,7]){}$__(){Break ;{} }}Class sh{Destructor (){} }''','''Class,b,:,_,{,},Class,_v13_G,{,},Class,_,{,Constructor,(,_5_,:,Float,;,s__,:,Array,[,Int,,,7,],),{,},$__,(,),{,Break,;,{,},},},Class,sh,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1598(self):
        self.assertTrue(TestLexer.test('''Class _:_a{Var $_VU:Array [Array [Boolean ,1],0X30];Val _,n:String ;Var q,_K:_;Constructor (p,_7_,_,o:Sx0;__,_K,S_:Int ){} }''','''Class,_,:,_a,{,Var,$_VU,:,Array,[,Array,[,Boolean,,,1,],,,0X30,],;,Val,_,,,n,:,String,;,Var,q,,,_K,:,_,;,Constructor,(,p,,,_7_,,,_,,,o,:,Sx0,;,__,,,_K,,,S_,:,Int,),{,},},<EOF>''',101))

    def test_1599(self):
        self.assertTrue(TestLexer.test('''Class __5f:A{_(I:____s___;_K:Boolean ;R:Array [Int ,0B1_11];_:S;_i:Array [Array [Array [Array [Array [Array [Array [String ,0125],5_0_9_08_4],0xE],4],1],02],0B10];y,x:Array [Array [Int ,6_85],4];g:Float ){Break ;} }''','''Class,__5f,:,A,{,_,(,I,:,____s___,;,_K,:,Boolean,;,R,:,Array,[,Int,,,0B111,],;,_,:,S,;,_i,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0125,],,,509084,],,,0xE,],,,4,],,,1,],,,02,],,,0B10,],;,y,,,x,:,Array,[,Array,[,Int,,,685,],,,4,],;,g,:,Float,),{,Break,;,},},<EOF>''',101))

    def test_1600(self):
        self.assertTrue(TestLexer.test('''Class _J5{Var _42he,n_P,$_r:Array [String ,0X1F];Constructor (){}$c(L,SR,_,___:String ){}Destructor (){}$o(G:Array [Array [Int ,0X3],0116];_8,_O,M2:Float ;N,_:H;R___:K;Qd:Array [Array [Array [Array [Float ,0XA],0116],0B11110],98]){} }Class m6J6:t{}Class U_D:q{}Class _:D{}''','''Class,_J5,{,Var,_42he,,,n_P,,,$_r,:,Array,[,String,,,0X1F,],;,Constructor,(,),{,},$c,(,L,,,SR,,,_,,,___,:,String,),{,},Destructor,(,),{,},$o,(,G,:,Array,[,Array,[,Int,,,0X3,],,,0116,],;,_8,,,_O,,,M2,:,Float,;,N,,,_,:,H,;,R___,:,K,;,Qd,:,Array,[,Array,[,Array,[,Array,[,Float,,,0XA,],,,0116,],,,0B11110,],,,98,],),{,},},Class,m6J6,:,t,{,},Class,U_D,:,q,{,},Class,_,:,D,{,},<EOF>''',101))

    def test_1601(self):
        self.assertTrue(TestLexer.test('''Class _:e{Val __C6,$_c:Array [Boolean ,8];Destructor (){}_E(o:Array [Boolean ,0b100010]){} }Class o5Q:_{_(){Continue ;} }''','''Class,_,:,e,{,Val,__C6,,,$_c,:,Array,[,Boolean,,,8,],;,Destructor,(,),{,},_E,(,o,:,Array,[,Boolean,,,0b100010,],),{,},},Class,o5Q,:,_,{,_,(,),{,Continue,;,},},<EOF>''',101))

    def test_1602(self):
        self.assertTrue(TestLexer.test('''Class __:J{Var q_91c,_g,G,_:Array [Array [Array [Float ,0b111001],2_7],1];Val $_t:Array [Array [Array [Array [String ,0125],37],0B1_01],0125];Constructor (L:w262;T:_){} }Class __7:_{}''','''Class,__,:,J,{,Var,q_91c,,,_g,,,G,,,_,:,Array,[,Array,[,Array,[,Float,,,0b111001,],,,27,],,,1,],;,Val,$_t,:,Array,[,Array,[,Array,[,Array,[,String,,,0125,],,,37,],,,0B101,],,,0125,],;,Constructor,(,L,:,w262,;,T,:,_,),{,},},Class,__7,:,_,{,},<EOF>''',101))

    def test_1603(self):
        self.assertTrue(TestLexer.test('''Class Crub6YRu{Destructor (){} }Class l{Constructor (b_j__,yr_m:Float ;P__:__6__;j9_2_:Array [Float ,0x3]){}Constructor (){} }Class _{}''','''Class,Crub6YRu,{,Destructor,(,),{,},},Class,l,{,Constructor,(,b_j__,,,yr_m,:,Float,;,P__,:,__6__,;,j9_2_,:,Array,[,Float,,,0x3,],),{,},Constructor,(,),{,},},Class,_,{,},<EOF>''',101))

    def test_1604(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _e:_{h78(){Val _:i;} }Class _{}Class _{Var _o:Array [Array [Array [Array [Array [Array [Array [Array [Float ,070],070],06],0XA_F],06_3_6],98],0xB],0b1];}''','''Class,_,:,_,{,},Class,_e,:,_,{,h78,(,),{,Val,_,:,i,;,},},Class,_,{,},Class,_,{,Var,_o,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,070,],,,070,],,,06,],,,0XAF,],,,0636,],,,98,],,,0xB,],,,0b1,],;,},<EOF>''',101))

    def test_1605(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (_o_M,_:String ;_,_3F:Float ;_,_,Ba_s8:Array [Boolean ,0B1]){Return ;Var _,MY:String ;} }''','''Class,_,:,_,{,Constructor,(,_o_M,,,_,:,String,;,_,,,_3F,:,Float,;,_,,,_,,,Ba_s8,:,Array,[,Boolean,,,0B1,],),{,Return,;,Var,_,,,MY,:,String,;,},},<EOF>''',101))

    def test_1606(self):
        self.assertTrue(TestLexer.test('''Class g:_{}Class i:C8{}Class F:e047{Val f,$2__:Array [Boolean ,0x10];}Class t:_{Var $j,$_A,E72,Cn,j_:Array [Array [Array [Array [Array [Boolean ,0106],0x7E],217],96],0x10];}''','''Class,g,:,_,{,},Class,i,:,C8,{,},Class,F,:,e047,{,Val,f,,,$2__,:,Array,[,Boolean,,,0x10,],;,},Class,t,:,_,{,Var,$j,,,$_A,,,E72,,,Cn,,,j_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0106,],,,0x7E,],,,217,],,,96,],,,0x10,],;,},<EOF>''',101))

    def test_1607(self):
        self.assertTrue(TestLexer.test('''Class _8_:_{Var _,y7_:_;Val z4t:Array [Array [Boolean ,0B1001111],9];Constructor (){} }Class __8_{Var u:Array [Boolean ,9_4_5_73];Val G_:Boolean ;}Class _{}''','''Class,_8_,:,_,{,Var,_,,,y7_,:,_,;,Val,z4t,:,Array,[,Array,[,Boolean,,,0B1001111,],,,9,],;,Constructor,(,),{,},},Class,__8_,{,Var,u,:,Array,[,Boolean,,,94573,],;,Val,G_,:,Boolean,;,},Class,_,{,},<EOF>''',101))

    def test_1608(self):
        self.assertTrue(TestLexer.test('''Class J:_7_{Destructor (){} }Class _{}Class X:_{$_B_(_L,_:Array [Array [Array [Boolean ,032],0B1],0X59];Z7,B_,EV:Boolean ){}Val q_:Array [Int ,0B1011100]=New _W9().T();}''','''Class,J,:,_7_,{,Destructor,(,),{,},},Class,_,{,},Class,X,:,_,{,$_B_,(,_L,,,_,:,Array,[,Array,[,Array,[,Boolean,,,032,],,,0B1,],,,0X59,],;,Z7,,,B_,,,EV,:,Boolean,),{,},Val,q_,:,Array,[,Int,,,0B1011100,],=,New,_W9,(,),.,T,(,),;,},<EOF>''',101))

    def test_1609(self):
        self.assertTrue(TestLexer.test('''Class _{Val _:String ;Destructor (){}Constructor (Tx,B,_29N__,u,_0z_:Array [Array [Int ,0X1],0b10]){} }Class u:qB{}''','''Class,_,{,Val,_,:,String,;,Destructor,(,),{,},Constructor,(,Tx,,,B,,,_29N__,,,u,,,_0z_,:,Array,[,Array,[,Int,,,0X1,],,,0b10,],),{,},},Class,u,:,qB,{,},<EOF>''',101))

    def test_1610(self):
        self.assertTrue(TestLexer.test('''Class p:_{Constructor (_:Array [Array [Float ,7_0_7],03];_,g1:_){Null .r_();} }Class C{}Class _:I3m{}Class _7:__X{Val _:Array [String ,0113];}''','''Class,p,:,_,{,Constructor,(,_,:,Array,[,Array,[,Float,,,707,],,,03,],;,_,,,g1,:,_,),{,Null,.,r_,(,),;,},},Class,C,{,},Class,_,:,I3m,{,},Class,_7,:,__X,{,Val,_,:,Array,[,String,,,0113,],;,},<EOF>''',101))

    def test_1611(self):
        self.assertTrue(TestLexer.test('''Class __9_8__{}Class ra:m{Constructor (L:Array [String ,6];_:__;_,K__:Array [Int ,0b1];I,_,l:D){}Destructor (){} }Class _7w7t{}Class _E{I(){} }''','''Class,__9_8__,{,},Class,ra,:,m,{,Constructor,(,L,:,Array,[,String,,,6,],;,_,:,__,;,_,,,K__,:,Array,[,Int,,,0b1,],;,I,,,_,,,l,:,D,),{,},Destructor,(,),{,},},Class,_7w7t,{,},Class,_E,{,I,(,),{,},},<EOF>''',101))

    def test_1612(self):
        self.assertTrue(TestLexer.test('''Class _:r60{_(m:_;xr:Array [Array [Array [Array [Array [String ,066],0B1],073],0b101100],65]){} }Class _{Var AJ_fC_:_;}''','''Class,_,:,r60,{,_,(,m,:,_,;,xr,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,066,],,,0B1,],,,073,],,,0b101100,],,,65,],),{,},},Class,_,{,Var,AJ_fC_,:,_,;,},<EOF>''',101))

    def test_1613(self):
        self.assertTrue(TestLexer.test('''Class PP{$d(_K:VB;kE:Int ){Break ;}Val $U:Float ;}Class __:zi{Var BN,v_Uy:Array [Array [Array [Array [Array [String ,1],04],6],0XB],0B1];}''','''Class,PP,{,$d,(,_K,:,VB,;,kE,:,Int,),{,Break,;,},Val,$U,:,Float,;,},Class,__,:,zi,{,Var,BN,,,v_Uy,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,1,],,,04,],,,6,],,,0XB,],,,0B1,],;,},<EOF>''',101))

    def test_1614(self):
        self.assertTrue(TestLexer.test('''Class C:n_K89{Destructor (){} }Class kk{Constructor (Y:Boolean ){}Constructor (P80O,__,L,d3_:Array [Array [Boolean ,0X4],0b10011];iv:Array [Int ,739];_3,_:Array [Int ,0B11]){Continue ;}Var D,_,$_:Int ;}''','''Class,C,:,n_K89,{,Destructor,(,),{,},},Class,kk,{,Constructor,(,Y,:,Boolean,),{,},Constructor,(,P80O,,,__,,,L,,,d3_,:,Array,[,Array,[,Boolean,,,0X4,],,,0b10011,],;,iv,:,Array,[,Int,,,739,],;,_3,,,_,:,Array,[,Int,,,0B11,],),{,Continue,;,},Var,D,,,_,,,$_,:,Int,;,},<EOF>''',101))

    def test_1615(self):
        self.assertTrue(TestLexer.test('''Class _i:r{Val WJ,_F,_,$3j:Array [Int ,1_0];}Class _:N3_{}Class __:t6{}Class m{}Class _7{Constructor (){} }Class p:_5{}''','''Class,_i,:,r,{,Val,WJ,,,_F,,,_,,,$3j,:,Array,[,Int,,,10,],;,},Class,_,:,N3_,{,},Class,__,:,t6,{,},Class,m,{,},Class,_7,{,Constructor,(,),{,},},Class,p,:,_5,{,},<EOF>''',101))

    def test_1616(self):
        self.assertTrue(TestLexer.test('''Class j3E_g:_N_777{Constructor (G:Array [Array [Array [Float ,0111],0b100011],0430];q,o,t_:zDq9X;J__Sr_0,pidj_lK486O:Array [Array [Boolean ,0X10],2]){} }''','''Class,j3E_g,:,_N_777,{,Constructor,(,G,:,Array,[,Array,[,Array,[,Float,,,0111,],,,0b100011,],,,0430,],;,q,,,o,,,t_,:,zDq9X,;,J__Sr_0,,,pidj_lK486O,:,Array,[,Array,[,Boolean,,,0X10,],,,2,],),{,},},<EOF>''',101))

    def test_1617(self):
        self.assertTrue(TestLexer.test('''Class K_:_7{Var $mV,C_6,$8:Array [Array [Boolean ,91],0B10100];_(_g,_R__B:String ;A,_:Boolean ;T,_:Array [Int ,0435_34];_X:Array [String ,0b1];_,E,_,s:Float ;__:Int ;XdOv,__:Boolean ){} }''','''Class,K_,:,_7,{,Var,$mV,,,C_6,,,$8,:,Array,[,Array,[,Boolean,,,91,],,,0B10100,],;,_,(,_g,,,_R__B,:,String,;,A,,,_,:,Boolean,;,T,,,_,:,Array,[,Int,,,043534,],;,_X,:,Array,[,String,,,0b1,],;,_,,,E,,,_,,,s,:,Float,;,__,:,Int,;,XdOv,,,__,:,Boolean,),{,},},<EOF>''',101))

    def test_1618(self):
        self.assertTrue(TestLexer.test('''Class _3_{R4(_,Q_4s14,___b,jE:Array [Int ,0B1001110];z,___L3_v9,_,qh,X,A:Float ){Break ;}$M__(X4,sW:M;_g9,_:_;l,m28_3:_A){} }Class L_30:_32{Constructor (){}Destructor (){Continue ;} }''','''Class,_3_,{,R4,(,_,,,Q_4s14,,,___b,,,jE,:,Array,[,Int,,,0B1001110,],;,z,,,___L3_v9,,,_,,,qh,,,X,,,A,:,Float,),{,Break,;,},$M__,(,X4,,,sW,:,M,;,_g9,,,_,:,_,;,l,,,m28_3,:,_A,),{,},},Class,L_30,:,_32,{,Constructor,(,),{,},Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_1619(self):
        self.assertTrue(TestLexer.test('''Class s{}Class B_9:B_3{$c9(n_:Array [Array [Array [Int ,0x50],03],0133];x:W;VIpM_3:Array [Boolean ,0B100111];_,l,Y_0:Array [Float ,0X45]){} }Class _on{}''','''Class,s,{,},Class,B_9,:,B_3,{,$c9,(,n_,:,Array,[,Array,[,Array,[,Int,,,0x50,],,,03,],,,0133,],;,x,:,W,;,VIpM_3,:,Array,[,Boolean,,,0B100111,],;,_,,,l,,,Y_0,:,Array,[,Float,,,0X45,],),{,},},Class,_on,{,},<EOF>''',101))

    def test_1620(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){} }Class s_{G(){Break ;Val X:__;_::$20();{}{} }Var F:_;Constructor (d_:Array [Boolean ,033];y:Int ){Return ;} }''','''Class,_,{,Destructor,(,),{,},},Class,s_,{,G,(,),{,Break,;,Val,X,:,__,;,_,::,$20,(,),;,{,},{,},},Var,F,:,_,;,Constructor,(,d_,:,Array,[,Boolean,,,033,],;,y,:,Int,),{,Return,;,},},<EOF>''',101))

    def test_1621(self):
        self.assertTrue(TestLexer.test('''Class Hf:b{}Class v{Constructor (Y,o,D,Y4,_58D,G,_F_9_8,_,__05__,V__:u_;S1,___,Dk,_z_,K_3_5:l;n_:Boolean ;_x:__9_;D:v){t::$k2a();} }''','''Class,Hf,:,b,{,},Class,v,{,Constructor,(,Y,,,o,,,D,,,Y4,,,_58D,,,G,,,_F_9_8,,,_,,,__05__,,,V__,:,u_,;,S1,,,___,,,Dk,,,_z_,,,K_3_5,:,l,;,n_,:,Boolean,;,_x,:,__9_,;,D,:,v,),{,t,::,$k2a,(,),;,},},<EOF>''',101))

    def test_1622(self):
        self.assertTrue(TestLexer.test('''Class _:_4F{_4a(_,_8g,_,_:Boolean ;__P,Z_AN:Boolean ;jM,_5_:v____){Val R:Array [Array [Array [Boolean ,0B111000],5_0],0b1_1];} }''','''Class,_,:,_4F,{,_4a,(,_,,,_8g,,,_,,,_,:,Boolean,;,__P,,,Z_AN,:,Boolean,;,jM,,,_5_,:,v____,),{,Val,R,:,Array,[,Array,[,Array,[,Boolean,,,0B111000,],,,50,],,,0b11,],;,},},<EOF>''',101))

    def test_1623(self):
        self.assertTrue(TestLexer.test('''Class _{}Class d:T_{__mZ_1_(){Continue ;} }Class _7A{}Class __P{WL(_:Array [Array [String ,69],0x8E]){} }Class k35:_{}''','''Class,_,{,},Class,d,:,T_,{,__mZ_1_,(,),{,Continue,;,},},Class,_7A,{,},Class,__P,{,WL,(,_,:,Array,[,Array,[,String,,,69,],,,0x8E,],),{,},},Class,k35,:,_,{,},<EOF>''',101))

    def test_1624(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class gN35BVq_{Destructor (){} }Class _:X{Constructor (h,_9,_1:Int ){}Destructor (){}$_(){}Constructor (__21:Array [Array [Array [Float ,87],0X38],0x39];L:_8){} }Class M{Var _,__v3:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0b100010],0b100010],46_4_2_2],014],0X38],16],7151_62352],014],014];}''','''Class,_,:,_,{,},Class,gN35BVq_,{,Destructor,(,),{,},},Class,_,:,X,{,Constructor,(,h,,,_9,,,_1,:,Int,),{,},Destructor,(,),{,},$_,(,),{,},Constructor,(,__21,:,Array,[,Array,[,Array,[,Float,,,87,],,,0X38,],,,0x39,],;,L,:,_8,),{,},},Class,M,{,Var,_,,,__v3,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b100010,],,,0b100010,],,,46422,],,,014,],,,0X38,],,,16,],,,715162352,],,,014,],,,014,],;,},<EOF>''',101))

    def test_1625(self):
        self.assertTrue(TestLexer.test('''Class _{Val $O_,$uA,V_3:Array [Boolean ,4_0];}Class q_{Constructor (){Val _,_,_h:Array [Boolean ,0B1001010];Break ;} }Class g:_2{}''','''Class,_,{,Val,$O_,,,$uA,,,V_3,:,Array,[,Boolean,,,40,],;,},Class,q_,{,Constructor,(,),{,Val,_,,,_,,,_h,:,Array,[,Boolean,,,0B1001010,],;,Break,;,},},Class,g,:,_2,{,},<EOF>''',101))

    def test_1626(self):
        self.assertTrue(TestLexer.test('''Class _y{Val $_,_,$A,_t0,$_,_P0,$_0:Array [Array [Float ,032],4];Constructor (_:Array [Array [Array [Boolean ,0B110],0B1_1_1],0b111]){} }''','''Class,_y,{,Val,$_,,,_,,,$A,,,_t0,,,$_,,,_P0,,,$_0,:,Array,[,Array,[,Float,,,032,],,,4,],;,Constructor,(,_,:,Array,[,Array,[,Array,[,Boolean,,,0B110,],,,0B111,],,,0b111,],),{,},},<EOF>''',101))

    def test_1627(self):
        self.assertTrue(TestLexer.test('''Class v_Xu_{Constructor (__F:Array [Boolean ,0b10_1];f_0:String ;_sW:__;Q,_:Array [Int ,0B111100];W__V,E,_:Array [Boolean ,0B1]){} }''','''Class,v_Xu_,{,Constructor,(,__F,:,Array,[,Boolean,,,0b101,],;,f_0,:,String,;,_sW,:,__,;,Q,,,_,:,Array,[,Int,,,0B111100,],;,W__V,,,E,,,_,:,Array,[,Boolean,,,0B1,],),{,},},<EOF>''',101))

    def test_1628(self):
        self.assertTrue(TestLexer.test('''Class _4__:H{_6(){Break ;} }Class m{Val $K6,q,$l54:___;Destructor (){}Val $__,$_4p:Int ;Val _,_:Array [Float ,02_15];}''','''Class,_4__,:,H,{,_6,(,),{,Break,;,},},Class,m,{,Val,$K6,,,q,,,$l54,:,___,;,Destructor,(,),{,},Val,$__,,,$_4p,:,Int,;,Val,_,,,_,:,Array,[,Float,,,0215,],;,},<EOF>''',101))

    def test_1629(self):
        self.assertTrue(TestLexer.test('''Class d{a(_:Array [Array [Array [Array [Float ,9],0B10_1],0b1],024];M_M8C_4_,KL__:_;__:Int ;kY__:y_9){} }Class t:_o37_{Var $y:Array [Array [Boolean ,024],9];}''','''Class,d,{,a,(,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,9,],,,0B101,],,,0b1,],,,024,],;,M_M8C_4_,,,KL__,:,_,;,__,:,Int,;,kY__,:,y_9,),{,},},Class,t,:,_o37_,{,Var,$y,:,Array,[,Array,[,Boolean,,,024,],,,9,],;,},<EOF>''',101))

    def test_1630(self):
        self.assertTrue(TestLexer.test('''Class _:c9_{Constructor (){iD::$ufW_().c3_18JU6.u8._d.___();} }Class P:_21{Constructor (){Val zO_:Array [Int ,04];} }Class _25__:_{}''','''Class,_,:,c9_,{,Constructor,(,),{,iD,::,$ufW_,(,),.,c3_18JU6,.,u8,.,_d,.,___,(,),;,},},Class,P,:,_21,{,Constructor,(,),{,Val,zO_,:,Array,[,Int,,,04,],;,},},Class,_25__,:,_,{,},<EOF>''',101))

    def test_1631(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){}Constructor (){} }Class d2B:g{Var e:dZ;}Class _:__{p(){P_j_::$79();} }Class w:_V_{Val F7_:_0_;}Class j:T3_6U{}Class L{}Class _:__{}''','''Class,_,{,Destructor,(,),{,},Constructor,(,),{,},},Class,d2B,:,g,{,Var,e,:,dZ,;,},Class,_,:,__,{,p,(,),{,P_j_,::,$79,(,),;,},},Class,w,:,_V_,{,Val,F7_,:,_0_,;,},Class,j,:,T3_6U,{,},Class,L,{,},Class,_,:,__,{,},<EOF>''',101))

    def test_1632(self):
        self.assertTrue(TestLexer.test('''Class u88{Constructor (){Break ;} }Class W{_(_F:Float ;_:g_){} }Class a_:j9C{_L(){ {}Continue ;}Destructor (){} }''','''Class,u88,{,Constructor,(,),{,Break,;,},},Class,W,{,_,(,_F,:,Float,;,_,:,g_,),{,},},Class,a_,:,j9C,{,_L,(,),{,{,},Continue,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_1633(self):
        self.assertTrue(TestLexer.test('''Class e:_{}Class _{Val _:Array [Array [Int ,036],036];z2(v:Int ;_G,Ns_1:Boolean ;J,_,P,_,Y0:Array [Float ,07]){ {} }}''','''Class,e,:,_,{,},Class,_,{,Val,_,:,Array,[,Array,[,Int,,,036,],,,036,],;,z2,(,v,:,Int,;,_G,,,Ns_1,:,Boolean,;,J,,,_,,,P,,,_,,,Y0,:,Array,[,Float,,,07,],),{,{,},},},<EOF>''',101))

    def test_1634(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (F:Array [Float ,0X13];K,_r,_6:Boolean ;_1X,E:Float ;__,_,B:R;_,___,k,__,_:N;g:_;Q,__:x_){} }Class ya0:_0D_{}''','''Class,_,{,Constructor,(,F,:,Array,[,Float,,,0X13,],;,K,,,_r,,,_6,:,Boolean,;,_1X,,,E,:,Float,;,__,,,_,,,B,:,R,;,_,,,___,,,k,,,__,,,_,:,N,;,g,:,_,;,Q,,,__,:,x_,),{,},},Class,ya0,:,_0D_,{,},<EOF>''',101))

    def test_1635(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (__,_:Array [String ,8_5];_:Array [Boolean ,0X22]){Continue ;} }Class __2:_{Destructor (){}Constructor (){}Destructor (){} }''','''Class,_,{,Constructor,(,__,,,_,:,Array,[,String,,,85,],;,_,:,Array,[,Boolean,,,0X22,],),{,Continue,;,},},Class,__2,:,_,{,Destructor,(,),{,},Constructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_1636(self):
        self.assertTrue(TestLexer.test('''Class e:_2_{}Class S:_E_1{Val __,_1,$0:Array [Boolean ,0x31];}Class e:_fg{Var $7:Int ;Constructor (y,_,X,_,wpk,q,_H:Int ){Continue ;} }Class S{}''','''Class,e,:,_2_,{,},Class,S,:,_E_1,{,Val,__,,,_1,,,$0,:,Array,[,Boolean,,,0x31,],;,},Class,e,:,_fg,{,Var,$7,:,Int,;,Constructor,(,y,,,_,,,X,,,_,,,wpk,,,q,,,_H,:,Int,),{,Continue,;,},},Class,S,{,},<EOF>''',101))

    def test_1637(self):
        self.assertTrue(TestLexer.test('''Class _{Y_4(A_:S){Var _:Int ;}Var u0MP_,W:W_L;Constructor (_,S,_:Array [Array [Array [Array [Array [Boolean ,9],0B10],1],033],6];_S3_,XJ7,_,N5:J__){Break ;} }''','''Class,_,{,Y_4,(,A_,:,S,),{,Var,_,:,Int,;,},Var,u0MP_,,,W,:,W_L,;,Constructor,(,_,,,S,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,9,],,,0B10,],,,1,],,,033,],,,6,],;,_S3_,,,XJ7,,,_,,,N5,:,J__,),{,Break,;,},},<EOF>''',101))

    def test_1638(self):
        self.assertTrue(TestLexer.test('''Class _{_(EG,__82:Array [Array [Array [Array [Int ,0B1_10_1_1_01],06],82],0XE];__ZI21VX:f){}Val _,$Y:Array [Array [String ,70],70];}Class N_G8:hR_M_96{A2_d(_:B_){ {} }}''','''Class,_,{,_,(,EG,,,__82,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1101101,],,,06,],,,82,],,,0XE,],;,__ZI21VX,:,f,),{,},Val,_,,,$Y,:,Array,[,Array,[,String,,,70,],,,70,],;,},Class,N_G8,:,hR_M_96,{,A2_d,(,_,:,B_,),{,{,},},},<EOF>''',101))

    def test_1639(self):
        self.assertTrue(TestLexer.test('''Class s:g_S{Destructor (){}Constructor (_m_:Float ;_:SH___V;_:Array [Array [Array [String ,643],0X3_E_3_A_A],0104];_:R_;hB_,_Q_k,__,_6P:L_9){} }Class _:x{$i5(){} }''','''Class,s,:,g_S,{,Destructor,(,),{,},Constructor,(,_m_,:,Float,;,_,:,SH___V,;,_,:,Array,[,Array,[,Array,[,String,,,643,],,,0X3E3AA,],,,0104,],;,_,:,R_,;,hB_,,,_Q_k,,,__,,,_6P,:,L_9,),{,},},Class,_,:,x,{,$i5,(,),{,},},<EOF>''',101))

    def test_1640(self):
        self.assertTrue(TestLexer.test('''Class _z{Constructor (){Val r02,_0:Float ;Return ;}Val _J___Lo1:Array [Array [Float ,0b100101],3];Var $G:_r_;Var w,R:Array [Float ,0133];Var _Yh,_S:_;}Class C5Oi78H:__{}''','''Class,_z,{,Constructor,(,),{,Val,r02,,,_0,:,Float,;,Return,;,},Val,_J___Lo1,:,Array,[,Array,[,Float,,,0b100101,],,,3,],;,Var,$G,:,_r_,;,Var,w,,,R,:,Array,[,Float,,,0133,],;,Var,_Yh,,,_S,:,_,;,},Class,C5Oi78H,:,__,{,},<EOF>''',101))

    def test_1641(self):
        self.assertTrue(TestLexer.test('''Class _:fX{}Class _{Destructor (){}Val $_,_i__,DZ,o,Y0Vr,_4y:h_7;}Class _:_3{Val $_:Array [Float ,0B1101];}Class _:K1{}''','''Class,_,:,fX,{,},Class,_,{,Destructor,(,),{,},Val,$_,,,_i__,,,DZ,,,o,,,Y0Vr,,,_4y,:,h_7,;,},Class,_,:,_3,{,Val,$_,:,Array,[,Float,,,0B1101,],;,},Class,_,:,K1,{,},<EOF>''',101))

    def test_1642(self):
        self.assertTrue(TestLexer.test('''Class kn:_V{Val $PN,$m,$55A42_7:Boolean ;$8(_4,_7:Array [Array [Array [Array [Array [Array [Array [Array [String ,0B1],03],04],0x1F],0B1],0B1],28],03]){Continue ;} }Class x1{}''','''Class,kn,:,_V,{,Val,$PN,,,$m,,,$55A42_7,:,Boolean,;,$8,(,_4,,,_7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,03,],,,04,],,,0x1F,],,,0B1,],,,0B1,],,,28,],,,03,],),{,Continue,;,},},Class,x1,{,},<EOF>''',101))

    def test_1643(self):
        self.assertTrue(TestLexer.test('''Class _7{}Class D_{Constructor (_:Array [Boolean ,0B1011010];d_2_,w,u,D_:Array [Boolean ,79];__:Array [String ,79];__:Float ){} }''','''Class,_7,{,},Class,D_,{,Constructor,(,_,:,Array,[,Boolean,,,0B1011010,],;,d_2_,,,w,,,u,,,D_,:,Array,[,Boolean,,,79,],;,__,:,Array,[,String,,,79,],;,__,:,Float,),{,},},<EOF>''',101))

    def test_1644(self):
        self.assertTrue(TestLexer.test('''Class __:_{}Class _9:D{}Class N:_{$_9(){}Val B,__5_4Zi:Boolean ;}Class __:_{Var $8_5S___,$_,pAX4:Float ;}Class _:_{}Class _:_{_(){}Constructor (){} }''','''Class,__,:,_,{,},Class,_9,:,D,{,},Class,N,:,_,{,$_9,(,),{,},Val,B,,,__5_4Zi,:,Boolean,;,},Class,__,:,_,{,Var,$8_5S___,,,$_,,,pAX4,:,Float,;,},Class,_,:,_,{,},Class,_,:,_,{,_,(,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_1645(self):
        self.assertTrue(TestLexer.test('''Class h_190{Var $_0_:Boolean ;_(){ {} }Val $_8:Array [Array [String ,072],033];Constructor (_6_Q:Array [Array [Array [Array [Array [Boolean ,0B1],5_8],38],0b1_1],0B1000]){}Constructor (m__29_:Array [String ,0X11]){Break ;} }''','''Class,h_190,{,Var,$_0_,:,Boolean,;,_,(,),{,{,},},Val,$_8,:,Array,[,Array,[,String,,,072,],,,033,],;,Constructor,(,_6_Q,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,58,],,,38,],,,0b11,],,,0B1000,],),{,},Constructor,(,m__29_,:,Array,[,String,,,0X11,],),{,Break,;,},},<EOF>''',101))

    def test_1646(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){}Val T4673,$_I:Array [Boolean ,6];}Class PE_{Constructor (){} }Class h_78_{}Class fm_se:_{}''','''Class,_,{,Destructor,(,),{,},Val,T4673,,,$_I,:,Array,[,Boolean,,,6,],;,},Class,PE_,{,Constructor,(,),{,},},Class,h_78_,{,},Class,fm_se,:,_,{,},<EOF>''',101))

    def test_1647(self):
        self.assertTrue(TestLexer.test('''Class uP:_{Constructor (){}Constructor (nr,_0_,_,a_W:Array [Array [Array [Float ,0B11100],0x2F],72];D:Array [Array [String ,0b111100],05];K,L_,_55:Float ;A_jr5:Array [Array [Array [Boolean ,0b111100],020_7],0x2F]){} }''','''Class,uP,:,_,{,Constructor,(,),{,},Constructor,(,nr,,,_0_,,,_,,,a_W,:,Array,[,Array,[,Array,[,Float,,,0B11100,],,,0x2F,],,,72,],;,D,:,Array,[,Array,[,String,,,0b111100,],,,05,],;,K,,,L_,,,_55,:,Float,;,A_jr5,:,Array,[,Array,[,Array,[,Boolean,,,0b111100,],,,0207,],,,0x2F,],),{,},},<EOF>''',101))

    def test_1648(self):
        self.assertTrue(TestLexer.test('''Class _5{}Class _{_(_:String ;l_V,H,Q3_,_Q:String ;_:Array [Array [Array [Float ,59],042],0b11_1_0]){ {}Val q:String ;} }''','''Class,_5,{,},Class,_,{,_,(,_,:,String,;,l_V,,,H,,,Q3_,,,_Q,:,String,;,_,:,Array,[,Array,[,Array,[,Float,,,59,],,,042,],,,0b1110,],),{,{,},Val,q,:,String,;,},},<EOF>''',101))

    def test_1649(self):
        self.assertTrue(TestLexer.test('''Class _99:g_8U{Var q72_:Int ;Destructor (){Continue ;} }Class i{Var _,_y_:Int ;Destructor (){}Val $0v90,$K:Boolean ;}Class _:bH{Destructor (){}$__(e__W:W;__0,GV7:_7){} }Class p{Constructor (n,_4,___,K:Array [Float ,6];Y_y,___:Array [Array [String ,0X4F],0X4F];__4__8:Array [Array [Array [Array [Array [Array [Float ,9],67],67],0b11110],05],20];b9gr1_:String ;_,__,D:Array [String ,0X2A5]){} }''','''Class,_99,:,g_8U,{,Var,q72_,:,Int,;,Destructor,(,),{,Continue,;,},},Class,i,{,Var,_,,,_y_,:,Int,;,Destructor,(,),{,},Val,$0v90,,,$K,:,Boolean,;,},Class,_,:,bH,{,Destructor,(,),{,},$__,(,e__W,:,W,;,__0,,,GV7,:,_7,),{,},},Class,p,{,Constructor,(,n,,,_4,,,___,,,K,:,Array,[,Float,,,6,],;,Y_y,,,___,:,Array,[,Array,[,String,,,0X4F,],,,0X4F,],;,__4__8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,9,],,,67,],,,67,],,,0b11110,],,,05,],,,20,],;,b9gr1_,:,String,;,_,,,__,,,D,:,Array,[,String,,,0X2A5,],),{,},},<EOF>''',101))

    def test_1650(self):
        self.assertTrue(TestLexer.test('''Class C6:a4Q5{Constructor (){}Constructor (_:u;_:Array [Array [Array [Array [Float ,0b1],77],0b1],0b1];_E:d){Return ;}w7(){Return ;} }''','''Class,C6,:,a4Q5,{,Constructor,(,),{,},Constructor,(,_,:,u,;,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,77,],,,0b1,],,,0b1,],;,_E,:,d,),{,Return,;,},w7,(,),{,Return,;,},},<EOF>''',101))

    def test_1651(self):
        self.assertTrue(TestLexer.test('''Class _{Val $_:Array [Boolean ,39];}Class _{}Class A{}Class _{}Class yH:_{}Class _v{Var $_5,s4:String ;Destructor (){} }''','''Class,_,{,Val,$_,:,Array,[,Boolean,,,39,],;,},Class,_,{,},Class,A,{,},Class,_,{,},Class,yH,:,_,{,},Class,_v,{,Var,$_5,,,s4,:,String,;,Destructor,(,),{,},},<EOF>''',101))

    def test_1652(self):
        self.assertTrue(TestLexer.test('''Class _:_{i_(J,f_,W,R:Array [Int ,1_0];_,Z,_7,i,_,_,__:Array [Float ,83];_:_s_W){Return ;} }Class _NS:_{Constructor (){Continue ;} }Class J4Z:_{}Class _v__{}Class _U{}''','''Class,_,:,_,{,i_,(,J,,,f_,,,W,,,R,:,Array,[,Int,,,10,],;,_,,,Z,,,_7,,,i,,,_,,,_,,,__,:,Array,[,Float,,,83,],;,_,:,_s_W,),{,Return,;,},},Class,_NS,:,_,{,Constructor,(,),{,Continue,;,},},Class,J4Z,:,_,{,},Class,_v__,{,},Class,_U,{,},<EOF>''',101))

    def test_1653(self):
        self.assertTrue(TestLexer.test('''Class _6Q3:_p{}Class __f{Constructor (_,___:Array [Boolean ,0B1100]){}Val l:Z;Var $Q,v:Boolean ;}Class _a{}Class Y{}''','''Class,_6Q3,:,_p,{,},Class,__f,{,Constructor,(,_,,,___,:,Array,[,Boolean,,,0B1100,],),{,},Val,l,:,Z,;,Var,$Q,,,v,:,Boolean,;,},Class,_a,{,},Class,Y,{,},<EOF>''',101))

    def test_1654(self):
        self.assertTrue(TestLexer.test('''Class H3{}Class _:_{}Class _5:_{Destructor (){}Constructor (_:_;_:Array [Array [Array [Array [Int ,0X6],0B111100],0xE_C_F],0x6]){Var _Y:Array [Boolean ,075];}Val $_,$_sB:rP;}''','''Class,H3,{,},Class,_,:,_,{,},Class,_5,:,_,{,Destructor,(,),{,},Constructor,(,_,:,_,;,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X6,],,,0B111100,],,,0xECF,],,,0x6,],),{,Var,_Y,:,Array,[,Boolean,,,075,],;,},Val,$_,,,$_sB,:,rP,;,},<EOF>''',101))

    def test_1655(self):
        self.assertTrue(TestLexer.test('''Class By 5bA:_{Constructor (_:String ;_Z,_8:Array [Array [String ,7],6_55_1];_15__:_f2;S_:Array [Int ,0b1];W:Boolean ){}Val _7:Float ;Constructor (){} }Class OU___:r4{}Class Yv:q{}''','''Class,By,5,bA,:,_,{,Constructor,(,_,:,String,;,_Z,,,_8,:,Array,[,Array,[,String,,,7,],,,6551,],;,_15__,:,_f2,;,S_,:,Array,[,Int,,,0b1,],;,W,:,Boolean,),{,},Val,_7,:,Float,;,Constructor,(,),{,},},Class,OU___,:,r4,{,},Class,Yv,:,q,{,},<EOF>''',101))

    # def test_1656(self):
    #     self.assertTrue(TestLexer.test('''Class _{}Class E_{Destructor (){} }Class _{Val $_:Array [Boolean ,0b1011111]=!!!!!-Null ._A-!-""/"\n'"".N%_::$7.e__().o()._;}''','''Class,_,{,},Class,E_,{,Destructor,(,),{,},},Class,_,{,Val,$_,:,Array,[,Boolean,,,0b1011111,],=,!,!,!,!,!,-,Null,.,_A,-,!,-,,/,\n'",.,N,%,_,::,$7,.,e__,(,),.,o,(,),.,_,;,},<EOF>''',101))

    def test_1657(self):
        self.assertTrue(TestLexer.test('''Class __U:b__T{$I(_,c_:Int ;O:Array [Float ,023];HIhW8:p){} }Class K6{}Class _601{}Class ___:I2{}Class z_{_VJ1(Q9:Array [Array [Int ,985],023]){}j3(__:Array [Float ,03]){} }''','''Class,__U,:,b__T,{,$I,(,_,,,c_,:,Int,;,O,:,Array,[,Float,,,023,],;,HIhW8,:,p,),{,},},Class,K6,{,},Class,_601,{,},Class,___,:,I2,{,},Class,z_,{,_VJ1,(,Q9,:,Array,[,Array,[,Int,,,985,],,,023,],),{,},j3,(,__,:,Array,[,Float,,,03,],),{,},},<EOF>''',101))

    def test_1658(self):
        self.assertTrue(TestLexer.test('''Class _6{}Class _{}Class _21:_{Constructor (){}Val _16:_5_;}Class x{}Class _{Var $K_42M,G84_,$__S,_:Array [Array [String ,01],0136];}''','''Class,_6,{,},Class,_,{,},Class,_21,:,_,{,Constructor,(,),{,},Val,_16,:,_5_,;,},Class,x,{,},Class,_,{,Var,$K_42M,,,G84_,,,$__S,,,_,:,Array,[,Array,[,String,,,01,],,,0136,],;,},<EOF>''',101))

    def test_1659(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){ {}Break ;}C(_,__X_:Array [Array [Array [Float ,3],014],0b10];Z0_C,_J,t_5___2V,q_2_1_:L93){ {} }Var k_6:Boolean ;}''','''Class,_,{,Destructor,(,),{,{,},Break,;,},C,(,_,,,__X_,:,Array,[,Array,[,Array,[,Float,,,3,],,,014,],,,0b10,],;,Z0_C,,,_J,,,t_5___2V,,,q_2_1_,:,L93,),{,{,},},Var,k_6,:,Boolean,;,},<EOF>''',101))

    def test_1660(self):
        self.assertTrue(TestLexer.test('''Class N:O_8V8{Var _3_,$_,$8,_,$s,$_:Array [Array [Array [Boolean ,0B1_0_100],0120],0120];}Class _m{Destructor (){Continue ;}Var _:Array [Int ,04];Val yZ:Boolean ;}''','''Class,N,:,O_8V8,{,Var,_3_,,,$_,,,$8,,,_,,,$s,,,$_,:,Array,[,Array,[,Array,[,Boolean,,,0B10100,],,,0120,],,,0120,],;,},Class,_m,{,Destructor,(,),{,Continue,;,},Var,_,:,Array,[,Int,,,04,],;,Val,yZ,:,Boolean,;,},<EOF>''',101))

    def test_1661(self):
        self.assertTrue(TestLexer.test('''Class __{Val $2,$k,D:Array [Array [Array [Boolean ,0X2],0100],0B101000];Val G,$s,__c76,$_,$_:Array [Array [Array [String ,0X8],0x61],0607];}''','''Class,__,{,Val,$2,,,$k,,,D,:,Array,[,Array,[,Array,[,Boolean,,,0X2,],,,0100,],,,0B101000,],;,Val,G,,,$s,,,__c76,,,$_,,,$_,:,Array,[,Array,[,Array,[,String,,,0X8,],,,0x61,],,,0607,],;,},<EOF>''',101))

    def test_1662(self):
        self.assertTrue(TestLexer.test('''Class Z0q:DbO2{Constructor (_,_,_:Float ;Dc,l:Pu1){} }Class _:Y{}Class __{Var $_:Array [Boolean ,0b110101];}Class v:_{Var __6:Boolean ;_qc2HQh(){} }''','''Class,Z0q,:,DbO2,{,Constructor,(,_,,,_,,,_,:,Float,;,Dc,,,l,:,Pu1,),{,},},Class,_,:,Y,{,},Class,__,{,Var,$_,:,Array,[,Boolean,,,0b110101,],;,},Class,v,:,_,{,Var,__6,:,Boolean,;,_qc2HQh,(,),{,},},<EOF>''',101))

    def test_1663(self):
        self.assertTrue(TestLexer.test('''Class ___1_:_6{}Class NK:q{}Class _{Destructor (){} }Class k:_4_4{Constructor (_:Array [Array [String ,50],050]){} }''','''Class,___1_,:,_6,{,},Class,NK,:,q,{,},Class,_,{,Destructor,(,),{,},},Class,k,:,_4_4,{,Constructor,(,_,:,Array,[,Array,[,String,,,50,],,,050,],),{,},},<EOF>''',101))

    def test_1664(self):
        self.assertTrue(TestLexer.test('''Class Z{}Class pU{}Class _5:_{Destructor (){Break ;} }Class i6{}Class z_{Var $__:Int ;Destructor (){} }Class n:P{}''','''Class,Z,{,},Class,pU,{,},Class,_5,:,_,{,Destructor,(,),{,Break,;,},},Class,i6,{,},Class,z_,{,Var,$__,:,Int,;,Destructor,(,),{,},},Class,n,:,P,{,},<EOF>''',101))

    def test_1665(self):
        self.assertTrue(TestLexer.test('''Class p:rNmc_h_{}Class ___:_{}Class _3_{Constructor (Z,x:Array [Array [Int ,95],0x35];p6:Int ){}Constructor (iJ,Z:Int ){} }''','''Class,p,:,rNmc_h_,{,},Class,___,:,_,{,},Class,_3_,{,Constructor,(,Z,,,x,:,Array,[,Array,[,Int,,,95,],,,0x35,],;,p6,:,Int,),{,},Constructor,(,iJ,,,Z,:,Int,),{,},},<EOF>''',101))

    def test_1666(self):
        self.assertTrue(TestLexer.test('''Class _:G6{Var $4:Array [Array [Array [Float ,0B1011010],0x29],0b10];Var $6,$77r:__;Constructor (e_:_0){} }Class t0q:e_z{}''','''Class,_,:,G6,{,Var,$4,:,Array,[,Array,[,Array,[,Float,,,0B1011010,],,,0x29,],,,0b10,],;,Var,$6,,,$77r,:,__,;,Constructor,(,e_,:,_0,),{,},},Class,t0q,:,e_z,{,},<EOF>''',101))

    def test_1667(self):
        self.assertTrue(TestLexer.test('''Class R:_KN{}Class G{Constructor (_:Array [Array [Array [Boolean ,4_38],066],0x37]){e__::$2_663AW21BD();Break ;} }Class x{}Class _p{}Class _R:__{}Class O1Y2{}Class _{}''','''Class,R,:,_KN,{,},Class,G,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Boolean,,,438,],,,066,],,,0x37,],),{,e__,::,$2_663AW21BD,(,),;,Break,;,},},Class,x,{,},Class,_p,{,},Class,_R,:,__,{,},Class,O1Y2,{,},Class,_,{,},<EOF>''',101))

    def test_1668(self):
        self.assertTrue(TestLexer.test('''Class N3:H{Val $_v,p:Array [Float ,0B1000111];}Class _:_61r_8{}Class k_2{Destructor (){ {Continue ;Return ;}Val TI_g,__8_g:Int ;} }Class r:_{Val $_H,$4,$X:Boolean ;Var __,_U_:Array [String ,0b100001];}''','''Class,N3,:,H,{,Val,$_v,,,p,:,Array,[,Float,,,0B1000111,],;,},Class,_,:,_61r_8,{,},Class,k_2,{,Destructor,(,),{,{,Continue,;,Return,;,},Val,TI_g,,,__8_g,:,Int,;,},},Class,r,:,_,{,Val,$_H,,,$4,,,$X,:,Boolean,;,Var,__,,,_U_,:,Array,[,String,,,0b100001,],;,},<EOF>''',101))

    def test_1669(self):
        self.assertTrue(TestLexer.test('''Class __n:K8{Eb1_d(T,a,__3C,_1:Array [Array [Float ,0X57],02];Oc:Int ;_:__xL9_;_X0,r,_:Int ;P_:Array [Array [Array [Array [Boolean ,8],0X1],0XF292_68_2],0b1]){} }Class _{}''','''Class,__n,:,K8,{,Eb1_d,(,T,,,a,,,__3C,,,_1,:,Array,[,Array,[,Float,,,0X57,],,,02,],;,Oc,:,Int,;,_,:,__xL9_,;,_X0,,,r,,,_,:,Int,;,P_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,8,],,,0X1,],,,0XF292682,],,,0b1,],),{,},},Class,_,{,},<EOF>''',101))

    def test_1670(self):
        self.assertTrue(TestLexer.test('''Class o{Constructor (K,wy:Q;dX87:_){}r(_:_;__a,W:Array [Array [Array [Array [Array [Array [Array [Array [Int ,034],034],70],0b110011],0b110011],077_0_40],0X7_9_7_2_03],0b10101]){} }''','''Class,o,{,Constructor,(,K,,,wy,:,Q,;,dX87,:,_,),{,},r,(,_,:,_,;,__a,,,W,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,034,],,,034,],,,70,],,,0b110011,],,,0b110011,],,,077040,],,,0X797203,],,,0b10101,],),{,},},<EOF>''',101))

    def test_1671(self):
        self.assertTrue(TestLexer.test('''Class O{}Class _8{Val SA,$__1bu,$C,_:_;$8E(){ {} }Var $_:Float ;Constructor (u__,r,f,f:Array [Array [Array [String ,07],0b1001011],0B10100];d37_:_S_){} }''','''Class,O,{,},Class,_8,{,Val,SA,,,$__1bu,,,$C,,,_,:,_,;,$8E,(,),{,{,},},Var,$_,:,Float,;,Constructor,(,u__,,,r,,,f,,,f,:,Array,[,Array,[,Array,[,String,,,07,],,,0b1001011,],,,0B10100,],;,d37_,:,_S_,),{,},},<EOF>''',101))

    def test_1672(self):
        self.assertTrue(TestLexer.test('''Class _k_7:_{Constructor (){Break ;}Constructor (){} }Class __u4{}Class T7_:J{}Class O_{}Class _:_{$E(_:String ){_bp::$CB7().S._._pJS();Break ;Break ;Return ;} }Class C_:_{}''','''Class,_k_7,:,_,{,Constructor,(,),{,Break,;,},Constructor,(,),{,},},Class,__u4,{,},Class,T7_,:,J,{,},Class,O_,{,},Class,_,:,_,{,$E,(,_,:,String,),{,_bp,::,$CB7,(,),.,S,.,_,.,_pJS,(,),;,Break,;,Break,;,Return,;,},},Class,C_,:,_,{,},<EOF>''',101))

    def test_1673(self):
        self.assertTrue(TestLexer.test('''Class H:D6{Val $15,J_,$f,$_y0_6uP_:String ;}Class __:p_{_9(w_5M:Boolean ;T1A4,q_,_:Array [Array [Int ,8_237],0772];d:v){Continue ;} }''','''Class,H,:,D6,{,Val,$15,,,J_,,,$f,,,$_y0_6uP_,:,String,;,},Class,__,:,p_,{,_9,(,w_5M,:,Boolean,;,T1A4,,,q_,,,_,:,Array,[,Array,[,Int,,,8237,],,,0772,],;,d,:,v,),{,Continue,;,},},<EOF>''',101))

    def test_1674(self):
        self.assertTrue(TestLexer.test('''Class B8:_5_u_0{Var $4:Array [Boolean ,061];Var _P,$6,o_,_:m;}Class t{Val $_1:Int ;Val $6_:Array [String ,387_2];}Class __7{}''','''Class,B8,:,_5_u_0,{,Var,$4,:,Array,[,Boolean,,,061,],;,Var,_P,,,$6,,,o_,,,_,:,m,;,},Class,t,{,Val,$_1,:,Int,;,Val,$6_,:,Array,[,String,,,3872,],;,},Class,__7,{,},<EOF>''',101))

    def test_1675(self):
        self.assertTrue(TestLexer.test('''Class _{Var $__,$m,$E,__,$9:Array [Array [Array [Int ,046],0B1],046];Var $Bz,$mK_9,_:D2h;Var __7,Ej:E;Constructor (p_s,D_,f,ax:Int ;R2_p2,S_W__,_:Int ){Break ;Break ;} }Class _f{Var $0:F;}Class _:N{}Class _:_4{}''','''Class,_,{,Var,$__,,,$m,,,$E,,,__,,,$9,:,Array,[,Array,[,Array,[,Int,,,046,],,,0B1,],,,046,],;,Var,$Bz,,,$mK_9,,,_,:,D2h,;,Var,__7,,,Ej,:,E,;,Constructor,(,p_s,,,D_,,,f,,,ax,:,Int,;,R2_p2,,,S_W__,,,_,:,Int,),{,Break,;,Break,;,},},Class,_f,{,Var,$0,:,F,;,},Class,_,:,N,{,},Class,_,:,_4,{,},<EOF>''',101))

    def test_1676(self):
        self.assertTrue(TestLexer.test('''Class a{Constructor (__GnD,du:Boolean ;Ug:Boolean ;c:N;R:pX;_,_:_5___;_T:Array [Array [Array [Boolean ,27],0B100001],03]){} }''','''Class,a,{,Constructor,(,__GnD,,,du,:,Boolean,;,Ug,:,Boolean,;,c,:,N,;,R,:,pX,;,_,,,_,:,_5___,;,_T,:,Array,[,Array,[,Array,[,Boolean,,,27,],,,0B100001,],,,03,],),{,},},<EOF>''',101))

    def test_1677(self):
        self.assertTrue(TestLexer.test('''Class g:tiT{Constructor (_cm,G,___:Array [String ,0b1001000];_,_:Boolean ;_:h9;T:Array [Array [Boolean ,1_0],41];g:_){} }Class f:__{Constructor (J,M:Array [Array [Array [Int ,03],41],41]){} }Class _2__{}''','''Class,g,:,tiT,{,Constructor,(,_cm,,,G,,,___,:,Array,[,String,,,0b1001000,],;,_,,,_,:,Boolean,;,_,:,h9,;,T,:,Array,[,Array,[,Boolean,,,10,],,,41,],;,g,:,_,),{,},},Class,f,:,__,{,Constructor,(,J,,,M,:,Array,[,Array,[,Array,[,Int,,,03,],,,41,],,,41,],),{,},},Class,_2__,{,},<EOF>''',101))

    def test_1678(self):
        self.assertTrue(TestLexer.test('''Class _g36{}Class _{}Class Z:_{Var _:Array [Boolean ,0B1];}Class W_z_6{Destructor (){Continue ;Return ;} }Class _{}''','''Class,_g36,{,},Class,_,{,},Class,Z,:,_,{,Var,_,:,Array,[,Boolean,,,0B1,],;,},Class,W_z_6,{,Destructor,(,),{,Continue,;,Return,;,},},Class,_,{,},<EOF>''',101))

    def test_1679(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _v_9:_{Var _,$_y:_;Destructor (){Continue ;} }Class _:_u{Constructor (W_4,o_:Array [Array [Array [Array [Int ,0B1],0b1011100],74],0X7];_:Boolean ;_Pc6:Array [Boolean ,0X5C];Wx0,V,_4:String ){} }''','''Class,_,:,_,{,},Class,_v_9,:,_,{,Var,_,,,$_y,:,_,;,Destructor,(,),{,Continue,;,},},Class,_,:,_u,{,Constructor,(,W_4,,,o_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,0b1011100,],,,74,],,,0X7,],;,_,:,Boolean,;,_Pc6,:,Array,[,Boolean,,,0X5C,],;,Wx0,,,V,,,_4,:,String,),{,},},<EOF>''',101))

    def test_1680(self):
        self.assertTrue(TestLexer.test('''Class _:Q_75_{$s(_q:X;_e,_:String ;f_0:_;_,P:Int ;_8i2I5_,ps:Array [Array [String ,74_86],0115];JVwg0,_:Array [Array [String ,6],07]){} }''','''Class,_,:,Q_75_,{,$s,(,_q,:,X,;,_e,,,_,:,String,;,f_0,:,_,;,_,,,P,:,Int,;,_8i2I5_,,,ps,:,Array,[,Array,[,String,,,7486,],,,0115,],;,JVwg0,,,_,:,Array,[,Array,[,String,,,6,],,,07,],),{,},},<EOF>''',101))

    def test_1681(self):
        self.assertTrue(TestLexer.test('''Class u_:__{Destructor (){Var __m_6URoG,h3nU,_O_l0,_b,_:Array [Array [Boolean ,0b1],33];}Val _,$m,C,I2s_,B,$po:Array [Float ,061];}Class Cl{}''','''Class,u_,:,__,{,Destructor,(,),{,Var,__m_6URoG,,,h3nU,,,_O_l0,,,_b,,,_,:,Array,[,Array,[,Boolean,,,0b1,],,,33,],;,},Val,_,,,$m,,,C,,,I2s_,,,B,,,$po,:,Array,[,Float,,,061,],;,},Class,Cl,{,},<EOF>''',101))

    def test_1682(self):
        self.assertTrue(TestLexer.test('''Class _{Val _,$_,$I,$_,$U:Array [Float ,57];}Class _:_{Var d:_;}Class _{$_(r__,_8,H,D_l,_,_:Float ;_:Float ){} }Class __7:Q{}Class B_6_J57_:r_k{}''','''Class,_,{,Val,_,,,$_,,,$I,,,$_,,,$U,:,Array,[,Float,,,57,],;,},Class,_,:,_,{,Var,d,:,_,;,},Class,_,{,$_,(,r__,,,_8,,,H,,,D_l,,,_,,,_,:,Float,;,_,:,Float,),{,},},Class,__7,:,Q,{,},Class,B_6_J57_,:,r_k,{,},<EOF>''',101))

    def test_1683(self):
        self.assertTrue(TestLexer.test('''Class _:c{Constructor (){} }Class X{Var PA,$_:_;}Class Y{Constructor (){}$_y_52(){Break ;}Val $x,_z__p,_:String ;}Class _B{}Class w{}Class Im{}''','''Class,_,:,c,{,Constructor,(,),{,},},Class,X,{,Var,PA,,,$_,:,_,;,},Class,Y,{,Constructor,(,),{,},$_y_52,(,),{,Break,;,},Val,$x,,,_z__p,,,_,:,String,;,},Class,_B,{,},Class,w,{,},Class,Im,{,},<EOF>''',101))

    def test_1684(self):
        self.assertTrue(TestLexer.test('''Class r_{}Class W0:M_{Constructor (L:Int ;E:__;_:Array [Array [Array [Array [Array [Boolean ,0101],11],0101],0B110001],0174]){ {} }Var _,$53:L;$_(){}Var e3:Int ;}''','''Class,r_,{,},Class,W0,:,M_,{,Constructor,(,L,:,Int,;,E,:,__,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0101,],,,11,],,,0101,],,,0B110001,],,,0174,],),{,{,},},Var,_,,,$53,:,L,;,$_,(,),{,},Var,e3,:,Int,;,},<EOF>''',101))

    def test_1685(self):
        self.assertTrue(TestLexer.test('''Class _{Val b,$r:Array [Array [Array [String ,0B110],02],33];_6d(uUH,e_t,_:Boolean ;G:__c_r1_;_:Boolean ;_7:Array [Float ,0B1]){} }''','''Class,_,{,Val,b,,,$r,:,Array,[,Array,[,Array,[,String,,,0B110,],,,02,],,,33,],;,_6d,(,uUH,,,e_t,,,_,:,Boolean,;,G,:,__c_r1_,;,_,:,Boolean,;,_7,:,Array,[,Float,,,0B1,],),{,},},<EOF>''',101))

    def test_1686(self):
        self.assertTrue(TestLexer.test('''Class y:_{Val E,_,$8,_,$_,$_1,$_,$_:String ;}Class _{$Um(g_,_:Array [Int ,0B1000100];E_,_5_69y:Float ;_1_:Float ;TwjXU:String ){ {} }}Class X{}''','''Class,y,:,_,{,Val,E,,,_,,,$8,,,_,,,$_,,,$_1,,,$_,,,$_,:,String,;,},Class,_,{,$Um,(,g_,,,_,:,Array,[,Int,,,0B1000100,],;,E_,,,_5_69y,:,Float,;,_1_,:,Float,;,TwjXU,:,String,),{,{,},},},Class,X,{,},<EOF>''',101))

    def test_1687(self):
        self.assertTrue(TestLexer.test('''Class H_:_2{Var _:Array [Array [Boolean ,0xCF0],0X25];__Ib(M:Array [Boolean ,0B1000111]){Break ;{Continue ;e::$R.t();} }}''','''Class,H_,:,_2,{,Var,_,:,Array,[,Array,[,Boolean,,,0xCF0,],,,0X25,],;,__Ib,(,M,:,Array,[,Boolean,,,0B1000111,],),{,Break,;,{,Continue,;,e,::,$R,.,t,(,),;,},},},<EOF>''',101))

    def test_1688(self):
        self.assertTrue(TestLexer.test('''Class n{}Class _{Constructor (_5_95:_;u_:_i){}$__dm(a:u1v1){}Constructor (_3:Boolean ;v___,_2_,_tGP:Int ;_:String ){} }''','''Class,n,{,},Class,_,{,Constructor,(,_5_95,:,_,;,u_,:,_i,),{,},$__dm,(,a,:,u1v1,),{,},Constructor,(,_3,:,Boolean,;,v___,,,_2_,,,_tGP,:,Int,;,_,:,String,),{,},},<EOF>''',101))

    def test_1689(self):
        self.assertTrue(TestLexer.test('''Class _d21:_{}Class z{_(){Var dc9,Y:Array [Array [Float ,9],0xA];}Constructor (H,_:Array [String ,0x4C];_:Boolean ){} }''','''Class,_d21,:,_,{,},Class,z,{,_,(,),{,Var,dc9,,,Y,:,Array,[,Array,[,Float,,,9,],,,0xA,],;,},Constructor,(,H,,,_,:,Array,[,String,,,0x4C,],;,_,:,Boolean,),{,},},<EOF>''',101))

    def test_1690(self):
        self.assertTrue(TestLexer.test('''Class XiB{Destructor (){}Constructor (__8_:Array [Boolean ,28];_,_2R:l){Break ;} }Class s{$P(_0:Array [Boolean ,28];_v3:R_Xp___6;_p:Array [String ,05];F91,Q_X,_75:_;H:Array [Array [Array [Array [Array [Array [String ,0B1_01_0_0],4],28],9],0b1_0],5];_,_,_,_:Array [Array [Array [Array [Array [Array [Int ,0x21],0x85],3],0X2],0b1],28]){} }''','''Class,XiB,{,Destructor,(,),{,},Constructor,(,__8_,:,Array,[,Boolean,,,28,],;,_,,,_2R,:,l,),{,Break,;,},},Class,s,{,$P,(,_0,:,Array,[,Boolean,,,28,],;,_v3,:,R_Xp___6,;,_p,:,Array,[,String,,,05,],;,F91,,,Q_X,,,_75,:,_,;,H,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B10100,],,,4,],,,28,],,,9,],,,0b10,],,,5,],;,_,,,_,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x21,],,,0x85,],,,3,],,,0X2,],,,0b1,],,,28,],),{,},},<EOF>''',101))

    def test_1691(self):
        self.assertTrue(TestLexer.test('''Class b{}Class T:Z71{$_(){}Var $8:B;}Class v4:Ew6{}Class __{Val _c_,$_:Array [Array [Array [Array [Array [String ,0b1100000],0b11_0_1],02_14],0XEF],19];}''','''Class,b,{,},Class,T,:,Z71,{,$_,(,),{,},Var,$8,:,B,;,},Class,v4,:,Ew6,{,},Class,__,{,Val,_c_,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b1100000,],,,0b1101,],,,0214,],,,0XEF,],,,19,],;,},<EOF>''',101))

    def test_1692(self):
        self.assertTrue(TestLexer.test('''Class T___s{}Class i:O{}Class _b_{Var _4,VI,L:Array [Float ,0b1011101];Constructor (b_,_:Boolean ;_:Array [Array [Int ,01],0b1];X5:_;g:Os){} }''','''Class,T___s,{,},Class,i,:,O,{,},Class,_b_,{,Var,_4,,,VI,,,L,:,Array,[,Float,,,0b1011101,],;,Constructor,(,b_,,,_,:,Boolean,;,_,:,Array,[,Array,[,Int,,,01,],,,0b1,],;,X5,:,_,;,g,:,Os,),{,},},<EOF>''',101))

    def test_1693(self):
        self.assertTrue(TestLexer.test('''Class _G1:__2_lG_{}Class __:_1_{Var l0,$_1,__:Int ;}Class _{Constructor (T7,m_h_93P_:Array [Array [Float ,0132],03];j,r7:Boolean ){} }''','''Class,_G1,:,__2_lG_,{,},Class,__,:,_1_,{,Var,l0,,,$_1,,,__,:,Int,;,},Class,_,{,Constructor,(,T7,,,m_h_93P_,:,Array,[,Array,[,Float,,,0132,],,,03,],;,j,,,r7,:,Boolean,),{,},},<EOF>''',101))

    def test_1694(self):
        self.assertTrue(TestLexer.test('''Class xB_:v{Var s1V6,g_,$2w9:Array [Int ,7];Constructor (_,v:Uf){}Constructor (K_:Array [Int ,12];_2,x65:Array [Array [Array [Int ,0xC1],0B1_1],1]){Continue ;} }''','''Class,xB_,:,v,{,Var,s1V6,,,g_,,,$2w9,:,Array,[,Int,,,7,],;,Constructor,(,_,,,v,:,Uf,),{,},Constructor,(,K_,:,Array,[,Int,,,12,],;,_2,,,x65,:,Array,[,Array,[,Array,[,Int,,,0xC1,],,,0B11,],,,1,],),{,Continue,;,},},<EOF>''',101))

    def test_1695(self):
        self.assertTrue(TestLexer.test('''Class _R{Destructor (){ {} }}Class yNB:V_{}Class _{}Class L{Val $4:Array [Array [Array [Array [Float ,074],0XB8_8],074],074];}Class ewa:T0_{}Class V{}Class _2_R{Constructor (y:Array [Array [Array [Float ,0X1E],81],0x10_B];_S2,i:Array [Array [Array [Array [Float ,06_0047],0452],01],074];_lY_4:Boolean ){}Constructor (SZ__,bY:Array [Array [Array [String ,06_62_7_1_53],66_2],0x5]){} }''','''Class,_R,{,Destructor,(,),{,{,},},},Class,yNB,:,V_,{,},Class,_,{,},Class,L,{,Val,$4,:,Array,[,Array,[,Array,[,Array,[,Float,,,074,],,,0XB88,],,,074,],,,074,],;,},Class,ewa,:,T0_,{,},Class,V,{,},Class,_2_R,{,Constructor,(,y,:,Array,[,Array,[,Array,[,Float,,,0X1E,],,,81,],,,0x10B,],;,_S2,,,i,:,Array,[,Array,[,Array,[,Array,[,Float,,,060047,],,,0452,],,,01,],,,074,],;,_lY_4,:,Boolean,),{,},Constructor,(,SZ__,,,bY,:,Array,[,Array,[,Array,[,String,,,06627153,],,,662,],,,0x5,],),{,},},<EOF>''',101))

    def test_1696(self):
        self.assertTrue(TestLexer.test('''Class K{}Class _:__I{Constructor (){Var RF,R:Array [Array [Array [Array [Array [Int ,03],7],0X8],0X8],71];}Destructor (){}Constructor (){} }''','''Class,K,{,},Class,_,:,__I,{,Constructor,(,),{,Var,RF,,,R,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,03,],,,7,],,,0X8,],,,0X8,],,,71,],;,},Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_1697(self):
        self.assertTrue(TestLexer.test('''Class q_6_:W{}Class _{}Class o_{$9q(_,V:Array [Boolean ,0B10000];_2B:w;_5,r4:Array [Array [Array [Float ,17],17],398_95_381];z:Boolean ){} }''','''Class,q_6_,:,W,{,},Class,_,{,},Class,o_,{,$9q,(,_,,,V,:,Array,[,Boolean,,,0B10000,],;,_2B,:,w,;,_5,,,r4,:,Array,[,Array,[,Array,[,Float,,,17,],,,17,],,,39895381,],;,z,:,Boolean,),{,},},<EOF>''',101))

    def test_1698(self):
        self.assertTrue(TestLexer.test('''Class __:o{X(t:j51;_Z_:__43){} }Class U{Var ____:I;}Class __C:_h{Var $_:_;}Class U{}Class _1:__{$gH(){} }Class fI{}Class _yz:s2a{}Class F_{Destructor (){} }''','''Class,__,:,o,{,X,(,t,:,j51,;,_Z_,:,__43,),{,},},Class,U,{,Var,____,:,I,;,},Class,__C,:,_h,{,Var,$_,:,_,;,},Class,U,{,},Class,_1,:,__,{,$gH,(,),{,},},Class,fI,{,},Class,_yz,:,s2a,{,},Class,F_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1699(self):
        self.assertTrue(TestLexer.test('''Class _1:_{Val l3:_;Val $9H:_;}Class _o{}Class _n{Var $0:String ;$wQ4(R,_,_,_t:Int ){}Val $8_,_,n,_,$_,_:_K_y6A;Constructor (){} }Class _:_{t(R:Boolean ){Break ;} }Class __:C5_{}''','''Class,_1,:,_,{,Val,l3,:,_,;,Val,$9H,:,_,;,},Class,_o,{,},Class,_n,{,Var,$0,:,String,;,$wQ4,(,R,,,_,,,_,,,_t,:,Int,),{,},Val,$8_,,,_,,,n,,,_,,,$_,,,_,:,_K_y6A,;,Constructor,(,),{,},},Class,_,:,_,{,t,(,R,:,Boolean,),{,Break,;,},},Class,__,:,C5_,{,},<EOF>''',101))

    def test_1700(self):
        self.assertTrue(TestLexer.test('''Class A_h{Constructor (){} }Class c0_5_8:v{Constructor (){} }Class __:_1{}Class X__0{}Class I{Constructor (){Break ;Break ;} }Class _1{}''','''Class,A_h,{,Constructor,(,),{,},},Class,c0_5_8,:,v,{,Constructor,(,),{,},},Class,__,:,_1,{,},Class,X__0,{,},Class,I,{,Constructor,(,),{,Break,;,Break,;,},},Class,_1,{,},<EOF>''',101))

    def test_1701(self):
        self.assertTrue(TestLexer.test('''Class _X{Constructor (s,_f4,_,vD:t;t_:Array [String ,0xA];A,qL:Int ;y:D;_,_4,__:String ;__9,_q8_,_6,PX,_,_:t_;q91,_,Z,C:Boolean ;U:Array [Int ,06_4_5_2];Z,pgn_,t:Int ){} }''','''Class,_X,{,Constructor,(,s,,,_f4,,,_,,,vD,:,t,;,t_,:,Array,[,String,,,0xA,],;,A,,,qL,:,Int,;,y,:,D,;,_,,,_4,,,__,:,String,;,__9,,,_q8_,,,_6,,,PX,,,_,,,_,:,t_,;,q91,,,_,,,Z,,,C,:,Boolean,;,U,:,Array,[,Int,,,06452,],;,Z,,,pgn_,,,t,:,Int,),{,},},<EOF>''',101))

    def test_1702(self):
        self.assertTrue(TestLexer.test('''Class _:j{Var $i,W6r_:Array [Array [Array [Array [Array [Boolean ,30],0XCE_9],7],0x20],30];}Class _:p4_{}Class X6{Val _78_,K7:String ;}''','''Class,_,:,j,{,Var,$i,,,W6r_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,30,],,,0XCE9,],,,7,],,,0x20,],,,30,],;,},Class,_,:,p4_,{,},Class,X6,{,Val,_78_,,,K7,:,String,;,},<EOF>''',101))

    def test_1703(self):
        self.assertTrue(TestLexer.test('''Class __:N{$G_(_,L9:String ;g:ZO__;__,W,_38_,_:Array [Array [String ,0125],6];__,__0_,J,_:Array [String ,0xC_7A_A]){} }Class J{Var d:Array [Int ,0B1100];}Class IIe:o{}''','''Class,__,:,N,{,$G_,(,_,,,L9,:,String,;,g,:,ZO__,;,__,,,W,,,_38_,,,_,:,Array,[,Array,[,String,,,0125,],,,6,],;,__,,,__0_,,,J,,,_,:,Array,[,String,,,0xC7AA,],),{,},},Class,J,{,Var,d,:,Array,[,Int,,,0B1100,],;,},Class,IIe,:,o,{,},<EOF>''',101))

    def test_1704(self):
        self.assertTrue(TestLexer.test('''Class o:KGw{_(){} }Class _{_(_t_1:Float ;P:Array [Array [String ,0X3F],17];_,E:Int ;bGj,_:Array [Boolean ,0x88];B_:Boolean ){} }''','''Class,o,:,KGw,{,_,(,),{,},},Class,_,{,_,(,_t_1,:,Float,;,P,:,Array,[,Array,[,String,,,0X3F,],,,17,],;,_,,,E,:,Int,;,bGj,,,_,:,Array,[,Boolean,,,0x88,],;,B_,:,Boolean,),{,},},<EOF>''',101))

    def test_1705(self):
        self.assertTrue(TestLexer.test('''Class _9B3__{Val $_:Int ;Val __,Q,v_:I;Val $__:String ;$__(Q:Array [String ,74];__,_6,_,K,_T:Int ){_::$U();} }Class h:f{}''','''Class,_9B3__,{,Val,$_,:,Int,;,Val,__,,,Q,,,v_,:,I,;,Val,$__,:,String,;,$__,(,Q,:,Array,[,String,,,74,],;,__,,,_6,,,_,,,K,,,_T,:,Int,),{,_,::,$U,(,),;,},},Class,h,:,f,{,},<EOF>''',101))

    def test_1706(self):
        self.assertTrue(TestLexer.test('''Class _:__{$1(_,t__,_:_2n;Z,X:String ;Q:Boolean ){Return ;} }Class ___L__0{Destructor (){}Constructor (){_::$20_()._()._7_Z();} }''','''Class,_,:,__,{,$1,(,_,,,t__,,,_,:,_2n,;,Z,,,X,:,String,;,Q,:,Boolean,),{,Return,;,},},Class,___L__0,{,Destructor,(,),{,},Constructor,(,),{,_,::,$20_,(,),.,_,(,),.,_7_Z,(,),;,},},<EOF>''',101))

    def test_1707(self):
        self.assertTrue(TestLexer.test('''Class _1s:m___{}Class __{}Class _7O6:_{}Class N{$t_5c_(Q,z:_8){}$2(_,g:Float ;_,e,_S,t_9Sk,_,_Z,e,uN7I,_:_){} }Class _:K_X{}''','''Class,_1s,:,m___,{,},Class,__,{,},Class,_7O6,:,_,{,},Class,N,{,$t_5c_,(,Q,,,z,:,_8,),{,},$2,(,_,,,g,:,Float,;,_,,,e,,,_S,,,t_9Sk,,,_,,,_Z,,,e,,,uN7I,,,_,:,_,),{,},},Class,_,:,K_X,{,},<EOF>''',101))

    def test_1708(self):
        self.assertTrue(TestLexer.test('''Class _7__:_1{}Class JyZ:b_{Val z:Array [Array [Array [String ,7],21],0B1];$_(j_,_,Weg9:Array [Array [Boolean ,21],0x3A]){} }''','''Class,_7__,:,_1,{,},Class,JyZ,:,b_,{,Val,z,:,Array,[,Array,[,Array,[,String,,,7,],,,21,],,,0B1,],;,$_,(,j_,,,_,,,Weg9,:,Array,[,Array,[,Boolean,,,21,],,,0x3A,],),{,},},<EOF>''',101))

    def test_1709(self):
        self.assertTrue(TestLexer.test('''Class m:u8A_p{Constructor (_8,_66:Array [Int ,0X5E_C4]){}Val _:Array [Array [Array [Array [String ,0b11_111],025],0x3A],074];_9(){} }Class _{Var $aL,X:_xq;}''','''Class,m,:,u8A_p,{,Constructor,(,_8,,,_66,:,Array,[,Int,,,0X5EC4,],),{,},Val,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b11111,],,,025,],,,0x3A,],,,074,],;,_9,(,),{,},},Class,_,{,Var,$aL,,,X,:,_xq,;,},<EOF>''',101))

    def test_1710(self):
        self.assertTrue(TestLexer.test('''Class O_{}Class _{Var $sQp3,o:Array [Array [Array [Array [Array [Boolean ,874],4_8_9],0X9],0B1000010],73];Val $_0,$6:_;Val _4:_;$_4Rh(){Return ;} }''','''Class,O_,{,},Class,_,{,Var,$sQp3,,,o,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,874,],,,489,],,,0X9,],,,0B1000010,],,,73,],;,Val,$_0,,,$6,:,_,;,Val,_4,:,_,;,$_4Rh,(,),{,Return,;,},},<EOF>''',101))

    def test_1711(self):
        self.assertTrue(TestLexer.test('''Class A{$_(k,k,q0_:Array [Float ,0B1001111];_,L50,a1:_;qZ__:Int ){} }Class _:_Po19{}Class A_ed:_78bv_{Val $_,$5:Float ;}Class P:wX{}Class g{_(__:_K;Q:Boolean ){} }''','''Class,A,{,$_,(,k,,,k,,,q0_,:,Array,[,Float,,,0B1001111,],;,_,,,L50,,,a1,:,_,;,qZ__,:,Int,),{,},},Class,_,:,_Po19,{,},Class,A_ed,:,_78bv_,{,Val,$_,,,$5,:,Float,;,},Class,P,:,wX,{,},Class,g,{,_,(,__,:,_K,;,Q,:,Boolean,),{,},},<EOF>''',101))

    def test_1712(self):
        self.assertTrue(TestLexer.test('''Class m:_{Destructor (){}Var $S_3:Boolean ;Val $2,$___,$9:Array [Array [Array [Array [Boolean ,28],0x39],0104],0x39];}''','''Class,m,:,_,{,Destructor,(,),{,},Var,$S_3,:,Boolean,;,Val,$2,,,$___,,,$9,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,28,],,,0x39,],,,0104,],,,0x39,],;,},<EOF>''',101))

    def test_1713(self):
        self.assertTrue(TestLexer.test('''Class x5:_{}Class _3:x{$TR62(_8,M,__:Array [Array [Int ,0B10],0x18]){Continue ;}__(_S1V,_Q_,aa9_:S_;c_:Array [String ,0x18]){} }''','''Class,x5,:,_,{,},Class,_3,:,x,{,$TR62,(,_8,,,M,,,__,:,Array,[,Array,[,Int,,,0B10,],,,0x18,],),{,Continue,;,},__,(,_S1V,,,_Q_,,,aa9_,:,S_,;,c_,:,Array,[,String,,,0x18,],),{,},},<EOF>''',101))

    def test_1714(self):
        self.assertTrue(TestLexer.test('''Class ___{Destructor (){Var H1,_u,_V,V:Array [Array [Boolean ,56],0B1_1];}Destructor (){}Val _:V0_;Q0(__T,_:_o;h0:Array [Float ,04]){}Val $s7_:String ;Val $_,$4:Boolean ;}''','''Class,___,{,Destructor,(,),{,Var,H1,,,_u,,,_V,,,V,:,Array,[,Array,[,Boolean,,,56,],,,0B11,],;,},Destructor,(,),{,},Val,_,:,V0_,;,Q0,(,__T,,,_,:,_o,;,h0,:,Array,[,Float,,,04,],),{,},Val,$s7_,:,String,;,Val,$_,,,$4,:,Boolean,;,},<EOF>''',101))

    def test_1715(self):
        self.assertTrue(TestLexer.test('''Class E{Constructor (){}Constructor (_m,_:EW80_v){}_(){Break ;}Constructor (_,_Ie:Array [Boolean ,3];_6,pC:Array [Float ,0X1_0_F1]){ {} }Var $_qb,$M:Array [Array [Array [Int ,06_2_0],0B1011111],046];}''','''Class,E,{,Constructor,(,),{,},Constructor,(,_m,,,_,:,EW80_v,),{,},_,(,),{,Break,;,},Constructor,(,_,,,_Ie,:,Array,[,Boolean,,,3,],;,_6,,,pC,:,Array,[,Float,,,0X10F1,],),{,{,},},Var,$_qb,,,$M,:,Array,[,Array,[,Array,[,Int,,,0620,],,,0B1011111,],,,046,],;,},<EOF>''',101))

    def test_1716(self):
        self.assertTrue(TestLexer.test('''Class o:_6I6{Destructor (){}Constructor (){} }Class _7_U_{Val _,$yn_28,$92l:Array [Array [Array [Array [Array [Int ,03],035],01_1],0xE],2_7];}''','''Class,o,:,_6I6,{,Destructor,(,),{,},Constructor,(,),{,},},Class,_7_U_,{,Val,_,,,$yn_28,,,$92l,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,03,],,,035,],,,011,],,,0xE,],,,27,],;,},<EOF>''',101))

    def test_1717(self):
        self.assertTrue(TestLexer.test('''Class q{$q(){} }Class _:C{}Class _{Var _1__14:Int ;Val f_A,eL,d,Z,$0z_,f,_,$_:Int ;}Class __:k{Constructor (X,Y9_,L_:Array [Int ,77];q:V){} }''','''Class,q,{,$q,(,),{,},},Class,_,:,C,{,},Class,_,{,Var,_1__14,:,Int,;,Val,f_A,,,eL,,,d,,,Z,,,$0z_,,,f,,,_,,,$_,:,Int,;,},Class,__,:,k,{,Constructor,(,X,,,Y9_,,,L_,:,Array,[,Int,,,77,],;,q,:,V,),{,},},<EOF>''',101))

    def test_1718(self):
        self.assertTrue(TestLexer.test('''Class J{}Class _8{Constructor (_:Array [Array [Array [Int ,0x8],0b11000],8]){}Destructor (){} }Class Ku9v{}Class ___:__9{_3o(){ {} }Var $_95:_;}Class _AW:si{}''','''Class,J,{,},Class,_8,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Int,,,0x8,],,,0b11000,],,,8,],),{,},Destructor,(,),{,},},Class,Ku9v,{,},Class,___,:,__9,{,_3o,(,),{,{,},},Var,$_95,:,_,;,},Class,_AW,:,si,{,},<EOF>''',101))

    def test_1719(self):
        self.assertTrue(TestLexer.test('''Class _{}Class t8___:k{}Class _:TD{Var $3w_2_sa3,__,$c:Array [Array [Array [Array [Float ,0x41],01],0b111],0B100001];}''','''Class,_,{,},Class,t8___,:,k,{,},Class,_,:,TD,{,Var,$3w_2_sa3,,,__,,,$c,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x41,],,,01,],,,0b111,],,,0B100001,],;,},<EOF>''',101))

    def test_1720(self):
        self.assertTrue(TestLexer.test('''Class _:__5e_G{}Class n:_{}Class __{}Class _4L:_f0__{}Class g{Var _,$6:String ;}Class K{Val $H:_;}Class p:_3{}Class L_3:XzG{}''','''Class,_,:,__5e_G,{,},Class,n,:,_,{,},Class,__,{,},Class,_4L,:,_f0__,{,},Class,g,{,Var,_,,,$6,:,String,;,},Class,K,{,Val,$H,:,_,;,},Class,p,:,_3,{,},Class,L_3,:,XzG,{,},<EOF>''',101))

    def test_1721(self):
        self.assertTrue(TestLexer.test('''Class _26{}Class G_:q{_I_(o,R60,_,I3:Array [Array [Array [String ,017],0B111011],07];_62,h_9_:Int ;_,V:d;_:Float ){} }''','''Class,_26,{,},Class,G_,:,q,{,_I_,(,o,,,R60,,,_,,,I3,:,Array,[,Array,[,Array,[,String,,,017,],,,0B111011,],,,07,],;,_62,,,h_9_,:,Int,;,_,,,V,:,d,;,_,:,Float,),{,},},<EOF>''',101))

    def test_1722(self):
        self.assertTrue(TestLexer.test('''Class __3_7{Var $_L,$y__,$K_b,W,$9,$A7,c,$N:Array [Array [Float ,0B1_0],0B1010001];Constructor (Y:D){}Var F_PO,$oBNG:String ;}Class p:e{}''','''Class,__3_7,{,Var,$_L,,,$y__,,,$K_b,,,W,,,$9,,,$A7,,,c,,,$N,:,Array,[,Array,[,Float,,,0B10,],,,0B1010001,],;,Constructor,(,Y,:,D,),{,},Var,F_PO,,,$oBNG,:,String,;,},Class,p,:,e,{,},<EOF>''',101))

    def test_1723(self):
        self.assertTrue(TestLexer.test('''Class C63{$_(){}Constructor (){} }Class FO{}Class bi2C:b{Var P:Array [Array [Boolean ,027],0XC];Destructor (){} }''','''Class,C63,{,$_,(,),{,},Constructor,(,),{,},},Class,FO,{,},Class,bi2C,:,b,{,Var,P,:,Array,[,Array,[,Boolean,,,027,],,,0XC,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_1724(self):
        self.assertTrue(TestLexer.test('''Class p:_{}Class _{}Class p_3{}Class s{Constructor (){}Constructor (Q:f;_:_;W,_7v:Array [Array [Array [Array [Boolean ,01],0X5],026_3_2],9]){}Val $8n:Array [Array [String ,0xC],0X3];Val $Ie:Int ;}''','''Class,p,:,_,{,},Class,_,{,},Class,p_3,{,},Class,s,{,Constructor,(,),{,},Constructor,(,Q,:,f,;,_,:,_,;,W,,,_7v,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,01,],,,0X5,],,,02632,],,,9,],),{,},Val,$8n,:,Array,[,Array,[,String,,,0xC,],,,0X3,],;,Val,$Ie,:,Int,;,},<EOF>''',101))

    def test_1725(self):
        self.assertTrue(TestLexer.test('''Class nJ:G7f5{}Class _{Constructor (_4,_:Array [Array [Array [Int ,06],81],4_04];_,_:_Aj;__1M:Array [Array [Boolean ,0XD],0B110011];N4,o:Int ){Continue ;} }''','''Class,nJ,:,G7f5,{,},Class,_,{,Constructor,(,_4,,,_,:,Array,[,Array,[,Array,[,Int,,,06,],,,81,],,,404,],;,_,,,_,:,_Aj,;,__1M,:,Array,[,Array,[,Boolean,,,0XD,],,,0B110011,],;,N4,,,o,:,Int,),{,Continue,;,},},<EOF>''',101))

    def test_1726(self):
        self.assertTrue(TestLexer.test('''Class _01{}Class k:l8{Destructor (){} }Class n1I___{Destructor (){Q::$z5.c5().__8()._()._();}Constructor (l:h){} }Class _4_D:f{}Class _{}''','''Class,_01,{,},Class,k,:,l8,{,Destructor,(,),{,},},Class,n1I___,{,Destructor,(,),{,Q,::,$z5,.,c5,(,),.,__8,(,),.,_,(,),.,_,(,),;,},Constructor,(,l,:,h,),{,},},Class,_4_D,:,f,{,},Class,_,{,},<EOF>''',101))

    def test_1727(self):
        self.assertTrue(TestLexer.test('''Class k_{Constructor (K8h__,Y9___,_X,_,I_,o__1:Array [Array [Array [Array [String ,287_95],07_45],03_51],056]){ {Break ;} }Var $_2S9,_8_:Array [Float ,0X1];}Class Uyh8:d57{}''','''Class,k_,{,Constructor,(,K8h__,,,Y9___,,,_X,,,_,,,I_,,,o__1,:,Array,[,Array,[,Array,[,Array,[,String,,,28795,],,,0745,],,,0351,],,,056,],),{,{,Break,;,},},Var,$_2S9,,,_8_,:,Array,[,Float,,,0X1,],;,},Class,Uyh8,:,d57,{,},<EOF>''',101))

    def test_1728(self):
        self.assertTrue(TestLexer.test('''Class _{Val K,Gcn,E:Array [Array [Array [Array [Array [Array [Float ,15],6],047],047],0B1],0x5];Constructor (){}Var __:Int ;}''','''Class,_,{,Val,K,,,Gcn,,,E,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,15,],,,6,],,,047,],,,047,],,,0B1,],,,0x5,],;,Constructor,(,),{,},Var,__,:,Int,;,},<EOF>''',101))

    def test_1729(self):
        self.assertTrue(TestLexer.test('''Class I{Var $_,$5,$143:Int ;Constructor (_,___,k,_,_,e:Array [Boolean ,0402];_:Float ){} }Class W{}Class __:_{Constructor (_I26,_,__:_;_:String ){}Constructor (){ {} }}''','''Class,I,{,Var,$_,,,$5,,,$143,:,Int,;,Constructor,(,_,,,___,,,k,,,_,,,_,,,e,:,Array,[,Boolean,,,0402,],;,_,:,Float,),{,},},Class,W,{,},Class,__,:,_,{,Constructor,(,_I26,,,_,,,__,:,_,;,_,:,String,),{,},Constructor,(,),{,{,},},},<EOF>''',101))

    def test_1730(self):
        self.assertTrue(TestLexer.test('''Class _e:_53A_{}Class Jy:_{G(y,C_:Array [Float ,0xC]){} }Class _:_{}Class _m:B{Val $__q:_;Var $a:Int ;A(){Break ;} }''','''Class,_e,:,_53A_,{,},Class,Jy,:,_,{,G,(,y,,,C_,:,Array,[,Float,,,0xC,],),{,},},Class,_,:,_,{,},Class,_m,:,B,{,Val,$__q,:,_,;,Var,$a,:,Int,;,A,(,),{,Break,;,},},<EOF>''',101))

    def test_1731(self):
        self.assertTrue(TestLexer.test('''Class A{}Class z8E{}Class Rg:U{V_(I,_,_:_;N,___7,K6:Boolean ;_:Array [Array [String ,0B100001],022]){Continue ;Continue ;}Constructor (_5___,_,c,h:Int ;m,_e__pa5n1H:_){} }Class X:d__{}Class _:W{}Class _:F{}''','''Class,A,{,},Class,z8E,{,},Class,Rg,:,U,{,V_,(,I,,,_,,,_,:,_,;,N,,,___7,,,K6,:,Boolean,;,_,:,Array,[,Array,[,String,,,0B100001,],,,022,],),{,Continue,;,Continue,;,},Constructor,(,_5___,,,_,,,c,,,h,:,Int,;,m,,,_e__pa5n1H,:,_,),{,},},Class,X,:,d__,{,},Class,_,:,W,{,},Class,_,:,F,{,},<EOF>''',101))

    def test_1732(self):
        self.assertTrue(TestLexer.test('''Class __:a{$_(_2_,_26v,JpX__1__1:C;xx:Int ;Re6iw9_A_mp_,_y,_:c;_Iy:Array [Array [Int ,0xF_3],02_0];j5:Xf;_:String ){}Constructor (){} }''','''Class,__,:,a,{,$_,(,_2_,,,_26v,,,JpX__1__1,:,C,;,xx,:,Int,;,Re6iw9_A_mp_,,,_y,,,_,:,c,;,_Iy,:,Array,[,Array,[,Int,,,0xF3,],,,020,],;,j5,:,Xf,;,_,:,String,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_1733(self):
        self.assertTrue(TestLexer.test('''Class kQ{Val S,_,$3Q,B_,$9_,t23:Boolean ;}Class E5Zk4____:B{Val $6j__8:_Y;}Class _2445:_{Var $2:Array [Array [Int ,0b111010],0b111010];}''','''Class,kQ,{,Val,S,,,_,,,$3Q,,,B_,,,$9_,,,t23,:,Boolean,;,},Class,E5Zk4____,:,B,{,Val,$6j__8,:,_Y,;,},Class,_2445,:,_,{,Var,$2,:,Array,[,Array,[,Int,,,0b111010,],,,0b111010,],;,},<EOF>''',101))

    def test_1734(self):
        self.assertTrue(TestLexer.test('''Class _6:_1{Var $059_4,$d,$v_2,b8_,$0s9EJU_5:String ;Constructor (){}Val S,$_,$y05_,Y3,$_,$N,$K_7:Array [Boolean ,05_3];Var $4:Array [Array [Array [Float ,0x40],0b1],0b1_1];_(_,hr9_6_:Array [Array [Int ,48],0XE];_:Array [Array [Int ,0115],0b1_0]){} }Class z{Constructor (i4:Boolean ){} }''','''Class,_6,:,_1,{,Var,$059_4,,,$d,,,$v_2,,,b8_,,,$0s9EJU_5,:,String,;,Constructor,(,),{,},Val,S,,,$_,,,$y05_,,,Y3,,,$_,,,$N,,,$K_7,:,Array,[,Boolean,,,053,],;,Var,$4,:,Array,[,Array,[,Array,[,Float,,,0x40,],,,0b1,],,,0b11,],;,_,(,_,,,hr9_6_,:,Array,[,Array,[,Int,,,48,],,,0XE,],;,_,:,Array,[,Array,[,Int,,,0115,],,,0b10,],),{,},},Class,z,{,Constructor,(,i4,:,Boolean,),{,},},<EOF>''',101))

    def test_1735(self):
        self.assertTrue(TestLexer.test('''Class _{}Class __{Val _:Array [Array [Array [Int ,02_1],0b1],011];}Class _Mrg6Ew0XK{}Class E_5{$M_493(_:Float ){}$14__9(c,__:_o_;X:Array [String ,47]){}Val Q_3y:Array [Array [Int ,0b1],0130];}Class r{}''','''Class,_,{,},Class,__,{,Val,_,:,Array,[,Array,[,Array,[,Int,,,021,],,,0b1,],,,011,],;,},Class,_Mrg6Ew0XK,{,},Class,E_5,{,$M_493,(,_,:,Float,),{,},$14__9,(,c,,,__,:,_o_,;,X,:,Array,[,String,,,47,],),{,},Val,Q_3y,:,Array,[,Array,[,Int,,,0b1,],,,0130,],;,},Class,r,{,},<EOF>''',101))

    def test_1736(self):
        self.assertTrue(TestLexer.test('''Class __{Val $W_,$_9:Array [Array [Array [Array [Int ,0XA],32_7],040],02];V__(F:Float ;c,_,O_2_4b,_4,_N_,N:Array [Float ,02]){ {Break ;} }}Class _{}''','''Class,__,{,Val,$W_,,,$_9,:,Array,[,Array,[,Array,[,Array,[,Int,,,0XA,],,,327,],,,040,],,,02,],;,V__,(,F,:,Float,;,c,,,_,,,O_2_4b,,,_4,,,_N_,,,N,:,Array,[,Float,,,02,],),{,{,Break,;,},},},Class,_,{,},<EOF>''',101))

    def test_1737(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class Y:k_{$K(i4c:Float ;KqB____,_3v:_r;_,_:Array [Float ,03202];_,E,__,y,F:Array [String ,0x20];_,_N9A_,j:Array [Int ,0131];M:_){Val x:Array [String ,24];} }''','''Class,_,:,_,{,},Class,Y,:,k_,{,$K,(,i4c,:,Float,;,KqB____,,,_3v,:,_r,;,_,,,_,:,Array,[,Float,,,03202,],;,_,,,E,,,__,,,y,,,F,:,Array,[,String,,,0x20,],;,_,,,_N9A_,,,j,:,Array,[,Int,,,0131,],;,M,:,_,),{,Val,x,:,Array,[,String,,,24,],;,},},<EOF>''',101))

    def test_1738(self):
        self.assertTrue(TestLexer.test('''Class a:e_{}Class _{s1(_,n:Array [Boolean ,0x44];_s_263,a_:Array [Array [Int ,0B10111],100];l505y:_QL;_:Boolean ){Continue ;} }''','''Class,a,:,e_,{,},Class,_,{,s1,(,_,,,n,:,Array,[,Boolean,,,0x44,],;,_s_263,,,a_,:,Array,[,Array,[,Int,,,0B10111,],,,100,],;,l505y,:,_QL,;,_,:,Boolean,),{,Continue,;,},},<EOF>''',101))

    def test_1739(self):
        self.assertTrue(TestLexer.test('''Class _:_z{Val ___,__x_4:k;Destructor (){}Val _:Array [Array [Array [Array [Array [Boolean ,0x31],0X2A],0B110],03_51],0X2];}''','''Class,_,:,_z,{,Val,___,,,__x_4,:,k,;,Destructor,(,),{,},Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x31,],,,0X2A,],,,0B110,],,,0351,],,,0X2,],;,},<EOF>''',101))

    def test_1740(self):
        self.assertTrue(TestLexer.test('''Class eO_:__Lh{$QhIf 7(V8:Float ){}Val $Be,l_,__4f5:Array [Boolean ,55];Val $_,$_c:Array [Array [Int ,0x2_9],0b1];}''','''Class,eO_,:,__Lh,{,$QhIf,7,(,V8,:,Float,),{,},Val,$Be,,,l_,,,__4f5,:,Array,[,Boolean,,,55,],;,Val,$_,,,$_c,:,Array,[,Array,[,Int,,,0x29,],,,0b1,],;,},<EOF>''',101))

    def test_1741(self):
        self.assertTrue(TestLexer.test('''Class _2R:_{Constructor (C:Array [Float ,0X2B];_1,N,_1,D_:Array [Array [Array [Array [Float ,0b1100001],0x5],0X2B],05]){} }''','''Class,_2R,:,_,{,Constructor,(,C,:,Array,[,Float,,,0X2B,],;,_1,,,N,,,_1,,,D_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1100001,],,,0x5,],,,0X2B,],,,05,],),{,},},<EOF>''',101))

    def test_1742(self):
        self.assertTrue(TestLexer.test('''Class vb{Constructor (_,Du311,L3_0:Array [Array [Array [Array [Int ,0XF_AE],0b100001],0x6],0X4];z,_,T,_5Q,gF5,_:Int ;_349YQ_L3:_){} }Class F98{Constructor (_,n:Float ;A:Array [Int ,6];R__,x_z:Float ;D,b:Boolean ){ {}Continue ;_::$g_m_u();}Constructor (I0_w,_,M_,W,uB,Ql,__T__,X024__:Int ;_1,d_:Float ){}Val $4:Y;}''','''Class,vb,{,Constructor,(,_,,,Du311,,,L3_0,:,Array,[,Array,[,Array,[,Array,[,Int,,,0XFAE,],,,0b100001,],,,0x6,],,,0X4,],;,z,,,_,,,T,,,_5Q,,,gF5,,,_,:,Int,;,_349YQ_L3,:,_,),{,},},Class,F98,{,Constructor,(,_,,,n,:,Float,;,A,:,Array,[,Int,,,6,],;,R__,,,x_z,:,Float,;,D,,,b,:,Boolean,),{,{,},Continue,;,_,::,$g_m_u,(,),;,},Constructor,(,I0_w,,,_,,,M_,,,W,,,uB,,,Ql,,,__T__,,,X024__,:,Int,;,_1,,,d_,:,Float,),{,},Val,$4,:,Y,;,},<EOF>''',101))

    def test_1743(self):
        self.assertTrue(TestLexer.test('''Class F:_I{Val tQ68c__:String ;}Class _X3__j{}Class D8{$__(h,E,c:_;_32:n){}Val _,$7:Float ;}Class a_h1s27:r7__{}Class _{}Class _4X_{}''','''Class,F,:,_I,{,Val,tQ68c__,:,String,;,},Class,_X3__j,{,},Class,D8,{,$__,(,h,,,E,,,c,:,_,;,_32,:,n,),{,},Val,_,,,$7,:,Float,;,},Class,a_h1s27,:,r7__,{,},Class,_,{,},Class,_4X_,{,},<EOF>''',101))

    def test_1744(self):
        self.assertTrue(TestLexer.test('''Class w_cc{}Class _:UA8_{Constructor (){}h(i_5:Array [Array [Int ,49],0103]){Break ;}$98(){_B8::$Pz();} }Class _O:r{}Class S_:__{}Class Ac:Z{$5(_36:String ;__3:Boolean ){} }Class _j__{}Class _:Q{}Class Q:Mj7{}Class Z{$__L(SG:__81){Return ;}Val $7016,v_4b:p;}Class V9{}Class _{Var $N:_;}''','''Class,w_cc,{,},Class,_,:,UA8_,{,Constructor,(,),{,},h,(,i_5,:,Array,[,Array,[,Int,,,49,],,,0103,],),{,Break,;,},$98,(,),{,_B8,::,$Pz,(,),;,},},Class,_O,:,r,{,},Class,S_,:,__,{,},Class,Ac,:,Z,{,$5,(,_36,:,String,;,__3,:,Boolean,),{,},},Class,_j__,{,},Class,_,:,Q,{,},Class,Q,:,Mj7,{,},Class,Z,{,$__L,(,SG,:,__81,),{,Return,;,},Val,$7016,,,v_4b,:,p,;,},Class,V9,{,},Class,_,{,Var,$N,:,_,;,},<EOF>''',101))

    def test_1745(self):
        self.assertTrue(TestLexer.test('''Class _{_(_,_:Array [String ,72];r_,c_:Array [Float ,0B1]){}Var $C,s_:Array [Array [Boolean ,4_91],042];Constructor (b,Z:Int ;d1:String ){}Destructor (){} }''','''Class,_,{,_,(,_,,,_,:,Array,[,String,,,72,],;,r_,,,c_,:,Array,[,Float,,,0B1,],),{,},Var,$C,,,s_,:,Array,[,Array,[,Boolean,,,491,],,,042,],;,Constructor,(,b,,,Z,:,Int,;,d1,:,String,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_1746(self):
        self.assertTrue(TestLexer.test('''Class K1_:_1_6{Constructor (_6,w:m3){}Var $_,$19:Array [Array [Array [Array [Array [Float ,7],0X38],0b11],0120],0B1000110];}''','''Class,K1_,:,_1_6,{,Constructor,(,_6,,,w,:,m3,),{,},Var,$_,,,$19,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,7,],,,0X38,],,,0b11,],,,0120,],,,0B1000110,],;,},<EOF>''',101))

    def test_1747(self):
        self.assertTrue(TestLexer.test('''Class c:_{}Class _:v{Val __:Array [Array [Array [Array [Array [String ,0x6],0b10],0X9],74],06_3_2];}Class _v_W:___2{}Class G{}''','''Class,c,:,_,{,},Class,_,:,v,{,Val,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x6,],,,0b10,],,,0X9,],,,74,],,,0632,],;,},Class,_v_W,:,___2,{,},Class,G,{,},<EOF>''',101))

    def test_1748(self):
        self.assertTrue(TestLexer.test('''Class V{}Class I:_{Val Lx,y,U,d,$_BA:Boolean ;Constructor (f:T;VX1:Array [Float ,9];_,_,dZ_,_4_:_27z4_7Oi;x,s,RFU8__:Array [Array [String ,36],0B10100];_,x_:String ){} }''','''Class,V,{,},Class,I,:,_,{,Val,Lx,,,y,,,U,,,d,,,$_BA,:,Boolean,;,Constructor,(,f,:,T,;,VX1,:,Array,[,Float,,,9,],;,_,,,_,,,dZ_,,,_4_,:,_27z4_7Oi,;,x,,,s,,,RFU8__,:,Array,[,Array,[,String,,,36,],,,0B10100,],;,_,,,x_,:,String,),{,},},<EOF>''',101))

    def test_1749(self):
        self.assertTrue(TestLexer.test('''Class M:_{Constructor (_,__x:Int ;_z8:String ){} }Class _:C_{}Class _{Var _5:_7;Var L:Array [Array [Array [String ,0x19],0x19],2];Constructor (){} }''','''Class,M,:,_,{,Constructor,(,_,,,__x,:,Int,;,_z8,:,String,),{,},},Class,_,:,C_,{,},Class,_,{,Var,_5,:,_7,;,Var,L,:,Array,[,Array,[,Array,[,String,,,0x19,],,,0x19,],,,2,],;,Constructor,(,),{,},},<EOF>''',101))

    def test_1750(self):
        self.assertTrue(TestLexer.test('''Class HJ_7c{}Class O{Destructor (){}Val $Fy__:r;Var _:c;Val $k,$_,$1:Array [Int ,0xCD_7];}Class _b{}Class mlvy{}''','''Class,HJ_7c,{,},Class,O,{,Destructor,(,),{,},Val,$Fy__,:,r,;,Var,_,:,c,;,Val,$k,,,$_,,,$1,:,Array,[,Int,,,0xCD7,],;,},Class,_b,{,},Class,mlvy,{,},<EOF>''',101))

    def test_1751(self):
        self.assertTrue(TestLexer.test('''Class _4N56{Constructor (){Break ;}Val _,$x:Array [Array [Array [Array [Array [Boolean ,2],22_5_9073_3_9],9],042],0x3E];}Class _0J_{}Class _{}''','''Class,_4N56,{,Constructor,(,),{,Break,;,},Val,_,,,$x,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,2,],,,225907339,],,,9,],,,042,],,,0x3E,],;,},Class,_0J_,{,},Class,_,{,},<EOF>''',101))

    def test_1752(self):
        self.assertTrue(TestLexer.test('''Class _U:_3_{Var $c:Boolean ;Val $f,__,_:Boolean ;}Class j:n3{}Class u__w:_5K{Var J:Array [Array [Float ,071],0B1];}''','''Class,_U,:,_3_,{,Var,$c,:,Boolean,;,Val,$f,,,__,,,_,:,Boolean,;,},Class,j,:,n3,{,},Class,u__w,:,_5K,{,Var,J,:,Array,[,Array,[,Float,,,071,],,,0B1,],;,},<EOF>''',101))

    def test_1753(self):
        self.assertTrue(TestLexer.test('''Class _3:q{$_(_7H:Array [Float ,55];_:Int ;_,_1d4,a2N8v:Int ;N,_,l:Array [Array [Float ,071],0b10011]){} }Class _{}Class G:_93{Constructor (_s7:String ){} }''','''Class,_3,:,q,{,$_,(,_7H,:,Array,[,Float,,,55,],;,_,:,Int,;,_,,,_1d4,,,a2N8v,:,Int,;,N,,,_,,,l,:,Array,[,Array,[,Float,,,071,],,,0b10011,],),{,},},Class,_,{,},Class,G,:,_93,{,Constructor,(,_s7,:,String,),{,},},<EOF>''',101))

    def test_1754(self):
        self.assertTrue(TestLexer.test('''Class _3R6t_:_{}Class __{}Class _9L{Destructor (){} }Class _85{Var $j__:Array [Array [Array [Array [Boolean ,0XB],03],0304],0X3];}Class X9{Constructor (p_4_sg:_;L_F:String ){} }''','''Class,_3R6t_,:,_,{,},Class,__,{,},Class,_9L,{,Destructor,(,),{,},},Class,_85,{,Var,$j__,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0XB,],,,03,],,,0304,],,,0X3,],;,},Class,X9,{,Constructor,(,p_4_sg,:,_,;,L_F,:,String,),{,},},<EOF>''',101))

    def test_1755(self):
        self.assertTrue(TestLexer.test('''Class kL:gr{}Class _:V{Constructor (){}$p(){} }Class _{Val $V1_,$_5:Boolean ;Var $C:String ;}Class n_rL6{}Class O60:_{}''','''Class,kL,:,gr,{,},Class,_,:,V,{,Constructor,(,),{,},$p,(,),{,},},Class,_,{,Val,$V1_,,,$_5,:,Boolean,;,Var,$C,:,String,;,},Class,n_rL6,{,},Class,O60,:,_,{,},<EOF>''',101))

    def test_1756(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (__w,_304:Boolean ;_q__,_7__,l:Array [Array [Float ,4],59];_,_p_:Array [Int ,6];m,_gw5,B_tId:Array [Array [Array [String ,59],0b1011000],0X64];UFh:Array [Boolean ,550]){} }Class _{}''','''Class,_,{,Constructor,(,__w,,,_304,:,Boolean,;,_q__,,,_7__,,,l,:,Array,[,Array,[,Float,,,4,],,,59,],;,_,,,_p_,:,Array,[,Int,,,6,],;,m,,,_gw5,,,B_tId,:,Array,[,Array,[,Array,[,String,,,59,],,,0b1011000,],,,0X64,],;,UFh,:,Array,[,Boolean,,,550,],),{,},},Class,_,{,},<EOF>''',101))

    def test_1757(self):
        self.assertTrue(TestLexer.test('''Class _5:O7{Constructor (_,R9,_F:Array [Boolean ,79]){Continue ;} }Class Z:_4{}Class J0{}Class u_h{Var __:Array [Array [Boolean ,0x51],0b110100];}Class p{}''','''Class,_5,:,O7,{,Constructor,(,_,,,R9,,,_F,:,Array,[,Boolean,,,79,],),{,Continue,;,},},Class,Z,:,_4,{,},Class,J0,{,},Class,u_h,{,Var,__,:,Array,[,Array,[,Boolean,,,0x51,],,,0b110100,],;,},Class,p,{,},<EOF>''',101))

    def test_1758(self):
        self.assertTrue(TestLexer.test('''Class p:_3{}Class u:_{}Class W9:a____{}Class _{$4__(__,l,_,_:Boolean ;_5F,W_k_0_t,Z___4,U,___:Array [Boolean ,030];_:Int ){} }Class U{}Class _y622O:_{Var J,$d,__,$9_:Array [Float ,0X1C];}''','''Class,p,:,_3,{,},Class,u,:,_,{,},Class,W9,:,a____,{,},Class,_,{,$4__,(,__,,,l,,,_,,,_,:,Boolean,;,_5F,,,W_k_0_t,,,Z___4,,,U,,,___,:,Array,[,Boolean,,,030,],;,_,:,Int,),{,},},Class,U,{,},Class,_y622O,:,_,{,Var,J,,,$d,,,__,,,$9_,:,Array,[,Float,,,0X1C,],;,},<EOF>''',101))

    def test_1759(self):
        self.assertTrue(TestLexer.test('''Class ___:Z{}Class _{Constructor (_n:Array [String ,0X3]){}Constructor (_,u,_0,j:T;_,sco_,w,n,r,F_uO_:Int ;hf5_2:Boolean ;X:Boolean ){} }''','''Class,___,:,Z,{,},Class,_,{,Constructor,(,_n,:,Array,[,String,,,0X3,],),{,},Constructor,(,_,,,u,,,_0,,,j,:,T,;,_,,,sco_,,,w,,,n,,,r,,,F_uO_,:,Int,;,hf5_2,:,Boolean,;,X,:,Boolean,),{,},},<EOF>''',101))

    def test_1760(self):
        self.assertTrue(TestLexer.test('''Class sk_l6:_f{Var $WG:Z;}Class b0{Var $k,$__8_p_39a,_662:__;Constructor (){}Var $_Uf_,$u,H9__,_,t,$8:Int ;Destructor (){ {{} }} }''','''Class,sk_l6,:,_f,{,Var,$WG,:,Z,;,},Class,b0,{,Var,$k,,,$__8_p_39a,,,_662,:,__,;,Constructor,(,),{,},Var,$_Uf_,,,$u,,,H9__,,,_,,,t,,,$8,:,Int,;,Destructor,(,),{,{,{,},},},},<EOF>''',101))

    def test_1761(self):
        self.assertTrue(TestLexer.test('''Class _4oQ2:u6{$G0(){Continue ;} }Class GG{Var $_,$8,$_,L__:Array [Array [Array [Array [Int ,0x57],9_94],0B111011],0105];}Class _:_3___{Constructor (I:Array [Boolean ,0b1011111]){} }Class _{}Class _2_{}Class a:d{Destructor (){} }Class N{}Class E4:v1o{}''','''Class,_4oQ2,:,u6,{,$G0,(,),{,Continue,;,},},Class,GG,{,Var,$_,,,$8,,,$_,,,L__,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x57,],,,994,],,,0B111011,],,,0105,],;,},Class,_,:,_3___,{,Constructor,(,I,:,Array,[,Boolean,,,0b1011111,],),{,},},Class,_,{,},Class,_2_,{,},Class,a,:,d,{,Destructor,(,),{,},},Class,N,{,},Class,E4,:,v1o,{,},<EOF>''',101))

    def test_1762(self):
        self.assertTrue(TestLexer.test('''Class _1__:_7L_n{Var _,$FR,$Z,H7e243,$V__,_:String ;Var $G,$w:Boolean ;}Class _4__{Constructor (){_1__Mt48Qf::$3();Break ;Break ;Var __6V_:V;}G(){Break ;}Var _:__;}''','''Class,_1__,:,_7L_n,{,Var,_,,,$FR,,,$Z,,,H7e243,,,$V__,,,_,:,String,;,Var,$G,,,$w,:,Boolean,;,},Class,_4__,{,Constructor,(,),{,_1__Mt48Qf,::,$3,(,),;,Break,;,Break,;,Var,__6V_,:,V,;,},G,(,),{,Break,;,},Var,_,:,__,;,},<EOF>''',101))

    def test_1763(self):
        self.assertTrue(TestLexer.test('''Class R:_M_{}Class y{}Class _n{Val $8:Array [Array [String ,7],0b1];}Class j7_{}Class __:_{}Class _9_:_{Destructor (){} }''','''Class,R,:,_M_,{,},Class,y,{,},Class,_n,{,Val,$8,:,Array,[,Array,[,String,,,7,],,,0b1,],;,},Class,j7_,{,},Class,__,:,_,{,},Class,_9_,:,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1764(self):
        self.assertTrue(TestLexer.test('''Class _s0{}Class ___2_:f9{Var t2_,$9,_e,_V,C,v:String ;Constructor (__,hpw,_02__,_,A:String ){}Constructor (_0:Array [Array [Array [Array [Boolean ,0B110110],062],01],97]){Continue ;} }''','''Class,_s0,{,},Class,___2_,:,f9,{,Var,t2_,,,$9,,,_e,,,_V,,,C,,,v,:,String,;,Constructor,(,__,,,hpw,,,_02__,,,_,,,A,:,String,),{,},Constructor,(,_0,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B110110,],,,062,],,,01,],,,97,],),{,Continue,;,},},<EOF>''',101))

    def test_1765(self):
        self.assertTrue(TestLexer.test('''Class _{Val $_S_:Array [Array [Array [Array [Array [String ,01],01772],0b10],05_5],0132];Var $_:Array [Int ,0270_0_6_1];$jNU(ry:Array [Int ,69];m,y9,___,_:Array [Array [Float ,69],0B1000000];QX:Array [Float ,8_2]){} }Class p{}Class _:B{}''','''Class,_,{,Val,$_S_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,01,],,,01772,],,,0b10,],,,055,],,,0132,],;,Var,$_,:,Array,[,Int,,,0270061,],;,$jNU,(,ry,:,Array,[,Int,,,69,],;,m,,,y9,,,___,,,_,:,Array,[,Array,[,Float,,,69,],,,0B1000000,],;,QX,:,Array,[,Float,,,82,],),{,},},Class,p,{,},Class,_,:,B,{,},<EOF>''',101))

    def test_1766(self):
        self.assertTrue(TestLexer.test('''Class v5_{Var $f78,_6wb_:Array [Array [Array [String ,0B101001],0B101001],0X5F];Var f,$_:Array [String ,06];Var $_2_K,$5x4,o,fxn:Boolean ;Constructor (){} }Class _M:RR{}''','''Class,v5_,{,Var,$f78,,,_6wb_,:,Array,[,Array,[,Array,[,String,,,0B101001,],,,0B101001,],,,0X5F,],;,Var,f,,,$_,:,Array,[,String,,,06,],;,Var,$_2_K,,,$5x4,,,o,,,fxn,:,Boolean,;,Constructor,(,),{,},},Class,_M,:,RR,{,},<EOF>''',101))

    def test_1767(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_,mt:Array [Array [Boolean ,0x8],29];_:Float ;l_,_,__:Array [Array [Boolean ,43],6];_,_:Array [Array [Array [Array [Array [Float ,0X9],0X38],43],0115],0b1]){} }''','''Class,_,{,Constructor,(,_,,,mt,:,Array,[,Array,[,Boolean,,,0x8,],,,29,],;,_,:,Float,;,l_,,,_,,,__,:,Array,[,Array,[,Boolean,,,43,],,,6,],;,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X9,],,,0X38,],,,43,],,,0115,],,,0b1,],),{,},},<EOF>''',101))

    def test_1768(self):
        self.assertTrue(TestLexer.test('''Class _9q2___:Y_7{Constructor (S:Boolean ;X_h:Float ;l:Int ;F,_,D,_4P__39,_:Float ;_:Int ){Continue ;}Var $_,T_,$W,U:Array [Array [String ,0x5_1_5F_9],77];}''','''Class,_9q2___,:,Y_7,{,Constructor,(,S,:,Boolean,;,X_h,:,Float,;,l,:,Int,;,F,,,_,,,D,,,_4P__39,,,_,:,Float,;,_,:,Int,),{,Continue,;,},Var,$_,,,T_,,,$W,,,U,:,Array,[,Array,[,String,,,0x515F9,],,,77,],;,},<EOF>''',101))

    def test_1769(self):
        self.assertTrue(TestLexer.test('''Class __{Val _e5,$s:Float ;Var $_:k;Destructor (){If (!!Z::$7u().__){}Else {}Break ;} }Class __6:t_5{Destructor (){} }''','''Class,__,{,Val,_e5,,,$s,:,Float,;,Var,$_,:,k,;,Destructor,(,),{,If,(,!,!,Z,::,$7u,(,),.,__,),{,},Else,{,},Break,;,},},Class,__6,:,t_5,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1770(self):
        self.assertTrue(TestLexer.test('''Class _8_3w:_X{}Class K:_{}Class w:__{}Class _:_{}Class eDj:__{}Class maa:n_nxC{Val _0H,__l:Array [Array [String ,0114],0b1];}''','''Class,_8_3w,:,_X,{,},Class,K,:,_,{,},Class,w,:,__,{,},Class,_,:,_,{,},Class,eDj,:,__,{,},Class,maa,:,n_nxC,{,Val,_0H,,,__l,:,Array,[,Array,[,String,,,0114,],,,0b1,],;,},<EOF>''',101))

    def test_1771(self):
        self.assertTrue(TestLexer.test('''Class _W_b_2:z{Val $_:Q;Constructor (_4Xh:Int ;H2,_994_9:Array [Boolean ,037]){} }Class _1{Val $8:Array [String ,0xFE_6];Val k,$320:Array [Array [Array [Array [Boolean ,0X6],52],1],0x60];}''','''Class,_W_b_2,:,z,{,Val,$_,:,Q,;,Constructor,(,_4Xh,:,Int,;,H2,,,_994_9,:,Array,[,Boolean,,,037,],),{,},},Class,_1,{,Val,$8,:,Array,[,String,,,0xFE6,],;,Val,k,,,$320,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X6,],,,52,],,,1,],,,0x60,],;,},<EOF>''',101))

    def test_1772(self):
        self.assertTrue(TestLexer.test('''Class _5{}Class A:_9{Val _uy_,$S3__2_W,L,_:f7D;}Class B_{Val b,f_:T_;}Class N_a_{Var Y,$UO_,$VP_rs868,$_,$E:B;}''','''Class,_5,{,},Class,A,:,_9,{,Val,_uy_,,,$S3__2_W,,,L,,,_,:,f7D,;,},Class,B_,{,Val,b,,,f_,:,T_,;,},Class,N_a_,{,Var,Y,,,$UO_,,,$VP_rs868,,,$_,,,$E,:,B,;,},<EOF>''',101))

    def test_1773(self):
        self.assertTrue(TestLexer.test('''Class U{o_P_6(O,_,_k,_4,_:Array [Array [Boolean ,0B1],0XF]){Val t_,G,C,G_j_4_72_OO_:Int ;} }Class __:_{Val a,$_b4dG_r_mHl:String ;}''','''Class,U,{,o_P_6,(,O,,,_,,,_k,,,_4,,,_,:,Array,[,Array,[,Boolean,,,0B1,],,,0XF,],),{,Val,t_,,,G,,,C,,,G_j_4_72_OO_,:,Int,;,},},Class,__,:,_,{,Val,a,,,$_b4dG_r_mHl,:,String,;,},<EOF>''',101))

    def test_1774(self):
        self.assertTrue(TestLexer.test('''Class _L2{Var _:Boolean ;$__(_ABL6,W_:Int ;q:Array [Int ,0B1011000];__M:String ;__:Boolean ;NQ5_v,_:Int ){} }Class c:i{Destructor (){g::$_();Break ;} }''','''Class,_L2,{,Var,_,:,Boolean,;,$__,(,_ABL6,,,W_,:,Int,;,q,:,Array,[,Int,,,0B1011000,],;,__M,:,String,;,__,:,Boolean,;,NQ5_v,,,_,:,Int,),{,},},Class,c,:,i,{,Destructor,(,),{,g,::,$_,(,),;,Break,;,},},<EOF>''',101))

    def test_1775(self):
        self.assertTrue(TestLexer.test('''Class n:O{Constructor (_H:String ;_,_,ec:Array [Int ,0b110001];R,_f,_4:e;_,d,_:Array [Array [Array [Boolean ,0b110001],0x38_E],0x6B]){ {} }Val _,_2:Array [Int ,0x8];}''','''Class,n,:,O,{,Constructor,(,_H,:,String,;,_,,,_,,,ec,:,Array,[,Int,,,0b110001,],;,R,,,_f,,,_4,:,e,;,_,,,d,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0b110001,],,,0x38E,],,,0x6B,],),{,{,},},Val,_,,,_2,:,Array,[,Int,,,0x8,],;,},<EOF>''',101))

    def test_1776(self):
        self.assertTrue(TestLexer.test('''Class J:m{_I(c_:Array [Array [Int ,0x3F],040];_,_:Array [Array [String ,0b100],0b10101];_:Int ){} }Class u:A{Constructor (){} }''','''Class,J,:,m,{,_I,(,c_,:,Array,[,Array,[,Int,,,0x3F,],,,040,],;,_,,,_,:,Array,[,Array,[,String,,,0b100,],,,0b10101,],;,_,:,Int,),{,},},Class,u,:,A,{,Constructor,(,),{,},},<EOF>''',101))

    def test_1777(self):
        self.assertTrue(TestLexer.test('''Class _:x3{}Class C4_{Var A:_;Val $5,$8,p_,f_,$_,_:Int ;Constructor (_:Boolean ;_1_,_O:Float ;i:Float ){} }Class _{Val __x:Array [Float ,02_7_7_7];}''','''Class,_,:,x3,{,},Class,C4_,{,Var,A,:,_,;,Val,$5,,,$8,,,p_,,,f_,,,$_,,,_,:,Int,;,Constructor,(,_,:,Boolean,;,_1_,,,_O,:,Float,;,i,:,Float,),{,},},Class,_,{,Val,__x,:,Array,[,Float,,,02777,],;,},<EOF>''',101))

    def test_1778(self):
        self.assertTrue(TestLexer.test('''Class L{Constructor (_:String ;t,ZP,J_:String ){Continue ;}Var $_:Array [Array [Int ,3],0X50];}Class G:B{}Class _4:_{}Class _:__{}Class _{$4(R8,___,_,k:Boolean ){} }''','''Class,L,{,Constructor,(,_,:,String,;,t,,,ZP,,,J_,:,String,),{,Continue,;,},Var,$_,:,Array,[,Array,[,Int,,,3,],,,0X50,],;,},Class,G,:,B,{,},Class,_4,:,_,{,},Class,_,:,__,{,},Class,_,{,$4,(,R8,,,___,,,_,,,k,:,Boolean,),{,},},<EOF>''',101))

    def test_1779(self):
        self.assertTrue(TestLexer.test('''Class L4{}Class C{Constructor (u,YK:Array [String ,0x24_31F];u__:A80;_:Array [Float ,9_59];u8:Array [Int ,0X7E_6];k_0,_,_R:String ;cC,Q8,_mY:Array [Array [String ,0x3],0X6]){} }Class K{}Class _1:X{Constructor (){}Destructor (){} }''','''Class,L4,{,},Class,C,{,Constructor,(,u,,,YK,:,Array,[,String,,,0x2431F,],;,u__,:,A80,;,_,:,Array,[,Float,,,959,],;,u8,:,Array,[,Int,,,0X7E6,],;,k_0,,,_,,,_R,:,String,;,cC,,,Q8,,,_mY,:,Array,[,Array,[,String,,,0x3,],,,0X6,],),{,},},Class,K,{,},Class,_1,:,X,{,Constructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_1780(self):
        self.assertTrue(TestLexer.test('''Class vK3:_Y{Var _,$_,$__,S__54,$09f6,$V,_5_o:Array [Boolean ,6];Val $_,$_,_,__,__d,c:Array [Array [Array [Array [Float ,055],06],055],0B110011];}Class D:qXb_4{}Class m_{Destructor (){}$9(_x,S,T,D_:Array [Array [Array [String ,0x43],0B1],0B1_0]){} }''','''Class,vK3,:,_Y,{,Var,_,,,$_,,,$__,,,S__54,,,$09f6,,,$V,,,_5_o,:,Array,[,Boolean,,,6,],;,Val,$_,,,$_,,,_,,,__,,,__d,,,c,:,Array,[,Array,[,Array,[,Array,[,Float,,,055,],,,06,],,,055,],,,0B110011,],;,},Class,D,:,qXb_4,{,},Class,m_,{,Destructor,(,),{,},$9,(,_x,,,S,,,T,,,D_,:,Array,[,Array,[,Array,[,String,,,0x43,],,,0B1,],,,0B10,],),{,},},<EOF>''',101))

    def test_1781(self):
        self.assertTrue(TestLexer.test('''Class vd{w93(z:Array [Int ,0b1_0];z,tHK0570,B3wU_N:Float ){Break ;}Constructor (){} }Class _:_{}Class _{$_(o,_9l:String ){Continue ;} }Class _D_:t{}''','''Class,vd,{,w93,(,z,:,Array,[,Int,,,0b10,],;,z,,,tHK0570,,,B3wU_N,:,Float,),{,Break,;,},Constructor,(,),{,},},Class,_,:,_,{,},Class,_,{,$_,(,o,,,_9l,:,String,),{,Continue,;,},},Class,_D_,:,t,{,},<EOF>''',101))

    def test_1782(self):
        self.assertTrue(TestLexer.test('''Class _D:l3Y{$4_(){} }Class D4:V3I{}Class G{Val $_,z,_:Boolean ;}Class _{}Class _:_1{}Class _4{}Class _{}Class J:B{Destructor (){} }''','''Class,_D,:,l3Y,{,$4_,(,),{,},},Class,D4,:,V3I,{,},Class,G,{,Val,$_,,,z,,,_,:,Boolean,;,},Class,_,{,},Class,_,:,_1,{,},Class,_4,{,},Class,_,{,},Class,J,:,B,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1783(self):
        self.assertTrue(TestLexer.test('''Class T:_{Destructor (){} }Class _8{_1(o,h__,_9_:Array [Array [Float ,0b110010],3];_:A;_:String ){}Var y8__:Array [Boolean ,0xE41];Destructor (){}Val $sy,xbr1:_;}Class s:if_{Var c_:_;$_(){}W(){} }Class _4RV{Var $K:Array [Array [String ,02_6_2_47],02_6_1];Constructor (){} }''','''Class,T,:,_,{,Destructor,(,),{,},},Class,_8,{,_1,(,o,,,h__,,,_9_,:,Array,[,Array,[,Float,,,0b110010,],,,3,],;,_,:,A,;,_,:,String,),{,},Var,y8__,:,Array,[,Boolean,,,0xE41,],;,Destructor,(,),{,},Val,$sy,,,xbr1,:,_,;,},Class,s,:,if_,{,Var,c_,:,_,;,$_,(,),{,},W,(,),{,},},Class,_4RV,{,Var,$K,:,Array,[,Array,[,String,,,026247,],,,0261,],;,Constructor,(,),{,},},<EOF>''',101))

    def test_1784(self):
        self.assertTrue(TestLexer.test('''Class _p_{Constructor (Nq4_,__,_945:_z_37Y_;___:Int ){} }Class _{Val V:D4_;Constructor (n__,I:Int ;O,_78M,N49:__;A,s7:Array [Array [String ,4],0xF]){} }''','''Class,_p_,{,Constructor,(,Nq4_,,,__,,,_945,:,_z_37Y_,;,___,:,Int,),{,},},Class,_,{,Val,V,:,D4_,;,Constructor,(,n__,,,I,:,Int,;,O,,,_78M,,,N49,:,__,;,A,,,s7,:,Array,[,Array,[,String,,,4,],,,0xF,],),{,},},<EOF>''',101))

    def test_1785(self):
        self.assertTrue(TestLexer.test('''Class r{}Class x:v{Constructor (ve:Array [Boolean ,01_14]){}Destructor (){Continue ;Return ;Break ;}$_T9(x__:_;_:__;_,_:_;_,_:Array [Array [String ,0b1],0b100001];E,o,U_6:Array [String ,0x2A]){} }''','''Class,r,{,},Class,x,:,v,{,Constructor,(,ve,:,Array,[,Boolean,,,0114,],),{,},Destructor,(,),{,Continue,;,Return,;,Break,;,},$_T9,(,x__,:,_,;,_,:,__,;,_,,,_,:,_,;,_,,,_,:,Array,[,Array,[,String,,,0b1,],,,0b100001,],;,E,,,o,,,U_6,:,Array,[,String,,,0x2A,],),{,},},<EOF>''',101))

    def test_1786(self):
        self.assertTrue(TestLexer.test('''Class _7_:Xn{Constructor (u4_,I_n:_){}Constructor (){} }Class YS{Val $__,$_,A9l_H,$4_b,$2_5,_o,d8_4,$_2,_:Float ;Val $E:Array [Boolean ,0B1];}Class w:_{}''','''Class,_7_,:,Xn,{,Constructor,(,u4_,,,I_n,:,_,),{,},Constructor,(,),{,},},Class,YS,{,Val,$__,,,$_,,,A9l_H,,,$4_b,,,$2_5,,,_o,,,d8_4,,,$_2,,,_,:,Float,;,Val,$E,:,Array,[,Boolean,,,0B1,],;,},Class,w,:,_,{,},<EOF>''',101))

    def test_1787(self):
        self.assertTrue(TestLexer.test('''Class _:eO{Val $_,n,$C2,$n,$_S,$54,$_:Array [Array [Array [Array [Array [Boolean ,0b1100000],0b1100000],3_8],3_4_23],01];}''','''Class,_,:,eO,{,Val,$_,,,n,,,$C2,,,$n,,,$_S,,,$54,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1100000,],,,0b1100000,],,,38,],,,3423,],,,01,],;,},<EOF>''',101))

    def test_1788(self):
        self.assertTrue(TestLexer.test('''Class u_{$K(){}_(_,_e1H:Array [Array [Array [Int ,015_4],0B10001],0b110111]){}D(_:Array [Array [Array [Int ,0115],0X4],0x42]){} }''','''Class,u_,{,$K,(,),{,},_,(,_,,,_e1H,:,Array,[,Array,[,Array,[,Int,,,0154,],,,0B10001,],,,0b110111,],),{,},D,(,_,:,Array,[,Array,[,Array,[,Int,,,0115,],,,0X4,],,,0x42,],),{,},},<EOF>''',101))

    def test_1789(self):
        self.assertTrue(TestLexer.test('''Class __{Constructor (G,D4_:Array [Int ,07];P9D_6,kg:Float ){Break ;}Var x,_:Array [Array [Array [Array [Array [Float ,0X13],0X13],0xD_A],0102],0XC];Var $_z:Array [Array [Boolean ,3_8],0x1];}''','''Class,__,{,Constructor,(,G,,,D4_,:,Array,[,Int,,,07,],;,P9D_6,,,kg,:,Float,),{,Break,;,},Var,x,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X13,],,,0X13,],,,0xDA,],,,0102,],,,0XC,],;,Var,$_z,:,Array,[,Array,[,Boolean,,,38,],,,0x1,],;,},<EOF>''',101))

    def test_1790(self):
        self.assertTrue(TestLexer.test('''Class P:W{Val $3_:_2e6;$__V__(U_q__:Array [Array [Array [Float ,042],9],0B1011101];J,k882s__,_,xu,_:Array [Int ,0b110010];Z,G:Float ;F,K,_:String ;l:Int ){}__sA0__(A,_:Rf;_r:String ;_h,_:ji_){} }''','''Class,P,:,W,{,Val,$3_,:,_2e6,;,$__V__,(,U_q__,:,Array,[,Array,[,Array,[,Float,,,042,],,,9,],,,0B1011101,],;,J,,,k882s__,,,_,,,xu,,,_,:,Array,[,Int,,,0b110010,],;,Z,,,G,:,Float,;,F,,,K,,,_,:,String,;,l,:,Int,),{,},__sA0__,(,A,,,_,:,Rf,;,_r,:,String,;,_h,,,_,:,ji_,),{,},},<EOF>''',101))

    def test_1791(self):
        self.assertTrue(TestLexer.test('''Class F:_{Constructor (_____:_;x:Array [Array [Array [Float ,0x61],0104],0B10]){Return ;Var y:Array [String ,07_35_3_3];Return ;Return ;} }Class M:r9{Val _,$_,$__,$B7w83,$z:Array [Array [Array [Array [Array [Array [Float ,0104],0b111000],06_6],0X9],0104],0104];Var ___:Array [String ,0104];_(){}Val $o6,v_L,$6nG,$_,__,_2,w:D2;Var v:Int ;}Class Z6kr:___A{$Z(_:Boolean ){}$_kf(){}Constructor (){Break ;} }''','''Class,F,:,_,{,Constructor,(,_____,:,_,;,x,:,Array,[,Array,[,Array,[,Float,,,0x61,],,,0104,],,,0B10,],),{,Return,;,Var,y,:,Array,[,String,,,073533,],;,Return,;,Return,;,},},Class,M,:,r9,{,Val,_,,,$_,,,$__,,,$B7w83,,,$z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0104,],,,0b111000,],,,066,],,,0X9,],,,0104,],,,0104,],;,Var,___,:,Array,[,String,,,0104,],;,_,(,),{,},Val,$o6,,,v_L,,,$6nG,,,$_,,,__,,,_2,,,w,:,D2,;,Var,v,:,Int,;,},Class,Z6kr,:,___A,{,$Z,(,_,:,Boolean,),{,},$_kf,(,),{,},Constructor,(,),{,Break,;,},},<EOF>''',101))

    def test_1792(self):
        self.assertTrue(TestLexer.test('''Class m:w17__Z_{}Class yYL{Constructor (){Break ;Var _J:Float ;}Val _8t,$481,_7:Int ;}Class H4:_1{}Class A2:_{}''','''Class,m,:,w17__Z_,{,},Class,yYL,{,Constructor,(,),{,Break,;,Var,_J,:,Float,;,},Val,_8t,,,$481,,,_7,:,Int,;,},Class,H4,:,_1,{,},Class,A2,:,_,{,},<EOF>''',101))

    def test_1793(self):
        self.assertTrue(TestLexer.test('''Class ___{}Class i:__Q_0_{}Class _8:I{Val $_223:Float ;Constructor (_wM,f:Boolean ;p:Array [Array [Array [Boolean ,0x3],0660],67];Icy,I:String ;_N,_:Array [Array [Boolean ,0141],0b1];x,Z,S6,_P_,_:Boolean ;___:Array [Array [String ,07],0x2];_38,_:Array [Int ,0XC];_2,_s:Array [Array [String ,0x2],67]){Continue ;} }''','''Class,___,{,},Class,i,:,__Q_0_,{,},Class,_8,:,I,{,Val,$_223,:,Float,;,Constructor,(,_wM,,,f,:,Boolean,;,p,:,Array,[,Array,[,Array,[,Boolean,,,0x3,],,,0660,],,,67,],;,Icy,,,I,:,String,;,_N,,,_,:,Array,[,Array,[,Boolean,,,0141,],,,0b1,],;,x,,,Z,,,S6,,,_P_,,,_,:,Boolean,;,___,:,Array,[,Array,[,String,,,07,],,,0x2,],;,_38,,,_,:,Array,[,Int,,,0XC,],;,_2,,,_s,:,Array,[,Array,[,String,,,0x2,],,,67,],),{,Continue,;,},},<EOF>''',101))

    def test_1794(self):
        self.assertTrue(TestLexer.test('''Class Q_B_7{Constructor (DG,_:Array [Array [Int ,0X9],1_409_9];_579,J:String ){}Var $T:_a9;Constructor (){Continue ;Continue ;} }''','''Class,Q_B_7,{,Constructor,(,DG,,,_,:,Array,[,Array,[,Int,,,0X9,],,,14099,],;,_579,,,J,:,String,),{,},Var,$T,:,_a9,;,Constructor,(,),{,Continue,;,Continue,;,},},<EOF>''',101))

    def test_1795(self):
        self.assertTrue(TestLexer.test('''Class __{Constructor (_0,S,_,zs:Float ;xV:Array [Boolean ,0x14]){Continue ;{} }Destructor (){}_(){}Val $iR:ALm56T_;t(O,_,_:I){} }Class _Ze:m3{$68(){Val _7_L7:String ;} }''','''Class,__,{,Constructor,(,_0,,,S,,,_,,,zs,:,Float,;,xV,:,Array,[,Boolean,,,0x14,],),{,Continue,;,{,},},Destructor,(,),{,},_,(,),{,},Val,$iR,:,ALm56T_,;,t,(,O,,,_,,,_,:,I,),{,},},Class,_Ze,:,m3,{,$68,(,),{,Val,_7_L7,:,String,;,},},<EOF>''',101))

    def test_1796(self):
        self.assertTrue(TestLexer.test('''Class U:D{Constructor (__y,_6_,PU:L;x4M1__552:_dB){Break ;} }Class _7:S{Var h:K;Var $7,$_o:Float ;$7(J7:A;J:Array [Float ,72];B_6:String ;_,__q8,P2:Array [Int ,0b1010111]){} }''','''Class,U,:,D,{,Constructor,(,__y,,,_6_,,,PU,:,L,;,x4M1__552,:,_dB,),{,Break,;,},},Class,_7,:,S,{,Var,h,:,K,;,Var,$7,,,$_o,:,Float,;,$7,(,J7,:,A,;,J,:,Array,[,Float,,,72,],;,B_6,:,String,;,_,,,__q8,,,P2,:,Array,[,Int,,,0b1010111,],),{,},},<EOF>''',101))

    def test_1797(self):
        self.assertTrue(TestLexer.test('''Class i_d_5{Constructor (_:Array [Float ,03]){}Var _,__0:Boolean ;}Class _V:_{Var ___:Array [Float ,0b1];Val $40_G,_8:p;}''','''Class,i_d_5,{,Constructor,(,_,:,Array,[,Float,,,03,],),{,},Var,_,,,__0,:,Boolean,;,},Class,_V,:,_,{,Var,___,:,Array,[,Float,,,0b1,],;,Val,$40_G,,,_8,:,p,;,},<EOF>''',101))

    def test_1798(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _5{}Class _:g6{Var $m_:Array [Float ,0b110001];}Class j:_{Constructor (){}Destructor (){} }Class ___:_D_{}''','''Class,_,{,},Class,_5,{,},Class,_,:,g6,{,Var,$m_,:,Array,[,Float,,,0b110001,],;,},Class,j,:,_,{,Constructor,(,),{,},Destructor,(,),{,},},Class,___,:,_D_,{,},<EOF>''',101))

    def test_1799(self):
        self.assertTrue(TestLexer.test('''Class ld:_{Constructor (){} }Class _:_2_{Constructor (S:Array [Array [Array [Array [Array [Float ,85],0x1B],0X7_9],03],0X56];S4_:String ){Break ;} }''','''Class,ld,:,_,{,Constructor,(,),{,},},Class,_,:,_2_,{,Constructor,(,S,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,85,],,,0x1B,],,,0X79,],,,03,],,,0X56,],;,S4_,:,String,),{,Break,;,},},<EOF>''',101))

    def test_1800(self):
        self.assertTrue(TestLexer.test('''Class Z{$_w(_1,_4_A_4,___2:__){Return ;}Val Z:Array [Array [Array [Int ,0B1110],0B1000001],0X27];Constructor (_,z_g:_;nK_Z,_W:String ){Break ;} }''','''Class,Z,{,$_w,(,_1,,,_4_A_4,,,___2,:,__,),{,Return,;,},Val,Z,:,Array,[,Array,[,Array,[,Int,,,0B1110,],,,0B1000001,],,,0X27,],;,Constructor,(,_,,,z_g,:,_,;,nK_Z,,,_W,:,String,),{,Break,;,},},<EOF>''',101))

    def test_1801(self):
        self.assertTrue(TestLexer.test('''Class J{Val $UR:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,0B1000001],0b1_0],0X1],0b1011010],0b1],42],02621],0b1_1],0b1_1];}''','''Class,J,{,Val,$UR,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1000001,],,,0b10,],,,0X1,],,,0b1011010,],,,0b1,],,,42,],,,02621,],,,0b11,],,,0b11,],;,},<EOF>''',101))

    def test_1802(self):
        self.assertTrue(TestLexer.test('''Class h{Destructor (){Continue ;}Destructor (){}Var _:Yi;Val $_,$C:Array [String ,62];Destructor (){}Var $sV,$5_:Array [Array [Float ,0b1],012];}Class o:_P_{}''','''Class,h,{,Destructor,(,),{,Continue,;,},Destructor,(,),{,},Var,_,:,Yi,;,Val,$_,,,$C,:,Array,[,String,,,62,],;,Destructor,(,),{,},Var,$sV,,,$5_,:,Array,[,Array,[,Float,,,0b1,],,,012,],;,},Class,o,:,_P_,{,},<EOF>''',101))

    def test_1803(self):
        self.assertTrue(TestLexer.test('''Class D{$5(M90:Array [Int ,0X15]){}Var __:Array [Array [Array [Array [Array [Array [Float ,06],5],38],0B100],06],7];}Class c:_{}''','''Class,D,{,$5,(,M90,:,Array,[,Int,,,0X15,],),{,},Var,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,06,],,,5,],,,38,],,,0B100,],,,06,],,,7,],;,},Class,c,:,_,{,},<EOF>''',101))

    def test_1804(self):
        self.assertTrue(TestLexer.test('''Class _:wv{$8v(){} }Class k2v0{_(_:_80){} }Class _:_X{}Class __Vz:_z{_NoM_(_,u,G0_9,_:String ;_U:E;I9:Array [Array [Array [Float ,0b1110],0b1],0b1110];_Hzat_,_,d,e,G_:String ;__,Y,j1013n9_:Array [Float ,0B10];e,__:_J){} }Class _:_M__9__{}''','''Class,_,:,wv,{,$8v,(,),{,},},Class,k2v0,{,_,(,_,:,_80,),{,},},Class,_,:,_X,{,},Class,__Vz,:,_z,{,_NoM_,(,_,,,u,,,G0_9,,,_,:,String,;,_U,:,E,;,I9,:,Array,[,Array,[,Array,[,Float,,,0b1110,],,,0b1,],,,0b1110,],;,_Hzat_,,,_,,,d,,,e,,,G_,:,String,;,__,,,Y,,,j1013n9_,:,Array,[,Float,,,0B10,],;,e,,,__,:,_J,),{,},},Class,_,:,_M__9__,{,},<EOF>''',101))

    def test_1805(self):
        self.assertTrue(TestLexer.test('''Class G_5_:___{}Class _b{}Class __hiF79B___wC_{Val $V72_V:_4l;}Class _12:F___{Var Q:O;Constructor (){_::$8();Val dU:_;} }''','''Class,G_5_,:,___,{,},Class,_b,{,},Class,__hiF79B___wC_,{,Val,$V72_V,:,_4l,;,},Class,_12,:,F___,{,Var,Q,:,O,;,Constructor,(,),{,_,::,$8,(,),;,Val,dU,:,_,;,},},<EOF>''',101))

    def test_1806(self):
        self.assertTrue(TestLexer.test('''Class K{Constructor (j:Array [Array [Int ,0B1100010],0b1000001];_1B,_,G,b2:Float ){ {Return ;} }$__2_(__:Int ;_:bM;J,_1,b,_:Float ;Vz:_t){} }''','''Class,K,{,Constructor,(,j,:,Array,[,Array,[,Int,,,0B1100010,],,,0b1000001,],;,_1B,,,_,,,G,,,b2,:,Float,),{,{,Return,;,},},$__2_,(,__,:,Int,;,_,:,bM,;,J,,,_1,,,b,,,_,:,Float,;,Vz,:,_t,),{,},},<EOF>''',101))

    def test_1807(self):
        self.assertTrue(TestLexer.test('''Class X{}Class Ga:_{Constructor (_lm:Array [Int ,0B1];_U_:U){}Val $_m_,$09f,t_BZ_:String ;}Class _M:q_h__90{}Class _:_5w7_5{}''','''Class,X,{,},Class,Ga,:,_,{,Constructor,(,_lm,:,Array,[,Int,,,0B1,],;,_U_,:,U,),{,},Val,$_m_,,,$09f,,,t_BZ_,:,String,;,},Class,_M,:,q_h__90,{,},Class,_,:,_5w7_5,{,},<EOF>''',101))

    def test_1808(self):
        self.assertTrue(TestLexer.test('''Class x{Val $65,$j,_5:v_;Constructor (){} }Class Ew{}Class _:___{f0(F:String ;_v,W,t,_,x2_:String ){Continue ;} }Class _0:d{}''','''Class,x,{,Val,$65,,,$j,,,_5,:,v_,;,Constructor,(,),{,},},Class,Ew,{,},Class,_,:,___,{,f0,(,F,:,String,;,_v,,,W,,,t,,,_,,,x2_,:,String,),{,Continue,;,},},Class,_0,:,d,{,},<EOF>''',101))

    def test_1809(self):
        self.assertTrue(TestLexer.test('''Class Xo:E{}Class b_9_{}Class _C:_{Var $N_:Array [Boolean ,0B1010100];Destructor (){} }Class _{}Class _33:_3{}Class _6:_{}''','''Class,Xo,:,E,{,},Class,b_9_,{,},Class,_C,:,_,{,Var,$N_,:,Array,[,Boolean,,,0B1010100,],;,Destructor,(,),{,},},Class,_,{,},Class,_33,:,_3,{,},Class,_6,:,_,{,},<EOF>''',101))

    def test_1810(self):
        self.assertTrue(TestLexer.test('''Class j0U_:l{}Class b{Destructor (){} }Class l_K4:_8{Var C:Int =-New _()*!!--_::$_9.JmP55;}Class _78:l{Val $1E_,$_121:String ;Constructor (j___,kk_,ZO_E8f_:Int ;t8:a){}Constructor (f_D_:B){} }Class _P:_{}Class __qK:__c{}Class _{}Class y{ug(O:Array [Array [Float ,0B111010],82]){Break ;Val _,g:__J_6;} }Class i:___d{}''','''Class,j0U_,:,l,{,},Class,b,{,Destructor,(,),{,},},Class,l_K4,:,_8,{,Var,C,:,Int,=,-,New,_,(,),*,!,!,-,-,_,::,$_9,.,JmP55,;,},Class,_78,:,l,{,Val,$1E_,,,$_121,:,String,;,Constructor,(,j___,,,kk_,,,ZO_E8f_,:,Int,;,t8,:,a,),{,},Constructor,(,f_D_,:,B,),{,},},Class,_P,:,_,{,},Class,__qK,:,__c,{,},Class,_,{,},Class,y,{,ug,(,O,:,Array,[,Array,[,Float,,,0B111010,],,,82,],),{,Break,;,Val,_,,,g,:,__J_6,;,},},Class,i,:,___d,{,},<EOF>''',101))

    def test_1811(self):
        self.assertTrue(TestLexer.test('''Class V{}Class _6{Constructor (r:Array [Array [Array [Array [Array [Array [Array [Int ,45],01_1_1],0b1],1],0B1],030],0b100001]){} }Class _7anb_79D1:_1{}''','''Class,V,{,},Class,_6,{,Constructor,(,r,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,45,],,,0111,],,,0b1,],,,1,],,,0B1,],,,030,],,,0b100001,],),{,},},Class,_7anb_79D1,:,_1,{,},<EOF>''',101))

    def test_1812(self):
        self.assertTrue(TestLexer.test('''Class I_:__{}Class vY4Z:_{}Class _h{Constructor (){ {} }}Class L4:_W{Val f298__2,_____,$_,_qc,d_,_:Array [Array [Int ,0xB],87];}Class _:__{}Class q_q{}Class _:C{}''','''Class,I_,:,__,{,},Class,vY4Z,:,_,{,},Class,_h,{,Constructor,(,),{,{,},},},Class,L4,:,_W,{,Val,f298__2,,,_____,,,$_,,,_qc,,,d_,,,_,:,Array,[,Array,[,Int,,,0xB,],,,87,],;,},Class,_,:,__,{,},Class,q_q,{,},Class,_,:,C,{,},<EOF>''',101))

    def test_1813(self):
        self.assertTrue(TestLexer.test('''Class f1V8{}Class d33_{}Class C88:_E_{Constructor (j5_,_:V;ZV,M:Boolean ;_,_:Array [Int ,0x1C];_,s_,l6K,_,v:Float ;a:y49){} }''','''Class,f1V8,{,},Class,d33_,{,},Class,C88,:,_E_,{,Constructor,(,j5_,,,_,:,V,;,ZV,,,M,:,Boolean,;,_,,,_,:,Array,[,Int,,,0x1C,],;,_,,,s_,,,l6K,,,_,,,v,:,Float,;,a,:,y49,),{,},},<EOF>''',101))

    def test_1814(self):
        self.assertTrue(TestLexer.test('''Class Y:Q8{$_(_x:String ;tww,jB:Array [Array [Array [Array [String ,95],0B11_11_1],0xC3_C],014]){}Val _o_:Array [Array [Array [Array [Float ,0x31],95],0B111001],3];}''','''Class,Y,:,Q8,{,$_,(,_x,:,String,;,tww,,,jB,:,Array,[,Array,[,Array,[,Array,[,String,,,95,],,,0B11111,],,,0xC3C,],,,014,],),{,},Val,_o_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x31,],,,95,],,,0B111001,],,,3,],;,},<EOF>''',101))

    def test_1815(self):
        self.assertTrue(TestLexer.test('''Class __a{Constructor (bD:Array [String ,49];_____:Array [Array [Boolean ,4],0b1];rsg_9q:Float ;_,_X,Y:Array [Boolean ,07]){}Var $641b1_x3F:B_;}''','''Class,__a,{,Constructor,(,bD,:,Array,[,String,,,49,],;,_____,:,Array,[,Array,[,Boolean,,,4,],,,0b1,],;,rsg_9q,:,Float,;,_,,,_X,,,Y,:,Array,[,Boolean,,,07,],),{,},Var,$641b1_x3F,:,B_,;,},<EOF>''',101))

    def test_1816(self):
        self.assertTrue(TestLexer.test('''Class x9:_Xf{$21S(_,_,p:_;_:Array [Array [Boolean ,0b110000],0B1]){}_(){}Val $d:Array [Boolean ,02];}Class _cog:r{}''','''Class,x9,:,_Xf,{,$21S,(,_,,,_,,,p,:,_,;,_,:,Array,[,Array,[,Boolean,,,0b110000,],,,0B1,],),{,},_,(,),{,},Val,$d,:,Array,[,Boolean,,,02,],;,},Class,_cog,:,r,{,},<EOF>''',101))

    def test_1817(self):
        self.assertTrue(TestLexer.test('''Class _f1{}Class _{Val _a4_p,$_:Array [Array [String ,06_53_35],0B1_0];Destructor (){} }Class _p{Constructor (){} }''','''Class,_f1,{,},Class,_,{,Val,_a4_p,,,$_,:,Array,[,Array,[,String,,,065335,],,,0B10,],;,Destructor,(,),{,},},Class,_p,{,Constructor,(,),{,},},<EOF>''',101))

    def test_1818(self):
        self.assertTrue(TestLexer.test('''Class _{Val $d,B:Array [Array [Array [Array [Array [Array [Array [String ,0xA],0123],0X2],2],02],0b101011],0x39];$V_i(){}Val _,$qxi_2,$_,$5b:_M_;}Class _h:N{}''','''Class,_,{,Val,$d,,,B,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0xA,],,,0123,],,,0X2,],,,2,],,,02,],,,0b101011,],,,0x39,],;,$V_i,(,),{,},Val,_,,,$qxi_2,,,$_,,,$5b,:,_M_,;,},Class,_h,:,N,{,},<EOF>''',101))

    def test_1819(self):
        self.assertTrue(TestLexer.test('''Class _{$_(_:Array [Array [Array [Array [Int ,32],0B1001111],020],0b1001000];O,i:Array [Boolean ,32];k,_0:Float ){Var v:_R_;} }''','''Class,_,{,$_,(,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,32,],,,0B1001111,],,,020,],,,0b1001000,],;,O,,,i,:,Array,[,Boolean,,,32,],;,k,,,_0,:,Float,),{,Var,v,:,_R_,;,},},<EOF>''',101))

    def test_1820(self):
        self.assertTrue(TestLexer.test('''Class _:J{__(LssW_,_,R,w:Int ;K_:Float ;____,_R_6,_:Array [Array [Float ,0b1],0X5]){}Val $e_:Array [Array [Array [Boolean ,02],01],05];Var $Z:String ;}''','''Class,_,:,J,{,__,(,LssW_,,,_,,,R,,,w,:,Int,;,K_,:,Float,;,____,,,_R_6,,,_,:,Array,[,Array,[,Float,,,0b1,],,,0X5,],),{,},Val,$e_,:,Array,[,Array,[,Array,[,Boolean,,,02,],,,01,],,,05,],;,Var,$Z,:,String,;,},<EOF>''',101))

    def test_1821(self):
        self.assertTrue(TestLexer.test('''Class _9f:s{}Class _:f__4__{}Class Q:K36{}Class _0_4_{Var $U:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,072],0B10],0X1],0B1_0],072],0b101101],84],84],5],0B110110],0x51],06];Constructor (_1:Boolean ){}Val _:J20=!--P_0::$5_S9q87a_z().I_W().g.h().T.G().f._;}Class _{Destructor (){} }''','''Class,_9f,:,s,{,},Class,_,:,f__4__,{,},Class,Q,:,K36,{,},Class,_0_4_,{,Var,$U,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,072,],,,0B10,],,,0X1,],,,0B10,],,,072,],,,0b101101,],,,84,],,,84,],,,5,],,,0B110110,],,,0x51,],,,06,],;,Constructor,(,_1,:,Boolean,),{,},Val,_,:,J20,=,!,-,-,P_0,::,$5_S9q87a_z,(,),.,I_W,(,),.,g,.,h,(,),.,T,.,G,(,),.,f,.,_,;,},Class,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1822(self):
        self.assertTrue(TestLexer.test('''Class a_Tj:_E{}Class _3_N417{__(){ {Continue ;} }Constructor (){Val _:_;} }Class __:_{}Class L:m{Var $CU0D,$5_mv,$_6y,$8,$_,tb0,L4:Array [Array [Array [Boolean ,0B1],0b1000000],0b1];}''','''Class,a_Tj,:,_E,{,},Class,_3_N417,{,__,(,),{,{,Continue,;,},},Constructor,(,),{,Val,_,:,_,;,},},Class,__,:,_,{,},Class,L,:,m,{,Var,$CU0D,,,$5_mv,,,$_6y,,,$8,,,$_,,,tb0,,,L4,:,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0b1000000,],,,0b1,],;,},<EOF>''',101))

    def test_1823(self):
        self.assertTrue(TestLexer.test('''Class M7:_1{$0(j,_,C:Boolean ;_:Float ;TZl,T0_:Array [Array [Int ,2],052];_:_){}Var _6_,_pE9_,$_8F:Array [Array [Int ,0B111000],0b111];}''','''Class,M7,:,_1,{,$0,(,j,,,_,,,C,:,Boolean,;,_,:,Float,;,TZl,,,T0_,:,Array,[,Array,[,Int,,,2,],,,052,],;,_,:,_,),{,},Var,_6_,,,_pE9_,,,$_8F,:,Array,[,Array,[,Int,,,0B111000,],,,0b111,],;,},<EOF>''',101))

    def test_1824(self):
        self.assertTrue(TestLexer.test('''Class _:__{Val __:E;E(_V:Array [Array [Array [Boolean ,0B1011],0XC_D],5];L,g,V,r:Array [Boolean ,67];_M:Int ){_tP::$_5();} }Class _{}''','''Class,_,:,__,{,Val,__,:,E,;,E,(,_V,:,Array,[,Array,[,Array,[,Boolean,,,0B1011,],,,0XCD,],,,5,],;,L,,,g,,,V,,,r,:,Array,[,Boolean,,,67,],;,_M,:,Int,),{,_tP,::,$_5,(,),;,},},Class,_,{,},<EOF>''',101))

    def test_1825(self):
        self.assertTrue(TestLexer.test('''Class u4{Constructor (LV_2,W:Array [Array [Array [Int ,0x5D],0b1],0b10000]){} }Class _N_D_{Val _h,$y,k,R8K4_:Array [Array [String ,6],0B111_1];Val __,$88,o,_,_:_;Var Nf,__,_:_;}''','''Class,u4,{,Constructor,(,LV_2,,,W,:,Array,[,Array,[,Array,[,Int,,,0x5D,],,,0b1,],,,0b10000,],),{,},},Class,_N_D_,{,Val,_h,,,$y,,,k,,,R8K4_,:,Array,[,Array,[,String,,,6,],,,0B1111,],;,Val,__,,,$88,,,o,,,_,,,_,:,_,;,Var,Nf,,,__,,,_,:,_,;,},<EOF>''',101))

    def test_1826(self):
        self.assertTrue(TestLexer.test('''Class q{}Class U{Destructor (){}Constructor (eL,_,x5:Array [Array [Float ,96],0B100001];A,_5,P:p;W5EA:_;A:Boolean ;j,M:Float ){} }Class n{}''','''Class,q,{,},Class,U,{,Destructor,(,),{,},Constructor,(,eL,,,_,,,x5,:,Array,[,Array,[,Float,,,96,],,,0B100001,],;,A,,,_5,,,P,:,p,;,W5EA,:,_,;,A,:,Boolean,;,j,,,M,:,Float,),{,},},Class,n,{,},<EOF>''',101))

    def test_1827(self):
        self.assertTrue(TestLexer.test('''Class W{Val _,$9,$__K3_:_8;M(Jn:yYr7_){}Destructor (){}Var H,b6s_Z:Array [Array [Array [Array [Array [Array [String ,0x13],0xD],26],0X6_B],7],0xC];}''','''Class,W,{,Val,_,,,$9,,,$__K3_,:,_8,;,M,(,Jn,:,yYr7_,),{,},Destructor,(,),{,},Var,H,,,b6s_Z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x13,],,,0xD,],,,26,],,,0X6B,],,,7,],,,0xC,],;,},<EOF>''',101))

    def test_1828(self):
        self.assertTrue(TestLexer.test('''Class _:J_{$f(){} }Class __9:_{Val $5I,e,_,$_,j__:Array [Array [Array [Array [Array [Array [String ,07],90],0b11001],0x8],37],0XB_3];}Class _{}''','''Class,_,:,J_,{,$f,(,),{,},},Class,__9,:,_,{,Val,$5I,,,e,,,_,,,$_,,,j__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,07,],,,90,],,,0b11001,],,,0x8,],,,37,],,,0XB3,],;,},Class,_,{,},<EOF>''',101))

    def test_1829(self):
        self.assertTrue(TestLexer.test('''Class aaK_9{Constructor (){Continue ;} }Class D_:B{}Class t{}Class R0f12:_{$__(_,j:Array [Array [String ,0b1],0B1011011]){_7::$16346();} }Class ZXV:_9{Var $E4_3E:Array [Boolean ,0b1_1];}''','''Class,aaK_9,{,Constructor,(,),{,Continue,;,},},Class,D_,:,B,{,},Class,t,{,},Class,R0f12,:,_,{,$__,(,_,,,j,:,Array,[,Array,[,String,,,0b1,],,,0B1011011,],),{,_7,::,$16346,(,),;,},},Class,ZXV,:,_9,{,Var,$E4_3E,:,Array,[,Boolean,,,0b11,],;,},<EOF>''',101))

    def test_1830(self):
        self.assertTrue(TestLexer.test('''Class w_9w_:__Z_{}Class _:gp{}Class _:KD{Val $_:Array [Array [Array [Int ,0b1000111],0110],0110];}Class _ogx3:u58{_D(){}Var $1:__Fr;$9c1(){} }''','''Class,w_9w_,:,__Z_,{,},Class,_,:,gp,{,},Class,_,:,KD,{,Val,$_,:,Array,[,Array,[,Array,[,Int,,,0b1000111,],,,0110,],,,0110,],;,},Class,_ogx3,:,u58,{,_D,(,),{,},Var,$1,:,__Fr,;,$9c1,(,),{,},},<EOF>''',101))

    def test_1831(self):
        self.assertTrue(TestLexer.test('''Class _2{Destructor (){}Val $Il,$__:Float ;}Class P:bZ{Val _:Array [Array [Array [Array [Array [Array [String ,02],0x29],0x29],3],0b1],026];Val _:Boolean ;}''','''Class,_2,{,Destructor,(,),{,},Val,$Il,,,$__,:,Float,;,},Class,P,:,bZ,{,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,02,],,,0x29,],,,0x29,],,,3,],,,0b1,],,,026,],;,Val,_,:,Boolean,;,},<EOF>''',101))

    def test_1832(self):
        self.assertTrue(TestLexer.test('''Class _:H{$_(){ {Break ;Val B,W5:Array [String ,0b1000];Val t_V_,_:Array [Int ,60];}Continue ;} }Class _:f4{Destructor (){} }''','''Class,_,:,H,{,$_,(,),{,{,Break,;,Val,B,,,W5,:,Array,[,String,,,0b1000,],;,Val,t_V_,,,_,:,Array,[,Int,,,60,],;,},Continue,;,},},Class,_,:,f4,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1833(self):
        self.assertTrue(TestLexer.test('''Class x_L:a7x{}Class _{$_nw(_2K_:Array [Array [Array [Boolean ,031],0x1D],031];pZ,C,_:_B){} }Class _:_3_{}Class G5:z4{Var _4,P:Array [Array [Int ,0XBB],0x9_AE8];}''','''Class,x_L,:,a7x,{,},Class,_,{,$_nw,(,_2K_,:,Array,[,Array,[,Array,[,Boolean,,,031,],,,0x1D,],,,031,],;,pZ,,,C,,,_,:,_B,),{,},},Class,_,:,_3_,{,},Class,G5,:,z4,{,Var,_4,,,P,:,Array,[,Array,[,Int,,,0XBB,],,,0x9AE8,],;,},<EOF>''',101))

    def test_1834(self):
        self.assertTrue(TestLexer.test('''Class _39:_A{}Class w_4:P{Var _647P:Array [Array [Array [Array [Int ,0B1000100],7],7504],27];}Class _{}Class L:_{}Class _BLD:O{Val $7,$_O,_:String ;}''','''Class,_39,:,_A,{,},Class,w_4,:,P,{,Var,_647P,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1000100,],,,7,],,,7504,],,,27,],;,},Class,_,{,},Class,L,:,_,{,},Class,_BLD,:,O,{,Val,$7,,,$_O,,,_,:,String,;,},<EOF>''',101))

    def test_1835(self):
        self.assertTrue(TestLexer.test('''Class KG9__m{Constructor (L_:Array [Array [Array [Float ,0X4C],06_1_4_3],0X4C]){}Destructor (){Return ;}Val S,b:Array [Array [Int ,0X4C],0X4C];}''','''Class,KG9__m,{,Constructor,(,L_,:,Array,[,Array,[,Array,[,Float,,,0X4C,],,,06143,],,,0X4C,],),{,},Destructor,(,),{,Return,;,},Val,S,,,b,:,Array,[,Array,[,Int,,,0X4C,],,,0X4C,],;,},<EOF>''',101))

    def test_1836(self):
        self.assertTrue(TestLexer.test('''Class __1:_6{}Class _:_{__(Z:Float ;__,L:Array [Array [String ,0b100111],0X4A]){ {} }}Class c{Val $_,w,$4:Array [Array [Array [Array [Float ,065],3_3],065],0XA];}''','''Class,__1,:,_6,{,},Class,_,:,_,{,__,(,Z,:,Float,;,__,,,L,:,Array,[,Array,[,String,,,0b100111,],,,0X4A,],),{,{,},},},Class,c,{,Val,$_,,,w,,,$4,:,Array,[,Array,[,Array,[,Array,[,Float,,,065,],,,33,],,,065,],,,0XA,],;,},<EOF>''',101))

    def test_1837(self):
        self.assertTrue(TestLexer.test('''Class _D{Constructor (){Val _F_,U2_,_T:K8;}$_3h(f:_7;_,_,_:Float ;__:Array [Array [Array [Boolean ,03],3_4],3];s,_,_2,zp217____3,G:Int ){} }''','''Class,_D,{,Constructor,(,),{,Val,_F_,,,U2_,,,_T,:,K8,;,},$_3h,(,f,:,_7,;,_,,,_,,,_,:,Float,;,__,:,Array,[,Array,[,Array,[,Boolean,,,03,],,,34,],,,3,],;,s,,,_,,,_2,,,zp217____3,,,G,:,Int,),{,},},<EOF>''',101))

    def test_1838(self):
        self.assertTrue(TestLexer.test('''Class f2_v{Val $_:Array [Float ,0B1001101];}Class _V_:__{Constructor (__,Z,_:Int ;_,_0:Array [Array [String ,031],72];H:D0){} }Class s{}Class Vl:_{}''','''Class,f2_v,{,Val,$_,:,Array,[,Float,,,0B1001101,],;,},Class,_V_,:,__,{,Constructor,(,__,,,Z,,,_,:,Int,;,_,,,_0,:,Array,[,Array,[,String,,,031,],,,72,],;,H,:,D0,),{,},},Class,s,{,},Class,Vl,:,_,{,},<EOF>''',101))

    def test_1839(self):
        self.assertTrue(TestLexer.test('''Class Z39_:W{Var $_,$3a,_h:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,59],0X8C],0xF],055_2],0X2],0B1010110],030],0X9],0335_6],0X36];}''','''Class,Z39_,:,W,{,Var,$_,,,$3a,,,_h,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,59,],,,0X8C,],,,0xF,],,,0552,],,,0X2,],,,0B1010110,],,,030,],,,0X9,],,,03356,],,,0X36,],;,},<EOF>''',101))

    def test_1840(self):
        self.assertTrue(TestLexer.test('''Class __{X3H(_2:String ){}Val _:Array [Array [Float ,077],01];$K3s_(_9,v:Array [Array [Boolean ,8],0x5];R:String ;z0,V:_i){ {} }}Class Y:K{}Class eW:cf{Constructor (y,_:Array [Float ,84]){}Val $u:Array [Float ,0B1111];}''','''Class,__,{,X3H,(,_2,:,String,),{,},Val,_,:,Array,[,Array,[,Float,,,077,],,,01,],;,$K3s_,(,_9,,,v,:,Array,[,Array,[,Boolean,,,8,],,,0x5,],;,R,:,String,;,z0,,,V,:,_i,),{,{,},},},Class,Y,:,K,{,},Class,eW,:,cf,{,Constructor,(,y,,,_,:,Array,[,Float,,,84,],),{,},Val,$u,:,Array,[,Float,,,0B1111,],;,},<EOF>''',101))

    def test_1841(self):
        self.assertTrue(TestLexer.test('''Class K_{Constructor (_X,_,__B,_wM3:__){Continue ;}Constructor (_:_d){}Var T,_:Array [Array [Array [Array [Int ,010],0x2_2],0b110],010];Val $6K:Array [Array [Int ,043],75];Val _:Array [Array [Array [Int ,75],0b1],010];}Class _Oxl{b_(){} }''','''Class,K_,{,Constructor,(,_X,,,_,,,__B,,,_wM3,:,__,),{,Continue,;,},Constructor,(,_,:,_d,),{,},Var,T,,,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,010,],,,0x22,],,,0b110,],,,010,],;,Val,$6K,:,Array,[,Array,[,Int,,,043,],,,75,],;,Val,_,:,Array,[,Array,[,Array,[,Int,,,75,],,,0b1,],,,010,],;,},Class,_Oxl,{,b_,(,),{,},},<EOF>''',101))

    def test_1842(self):
        self.assertTrue(TestLexer.test('''Class J:L_{}Class g{}Class _:_1{}Class N{}Class J{Var $_6,_:String ;Destructor (){} }Class b3X{Destructor (){}Constructor (_,_,b:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,6_2_5_7],0B1000100],0116],0X35],0116],0B1000100],0116],0B1_0],07]){} }Class kkh_{}Class L:G_43{}''','''Class,J,:,L_,{,},Class,g,{,},Class,_,:,_1,{,},Class,N,{,},Class,J,{,Var,$_6,,,_,:,String,;,Destructor,(,),{,},},Class,b3X,{,Destructor,(,),{,},Constructor,(,_,,,_,,,b,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,6257,],,,0B1000100,],,,0116,],,,0X35,],,,0116,],,,0B1000100,],,,0116,],,,0B10,],,,07,],),{,},},Class,kkh_,{,},Class,L,:,G_43,{,},<EOF>''',101))

    def test_1843(self):
        self.assertTrue(TestLexer.test('''Class _:R{Val _:Array [Float ,0x3];}Class H:_{T(T,_,_o6:Array [Int ,0B1_00_101];m:Boolean ){} }Class e_:_Q{Val _:Array [Boolean ,0x3E];}''','''Class,_,:,R,{,Val,_,:,Array,[,Float,,,0x3,],;,},Class,H,:,_,{,T,(,T,,,_,,,_o6,:,Array,[,Int,,,0B100101,],;,m,:,Boolean,),{,},},Class,e_,:,_Q,{,Val,_,:,Array,[,Boolean,,,0x3E,],;,},<EOF>''',101))

    def test_1844(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{}Class VQk{$6U_(S_P,_,_yV:Array [Array [Float ,050],0b1001011]){}Constructor (_,_,G:Array [Int ,0X22]){} }Class w{}''','''Class,_,{,},Class,_,{,},Class,VQk,{,$6U_,(,S_P,,,_,,,_yV,:,Array,[,Array,[,Float,,,050,],,,0b1001011,],),{,},Constructor,(,_,,,_,,,G,:,Array,[,Int,,,0X22,],),{,},},Class,w,{,},<EOF>''',101))

    def test_1845(self):
        self.assertTrue(TestLexer.test('''Class q:Vrpl{$3(_,__l:Array [Int ,0b1011110];w,_:String ;_,Z,_9Q,_5,H,HM:n_;e,_,U5x2,_:Array [Array [Array [Array [Float ,02_24],0B1],07],056]){} }Class V{Val $e56xa,q6:Boolean ;}''','''Class,q,:,Vrpl,{,$3,(,_,,,__l,:,Array,[,Int,,,0b1011110,],;,w,,,_,:,String,;,_,,,Z,,,_9Q,,,_5,,,H,,,HM,:,n_,;,e,,,_,,,U5x2,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0224,],,,0B1,],,,07,],,,056,],),{,},},Class,V,{,Val,$e56xa,,,q6,:,Boolean,;,},<EOF>''',101))

    def test_1846(self):
        self.assertTrue(TestLexer.test('''Class We:_{Var _1__5:Array [Array [Array [Array [Array [String ,0B1],0b1001],0X5F],2_3],4_7];Var p_X:__;Val _:Array [Array [Boolean ,025],5_3];}Class kz{}''','''Class,We,:,_,{,Var,_1__5,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,0b1001,],,,0X5F,],,,23,],,,47,],;,Var,p_X,:,__,;,Val,_,:,Array,[,Array,[,Boolean,,,025,],,,53,],;,},Class,kz,{,},<EOF>''',101))

    def test_1847(self):
        self.assertTrue(TestLexer.test('''Class E__:_{Destructor (){} }Class _{}Class IaW:T{Var _,$9_,$rw,b:K;Constructor (I1:a;_,d7ZAi_:Array [Int ,44];J82:Array [Array [Array [Float ,0X46],0B100001],0x32_6_9];_5,_,u,_2u:Array [Int ,16];N:Array [Array [Array [Int ,034],0536],0b1000011]){} }''','''Class,E__,:,_,{,Destructor,(,),{,},},Class,_,{,},Class,IaW,:,T,{,Var,_,,,$9_,,,$rw,,,b,:,K,;,Constructor,(,I1,:,a,;,_,,,d7ZAi_,:,Array,[,Int,,,44,],;,J82,:,Array,[,Array,[,Array,[,Float,,,0X46,],,,0B100001,],,,0x3269,],;,_5,,,_,,,u,,,_2u,:,Array,[,Int,,,16,],;,N,:,Array,[,Array,[,Array,[,Int,,,034,],,,0536,],,,0b1000011,],),{,},},<EOF>''',101))

    def test_1848(self):
        self.assertTrue(TestLexer.test('''Class H88O{Val N:_;Constructor (){Break ;{Continue ;} }}Class y:Vx{}Class o{}Class _7:__{}Class L__:T21ds{}Class _{Destructor (){}P_60(i4,f,_:String ){} }''','''Class,H88O,{,Val,N,:,_,;,Constructor,(,),{,Break,;,{,Continue,;,},},},Class,y,:,Vx,{,},Class,o,{,},Class,_7,:,__,{,},Class,L__,:,T21ds,{,},Class,_,{,Destructor,(,),{,},P_60,(,i4,,,f,,,_,:,String,),{,},},<EOF>''',101))

    def test_1849(self):
        self.assertTrue(TestLexer.test('''Class _:_{$_(_N,A3:Boolean ){}Destructor (){Var __:_;} }Class F4g_{Val Z_,$q,$_EC5_s,_,$22H:_;_(x:Array [Array [Array [Array [Array [Int ,0B1],0X9_3],0x19],0B100011],1]){}Constructor (){}Var $b:Boolean ;Destructor (){Break ;Break ;}Destructor (){} }''','''Class,_,:,_,{,$_,(,_N,,,A3,:,Boolean,),{,},Destructor,(,),{,Var,__,:,_,;,},},Class,F4g_,{,Val,Z_,,,$q,,,$_EC5_s,,,_,,,$22H,:,_,;,_,(,x,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,0X93,],,,0x19,],,,0B100011,],,,1,],),{,},Constructor,(,),{,},Var,$b,:,Boolean,;,Destructor,(,),{,Break,;,Break,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_1850(self):
        self.assertTrue(TestLexer.test('''Class Yx:W{Val $e__:_;}Class _{}Class _{Val c,_,VSq6,$85:Array [String ,0X68_3923];}Class I:__t5_{}Class m{}Class _M:G{}''','''Class,Yx,:,W,{,Val,$e__,:,_,;,},Class,_,{,},Class,_,{,Val,c,,,_,,,VSq6,,,$85,:,Array,[,String,,,0X683923,],;,},Class,I,:,__t5_,{,},Class,m,{,},Class,_M,:,G,{,},<EOF>''',101))

    def test_1851(self):
        self.assertTrue(TestLexer.test('''Class d_:_pE{}Class __7d1_{Val a:a;}Class p:_j{}Class _6:S0_{b(){q::$e().___();Continue ;Val j,w3:Array [Array [Float ,9],88];} }''','''Class,d_,:,_pE,{,},Class,__7d1_,{,Val,a,:,a,;,},Class,p,:,_j,{,},Class,_6,:,S0_,{,b,(,),{,q,::,$e,(,),.,___,(,),;,Continue,;,Val,j,,,w3,:,Array,[,Array,[,Float,,,9,],,,88,],;,},},<EOF>''',101))

    def test_1852(self):
        self.assertTrue(TestLexer.test('''Class _{Val $_,$G,__:Array [Array [Boolean ,0130],0b111];Destructor (){}Constructor (Yx:Array [Array [String ,0B111110],0B1_0_1_01];o_:Int ;__,_9,b,ba_A:_2){} }''','''Class,_,{,Val,$_,,,$G,,,__,:,Array,[,Array,[,Boolean,,,0130,],,,0b111,],;,Destructor,(,),{,},Constructor,(,Yx,:,Array,[,Array,[,String,,,0B111110,],,,0B10101,],;,o_,:,Int,;,__,,,_9,,,b,,,ba_A,:,_2,),{,},},<EOF>''',101))

    def test_1853(self):
        self.assertTrue(TestLexer.test('''Class _:__nRw{Destructor (){Continue ;}$_3_(_,rH:Array [Float ,59]){} }Class M_:_5{Var C,$GM,$Q5:Float ;Constructor (){}Constructor (__x:Array [Boolean ,2_87]){}Destructor (){}Val s,$3h,_:A;}''','''Class,_,:,__nRw,{,Destructor,(,),{,Continue,;,},$_3_,(,_,,,rH,:,Array,[,Float,,,59,],),{,},},Class,M_,:,_5,{,Var,C,,,$GM,,,$Q5,:,Float,;,Constructor,(,),{,},Constructor,(,__x,:,Array,[,Boolean,,,287,],),{,},Destructor,(,),{,},Val,s,,,$3h,,,_,:,A,;,},<EOF>''',101))

    def test_1854(self):
        self.assertTrue(TestLexer.test('''Class _{}Class E{}Class _I{Val _2,_:_;Destructor (){}Destructor (){T::$3();}Destructor (){Return ;}Var _:__f1;}''','''Class,_,{,},Class,E,{,},Class,_I,{,Val,_2,,,_,:,_,;,Destructor,(,),{,},Destructor,(,),{,T,::,$3,(,),;,},Destructor,(,),{,Return,;,},Var,_,:,__f1,;,},<EOF>''',101))

    def test_1855(self):
        self.assertTrue(TestLexer.test('''Class _T{}Class _v1f{Destructor (){Return ;} }Class __{Destructor (){} }Class __6z:D{Var $_:j=___::$G.q_._()._5.n._;}''','''Class,_T,{,},Class,_v1f,{,Destructor,(,),{,Return,;,},},Class,__,{,Destructor,(,),{,},},Class,__6z,:,D,{,Var,$_,:,j,=,___,::,$G,.,q_,.,_,(,),.,_5,.,n,.,_,;,},<EOF>''',101))

    def test_1856(self):
        self.assertTrue(TestLexer.test('''Class n_0{}Class q_2:_{Val $_:String ;Constructor (_E__:Array [Float ,0x53];C2,H_:_){y__n::$_();}Constructor (){Return ;}Destructor (){Break ;}Var _m,$9,_9_J0,T,$A,$3__w:Array [Boolean ,76];Constructor (__:Array [String ,0x53];K:_){} }Class y:Tpo1{}''','''Class,n_0,{,},Class,q_2,:,_,{,Val,$_,:,String,;,Constructor,(,_E__,:,Array,[,Float,,,0x53,],;,C2,,,H_,:,_,),{,y__n,::,$_,(,),;,},Constructor,(,),{,Return,;,},Destructor,(,),{,Break,;,},Var,_m,,,$9,,,_9_J0,,,T,,,$A,,,$3__w,:,Array,[,Boolean,,,76,],;,Constructor,(,__,:,Array,[,String,,,0x53,],;,K,:,_,),{,},},Class,y,:,Tpo1,{,},<EOF>''',101))

    def test_1857(self):
        self.assertTrue(TestLexer.test('''Class _9{Val $1:Array [Array [Float ,4],064];Destructor (){}$_(P:Boolean ;C_3:Int ){New _().sJ6()._u();Continue ;} }Class _:_{Destructor (){Continue ;}Var I:Int ;}''','''Class,_9,{,Val,$1,:,Array,[,Array,[,Float,,,4,],,,064,],;,Destructor,(,),{,},$_,(,P,:,Boolean,;,C_3,:,Int,),{,New,_,(,),.,sJ6,(,),.,_u,(,),;,Continue,;,},},Class,_,:,_,{,Destructor,(,),{,Continue,;,},Var,I,:,Int,;,},<EOF>''',101))

    def test_1858(self):
        self.assertTrue(TestLexer.test('''Class OfKg{}Class _:lQUxi{}Class E_k_g{Destructor (){}Val $O943:String ;Constructor (_8_,i,___4_:UL7;jN,_8_W,I__Q1:_h;Fi__I2co9__:Array [Array [Boolean ,046],046]){} }''','''Class,OfKg,{,},Class,_,:,lQUxi,{,},Class,E_k_g,{,Destructor,(,),{,},Val,$O943,:,String,;,Constructor,(,_8_,,,i,,,___4_,:,UL7,;,jN,,,_8_W,,,I__Q1,:,_h,;,Fi__I2co9__,:,Array,[,Array,[,Boolean,,,046,],,,046,],),{,},},<EOF>''',101))

    def test_1859(self):
        self.assertTrue(TestLexer.test('''Class o:_{Var $_pI,He7:S_;$Hu(){} }Class _:X_{Val _w2:Array [Array [Boolean ,0B110101],46];Var _4,_5G:w;}Class JO_:b{}Class v{_(){} }''','''Class,o,:,_,{,Var,$_pI,,,He7,:,S_,;,$Hu,(,),{,},},Class,_,:,X_,{,Val,_w2,:,Array,[,Array,[,Boolean,,,0B110101,],,,46,],;,Var,_4,,,_5G,:,w,;,},Class,JO_,:,b,{,},Class,v,{,_,(,),{,},},<EOF>''',101))

    def test_1860(self):
        self.assertTrue(TestLexer.test('''Class __{Val $3b:Array [Int ,047];_(_0,P:Int ;__:V){}Constructor (_:Float ;___:Array [Array [Array [String ,5],0b1],0b110110];__:Array [String ,0X4C]){Return ;} }''','''Class,__,{,Val,$3b,:,Array,[,Int,,,047,],;,_,(,_0,,,P,:,Int,;,__,:,V,),{,},Constructor,(,_,:,Float,;,___,:,Array,[,Array,[,Array,[,String,,,5,],,,0b1,],,,0b110110,],;,__,:,Array,[,String,,,0X4C,],),{,Return,;,},},<EOF>''',101))

    def test_1861(self):
        self.assertTrue(TestLexer.test('''Class _:s_{Var P:String ;Destructor (){}Val $_uy_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,0B1],023],0b10_0],0B1011111],070_2],0XE],0xA],0B1011111],5],0B1011111],0XF],0x7],32],32];}''','''Class,_,:,s_,{,Var,P,:,String,;,Destructor,(,),{,},Val,$_uy_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1,],,,023,],,,0b100,],,,0B1011111,],,,0702,],,,0XE,],,,0xA,],,,0B1011111,],,,5,],,,0B1011111,],,,0XF,],,,0x7,],,,32,],,,32,],;,},<EOF>''',101))

    def test_1862(self):
        self.assertTrue(TestLexer.test('''Class _:B{Constructor (){}Destructor (){Val a,z,Cq,Y:_b9;{} }}Class w:_P{Constructor (W,_,_,r,s6:Boolean ;_L:uZ;k4,u:Boolean ){}s__(){}Constructor (){} }''','''Class,_,:,B,{,Constructor,(,),{,},Destructor,(,),{,Val,a,,,z,,,Cq,,,Y,:,_b9,;,{,},},},Class,w,:,_P,{,Constructor,(,W,,,_,,,_,,,r,,,s6,:,Boolean,;,_L,:,uZ,;,k4,,,u,:,Boolean,),{,},s__,(,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_1863(self):
        self.assertTrue(TestLexer.test('''Class P___zl7:V8V2{}Class _:_{}Class G:l{}Class O2{_9_(y50:Array [Array [Array [Int ,0b1000100],0b1_0_0],0x3]){} }Class Z:VT{}''','''Class,P___zl7,:,V8V2,{,},Class,_,:,_,{,},Class,G,:,l,{,},Class,O2,{,_9_,(,y50,:,Array,[,Array,[,Array,[,Int,,,0b1000100,],,,0b100,],,,0x3,],),{,},},Class,Z,:,VT,{,},<EOF>''',101))

    def test_1864(self):
        self.assertTrue(TestLexer.test('''Class _:_0{Val $_n,$__:Float ;Constructor (C_13_:Float ;_2_:Array [Array [Array [Int ,47],0B1],0b1_0];a_:_;C,_:Int ){ {Return ;}Break ;} }''','''Class,_,:,_0,{,Val,$_n,,,$__,:,Float,;,Constructor,(,C_13_,:,Float,;,_2_,:,Array,[,Array,[,Array,[,Int,,,47,],,,0B1,],,,0b10,],;,a_,:,_,;,C,,,_,:,Int,),{,{,Return,;,},Break,;,},},<EOF>''',101))

    def test_1865(self):
        self.assertTrue(TestLexer.test('''Class u_2{}Class _{_(_C6,__,_:Float ;_63_g:Array [Array [Boolean ,064],0B10];n3_3M:Array [Array [String ,27],0X48];z_:Array [Boolean ,0x6];EJ:Array [String ,0X5]){} }Class S:__{}Class b_{}''','''Class,u_2,{,},Class,_,{,_,(,_C6,,,__,,,_,:,Float,;,_63_g,:,Array,[,Array,[,Boolean,,,064,],,,0B10,],;,n3_3M,:,Array,[,Array,[,String,,,27,],,,0X48,],;,z_,:,Array,[,Boolean,,,0x6,],;,EJ,:,Array,[,String,,,0X5,],),{,},},Class,S,:,__,{,},Class,b_,{,},<EOF>''',101))

    def test_1866(self):
        self.assertTrue(TestLexer.test('''Class H_:_{Constructor (){}Constructor (K_06:Array [Boolean ,0X9]){}Constructor (_,_2_b24:dt_3;W,C_:G){} }Class f{}''','''Class,H_,:,_,{,Constructor,(,),{,},Constructor,(,K_06,:,Array,[,Boolean,,,0X9,],),{,},Constructor,(,_,,,_2_b24,:,dt_3,;,W,,,C_,:,G,),{,},},Class,f,{,},<EOF>''',101))

    def test_1867(self):
        self.assertTrue(TestLexer.test('''Class x:p9{Constructor (U:I2X;_:Float ){Var P,_4:P;} }Class Fg:__{Destructor (){Break ;_t::$_();} }Class Z:X__{}''','''Class,x,:,p9,{,Constructor,(,U,:,I2X,;,_,:,Float,),{,Var,P,,,_4,:,P,;,},},Class,Fg,:,__,{,Destructor,(,),{,Break,;,_t,::,$_,(,),;,},},Class,Z,:,X__,{,},<EOF>''',101))

    def test_1868(self):
        self.assertTrue(TestLexer.test('''Class _{}Class MZy{Val $8,$l,$6:Array [Array [Array [Array [Array [Array [Array [String ,0xB_DD],0X53],0x12],7],0XC7_B],0X6_4_F3],03];Destructor (){Continue ;_8::$U.P.W_().E_B3S();}Var $_:Boolean ;}Class r:o8ZJ3{Destructor (){Continue ;Break ;} }''','''Class,_,{,},Class,MZy,{,Val,$8,,,$l,,,$6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0xBDD,],,,0X53,],,,0x12,],,,7,],,,0XC7B,],,,0X64F3,],,,03,],;,Destructor,(,),{,Continue,;,_8,::,$U,.,P,.,W_,(,),.,E_B3S,(,),;,},Var,$_,:,Boolean,;,},Class,r,:,o8ZJ3,{,Destructor,(,),{,Continue,;,Break,;,},},<EOF>''',101))

    def test_1869(self):
        self.assertTrue(TestLexer.test('''Class CArm6_9:_z{}Class W{Val $_wXP,$5,$3_,s:Array [Array [Array [Int ,0112],0B111100],0X58];Var _:_;Var $0,_0_,_,_,$7_,$__4,$_:Boolean ;}Class K615y2o_D_{}''','''Class,CArm6_9,:,_z,{,},Class,W,{,Val,$_wXP,,,$5,,,$3_,,,s,:,Array,[,Array,[,Array,[,Int,,,0112,],,,0B111100,],,,0X58,],;,Var,_,:,_,;,Var,$0,,,_0_,,,_,,,_,,,$7_,,,$__4,,,$_,:,Boolean,;,},Class,K615y2o_D_,{,},<EOF>''',101))

    def test_1870(self):
        self.assertTrue(TestLexer.test('''Class I:N9__{Constructor (){}$__(WN:Float ;v___:Int ){Var T:String ;} }Class _5:_{Destructor (){}Constructor (){Return ;Break ;} }Class O8__:_4__{}Class D5_5:p_{}''','''Class,I,:,N9__,{,Constructor,(,),{,},$__,(,WN,:,Float,;,v___,:,Int,),{,Var,T,:,String,;,},},Class,_5,:,_,{,Destructor,(,),{,},Constructor,(,),{,Return,;,Break,;,},},Class,O8__,:,_4__,{,},Class,D5_5,:,p_,{,},<EOF>''',101))

    def test_1871(self):
        self.assertTrue(TestLexer.test('''Class _:d__8{}Class n0:y{Val _1263,$___,Z,$U6__6:Array [Boolean ,044];Val __4,$8:Array [String ,0X5];}Class gT{Destructor (){}Val $G:Int ;}''','''Class,_,:,d__8,{,},Class,n0,:,y,{,Val,_1263,,,$___,,,Z,,,$U6__6,:,Array,[,Boolean,,,044,],;,Val,__4,,,$8,:,Array,[,String,,,0X5,],;,},Class,gT,{,Destructor,(,),{,},Val,$G,:,Int,;,},<EOF>''',101))

    def test_1872(self):
        self.assertTrue(TestLexer.test('''Class _N:A{}Class __:G_229{$12U_(h,_,Y:Array [Array [Array [Array [String ,64],64],0B10],64]){} }Class __{}Class _79_:m_{Constructor (){}Var $2,$_,$__,$4,b__:Array [Boolean ,06];}''','''Class,_N,:,A,{,},Class,__,:,G_229,{,$12U_,(,h,,,_,,,Y,:,Array,[,Array,[,Array,[,Array,[,String,,,64,],,,64,],,,0B10,],,,64,],),{,},},Class,__,{,},Class,_79_,:,m_,{,Constructor,(,),{,},Var,$2,,,$_,,,$__,,,$4,,,b__,:,Array,[,Boolean,,,06,],;,},<EOF>''',101))

    def test_1873(self):
        self.assertTrue(TestLexer.test('''Class _h{_(_,a:String ;_:Array [Int ,0XB];_:Array [Array [Array [Array [Array [Boolean ,0b1001001],85],0b1001001],0x1],0b1001001];t__,_WN,_:Boolean ){Return ;} }Class _i2Y:s{Val J,$vB_:Array [Int ,043];}Class y4{}Class H{Constructor (){} }''','''Class,_h,{,_,(,_,,,a,:,String,;,_,:,Array,[,Int,,,0XB,],;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1001001,],,,85,],,,0b1001001,],,,0x1,],,,0b1001001,],;,t__,,,_WN,,,_,:,Boolean,),{,Return,;,},},Class,_i2Y,:,s,{,Val,J,,,$vB_,:,Array,[,Int,,,043,],;,},Class,y4,{,},Class,H,{,Constructor,(,),{,},},<EOF>''',101))

    def test_1874(self):
        self.assertTrue(TestLexer.test('''Class _{}Class G:_{}Class f7L:X{Constructor (_89_Q9:_4;M_98_:Array [Array [Array [Array [Boolean ,1],0xE],0B1010001],0253]){}Destructor (){}$io9_87H(){} }''','''Class,_,{,},Class,G,:,_,{,},Class,f7L,:,X,{,Constructor,(,_89_Q9,:,_4,;,M_98_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,1,],,,0xE,],,,0B1010001,],,,0253,],),{,},Destructor,(,),{,},$io9_87H,(,),{,},},<EOF>''',101))

    def test_1875(self):
        self.assertTrue(TestLexer.test('''Class O{Constructor (__,_:Int ;ggG,j9:Int ){} }Class m:Z483{Constructor (_97,_:Array [Array [Boolean ,0121],76];Z5,_q,_,_,_,_,G,X:Float ){Var _,j0,N2V0_:_;}$aY(){} }''','''Class,O,{,Constructor,(,__,,,_,:,Int,;,ggG,,,j9,:,Int,),{,},},Class,m,:,Z483,{,Constructor,(,_97,,,_,:,Array,[,Array,[,Boolean,,,0121,],,,76,],;,Z5,,,_q,,,_,,,_,,,_,,,_,,,G,,,X,:,Float,),{,Var,_,,,j0,,,N2V0_,:,_,;,},$aY,(,),{,},},<EOF>''',101))

    def test_1876(self):
        self.assertTrue(TestLexer.test('''Class _{}Class Xk:_{Constructor (_32:Array [Array [Array [Float ,54],0x3A],38];n6u:Array [Int ,8]){}Constructor (__rm_B94:kV){} }Class W_{Constructor (){Continue ;}Destructor (){} }''','''Class,_,{,},Class,Xk,:,_,{,Constructor,(,_32,:,Array,[,Array,[,Array,[,Float,,,54,],,,0x3A,],,,38,],;,n6u,:,Array,[,Int,,,8,],),{,},Constructor,(,__rm_B94,:,kV,),{,},},Class,W_,{,Constructor,(,),{,Continue,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_1877(self):
        self.assertTrue(TestLexer.test('''Class qNs:_{}Class YZ:_0{Constructor (y_:Array [Array [Array [String ,3],0X5],0114];_,_,k,_,n_:Array [Array [Array [Boolean ,0XD],02],3]){} }''','''Class,qNs,:,_,{,},Class,YZ,:,_0,{,Constructor,(,y_,:,Array,[,Array,[,Array,[,String,,,3,],,,0X5,],,,0114,],;,_,,,_,,,k,,,_,,,n_,:,Array,[,Array,[,Array,[,Boolean,,,0XD,],,,02,],,,3,],),{,},},<EOF>''',101))

    def test_1878(self):
        self.assertTrue(TestLexer.test('''Class Ev_{Val M,$6,$191:String ;}Class _53:X{}Class _1_:U{Val $_,Vz_,_6:s;Destructor (){} }Class J{Constructor (E_:Float ){} }''','''Class,Ev_,{,Val,M,,,$6,,,$191,:,String,;,},Class,_53,:,X,{,},Class,_1_,:,U,{,Val,$_,,,Vz_,,,_6,:,s,;,Destructor,(,),{,},},Class,J,{,Constructor,(,E_,:,Float,),{,},},<EOF>''',101))

    def test_1879(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class x{}Class _{Var $P,$a1:_;y_(){} }Class _{Var $9:_;}Class QUT{Var k__2,y4Hp_1,$V:_68_C5;}Class x:__m_{__p1S_5t__(_,ne,P,V9_:Array [Array [Array [Array [Array [Array [Boolean ,0x4],01],01],0B10100],6_6_25],51]){} }''','''Class,_,:,_,{,},Class,x,{,},Class,_,{,Var,$P,,,$a1,:,_,;,y_,(,),{,},},Class,_,{,Var,$9,:,_,;,},Class,QUT,{,Var,k__2,,,y4Hp_1,,,$V,:,_68_C5,;,},Class,x,:,__m_,{,__p1S_5t__,(,_,,,ne,,,P,,,V9_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x4,],,,01,],,,01,],,,0B10100,],,,6625,],,,51,],),{,},},<EOF>''',101))

    def test_1880(self):
        self.assertTrue(TestLexer.test('''Class __:I__{$29g(){} }Class __0{Val _:Array [Array [Array [Array [Array [Array [Boolean ,014],13],0b101011],06],0x36],03];Constructor (_,J_U:L;_,_0_:Float ;_91_,_,T3c37,v:_;_1R:I7;__g:Float ){Continue ;} }''','''Class,__,:,I__,{,$29g,(,),{,},},Class,__0,{,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,014,],,,13,],,,0b101011,],,,06,],,,0x36,],,,03,],;,Constructor,(,_,,,J_U,:,L,;,_,,,_0_,:,Float,;,_91_,,,_,,,T3c37,,,v,:,_,;,_1R,:,I7,;,__g,:,Float,),{,Continue,;,},},<EOF>''',101))

    def test_1881(self):
        self.assertTrue(TestLexer.test('''Class _:___{Var $h:Array [Boolean ,18_1];Destructor (){} }Class c_{}Class __:_o{m(I9_,_k,_4:Array [Boolean ,01];R:Boolean ;S3,__:Float ){} }Class _{}''','''Class,_,:,___,{,Var,$h,:,Array,[,Boolean,,,181,],;,Destructor,(,),{,},},Class,c_,{,},Class,__,:,_o,{,m,(,I9_,,,_k,,,_4,:,Array,[,Boolean,,,01,],;,R,:,Boolean,;,S3,,,__,:,Float,),{,},},Class,_,{,},<EOF>''',101))

    def test_1882(self):
        self.assertTrue(TestLexer.test('''Class _m{}Class G:_3{Destructor (){Continue ;}Destructor (){}_p(__,t4,A5:Boolean ){}Val $x8_,$___:Float ;}Class _PxA{Var wJ,$G__:Array [Array [String ,0b1001011],0xB];}''','''Class,_m,{,},Class,G,:,_3,{,Destructor,(,),{,Continue,;,},Destructor,(,),{,},_p,(,__,,,t4,,,A5,:,Boolean,),{,},Val,$x8_,,,$___,:,Float,;,},Class,_PxA,{,Var,wJ,,,$G__,:,Array,[,Array,[,String,,,0b1001011,],,,0xB,],;,},<EOF>''',101))

    def test_1883(self):
        self.assertTrue(TestLexer.test('''Class MR3:l_{$3H(){}Constructor (_2U53,n,S,L0:__D){}__(Tr:__F){}Var _S:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,0B1_0],18],03],0b100110],481],0B1000],0x33],7],0b1_11_0_1_1];}Class x{}''','''Class,MR3,:,l_,{,$3H,(,),{,},Constructor,(,_2U53,,,n,,,S,,,L0,:,__D,),{,},__,(,Tr,:,__F,),{,},Var,_S,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B10,],,,18,],,,03,],,,0b100110,],,,481,],,,0B1000,],,,0x33,],,,7,],,,0b111011,],;,},Class,x,{,},<EOF>''',101))

    def test_1884(self):
        self.assertTrue(TestLexer.test('''Class _:J{$vm(_68:__7;e:Array [Array [Array [Array [Float ,01_4],0141],0X3_99],33];_X:Array [Array [Array [Int ,0x28],06_1],07]){ {} }}Class N{}''','''Class,_,:,J,{,$vm,(,_68,:,__7,;,e,:,Array,[,Array,[,Array,[,Array,[,Float,,,014,],,,0141,],,,0X399,],,,33,],;,_X,:,Array,[,Array,[,Array,[,Int,,,0x28,],,,061,],,,07,],),{,{,},},},Class,N,{,},<EOF>''',101))

    def test_1885(self):
        self.assertTrue(TestLexer.test('''Class n__U{Destructor (){}Constructor (__1:__S;_:Array [Float ,063];_,_C_,_:Float ){} }Class L:E{}Class _:D{$E(_,S:Array [Array [Int ,0xDA],0XE];JT,x8:Float ;_:Boolean ){Var O_,S:Boolean ;}Var _4,$m3,$8,$J:Array [Array [Boolean ,063],5];$_(g,_:Array [Array [Int ,0XF_6C_D_1_B7],5]){} }''','''Class,n__U,{,Destructor,(,),{,},Constructor,(,__1,:,__S,;,_,:,Array,[,Float,,,063,],;,_,,,_C_,,,_,:,Float,),{,},},Class,L,:,E,{,},Class,_,:,D,{,$E,(,_,,,S,:,Array,[,Array,[,Int,,,0xDA,],,,0XE,],;,JT,,,x8,:,Float,;,_,:,Boolean,),{,Var,O_,,,S,:,Boolean,;,},Var,_4,,,$m3,,,$8,,,$J,:,Array,[,Array,[,Boolean,,,063,],,,5,],;,$_,(,g,,,_,:,Array,[,Array,[,Int,,,0XF6CD1B7,],,,5,],),{,},},<EOF>''',101))

    def test_1886(self):
        self.assertTrue(TestLexer.test('''Class T{Constructor (z15:j;_4:Float ;_,K,__,WC_:Array [Array [Array [Float ,0127],0B1_1_1_0],1];I__:Array [Array [Int ,0x14],02_5];_N:Array [Array [Array [Array [Int ,0b1],01],9_3_8],0127];H0,__,_:_){}gP(G_06:Array [String ,9_9_9];FJ:L1;_:String ){} }''','''Class,T,{,Constructor,(,z15,:,j,;,_4,:,Float,;,_,,,K,,,__,,,WC_,:,Array,[,Array,[,Array,[,Float,,,0127,],,,0B1110,],,,1,],;,I__,:,Array,[,Array,[,Int,,,0x14,],,,025,],;,_N,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,01,],,,938,],,,0127,],;,H0,,,__,,,_,:,_,),{,},gP,(,G_06,:,Array,[,String,,,999,],;,FJ,:,L1,;,_,:,String,),{,},},<EOF>''',101))

    def test_1887(self):
        self.assertTrue(TestLexer.test('''Class _{$_(J:Array [Array [Int ,03],0x9];_:_;_,_3_:String ;X5,_,G,__f43,T,O8:Array [Boolean ,3];q_v9_:_){Break ;} }''','''Class,_,{,$_,(,J,:,Array,[,Array,[,Int,,,03,],,,0x9,],;,_,:,_,;,_,,,_3_,:,String,;,X5,,,_,,,G,,,__f43,,,T,,,O8,:,Array,[,Boolean,,,3,],;,q_v9_,:,_,),{,Break,;,},},<EOF>''',101))

    def test_1888(self):
        self.assertTrue(TestLexer.test('''Class p{$4_(_7__5_,y_A:_9;v_8,_,Hf:Array [Array [Array [String ,4],02],17];F:Boolean ;__G_:Float ;W9M4,a:Boolean ;v,_:_){}Var _,$v,_2q,_,$_:Array [Boolean ,04];Destructor (){Var _:Boolean ;} }Class __y{X(__p2d:Array [Int ,0X8];o:Boolean ){} }''','''Class,p,{,$4_,(,_7__5_,,,y_A,:,_9,;,v_8,,,_,,,Hf,:,Array,[,Array,[,Array,[,String,,,4,],,,02,],,,17,],;,F,:,Boolean,;,__G_,:,Float,;,W9M4,,,a,:,Boolean,;,v,,,_,:,_,),{,},Var,_,,,$v,,,_2q,,,_,,,$_,:,Array,[,Boolean,,,04,],;,Destructor,(,),{,Var,_,:,Boolean,;,},},Class,__y,{,X,(,__p2d,:,Array,[,Int,,,0X8,],;,o,:,Boolean,),{,},},<EOF>''',101))

    def test_1889(self):
        self.assertTrue(TestLexer.test('''Class _{$_Ni(G,_2_D,__,H_,w:__;__2:String ;_B3_1j:Float ;u,_,_:___){}r(n,M:String ;__g:Array [Boolean ,0b1000110];L8n:___6;_,_,G,_,_:OT_;E_U8__,_6,_,_:String ;_29:_b9_3_;B_0,Y:x78l104;B:Array [Int ,0B1]){}Destructor (){} }''','''Class,_,{,$_Ni,(,G,,,_2_D,,,__,,,H_,,,w,:,__,;,__2,:,String,;,_B3_1j,:,Float,;,u,,,_,,,_,:,___,),{,},r,(,n,,,M,:,String,;,__g,:,Array,[,Boolean,,,0b1000110,],;,L8n,:,___6,;,_,,,_,,,G,,,_,,,_,:,OT_,;,E_U8__,,,_6,,,_,,,_,:,String,;,_29,:,_b9_3_,;,B_0,,,Y,:,x78l104,;,B,:,Array,[,Int,,,0B1,],),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_1890(self):
        self.assertTrue(TestLexer.test('''Class _{$o(_,_,_9:Array [Array [Array [Array [Array [Boolean ,066],0X5],0X38],87],0b1_1_1]){Continue ;}Var $Ge,__,d2:Array [Int ,0XAC];}''','''Class,_,{,$o,(,_,,,_,,,_9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,066,],,,0X5,],,,0X38,],,,87,],,,0b111,],),{,Continue,;,},Var,$Ge,,,__,,,d2,:,Array,[,Int,,,0XAC,],;,},<EOF>''',101))

    def test_1891(self):
        self.assertTrue(TestLexer.test('''Class oY328{Val $71,$D_,$5:Boolean ;J(){}Var $9,T_,$85_1_V,$_:Array [Array [Array [Array [Float ,97],0B1_0_00110],5],0B1001_1_0];}Class _{}''','''Class,oY328,{,Val,$71,,,$D_,,,$5,:,Boolean,;,J,(,),{,},Var,$9,,,T_,,,$85_1_V,,,$_,:,Array,[,Array,[,Array,[,Array,[,Float,,,97,],,,0B1000110,],,,5,],,,0B100110,],;,},Class,_,{,},<EOF>''',101))

    def test_1892(self):
        self.assertTrue(TestLexer.test('''Class i8Dy{Constructor (q,_67,H,_,_:Boolean ){Var F,j,d:Array [Array [Boolean ,0140],052];}Constructor (Q38,AT,M2:F){}Var $p:k9;}''','''Class,i8Dy,{,Constructor,(,q,,,_67,,,H,,,_,,,_,:,Boolean,),{,Var,F,,,j,,,d,:,Array,[,Array,[,Boolean,,,0140,],,,052,],;,},Constructor,(,Q38,,,AT,,,M2,:,F,),{,},Var,$p,:,k9,;,},<EOF>''',101))

    def test_1893(self):
        self.assertTrue(TestLexer.test('''Class v{Val _,$_f_,__,$_H:Boolean ;Destructor (){}$o5(_g,_yB:Array [Array [Array [Int ,0x51],05_77],06_2];p,_A6_D,x,_:_){} }''','''Class,v,{,Val,_,,,$_f_,,,__,,,$_H,:,Boolean,;,Destructor,(,),{,},$o5,(,_g,,,_yB,:,Array,[,Array,[,Array,[,Int,,,0x51,],,,0577,],,,062,],;,p,,,_A6_D,,,x,,,_,:,_,),{,},},<EOF>''',101))

    def test_1894(self):
        self.assertTrue(TestLexer.test('''Class A_{}Class _V:N{}Class __:_{}Class _:_8{Var $_,$_PEs_:Array [Array [String ,100],0XB];Var n_F,$_e:Array [Array [Float ,0b100],0B101011];}''','''Class,A_,{,},Class,_V,:,N,{,},Class,__,:,_,{,},Class,_,:,_8,{,Var,$_,,,$_PEs_,:,Array,[,Array,[,String,,,100,],,,0XB,],;,Var,n_F,,,$_e,:,Array,[,Array,[,Float,,,0b100,],,,0B101011,],;,},<EOF>''',101))

    def test_1895(self):
        self.assertTrue(TestLexer.test('''Class _0__1R:Q{Val R____,N,$x_N,$_Z:Array [Array [Array [Array [Array [Array [Array [Array [String ,05],0b10100],0B10_10],0x4_2],043],92],027],05_46];}''','''Class,_0__1R,:,Q,{,Val,R____,,,N,,,$x_N,,,$_Z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,05,],,,0b10100,],,,0B1010,],,,0x42,],,,043,],,,92,],,,027,],,,0546,],;,},<EOF>''',101))

    def test_1896(self):
        self.assertTrue(TestLexer.test('''Class _:__{Constructor (X:t;__:String ){} }Class Q:yM{E4(){}Constructor (p:___bY2;_3y4:Z3z4;_n:_){Break ;Continue ;{}Continue ;} }''','''Class,_,:,__,{,Constructor,(,X,:,t,;,__,:,String,),{,},},Class,Q,:,yM,{,E4,(,),{,},Constructor,(,p,:,___bY2,;,_3y4,:,Z3z4,;,_n,:,_,),{,Break,;,Continue,;,{,},Continue,;,},},<EOF>''',101))

    def test_1897(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){} }Class _{Destructor (){Y_::$_();Var _:String ;T7M::$_L();}$_85QZ(__10:Array [Array [Float ,06_15],0X1E]){} }''','''Class,_,{,Destructor,(,),{,},},Class,_,{,Destructor,(,),{,Y_,::,$_,(,),;,Var,_,:,String,;,T7M,::,$_L,(,),;,},$_85QZ,(,__10,:,Array,[,Array,[,Float,,,0615,],,,0X1E,],),{,},},<EOF>''',101))

    def test_1898(self):
        self.assertTrue(TestLexer.test('''Class _:Jx{$2_(){}Var i5:Array [Array [Array [Int ,0X3],94],94];}Class ___M:__8{B7_56_(n_:Boolean ){}Destructor (){Break ;}R(){}_(_:Boolean ){} }''','''Class,_,:,Jx,{,$2_,(,),{,},Var,i5,:,Array,[,Array,[,Array,[,Int,,,0X3,],,,94,],,,94,],;,},Class,___M,:,__8,{,B7_56_,(,n_,:,Boolean,),{,},Destructor,(,),{,Break,;,},R,(,),{,},_,(,_,:,Boolean,),{,},},<EOF>''',101))

    def test_1899(self):
        self.assertTrue(TestLexer.test('''Class _9{Var Z_,U2r_9i8L_x,$_9:G;Val p,D40_,$__h:pc6;}Class Kk4{}Class p:__5g_{Q(pV6:Boolean ){} }Class _4:_J{}Class lM{}''','''Class,_9,{,Var,Z_,,,U2r_9i8L_x,,,$_9,:,G,;,Val,p,,,D40_,,,$__h,:,pc6,;,},Class,Kk4,{,},Class,p,:,__5g_,{,Q,(,pV6,:,Boolean,),{,},},Class,_4,:,_J,{,},Class,lM,{,},<EOF>''',101))

    def test_1900(self):
        self.assertTrue(TestLexer.test('''Class _{q(_0l_,_,l0:Int ;eJ19,b,_,V_,SZ,vJ:Array [Int ,0110];d7:Float ;l,tQ,o:_;_:Array [Float ,0b1];t,R:I;_,_,F__,_,____:Array [Int ,07]){}Val $_,C,$6g_:Array [Boolean ,0X1B];}Class __{}''','''Class,_,{,q,(,_0l_,,,_,,,l0,:,Int,;,eJ19,,,b,,,_,,,V_,,,SZ,,,vJ,:,Array,[,Int,,,0110,],;,d7,:,Float,;,l,,,tQ,,,o,:,_,;,_,:,Array,[,Float,,,0b1,],;,t,,,R,:,I,;,_,,,_,,,F__,,,_,,,____,:,Array,[,Int,,,07,],),{,},Val,$_,,,C,,,$6g_,:,Array,[,Boolean,,,0X1B,],;,},Class,__,{,},<EOF>''',101))

    def test_1901(self):
        self.assertTrue(TestLexer.test('''Class EP:V3I_{Var ___1__L,C,_c,$b_:K_2_LP8G;Var _:String ;}Class ___:L_{Destructor (){}Destructor (){} }Class Q9{}''','''Class,EP,:,V3I_,{,Var,___1__L,,,C,,,_c,,,$b_,:,K_2_LP8G,;,Var,_,:,String,;,},Class,___,:,L_,{,Destructor,(,),{,},Destructor,(,),{,},},Class,Q9,{,},<EOF>''',101))

    def test_1902(self):
        self.assertTrue(TestLexer.test('''Class uMd:_{}Class V:liZ{Val $_F,$__:Array [Array [Array [Array [Float ,0B10_1],51],74_1],8_7_5_1];Val k_0Q0:Array [Array [Array [Float ,97],0XB],0100];Var c:String ;}''','''Class,uMd,:,_,{,},Class,V,:,liZ,{,Val,$_F,,,$__,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B101,],,,51,],,,741,],,,8751,],;,Val,k_0Q0,:,Array,[,Array,[,Array,[,Float,,,97,],,,0XB,],,,0100,],;,Var,c,:,String,;,},<EOF>''',101))

    def test_1903(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class w28:_{}Class _:X18g_71{Constructor (){Continue ;}$_(_C,_0,_U:U3;G0:String ;I,_:Boolean ;i:_mr4_){} }''','''Class,_,:,_,{,},Class,w28,:,_,{,},Class,_,:,X18g_71,{,Constructor,(,),{,Continue,;,},$_,(,_C,,,_0,,,_U,:,U3,;,G0,:,String,;,I,,,_,:,Boolean,;,i,:,_mr4_,),{,},},<EOF>''',101))

    def test_1904(self):
        self.assertTrue(TestLexer.test('''Class o3{}Class _s:m1{}Class X4{Val $zV1,$g,$m__,$Bm:_W;$_g(_,f,DV8,s:N4;_8w:Int ){T4____::$y_();Val Lt_,_,Z1:Array [Array [Array [Array [Int ,5_94],0X8_D_7E],0104],0b1];Continue ;}Destructor (){} }''','''Class,o3,{,},Class,_s,:,m1,{,},Class,X4,{,Val,$zV1,,,$g,,,$m__,,,$Bm,:,_W,;,$_g,(,_,,,f,,,DV8,,,s,:,N4,;,_8w,:,Int,),{,T4____,::,$y_,(,),;,Val,Lt_,,,_,,,Z1,:,Array,[,Array,[,Array,[,Array,[,Int,,,594,],,,0X8D7E,],,,0104,],,,0b1,],;,Continue,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_1905(self):
        self.assertTrue(TestLexer.test('''Class e:c{Destructor (){} }Class xG:Xm_{Constructor (_,o_Z,_8z,_4_,_:Int ){}Constructor (__,_,i,U7:Int ;_:Float ;KB,ZV,_,_,_:Array [Array [Array [Array [Float ,0X7],0B1_0_00_0],0B111010],0X6]){} }Class _q298p:_{}''','''Class,e,:,c,{,Destructor,(,),{,},},Class,xG,:,Xm_,{,Constructor,(,_,,,o_Z,,,_8z,,,_4_,,,_,:,Int,),{,},Constructor,(,__,,,_,,,i,,,U7,:,Int,;,_,:,Float,;,KB,,,ZV,,,_,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X7,],,,0B10000,],,,0B111010,],,,0X6,],),{,},},Class,_q298p,:,_,{,},<EOF>''',101))

    def test_1906(self):
        self.assertTrue(TestLexer.test('''Class _:X28v{}Class y:e_{$n(_1,c:_;V73q,___:Array [String ,0B1];x,YV:Float ;u1:Boolean ){Continue ;Var _,_9,X_5,K,_,o_h:Int ;Continue ;{} }}''','''Class,_,:,X28v,{,},Class,y,:,e_,{,$n,(,_1,,,c,:,_,;,V73q,,,___,:,Array,[,String,,,0B1,],;,x,,,YV,:,Float,;,u1,:,Boolean,),{,Continue,;,Var,_,,,_9,,,X_5,,,K,,,_,,,o_h,:,Int,;,Continue,;,{,},},},<EOF>''',101))

    def test_1907(self):
        self.assertTrue(TestLexer.test('''Class FsD:d{Var _:Array [Array [Array [Array [Array [Array [Array [Int ,19],5_72_99_23_3],03],0B1110],0X7_52],4_9],0b10];}''','''Class,FsD,:,d,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,19,],,,57299233,],,,03,],,,0B1110,],,,0X752,],,,49,],,,0b10,],;,},<EOF>''',101))

    def test_1908(self):
        self.assertTrue(TestLexer.test('''Class pv_d{_(L786,_,_4:Boolean ;v1_:B){}Constructor (_,__:_;_:String ;j,__:P__;_,_,m4N,_:Array [String ,7]){} }''','''Class,pv_d,{,_,(,L786,,,_,,,_4,:,Boolean,;,v1_,:,B,),{,},Constructor,(,_,,,__,:,_,;,_,:,String,;,j,,,__,:,P__,;,_,,,_,,,m4N,,,_,:,Array,[,String,,,7,],),{,},},<EOF>''',101))

    def test_1909(self):
        self.assertTrue(TestLexer.test('''Class W8:_{Var T8_:String ;Var E_36,_Lb:K_;Val $9,$x:Array [Boolean ,0X36];}Class _:_{Constructor (__b,ixdl_,Sh,_,_:Int ;Y,_tR:Array [Boolean ,72];R,_:g;_:n;__V__,_,_:Array [Int ,0b11];_:String ){Continue ;} }Class Uf:AX_{}Class V{}''','''Class,W8,:,_,{,Var,T8_,:,String,;,Var,E_36,,,_Lb,:,K_,;,Val,$9,,,$x,:,Array,[,Boolean,,,0X36,],;,},Class,_,:,_,{,Constructor,(,__b,,,ixdl_,,,Sh,,,_,,,_,:,Int,;,Y,,,_tR,:,Array,[,Boolean,,,72,],;,R,,,_,:,g,;,_,:,n,;,__V__,,,_,,,_,:,Array,[,Int,,,0b11,],;,_,:,String,),{,Continue,;,},},Class,Uf,:,AX_,{,},Class,V,{,},<EOF>''',101))

    def test_1910(self):
        self.assertTrue(TestLexer.test('''Class _2Y{}Class v:_{Constructor (_3,s2,_,v50,t_1,P_H__b_:C;g:Int ;bF_,l:_){} }Class __9M{}Class _:_l_ZU__32_{}''','''Class,_2Y,{,},Class,v,:,_,{,Constructor,(,_3,,,s2,,,_,,,v50,,,t_1,,,P_H__b_,:,C,;,g,:,Int,;,bF_,,,l,:,_,),{,},},Class,__9M,{,},Class,_,:,_l_ZU__32_,{,},<EOF>''',101))

    def test_1911(self):
        self.assertTrue(TestLexer.test('''Class _:M{Var $e8,$y:e=!!-_7::$K.oL._.V_.mUw()._*-False ,--True ._;}Class t1{$9S(O5:Float ;__e_,J,_:u;_:String ;C9,G,_M1:Boolean ;Sp9_3r_02R_m:Array [Array [Array [Array [Array [Array [Array [Array [String ,0x56],0X2E],0x56],0x56],0X2E],0x4_A_D],04],042];_:Array [Int ,042];f_,_:h7){ {} }}''','''Class,_,:,M,{,Var,$e8,,,$y,:,e,=,!,!,-,_7,::,$K,.,oL,.,_,.,V_,.,mUw,(,),.,_,*,-,False,,,-,-,True,.,_,;,},Class,t1,{,$9S,(,O5,:,Float,;,__e_,,,J,,,_,:,u,;,_,:,String,;,C9,,,G,,,_M1,:,Boolean,;,Sp9_3r_02R_m,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x56,],,,0X2E,],,,0x56,],,,0x56,],,,0X2E,],,,0x4AD,],,,04,],,,042,],;,_,:,Array,[,Int,,,042,],;,f_,,,_,:,h7,),{,{,},},},<EOF>''',101))

    def test_1912(self):
        self.assertTrue(TestLexer.test('''Class D26l{Constructor (ki,Q,IM_,_A,Y:Array [String ,04];_2,S_6_,I,_,rj,P8,z,m,S_A,X,MZ,fVnU,K2,y,_58,_:Float ){} }''','''Class,D26l,{,Constructor,(,ki,,,Q,,,IM_,,,_A,,,Y,:,Array,[,String,,,04,],;,_2,,,S_6_,,,I,,,_,,,rj,,,P8,,,z,,,m,,,S_A,,,X,,,MZ,,,fVnU,,,K2,,,y,,,_58,,,_,:,Float,),{,},},<EOF>''',101))

    def test_1913(self):
        self.assertTrue(TestLexer.test('''Class j{}Class E2_NJ:As6{$w_Uq1BB(_A155,T8:Array [Array [Array [String ,0X8],0X8],0x21];_,___:Array [Int ,0x21];k_,_I_3,b_2:String ){}Constructor (S2b1,_9,J_,A:Array [Boolean ,07]){}$_(_c2:Float ;_:_){} }''','''Class,j,{,},Class,E2_NJ,:,As6,{,$w_Uq1BB,(,_A155,,,T8,:,Array,[,Array,[,Array,[,String,,,0X8,],,,0X8,],,,0x21,],;,_,,,___,:,Array,[,Int,,,0x21,],;,k_,,,_I_3,,,b_2,:,String,),{,},Constructor,(,S2b1,,,_9,,,J_,,,A,:,Array,[,Boolean,,,07,],),{,},$_,(,_c2,:,Float,;,_,:,_,),{,},},<EOF>''',101))

    def test_1914(self):
        self.assertTrue(TestLexer.test('''Class _r:__{}Class T75{}Class _7:h_C{$4Q(_:Array [String ,0224_03_5];_:Array [String ,0xD];_,H:_t41q2;_,_:_){Continue ;}Var _:Array [Array [Array [Array [Array [Array [Array [String ,056],5],56],56],05_1],0X3B],0xD];}''','''Class,_r,:,__,{,},Class,T75,{,},Class,_7,:,h_C,{,$4Q,(,_,:,Array,[,String,,,0224035,],;,_,:,Array,[,String,,,0xD,],;,_,,,H,:,_t41q2,;,_,,,_,:,_,),{,Continue,;,},Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,056,],,,5,],,,56,],,,56,],,,051,],,,0X3B,],,,0xD,],;,},<EOF>''',101))

    def test_1915(self):
        self.assertTrue(TestLexer.test('''Class O5:_1r{}Class _:N_D_{Val $N7yu94_,O:Array [Array [Boolean ,0b1100000],0b11_1_0];Var $_8t,s,$X8:Boolean ;Val l:W;}Class g{Var $6_4Y_,Pe:Boolean ;}Class NqP:_{}''','''Class,O5,:,_1r,{,},Class,_,:,N_D_,{,Val,$N7yu94_,,,O,:,Array,[,Array,[,Boolean,,,0b1100000,],,,0b1110,],;,Var,$_8t,,,s,,,$X8,:,Boolean,;,Val,l,:,W,;,},Class,g,{,Var,$6_4Y_,,,Pe,:,Boolean,;,},Class,NqP,:,_,{,},<EOF>''',101))

    def test_1916(self):
        self.assertTrue(TestLexer.test('''Class l_a_4{$3__6m_(){Break ;} }Class P_J:P{}Class Y_:I{Constructor (Y,o,_:Array [Array [Array [Array [Int ,044],0XA],0XE],84];_,_,_:_05){} }Class d:__99L{}Class _:_{}''','''Class,l_a_4,{,$3__6m_,(,),{,Break,;,},},Class,P_J,:,P,{,},Class,Y_,:,I,{,Constructor,(,Y,,,o,,,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,044,],,,0XA,],,,0XE,],,,84,],;,_,,,_,,,_,:,_05,),{,},},Class,d,:,__99L,{,},Class,_,:,_,{,},<EOF>''',101))

    def test_1917(self):
        self.assertTrue(TestLexer.test('''Class _5:D{}Class _{}Class _V:q{Constructor (){}Val $20:String ;Var $4_,$X9:Array [Array [Array [Float ,03],2_086],04];}''','''Class,_5,:,D,{,},Class,_,{,},Class,_V,:,q,{,Constructor,(,),{,},Val,$20,:,String,;,Var,$4_,,,$X9,:,Array,[,Array,[,Array,[,Float,,,03,],,,2086,],,,04,],;,},<EOF>''',101))

    def test_1918(self):
        self.assertTrue(TestLexer.test('''Class T:x{}Class ___k:__K{}Class _1_:z4h{}Class _9{}Class hjQ8h3_Y:__{Var X_,j1:Array [Array [String ,06],6];}''','''Class,T,:,x,{,},Class,___k,:,__K,{,},Class,_1_,:,z4h,{,},Class,_9,{,},Class,hjQ8h3_Y,:,__,{,Var,X_,,,j1,:,Array,[,Array,[,String,,,06,],,,6,],;,},<EOF>''',101))

    def test_1919(self):
        self.assertTrue(TestLexer.test('''Class _27_y:__8{Constructor (_,_8386:Array [Array [Int ,04],0x1];_Xx,__:__0;Z:_9S;t,_,U:_P;_W_,xx7_4,_,GE,_Tqi,Z,_x_9_,__39:_;m_f,R,r,_8,ks:Array [Boolean ,9]){} }''','''Class,_27_y,:,__8,{,Constructor,(,_,,,_8386,:,Array,[,Array,[,Int,,,04,],,,0x1,],;,_Xx,,,__,:,__0,;,Z,:,_9S,;,t,,,_,,,U,:,_P,;,_W_,,,xx7_4,,,_,,,GE,,,_Tqi,,,Z,,,_x_9_,,,__39,:,_,;,m_f,,,R,,,r,,,_8,,,ks,:,Array,[,Boolean,,,9,],),{,},},<EOF>''',101))

    def test_1920(self):
        self.assertTrue(TestLexer.test('''Class BU{Val $Du19_,$2Ype__S,_,$9:Array [Boolean ,067];Constructor (_,__I:H;_:Array [Array [String ,0x1],0B1]){}$Y(_,dt:Z;____:String ;W:_2_){} }''','''Class,BU,{,Val,$Du19_,,,$2Ype__S,,,_,,,$9,:,Array,[,Boolean,,,067,],;,Constructor,(,_,,,__I,:,H,;,_,:,Array,[,Array,[,String,,,0x1,],,,0B1,],),{,},$Y,(,_,,,dt,:,Z,;,____,:,String,;,W,:,_2_,),{,},},<EOF>''',101))

    def test_1921(self):
        self.assertTrue(TestLexer.test('''Class _2x{}Class d:__{Var __,$z:Boolean ;}Class V{Var $t,_:Array [Array [String ,0B10000],3];Constructor (){}Constructor (f_,__,C_:Array [String ,0b11011];K,z_:Array [Int ,042]){}Val $_:Float ;_(){} }''','''Class,_2x,{,},Class,d,:,__,{,Var,__,,,$z,:,Boolean,;,},Class,V,{,Var,$t,,,_,:,Array,[,Array,[,String,,,0B10000,],,,3,],;,Constructor,(,),{,},Constructor,(,f_,,,__,,,C_,:,Array,[,String,,,0b11011,],;,K,,,z_,:,Array,[,Int,,,042,],),{,},Val,$_,:,Float,;,_,(,),{,},},<EOF>''',101))

    def test_1922(self):
        self.assertTrue(TestLexer.test('''Class A2z5_7{}Class _t_3:Y{Val $r,S:Boolean ;}Class _:Ct{}Class S:_{Q(zaL:Array [Array [Array [Array [Array [String ,06],4_1],0B111111],0b1001000],0102];_:z;LS,T2:Array [Array [Boolean ,81],81];Q73_s_:a_){ {} }}Class g{}Class qV{Destructor (){} }Class ___CG:o6{Destructor (){} }Class u:s5{Destructor (){Break ;}Destructor (){} }Class __:v{Constructor (_,_,Y,_,y7u_,pv2,_,f_:TI){}Constructor (_:Array [Array [Array [Boolean ,0x28],0102],8];r_,LS_:_){}Val _7_,Q:Array [Int ,81];}''','''Class,A2z5_7,{,},Class,_t_3,:,Y,{,Val,$r,,,S,:,Boolean,;,},Class,_,:,Ct,{,},Class,S,:,_,{,Q,(,zaL,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,06,],,,41,],,,0B111111,],,,0b1001000,],,,0102,],;,_,:,z,;,LS,,,T2,:,Array,[,Array,[,Boolean,,,81,],,,81,],;,Q73_s_,:,a_,),{,{,},},},Class,g,{,},Class,qV,{,Destructor,(,),{,},},Class,___CG,:,o6,{,Destructor,(,),{,},},Class,u,:,s5,{,Destructor,(,),{,Break,;,},Destructor,(,),{,},},Class,__,:,v,{,Constructor,(,_,,,_,,,Y,,,_,,,y7u_,,,pv2,,,_,,,f_,:,TI,),{,},Constructor,(,_,:,Array,[,Array,[,Array,[,Boolean,,,0x28,],,,0102,],,,8,],;,r_,,,LS_,:,_,),{,},Val,_7_,,,Q,:,Array,[,Int,,,81,],;,},<EOF>''',101))

    def test_1923(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){} }Class H:_{Var $D,$_:Int ;}Class b:_{}Class X_CU{Val sK4,_:Array [Float ,0115];}Class Z9B:__4{Val _B:Array [String ,0b1];}Class _:_{}''','''Class,_,{,Destructor,(,),{,},},Class,H,:,_,{,Var,$D,,,$_,:,Int,;,},Class,b,:,_,{,},Class,X_CU,{,Val,sK4,,,_,:,Array,[,Float,,,0115,],;,},Class,Z9B,:,__4,{,Val,_B,:,Array,[,String,,,0b1,],;,},Class,_,:,_,{,},<EOF>''',101))

    def test_1924(self):
        self.assertTrue(TestLexer.test('''Class _:__{_0(__t,__,_9b,g,__:String ){}Var $4_:Array [Array [Array [Array [Int ,05],0X525_9],0XB1],064];}Class _1_:Y__N_{}Class __6{}''','''Class,_,:,__,{,_0,(,__t,,,__,,,_9b,,,g,,,__,:,String,),{,},Var,$4_,:,Array,[,Array,[,Array,[,Array,[,Int,,,05,],,,0X5259,],,,0XB1,],,,064,],;,},Class,_1_,:,Y__N_,{,},Class,__6,{,},<EOF>''',101))

    def test_1925(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (G,_6,H_2,_:_1;R,_8,b3,___:Array [String ,0B1001000]){}Constructor (j489,h:K_){Continue ;Break ;} }''','''Class,_,:,_,{,Constructor,(,G,,,_6,,,H_2,,,_,:,_1,;,R,,,_8,,,b3,,,___,:,Array,[,String,,,0B1001000,],),{,},Constructor,(,j489,,,h,:,K_,),{,Continue,;,Break,;,},},<EOF>''',101))

    def test_1926(self):
        self.assertTrue(TestLexer.test('''Class _:_f{}Class M{$_ZU(_:Boolean ;DW,__f3P,M,_N,_z4:Int ;J:_;O:Float ){}Val $3_,$j:Boolean ;}Class _{}Class _:_{}''','''Class,_,:,_f,{,},Class,M,{,$_ZU,(,_,:,Boolean,;,DW,,,__f3P,,,M,,,_N,,,_z4,:,Int,;,J,:,_,;,O,:,Float,),{,},Val,$3_,,,$j,:,Boolean,;,},Class,_,{,},Class,_,:,_,{,},<EOF>''',101))

    def test_1927(self):
        self.assertTrue(TestLexer.test('''Class jI_N7__:_o_5{}Class _{}Class f{Val $wb,$_,$_3:Array [String ,067];}Class X:bk_0{Destructor (){}Constructor (){} }''','''Class,jI_N7__,:,_o_5,{,},Class,_,{,},Class,f,{,Val,$wb,,,$_,,,$_3,:,Array,[,String,,,067,],;,},Class,X,:,bk_0,{,Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_1928(self):
        self.assertTrue(TestLexer.test('''Class _8{$_(_,Ve_4k:__Su_;H:Array [Array [Array [Float ,021],0b1],02]){}Var $_:Array [Array [Array [Array [Array [String ,24],06],0B101101],0X1],021];}Class B{}''','''Class,_8,{,$_,(,_,,,Ve_4k,:,__Su_,;,H,:,Array,[,Array,[,Array,[,Float,,,021,],,,0b1,],,,02,],),{,},Var,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,24,],,,06,],,,0B101101,],,,0X1,],,,021,],;,},Class,B,{,},<EOF>''',101))

    def test_1929(self):
        self.assertTrue(TestLexer.test('''Class i_:C91{}Class E9{Var $5,N:Int ;}Class _:_{Val _u:Array [Array [Array [Array [Array [Array [Boolean ,8],031],0X20],0B11111],0XB_0],70];}''','''Class,i_,:,C91,{,},Class,E9,{,Var,$5,,,N,:,Int,;,},Class,_,:,_,{,Val,_u,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,8,],,,031,],,,0X20,],,,0B11111,],,,0XB0,],,,70,],;,},<EOF>''',101))

    def test_1930(self):
        self.assertTrue(TestLexer.test('''Class _{$kX_(_:_;_4:Array [Array [Array [Float ,8],75],0133]){} }Class _{Val B,$Er74__,$1b,$_,W123:k;}Class _2:K0{}Class _:e{}Class SR:AJ{}''','''Class,_,{,$kX_,(,_,:,_,;,_4,:,Array,[,Array,[,Array,[,Float,,,8,],,,75,],,,0133,],),{,},},Class,_,{,Val,B,,,$Er74__,,,$1b,,,$_,,,W123,:,k,;,},Class,_2,:,K0,{,},Class,_,:,e,{,},Class,SR,:,AJ,{,},<EOF>''',101))

    def test_1931(self):
        self.assertTrue(TestLexer.test('''Class _7:_{Val _W:Array [Array [Int ,0B100001],0b1_1];}Class _:_3P__{}Class __:_{Constructor (){__NS8k::$_();} }Class _{}''','''Class,_7,:,_,{,Val,_W,:,Array,[,Array,[,Int,,,0B100001,],,,0b11,],;,},Class,_,:,_3P__,{,},Class,__,:,_,{,Constructor,(,),{,__NS8k,::,$_,(,),;,},},Class,_,{,},<EOF>''',101))

    def test_1932(self):
        self.assertTrue(TestLexer.test('''Class _C:_4{Constructor (F:_0;A:D_Ua){}Destructor (){}Val _:Float ;Constructor (B:Int ){} }Class b57_tF7{Constructor (_:Int ;t:__){} }''','''Class,_C,:,_4,{,Constructor,(,F,:,_0,;,A,:,D_Ua,),{,},Destructor,(,),{,},Val,_,:,Float,;,Constructor,(,B,:,Int,),{,},},Class,b57_tF7,{,Constructor,(,_,:,Int,;,t,:,__,),{,},},<EOF>''',101))

    def test_1933(self):
        self.assertTrue(TestLexer.test('''Class j7:N_hvS_{Var _9e9,s:Float ;}Class __:_{Constructor (){}Constructor (_:_;h,___:Array [Int ,075];_4:Array [Array [Array [Array [Int ,0X5C],0x73A4_F],046_31],0x3]){Continue ;} }Class _Y8{}''','''Class,j7,:,N_hvS_,{,Var,_9e9,,,s,:,Float,;,},Class,__,:,_,{,Constructor,(,),{,},Constructor,(,_,:,_,;,h,,,___,:,Array,[,Int,,,075,],;,_4,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X5C,],,,0x73A4F,],,,04631,],,,0x3,],),{,Continue,;,},},Class,_Y8,{,},<EOF>''',101))

    def test_1934(self):
        self.assertTrue(TestLexer.test('''Class __:TFR{Var $1:Array [Array [Boolean ,0B1_10_11],95];}Class _:gMZ__{Constructor (D,c,m4,_5_x07_:Boolean ){} }''','''Class,__,:,TFR,{,Var,$1,:,Array,[,Array,[,Boolean,,,0B11011,],,,95,],;,},Class,_,:,gMZ__,{,Constructor,(,D,,,c,,,m4,,,_5_x07_,:,Boolean,),{,},},<EOF>''',101))

    def test_1935(self):
        self.assertTrue(TestLexer.test('''Class T:_6{Var $q9YG2,KK,a,$Q,$___:Array [Array [String ,0B1],85];}Class U{}Class A{Var $__:q_;}Class D{}Class _{Val $_:Array [Float ,0524];J_(_a:Q){Return ;}Destructor (){Break ;Var m,W5:Int ;}Val _J,$_99_:Array [Array [Array [Array [Int ,0x5],85],0B1],0B110011];}''','''Class,T,:,_6,{,Var,$q9YG2,,,KK,,,a,,,$Q,,,$___,:,Array,[,Array,[,String,,,0B1,],,,85,],;,},Class,U,{,},Class,A,{,Var,$__,:,q_,;,},Class,D,{,},Class,_,{,Val,$_,:,Array,[,Float,,,0524,],;,J_,(,_a,:,Q,),{,Return,;,},Destructor,(,),{,Break,;,Var,m,,,W5,:,Int,;,},Val,_J,,,$_99_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x5,],,,85,],,,0B1,],,,0B110011,],;,},<EOF>''',101))

    def test_1936(self):
        self.assertTrue(TestLexer.test('''Class Y:_P{_(_5:_k;Z,_,_5_1_Q,_:_){}Constructor (_3:Array [Array [Array [Array [Array [String ,4],0b11],3_7_9],0b11000],0XE]){} }Class __:D_{}''','''Class,Y,:,_P,{,_,(,_5,:,_k,;,Z,,,_,,,_5_1_Q,,,_,:,_,),{,},Constructor,(,_3,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,4,],,,0b11,],,,379,],,,0b11000,],,,0XE,],),{,},},Class,__,:,D_,{,},<EOF>''',101))

    def test_1937(self):
        self.assertTrue(TestLexer.test('''Class _yd7{_(){}Val _A:Array [String ,0x1F];}Class _9Skk_9{$_(_4:Array [Boolean ,0XF];_:Array [Boolean ,043]){Break ;}Var _4:Boolean ;}Class Q4:_{Constructor (){Continue ;}Var $m_,w:Array [Boolean ,80];}''','''Class,_yd7,{,_,(,),{,},Val,_A,:,Array,[,String,,,0x1F,],;,},Class,_9Skk_9,{,$_,(,_4,:,Array,[,Boolean,,,0XF,],;,_,:,Array,[,Boolean,,,043,],),{,Break,;,},Var,_4,:,Boolean,;,},Class,Q4,:,_,{,Constructor,(,),{,Continue,;,},Var,$m_,,,w,:,Array,[,Boolean,,,80,],;,},<EOF>''',101))

    def test_1938(self):
        self.assertTrue(TestLexer.test('''Class S:kGG_{Var _1V_3_3,$323,if,h_Y:Array [Boolean ,0XC];}Class p:_{Var E,_6:String ;}Class _I{}Class S_:Z_{}''','''Class,S,:,kGG_,{,Var,_1V_3_3,,,$323,,,if,,,h_Y,:,Array,[,Boolean,,,0XC,],;,},Class,p,:,_,{,Var,E,,,_6,:,String,;,},Class,_I,{,},Class,S_,:,Z_,{,},<EOF>''',101))

    def test_1939(self):
        self.assertTrue(TestLexer.test('''Class _{$_00(){}Destructor (){} }Class u0{Constructor (Z:Array [Array [Array [Array [Array [Array [Boolean ,0x5B],0134],0x5B],0XA7_F],0134],2];R,q:Array [Boolean ,0b1_1_01_00_0];k,_v1__,s_:z_){} }Class z_{}''','''Class,_,{,$_00,(,),{,},Destructor,(,),{,},},Class,u0,{,Constructor,(,Z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x5B,],,,0134,],,,0x5B,],,,0XA7F,],,,0134,],,,2,],;,R,,,q,:,Array,[,Boolean,,,0b1101000,],;,k,,,_v1__,,,s_,:,z_,),{,},},Class,z_,{,},<EOF>''',101))

    def test_1940(self):
        self.assertTrue(TestLexer.test('''Class _3_U48_:___{}Class _:_o_{}Class b_0_4_8{Val $A1B,$_:Array [Array [Array [String ,0X9],057],93];Constructor (){} }Class __Q_H{}Class H{}''','''Class,_3_U48_,:,___,{,},Class,_,:,_o_,{,},Class,b_0_4_8,{,Val,$A1B,,,$_,:,Array,[,Array,[,Array,[,String,,,0X9,],,,057,],,,93,],;,Constructor,(,),{,},},Class,__Q_H,{,},Class,H,{,},<EOF>''',101))

    def test_1941(self):
        self.assertTrue(TestLexer.test('''Class p_74{$_h(_,m_:Array [Array [Float ,061],0b1_0];R52,__12l,O,w_94:__;_,_D:Array [Int ,0x21];_,_,Pi:_){Break ;} }''','''Class,p_74,{,$_h,(,_,,,m_,:,Array,[,Array,[,Float,,,061,],,,0b10,],;,R52,,,__12l,,,O,,,w_94,:,__,;,_,,,_D,:,Array,[,Int,,,0x21,],;,_,,,_,,,Pi,:,_,),{,Break,;,},},<EOF>''',101))

    def test_1942(self):
        self.assertTrue(TestLexer.test('''Class r:n{}Class _{Destructor (){}Var X:Array [String ,061];}Class F{}Class A:_96{Constructor (_9f6:_X;_0,z,L8:String ;Gj,_O8:String ){Break ;} }Class z:_1{}Class _{}Class _:__8_{}Class n:QI{}''','''Class,r,:,n,{,},Class,_,{,Destructor,(,),{,},Var,X,:,Array,[,String,,,061,],;,},Class,F,{,},Class,A,:,_96,{,Constructor,(,_9f6,:,_X,;,_0,,,z,,,L8,:,String,;,Gj,,,_O8,:,String,),{,Break,;,},},Class,z,:,_1,{,},Class,_,{,},Class,_,:,__8_,{,},Class,n,:,QI,{,},<EOF>''',101))

    def test_1943(self):
        self.assertTrue(TestLexer.test('''Class _:h{$_(kW:Array [Array [Array [Array [Array [Array [Boolean ,0X44],60],3],1],0x4_B],0xA]){}Val $5__c:_0Q__;}Class _{}''','''Class,_,:,h,{,$_,(,kW,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X44,],,,60,],,,3,],,,1,],,,0x4B,],,,0xA,],),{,},Val,$5__c,:,_0Q__,;,},Class,_,{,},<EOF>''',101))

    def test_1944(self):
        self.assertTrue(TestLexer.test('''Class ___y:_H{Var $y1,CH_:Array [Boolean ,020];}Class i_N:F{Var $R:Int ;}Class f{Var $_7__:Int ;}Class _5:T_1{Destructor (){}Val _DG,$_YlE,$3_4__Z,_,$B:Array [Array [Int ,0B1_10],0XDF];Destructor (){}Constructor (){}Var $9,$_:Int ;}''','''Class,___y,:,_H,{,Var,$y1,,,CH_,:,Array,[,Boolean,,,020,],;,},Class,i_N,:,F,{,Var,$R,:,Int,;,},Class,f,{,Var,$_7__,:,Int,;,},Class,_5,:,T_1,{,Destructor,(,),{,},Val,_DG,,,$_YlE,,,$3_4__Z,,,_,,,$B,:,Array,[,Array,[,Int,,,0B110,],,,0XDF,],;,Destructor,(,),{,},Constructor,(,),{,},Var,$9,,,$_,:,Int,;,},<EOF>''',101))

    def test_1945(self):
        self.assertTrue(TestLexer.test('''Class ___{Destructor (){Break ;}Val $C:Array [Array [Array [Array [Float ,0b1],5],8],0b1];__(){} }Class _:_{}Class R:p{}''','''Class,___,{,Destructor,(,),{,Break,;,},Val,$C,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,5,],,,8,],,,0b1,],;,__,(,),{,},},Class,_,:,_,{,},Class,R,:,p,{,},<EOF>''',101))

    def test_1946(self):
        self.assertTrue(TestLexer.test('''Class _9oO6_W_RW:V_57{Constructor (_3_8iUBDp,_,_8,_iq,e94V:Array [Array [Int ,071],0b11000]){}Val $Z,$_J_:Array [Float ,043_1_1];}''','''Class,_9oO6_W_RW,:,V_57,{,Constructor,(,_3_8iUBDp,,,_,,,_8,,,_iq,,,e94V,:,Array,[,Array,[,Int,,,071,],,,0b11000,],),{,},Val,$Z,,,$_J_,:,Array,[,Float,,,04311,],;,},<EOF>''',101))

    def test_1947(self):
        self.assertTrue(TestLexer.test('''Class __{}Class _{Val _:Float ;Var $5:Array [Array [Array [Array [String ,51],0b100_0],0b1_0],0x56];}Class k{}Class _6:__{}Class _Py:___v3{}Class _{Destructor (){} }''','''Class,__,{,},Class,_,{,Val,_,:,Float,;,Var,$5,:,Array,[,Array,[,Array,[,Array,[,String,,,51,],,,0b1000,],,,0b10,],,,0x56,],;,},Class,k,{,},Class,_6,:,__,{,},Class,_Py,:,___v3,{,},Class,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_1948(self):
        self.assertTrue(TestLexer.test('''Class E:d{}Class _:_V{Val __t3W,t,$_1___:z;Val u,$6:Array [String ,37];}Class C:L8y_{Val _9:_2__y;Constructor (){} }''','''Class,E,:,d,{,},Class,_,:,_V,{,Val,__t3W,,,t,,,$_1___,:,z,;,Val,u,,,$6,:,Array,[,String,,,37,],;,},Class,C,:,L8y_,{,Val,_9,:,_2__y,;,Constructor,(,),{,},},<EOF>''',101))

    def test_1949(self):
        self.assertTrue(TestLexer.test('''Class _H:F{Constructor (){Var IN,W:Array [Array [Array [Array [Array [String ,0B1_0],26],0B1],1_7],41];_4::$_UL();} }''','''Class,_H,:,F,{,Constructor,(,),{,Var,IN,,,W,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B10,],,,26,],,,0B1,],,,17,],,,41,],;,_4,::,$_UL,(,),;,},},<EOF>''',101))

    def test_1950(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{Var $51,M7__:Array [Array [Array [Array [Array [Float ,0x23],077],0B1],0B110],0x23];}Class c{}Class k{}Class w:o{}''','''Class,_,{,},Class,_,{,Var,$51,,,M7__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x23,],,,077,],,,0B1,],,,0B110,],,,0x23,],;,},Class,c,{,},Class,k,{,},Class,w,:,o,{,},<EOF>''',101))

    def test_1951(self):
        self.assertTrue(TestLexer.test('''Class _H_:nk_{Val $s:Array [String ,6_2];Val v_,q:Int ;o(c_DL,_:TH){}_(Q:R){}Val $F_:String ;}Class s0A_8c:_A6_x2_{}Class U:_1{}Class Ns:_{Var _j,_,$__:_;}Class P:_{Constructor (){} }''','''Class,_H_,:,nk_,{,Val,$s,:,Array,[,String,,,62,],;,Val,v_,,,q,:,Int,;,o,(,c_DL,,,_,:,TH,),{,},_,(,Q,:,R,),{,},Val,$F_,:,String,;,},Class,s0A_8c,:,_A6_x2_,{,},Class,U,:,_1,{,},Class,Ns,:,_,{,Var,_j,,,_,,,$__,:,_,;,},Class,P,:,_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_1952(self):
        self.assertTrue(TestLexer.test('''Class _V{Constructor (){}Var $_,E9_,$o_J___:_;Val $70:cE;$_4(_80,z_8_2_:String ){}Var go:Boolean ;Var $Mvj,$0,Y:Array [Array [Float ,0b1011011],03_6];}Class Z{}Class R{}''','''Class,_V,{,Constructor,(,),{,},Var,$_,,,E9_,,,$o_J___,:,_,;,Val,$70,:,cE,;,$_4,(,_80,,,z_8_2_,:,String,),{,},Var,go,:,Boolean,;,Var,$Mvj,,,$0,,,Y,:,Array,[,Array,[,Float,,,0b1011011,],,,036,],;,},Class,Z,{,},Class,R,{,},<EOF>''',101))

    def test_1953(self):
        self.assertTrue(TestLexer.test('''Class I:_{Constructor (J,Po:Array [Array [Array [String ,05],98],0b11100]){}Val $3,$3_2:Int ;$4k8(__:u;_:A48){}Val $_U_,$_:Boolean ;}''','''Class,I,:,_,{,Constructor,(,J,,,Po,:,Array,[,Array,[,Array,[,String,,,05,],,,98,],,,0b11100,],),{,},Val,$3,,,$3_2,:,Int,;,$4k8,(,__,:,u,;,_,:,A48,),{,},Val,$_U_,,,$_,:,Boolean,;,},<EOF>''',101))

    def test_1954(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _:_2p_e{Constructor (o_,_,_n:Array [Boolean ,0112]){} }Class dw:M_{$_u__(){} }Class _C:_{}Class _:_0{Val $4,c8d,o,_j7z_:Array [Int ,0x52];_(B:Boolean ){}Val $_:_;}''','''Class,_,{,},Class,_,:,_2p_e,{,Constructor,(,o_,,,_,,,_n,:,Array,[,Boolean,,,0112,],),{,},},Class,dw,:,M_,{,$_u__,(,),{,},},Class,_C,:,_,{,},Class,_,:,_0,{,Val,$4,,,c8d,,,o,,,_j7z_,:,Array,[,Int,,,0x52,],;,_,(,B,:,Boolean,),{,},Val,$_,:,_,;,},<EOF>''',101))

    def test_1955(self):
        self.assertTrue(TestLexer.test('''Class _3{}Class ___{Constructor (Cx1__,_2y:Array [Array [Boolean ,0B111],0b111000];_0,Q_,_:wf){}Var $a_13,L8fc:String ;Constructor (){} }Class __9{Constructor (__,_2:String ){} }Class _:_{}''','''Class,_3,{,},Class,___,{,Constructor,(,Cx1__,,,_2y,:,Array,[,Array,[,Boolean,,,0B111,],,,0b111000,],;,_0,,,Q_,,,_,:,wf,),{,},Var,$a_13,,,L8fc,:,String,;,Constructor,(,),{,},},Class,__9,{,Constructor,(,__,,,_2,:,String,),{,},},Class,_,:,_,{,},<EOF>''',101))

    def test_1956(self):
        self.assertTrue(TestLexer.test('''Class y___0:G{$8e(m,o:String ){Var _,X,iu29A:_b__;} }Class G:_3g{}Class _:x{Destructor (){Continue ;Return ;}Constructor (__U_,_:op_;_,_,a,c:Array [Boolean ,06];_:Boolean ){New j().F___();}Constructor (){}Val _:_;Var _,_:_5;Var $_:Array [Array [Float ,0b1_1],44];}''','''Class,y___0,:,G,{,$8e,(,m,,,o,:,String,),{,Var,_,,,X,,,iu29A,:,_b__,;,},},Class,G,:,_3g,{,},Class,_,:,x,{,Destructor,(,),{,Continue,;,Return,;,},Constructor,(,__U_,,,_,:,op_,;,_,,,_,,,a,,,c,:,Array,[,Boolean,,,06,],;,_,:,Boolean,),{,New,j,(,),.,F___,(,),;,},Constructor,(,),{,},Val,_,:,_,;,Var,_,,,_,:,_5,;,Var,$_,:,Array,[,Array,[,Float,,,0b11,],,,44,],;,},<EOF>''',101))

    def test_1957(self):
        self.assertTrue(TestLexer.test('''Class _{}Class T_{Var $__,$2j78,X_2:Boolean ;Destructor (){}Constructor (_J:Array [Array [Array [Array [Array [String ,032],15],0B111_1],0b1],15];m,_1,F:Zg;h,_,q84:Array [Array [Boolean ,0B1],032];_J:_J;_,Y:Array [String ,2]){} }''','''Class,_,{,},Class,T_,{,Var,$__,,,$2j78,,,X_2,:,Boolean,;,Destructor,(,),{,},Constructor,(,_J,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,032,],,,15,],,,0B1111,],,,0b1,],,,15,],;,m,,,_1,,,F,:,Zg,;,h,,,_,,,q84,:,Array,[,Array,[,Boolean,,,0B1,],,,032,],;,_J,:,_J,;,_,,,Y,:,Array,[,String,,,2,],),{,},},<EOF>''',101))

    def test_1958(self):
        self.assertTrue(TestLexer.test('''Class q:_M{$i9_9__(){} }Class _{_(){}t(w,_U777i_,g:Array [Int ,0B1];W_:Ig_){}$_2a(P8,__h,_,__2:Boolean ){} }''','''Class,q,:,_M,{,$i9_9__,(,),{,},},Class,_,{,_,(,),{,},t,(,w,,,_U777i_,,,g,:,Array,[,Int,,,0B1,],;,W_,:,Ig_,),{,},$_2a,(,P8,,,__h,,,_,,,__2,:,Boolean,),{,},},<EOF>''',101))

    def test_1959(self):
        self.assertTrue(TestLexer.test('''Class _:G87q{Var $7:Array [Array [String ,050],043_072];}Class _{Destructor (){} }Class A{Val $_,px:String ;}Class Q95{}Class kW:Y7{}''','''Class,_,:,G87q,{,Var,$7,:,Array,[,Array,[,String,,,050,],,,043072,],;,},Class,_,{,Destructor,(,),{,},},Class,A,{,Val,$_,,,px,:,String,;,},Class,Q95,{,},Class,kW,:,Y7,{,},<EOF>''',101))

    def test_1960(self):
        self.assertTrue(TestLexer.test('''Class q:m{Val $_,$v,h:_;Val _V_y_,$S4:Float ;}Class _{B4(_:Array [Array [Float ,0x1],0xF_DA5_EED5_03]){Break ;} }''','''Class,q,:,m,{,Val,$_,,,$v,,,h,:,_,;,Val,_V_y_,,,$S4,:,Float,;,},Class,_,{,B4,(,_,:,Array,[,Array,[,Float,,,0x1,],,,0xFDA5EED503,],),{,Break,;,},},<EOF>''',101))

    def test_1961(self):
        self.assertTrue(TestLexer.test('''Class V_{Destructor (){} }Class _{Val _,$6_,$0:Fl;Val q,z9_:Array [Array [Int ,0x3],0B11101];Var $g_P5:Int ;}Class s1:__{}''','''Class,V_,{,Destructor,(,),{,},},Class,_,{,Val,_,,,$6_,,,$0,:,Fl,;,Val,q,,,z9_,:,Array,[,Array,[,Int,,,0x3,],,,0B11101,],;,Var,$g_P5,:,Int,;,},Class,s1,:,__,{,},<EOF>''',101))

    def test_1962(self):
        self.assertTrue(TestLexer.test('''Class y:_{}Class e{Var _,x:Boolean ;Constructor (_,l_:Array [Array [Int ,0b1010100],6_3_2];_F_Y,u:_KR5){} }Class Qn:c{}''','''Class,y,:,_,{,},Class,e,{,Var,_,,,x,:,Boolean,;,Constructor,(,_,,,l_,:,Array,[,Array,[,Int,,,0b1010100,],,,632,],;,_F_Y,,,u,:,_KR5,),{,},},Class,Qn,:,c,{,},<EOF>''',101))

    def test_1963(self):
        self.assertTrue(TestLexer.test('''Class E4j_A:Z{Constructor (f_K5_8,__:Boolean ;__Z_,O:Array [Array [Float ,0XDD_E],43];_:Array [Int ,045]){}Constructor (){} }Class U13D{Var $2:_58_6;}''','''Class,E4j_A,:,Z,{,Constructor,(,f_K5_8,,,__,:,Boolean,;,__Z_,,,O,:,Array,[,Array,[,Float,,,0XDDE,],,,43,],;,_,:,Array,[,Int,,,045,],),{,},Constructor,(,),{,},},Class,U13D,{,Var,$2,:,_58_6,;,},<EOF>''',101))

    def test_1964(self):
        self.assertTrue(TestLexer.test('''Class v{Var $38_NZ,BkPP:String ;$SDa(U:Boolean ){}Destructor (){Return ;}Constructor (__5H_:U;__w,e:Boolean ;A:Float ;__T,B_3_q,_48609G7WF:Array [Boolean ,0b10_0_0_100];_:Int ;f:E;_,_:Array [Array [Array [Array [String ,0b1011111],0b1011111],0B111010],026_3_2];Cq5,_,_:Array [Array [Int ,0X51],04];z_:Array [Boolean ,0xC]){Var n:__;Break ;} }Class Q:_{}''','''Class,v,{,Var,$38_NZ,,,BkPP,:,String,;,$SDa,(,U,:,Boolean,),{,},Destructor,(,),{,Return,;,},Constructor,(,__5H_,:,U,;,__w,,,e,:,Boolean,;,A,:,Float,;,__T,,,B_3_q,,,_48609G7WF,:,Array,[,Boolean,,,0b1000100,],;,_,:,Int,;,f,:,E,;,_,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1011111,],,,0b1011111,],,,0B111010,],,,02632,],;,Cq5,,,_,,,_,:,Array,[,Array,[,Int,,,0X51,],,,04,],;,z_,:,Array,[,Boolean,,,0xC,],),{,Var,n,:,__,;,Break,;,},},Class,Q,:,_,{,},<EOF>''',101))

    def test_1965(self):
        self.assertTrue(TestLexer.test('''Class o:c_{Constructor (){X::$d();} }Class __{Destructor (){L8t::$7I();}Destructor (){}Destructor (){}Var $_Di4H_k,$v,$6_4,W,$4__,$_:O;}Class __{}Class _x:__{Var _3H,f:Array [Int ,0X59];}''','''Class,o,:,c_,{,Constructor,(,),{,X,::,$d,(,),;,},},Class,__,{,Destructor,(,),{,L8t,::,$7I,(,),;,},Destructor,(,),{,},Destructor,(,),{,},Var,$_Di4H_k,,,$v,,,$6_4,,,W,,,$4__,,,$_,:,O,;,},Class,__,{,},Class,_x,:,__,{,Var,_3H,,,f,:,Array,[,Int,,,0X59,],;,},<EOF>''',101))

    def test_1966(self):
        self.assertTrue(TestLexer.test('''Class _:__{x(G:j){}Var __:Array [Array [Array [Array [Array [Boolean ,0B1],0x57],0x9_B8],0B1],7_7];Constructor (o,_4y,__:Array [Array [Array [Array [Array [String ,0X2D],63_7_4],0X1_6_C0_0],0B1011001],0b11_0]){} }''','''Class,_,:,__,{,x,(,G,:,j,),{,},Var,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0x57,],,,0x9B8,],,,0B1,],,,77,],;,Constructor,(,o,,,_4y,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X2D,],,,6374,],,,0X16C00,],,,0B1011001,],,,0b110,],),{,},},<EOF>''',101))

    def test_1967(self):
        self.assertTrue(TestLexer.test('''Class g_M:__{Var $__,B:_;Constructor (){_::$8___8();}Val $_4u_G_,_6g_,$_3:Array [String ,0B11100];Destructor (){_::$__();} }''','''Class,g_M,:,__,{,Var,$__,,,B,:,_,;,Constructor,(,),{,_,::,$8___8,(,),;,},Val,$_4u_G_,,,_6g_,,,$_3,:,Array,[,String,,,0B11100,],;,Destructor,(,),{,_,::,$__,(,),;,},},<EOF>''',101))

    def test_1968(self):
        self.assertTrue(TestLexer.test('''Class _e{Var $4,E_,$_4_,$_,_,p,$e,G_4O:Array [Float ,0x2];Constructor (_,_,_,____ca8_l8,_:Float ;_:Array [Array [Array [Array [Int ,055],76],055],0714]){Return ;} }''','''Class,_e,{,Var,$4,,,E_,,,$_4_,,,$_,,,_,,,p,,,$e,,,G_4O,:,Array,[,Float,,,0x2,],;,Constructor,(,_,,,_,,,_,,,____ca8_l8,,,_,:,Float,;,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,055,],,,76,],,,055,],,,0714,],),{,Return,;,},},<EOF>''',101))

    def test_1969(self):
        self.assertTrue(TestLexer.test('''Class j9l:_V8{}Class _9{Val A3a_72,$5:Array [Array [Array [Array [String ,02],0x6_5_45AB],78],0B1010111];}Class g{}Class I4oM:_nL{}''','''Class,j9l,:,_V8,{,},Class,_9,{,Val,A3a_72,,,$5,:,Array,[,Array,[,Array,[,Array,[,String,,,02,],,,0x6545AB,],,,78,],,,0B1010111,],;,},Class,g,{,},Class,I4oM,:,_nL,{,},<EOF>''',101))

    def test_1970(self):
        self.assertTrue(TestLexer.test('''Class w{Constructor (A,M,_:D5;_:Z;_:Array [String ,0x47];_T,X1:Array [String ,0XC]){}Destructor (){}Var $5l,Rr_,$9:String ;}Class ___{}''','''Class,w,{,Constructor,(,A,,,M,,,_,:,D5,;,_,:,Z,;,_,:,Array,[,String,,,0x47,],;,_T,,,X1,:,Array,[,String,,,0XC,],),{,},Destructor,(,),{,},Var,$5l,,,Rr_,,,$9,:,String,;,},Class,___,{,},<EOF>''',101))

    def test_1971(self):
        self.assertTrue(TestLexer.test('''Class __:_Z{Val D___,__:Array [Array [Array [Array [Array [Array [Float ,0x15],0b1],01],01],01],0xE];$u(_,U,w_,S6_06k8,_T:Array [Array [Array [String ,9],06],05]){} }''','''Class,__,:,_Z,{,Val,D___,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x15,],,,0b1,],,,01,],,,01,],,,01,],,,0xE,],;,$u,(,_,,,U,,,w_,,,S6_06k8,,,_T,:,Array,[,Array,[,Array,[,String,,,9,],,,06,],,,05,],),{,},},<EOF>''',101))

    def test_1972(self):
        self.assertTrue(TestLexer.test('''Class j_{}Class Nw18{Constructor (_:_){}Destructor (){} }Class _d_{Val _:q_g;Constructor (J,x_R9_:Float ){} }Class k{}''','''Class,j_,{,},Class,Nw18,{,Constructor,(,_,:,_,),{,},Destructor,(,),{,},},Class,_d_,{,Val,_,:,q_g,;,Constructor,(,J,,,x_R9_,:,Float,),{,},},Class,k,{,},<EOF>''',101))

    def test_1973(self):
        self.assertTrue(TestLexer.test('''Class i_{Val $_B,CJ,$_:String ;}Class _{$2(D,____O__W,_,_:Array [Array [String ,0x2E],0x2E]){} }Class _q:_9a_{}Class __69:_{}''','''Class,i_,{,Val,$_B,,,CJ,,,$_,:,String,;,},Class,_,{,$2,(,D,,,____O__W,,,_,,,_,:,Array,[,Array,[,String,,,0x2E,],,,0x2E,],),{,},},Class,_q,:,_9a_,{,},Class,__69,:,_,{,},<EOF>''',101))

    def test_1974(self):
        self.assertTrue(TestLexer.test('''Class n:_4{Val $__,____c:Array [Array [String ,0xF],01];}Class vW:Q_{}Class u{$a(_,_:Float ;p8_,Z:t___9){}Val m:Array [Float ,02];$__(){} }''','''Class,n,:,_4,{,Val,$__,,,____c,:,Array,[,Array,[,String,,,0xF,],,,01,],;,},Class,vW,:,Q_,{,},Class,u,{,$a,(,_,,,_,:,Float,;,p8_,,,Z,:,t___9,),{,},Val,m,:,Array,[,Float,,,02,],;,$__,(,),{,},},<EOF>''',101))

    def test_1975(self):
        self.assertTrue(TestLexer.test('''Class _H:_w{Constructor (_11,_:Array [Float ,0x3C]){}Constructor (){D9_::$s();} }Class _{Constructor (__,_,o:Array [Array [String ,35],0b10101]){Val h_,_:Int ;Return ;}Destructor (){} }''','''Class,_H,:,_w,{,Constructor,(,_11,,,_,:,Array,[,Float,,,0x3C,],),{,},Constructor,(,),{,D9_,::,$s,(,),;,},},Class,_,{,Constructor,(,__,,,_,,,o,:,Array,[,Array,[,String,,,35,],,,0b10101,],),{,Val,h_,,,_,:,Int,;,Return,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_1976(self):
        self.assertTrue(TestLexer.test('''Class G_8{Val D:Array [Float ,0602];$_x(o,_:x6;zD:Float ;__,_Rvk__2k:Q1;A:Boolean ){y::$_._();} }Class _s_1:_Z_Q49{}''','''Class,G_8,{,Val,D,:,Array,[,Float,,,0602,],;,$_x,(,o,,,_,:,x6,;,zD,:,Float,;,__,,,_Rvk__2k,:,Q1,;,A,:,Boolean,),{,y,::,$_,.,_,(,),;,},},Class,_s_1,:,_Z_Q49,{,},<EOF>''',101))

    def test_1977(self):
        self.assertTrue(TestLexer.test('''Class Ogc__:i__{}Class _g5j:e{}Class x{Constructor (__h_E5,_H,k__,_:Array [Boolean ,76]){} }Class Z{}Class _P{Destructor (){Continue ;} }''','''Class,Ogc__,:,i__,{,},Class,_g5j,:,e,{,},Class,x,{,Constructor,(,__h_E5,,,_H,,,k__,,,_,:,Array,[,Boolean,,,76,],),{,},},Class,Z,{,},Class,_P,{,Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_1978(self):
        self.assertTrue(TestLexer.test('''Class F{$___(_:Array [Float ,0x4A];_V1c:Array [Boolean ,54];_:Yn;_:Array [Array [Array [Boolean ,060],7_0],54];j0_5:Array [Float ,54]){} }''','''Class,F,{,$___,(,_,:,Array,[,Float,,,0x4A,],;,_V1c,:,Array,[,Boolean,,,54,],;,_,:,Yn,;,_,:,Array,[,Array,[,Array,[,Boolean,,,060,],,,70,],,,54,],;,j0_5,:,Array,[,Float,,,54,],),{,},},<EOF>''',101))

    def test_1979(self):
        self.assertTrue(TestLexer.test('''Class a{Constructor (){} }Class G{Var $G,$d,W9:Array [Array [String ,0XF1F],0b1];Var $y:Array [Int ,37];Val $k_,J_6_5:___6;}Class _p{Val O9:Int ;}''','''Class,a,{,Constructor,(,),{,},},Class,G,{,Var,$G,,,$d,,,W9,:,Array,[,Array,[,String,,,0XF1F,],,,0b1,],;,Var,$y,:,Array,[,Int,,,37,],;,Val,$k_,,,J_6_5,:,___6,;,},Class,_p,{,Val,O9,:,Int,;,},<EOF>''',101))

    def test_1980(self):
        self.assertTrue(TestLexer.test('''Class u:W_6{Destructor (){m___::$y6();Var _:_;} }Class P9:k3{}Class _U6:_6{}Class _{Var $5,q,$_,$__9:Array [Array [Int ,0XFE],0124];Var $H1:_;}''','''Class,u,:,W_6,{,Destructor,(,),{,m___,::,$y6,(,),;,Var,_,:,_,;,},},Class,P9,:,k3,{,},Class,_U6,:,_6,{,},Class,_,{,Var,$5,,,q,,,$_,,,$__9,:,Array,[,Array,[,Int,,,0XFE,],,,0124,],;,Var,$H1,:,_,;,},<EOF>''',101))

    def test_1981(self):
        self.assertTrue(TestLexer.test('''Class N{Constructor (_:_;U:Array [String ,0b1_1_0_01_0];_,Y:String ;xo,Q:Float ;z:R;l:_;k:Array [Boolean ,0B1];_Y,Q:Array [Array [Float ,0x4_6],0b1]){Break ;} }''','''Class,N,{,Constructor,(,_,:,_,;,U,:,Array,[,String,,,0b110010,],;,_,,,Y,:,String,;,xo,,,Q,:,Float,;,z,:,R,;,l,:,_,;,k,:,Array,[,Boolean,,,0B1,],;,_Y,,,Q,:,Array,[,Array,[,Float,,,0x46,],,,0b1,],),{,Break,;,},},<EOF>''',101))

    def test_1982(self):
        self.assertTrue(TestLexer.test('''Class _Y_{Constructor (g:Boolean ;_6_R,_86,__,u:Array [Array [Array [Int ,0XDA_6],05_0_1_2],06_3];_71,_9:Array [Array [Array [Array [Array [Float ,0X4A],0b10_0_1_1],01],0b1],0XEE];_1__o,_:h87){Break ;}$5_(_,_V7:L_;x,d3D__,h:_O;_,V_:Array [Array [Array [String ,0126],42],076]){} }''','''Class,_Y_,{,Constructor,(,g,:,Boolean,;,_6_R,,,_86,,,__,,,u,:,Array,[,Array,[,Array,[,Int,,,0XDA6,],,,05012,],,,063,],;,_71,,,_9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X4A,],,,0b10011,],,,01,],,,0b1,],,,0XEE,],;,_1__o,,,_,:,h87,),{,Break,;,},$5_,(,_,,,_V7,:,L_,;,x,,,d3D__,,,h,:,_O,;,_,,,V_,:,Array,[,Array,[,Array,[,String,,,0126,],,,42,],,,076,],),{,},},<EOF>''',101))

    def test_1983(self):
        self.assertTrue(TestLexer.test('''Class r:Z{$4(E__H:Array [Array [String ,0b1011001],0B1_0];_,xi:_;__,_,Z1,z:o_;g4t0L4:m){} }Class L:____9{Var j5,_,$1:Array [Array [Array [Float ,0X7],056],0B1001110];Var xi:Ug;}''','''Class,r,:,Z,{,$4,(,E__H,:,Array,[,Array,[,String,,,0b1011001,],,,0B10,],;,_,,,xi,:,_,;,__,,,_,,,Z1,,,z,:,o_,;,g4t0L4,:,m,),{,},},Class,L,:,____9,{,Var,j5,,,_,,,$1,:,Array,[,Array,[,Array,[,Float,,,0X7,],,,056,],,,0B1001110,],;,Var,xi,:,Ug,;,},<EOF>''',101))

    def test_1984(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _M4U_:C5h308_{Constructor (L_1_sGc__1,b_:Int ;__,__6Ik1_,F,s_,f,_9__bg_4_:Array [Array [Int ,0b1],02];_5,_,az__,Z:Float ;GQ,_,_v_:Array [Array [Array [Array [Array [Array [Array [Int ,83],07],83],0466],03_3],83],0x7];X6,_,__0,_p6,E,p:Int ;_,C:Array [String ,83];x6:f;W,k67,_:Array [String ,043];_1_,_9,_n69,_,_,b:xO0;kkm,M,WJ3:Array [Array [Int ,043],83]){} }Class _3{}''','''Class,_,{,},Class,_M4U_,:,C5h308_,{,Constructor,(,L_1_sGc__1,,,b_,:,Int,;,__,,,__6Ik1_,,,F,,,s_,,,f,,,_9__bg_4_,:,Array,[,Array,[,Int,,,0b1,],,,02,],;,_5,,,_,,,az__,,,Z,:,Float,;,GQ,,,_,,,_v_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,83,],,,07,],,,83,],,,0466,],,,033,],,,83,],,,0x7,],;,X6,,,_,,,__0,,,_p6,,,E,,,p,:,Int,;,_,,,C,:,Array,[,String,,,83,],;,x6,:,f,;,W,,,k67,,,_,:,Array,[,String,,,043,],;,_1_,,,_9,,,_n69,,,_,,,_,,,b,:,xO0,;,kkm,,,M,,,WJ3,:,Array,[,Array,[,Int,,,043,],,,83,],),{,},},Class,_3,{,},<EOF>''',101))

    def test_1985(self):
        self.assertTrue(TestLexer.test('''Class xpZ{Constructor (_6_,_,__3_:_k__){If (!_261::$7.__()){}Else {} }Constructor (_:_;_0,m:Array [Array [Array [Array [Array [Int ,0b1],0X2E],07_70_6],03],0X5_01D];M:Array [String ,0B1100010]){} }''','''Class,xpZ,{,Constructor,(,_6_,,,_,,,__3_,:,_k__,),{,If,(,!,_261,::,$7,.,__,(,),),{,},Else,{,},},Constructor,(,_,:,_,;,_0,,,m,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,0X2E,],,,07706,],,,03,],,,0X501D,],;,M,:,Array,[,String,,,0B1100010,],),{,},},<EOF>''',101))

    def test_1986(self):
        self.assertTrue(TestLexer.test('''Class sG:_{Constructor (w,N0,_,J,_:Float ){}Constructor (_6z,m:String ;Zl,b,b15_2,_:Array [Array [Array [Float ,0b1000001],0xC],0b1000001];h,P24q0j0_:U){} }''','''Class,sG,:,_,{,Constructor,(,w,,,N0,,,_,,,J,,,_,:,Float,),{,},Constructor,(,_6z,,,m,:,String,;,Zl,,,b,,,b15_2,,,_,:,Array,[,Array,[,Array,[,Float,,,0b1000001,],,,0xC,],,,0b1000001,],;,h,,,P24q0j0_,:,U,),{,},},<EOF>''',101))

    def test_1987(self):
        self.assertTrue(TestLexer.test('''Class e:_3{Val _j,$6:Array [Array [Array [Array [String ,0B10],88],0X26],6];}Class g{Val __8,_45:Array [Array [Array [String ,0b1],06_5],03];}Class u:Vz_o{}''','''Class,e,:,_3,{,Val,_j,,,$6,:,Array,[,Array,[,Array,[,Array,[,String,,,0B10,],,,88,],,,0X26,],,,6,],;,},Class,g,{,Val,__8,,,_45,:,Array,[,Array,[,Array,[,String,,,0b1,],,,065,],,,03,],;,},Class,u,:,Vz_o,{,},<EOF>''',101))

    def test_1988(self):
        self.assertTrue(TestLexer.test('''Class __{Constructor (V,P:Array [Int ,04_0];t,C:String ;W:String ;d:Array [Float ,0B1];_2_,l7__:_;_,cV,_,_V,_5_u,rB_:_6){} }''','''Class,__,{,Constructor,(,V,,,P,:,Array,[,Int,,,040,],;,t,,,C,:,String,;,W,:,String,;,d,:,Array,[,Float,,,0B1,],;,_2_,,,l7__,:,_,;,_,,,cV,,,_,,,_V,,,_5_u,,,rB_,:,_6,),{,},},<EOF>''',101))

    def test_1989(self):
        self.assertTrue(TestLexer.test('''Class o_2:n{_(){} }Class h_08{Constructor (gs:Array [Array [Array [Array [String ,0103],01_57],0B1011110],0103];__77,C_9,_R,W:Array [Float ,0b1]){} }''','''Class,o_2,:,n,{,_,(,),{,},},Class,h_08,{,Constructor,(,gs,:,Array,[,Array,[,Array,[,Array,[,String,,,0103,],,,0157,],,,0B1011110,],,,0103,],;,__77,,,C_9,,,_R,,,W,:,Array,[,Float,,,0b1,],),{,},},<EOF>''',101))

    def test_1990(self):
        self.assertTrue(TestLexer.test('''Class _:_{Var K,_4:Float ;}Class E:t{$7(__p2:Array [Array [Array [Array [Array [Boolean ,4],0B10],0X18],0B1],0X18]){} }''','''Class,_,:,_,{,Var,K,,,_4,:,Float,;,},Class,E,:,t,{,$7,(,__p2,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,4,],,,0B10,],,,0X18,],,,0B1,],,,0X18,],),{,},},<EOF>''',101))

    def test_1991(self):
        self.assertTrue(TestLexer.test('''Class j5{Val $s1__6:Array [Array [Array [Array [Array [Array [String ,66],0XA],060],0X2],060],0b10011];}Class _F{}Class x:U__3l{}''','''Class,j5,{,Val,$s1__6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,66,],,,0XA,],,,060,],,,0X2,],,,060,],,,0b10011,],;,},Class,_F,{,},Class,x,:,U__3l,{,},<EOF>''',101))

    def test_1992(self):
        self.assertTrue(TestLexer.test('''Class v{Var $_,$5_:Array [Array [String ,0110564_6],01];Var t_:Array [Array [Array [Array [Array [Array [Int ,63],0x46_3],0XC],0B100000],63],63];}Class E{}Class sI7{}Class I:_{}''','''Class,v,{,Var,$_,,,$5_,:,Array,[,Array,[,String,,,01105646,],,,01,],;,Var,t_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,63,],,,0x463,],,,0XC,],,,0B100000,],,,63,],,,63,],;,},Class,E,{,},Class,sI7,{,},Class,I,:,_,{,},<EOF>''',101))

    def test_1993(self):
        self.assertTrue(TestLexer.test('''Class _:S{$_8_(_,_0_5r,h0_:Array [Array [Boolean ,0x2E],0134];_:Float ;J:Array [Array [Array [Array [Array [Array [Int ,0134],0xDFCC_D],0134],0134],0B1001011],0134]){}$_0__(sh_UQC:Array [Int ,0B1]){} }Class H_{}''','''Class,_,:,S,{,$_8_,(,_,,,_0_5r,,,h0_,:,Array,[,Array,[,Boolean,,,0x2E,],,,0134,],;,_,:,Float,;,J,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0134,],,,0xDFCCD,],,,0134,],,,0134,],,,0B1001011,],,,0134,],),{,},$_0__,(,sh_UQC,:,Array,[,Int,,,0B1,],),{,},},Class,H_,{,},<EOF>''',101))

    def test_1994(self):
        self.assertTrue(TestLexer.test('''Class _{}Class B:_a_{Var $5_,_0:V_1_;Val $e:Array [Float ,0X16];}Class h1:t{Var $1:Int ;Var $_:Boolean ;Constructor (){Break ;}Val $_,$H,$8E_X2u:Int ;}Class _p:_{}Class DB{}''','''Class,_,{,},Class,B,:,_a_,{,Var,$5_,,,_0,:,V_1_,;,Val,$e,:,Array,[,Float,,,0X16,],;,},Class,h1,:,t,{,Var,$1,:,Int,;,Var,$_,:,Boolean,;,Constructor,(,),{,Break,;,},Val,$_,,,$H,,,$8E_X2u,:,Int,;,},Class,_p,:,_,{,},Class,DB,{,},<EOF>''',101))

    def test_1995(self):
        self.assertTrue(TestLexer.test('''Class c__{Constructor (){}k(_:Array [Array [Array [Float ,0B1],0B1],0x38]){}Constructor (_8,__9,__l,_:Array [Float ,0b1]){} }''','''Class,c__,{,Constructor,(,),{,},k,(,_,:,Array,[,Array,[,Array,[,Float,,,0B1,],,,0B1,],,,0x38,],),{,},Constructor,(,_8,,,__9,,,__l,,,_,:,Array,[,Float,,,0b1,],),{,},},<EOF>''',101))

    def test_1996(self):
        self.assertTrue(TestLexer.test('''Class P{}Class q{Val $5:Array [Array [Array [Array [Boolean ,0b11],0B1_1],0X930],47];Val k:Array [Array [Array [String ,10],06],0X3E];}''','''Class,P,{,},Class,q,{,Val,$5,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b11,],,,0B11,],,,0X930,],,,47,],;,Val,k,:,Array,[,Array,[,Array,[,String,,,10,],,,06,],,,0X3E,],;,},<EOF>''',101))

    def test_1997(self):
        self.assertTrue(TestLexer.test('''Class __6Z:_8{}Class _{}Class _O0{Val $V_,x_w_,$6__:Array [Array [Int ,24],050];Var $2_7_2:Array [Array [Array [Boolean ,0b1_0],67_272],4_4];}''','''Class,__6Z,:,_8,{,},Class,_,{,},Class,_O0,{,Val,$V_,,,x_w_,,,$6__,:,Array,[,Array,[,Int,,,24,],,,050,],;,Var,$2_7_2,:,Array,[,Array,[,Array,[,Boolean,,,0b10,],,,67272,],,,44,],;,},<EOF>''',101))

    def test_1998(self):
        self.assertTrue(TestLexer.test('''Class wt:o6_V{$n(M:Int ;b,_:Int ;_ZhW_IR_j:Array [Array [Array [Array [Array [Array [String ,066],0535],0B1_11],6],0b1001100],066]){} }''','''Class,wt,:,o6_V,{,$n,(,M,:,Int,;,b,,,_,:,Int,;,_ZhW_IR_j,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,066,],,,0535,],,,0B111,],,,6,],,,0b1001100,],,,066,],),{,},},<EOF>''',101))

    def test_1999(self):
        self.assertTrue(TestLexer.test('''Class _:f{}Class p{Destructor (){}Var $_,d,$5:Array [Int ,0X9];Destructor (){ {} }}Class X:_9x86{_(S,_D_:o;_3p:Array [Array [Int ,0b101011],07_0_5];z,f9n,_:Y){} }Class _:_{$_4(){}Constructor (){}Destructor (){} }''','''Class,_,:,f,{,},Class,p,{,Destructor,(,),{,},Var,$_,,,d,,,$5,:,Array,[,Int,,,0X9,],;,Destructor,(,),{,{,},},},Class,X,:,_9x86,{,_,(,S,,,_D_,:,o,;,_3p,:,Array,[,Array,[,Int,,,0b101011,],,,0705,],;,z,,,f9n,,,_,:,Y,),{,},},Class,_,:,_,{,$_4,(,),{,},Constructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_2000(self):
        self.assertTrue(TestLexer.test('''Class Y___:p{Var $_:Float ;}Class _y{}Class __:q_{Val $_1_:Array [Int ,03];_(_o,_:Array [Array [Int ,0xB],9]){} }''','''Class,Y___,:,p,{,Var,$_,:,Float,;,},Class,_y,{,},Class,__,:,q_,{,Val,$_1_,:,Array,[,Int,,,03,],;,_,(,_o,,,_,:,Array,[,Array,[,Int,,,0xB,],,,9,],),{,},},<EOF>''',101))

    def test_2001(self):
        self.assertTrue(TestLexer.test('''Class _47{Var _E,$_:Array [Int ,0134];}Class Q:_{}Class T:_2_{Val $_4_,__:Array [Array [Array [Float ,0b11],0B1001],0xC];}''','''Class,_47,{,Var,_E,,,$_,:,Array,[,Int,,,0134,],;,},Class,Q,:,_,{,},Class,T,:,_2_,{,Val,$_4_,,,__,:,Array,[,Array,[,Array,[,Float,,,0b11,],,,0B1001,],,,0xC,],;,},<EOF>''',101))

    def test_2002(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (__:Array [Boolean ,0B101];x:Array [Float ,0X50];uS,B,_:_1;eJ,_0c6:Boolean ;y,_,O,T:Array [Boolean ,0b1];_,_,L,_:String ;Ab_:Boolean ){}Constructor (){__::$_();} }Class _{vw5v(jm,P:_X_;_983,_,___:v3){} }''','''Class,_,{,Constructor,(,__,:,Array,[,Boolean,,,0B101,],;,x,:,Array,[,Float,,,0X50,],;,uS,,,B,,,_,:,_1,;,eJ,,,_0c6,:,Boolean,;,y,,,_,,,O,,,T,:,Array,[,Boolean,,,0b1,],;,_,,,_,,,L,,,_,:,String,;,Ab_,:,Boolean,),{,},Constructor,(,),{,__,::,$_,(,),;,},},Class,_,{,vw5v,(,jm,,,P,:,_X_,;,_983,,,_,,,___,:,v3,),{,},},<EOF>''',101))

    def test_2003(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (_:md;KFh_4_R:Int ;_,_2,_,_____7_:Array [Array [Boolean ,0104],9];X3_:Int ;G4:Z){} }Class S:v_X{}''','''Class,_,:,_,{,Constructor,(,_,:,md,;,KFh_4_R,:,Int,;,_,,,_2,,,_,,,_____7_,:,Array,[,Array,[,Boolean,,,0104,],,,9,],;,X3_,:,Int,;,G4,:,Z,),{,},},Class,S,:,v_X,{,},<EOF>''',101))

    def test_2004(self):
        self.assertTrue(TestLexer.test('''Class _4:_v{$M(U_4s,y,_Z0b:Array [Array [Array [Array [Int ,40],0X4E],06],0xD_9];w,iS__9_e,_1_,_,e,J_4,_p,__:Array [Array [Array [Float ,0x3B],0b1],0xB]){} }''','''Class,_4,:,_v,{,$M,(,U_4s,,,y,,,_Z0b,:,Array,[,Array,[,Array,[,Array,[,Int,,,40,],,,0X4E,],,,06,],,,0xD9,],;,w,,,iS__9_e,,,_1_,,,_,,,e,,,J_4,,,_p,,,__,:,Array,[,Array,[,Array,[,Float,,,0x3B,],,,0b1,],,,0xB,],),{,},},<EOF>''',101))

    def test_2005(self):
        self.assertTrue(TestLexer.test('''Class L34:J{}Class __{}Class D4cm6_j:o7{Var _,$__,s:Array [Array [Int ,83],0B1];Var $3,$____,$_,$p:Array [Boolean ,0b1111_0];}Class _:__{}''','''Class,L34,:,J,{,},Class,__,{,},Class,D4cm6_j,:,o7,{,Var,_,,,$__,,,s,:,Array,[,Array,[,Int,,,83,],,,0B1,],;,Var,$3,,,$____,,,$_,,,$p,:,Array,[,Boolean,,,0b11110,],;,},Class,_,:,__,{,},<EOF>''',101))

    def test_2006(self):
        self.assertTrue(TestLexer.test('''Class _:__68{}Class qg4_Dlb6:hy_{Constructor (g,Jd:Boolean ;_4:Array [Array [Float ,85],0x4];_:TS9_;g,F:_15S87iz){} }''','''Class,_,:,__68,{,},Class,qg4_Dlb6,:,hy_,{,Constructor,(,g,,,Jd,:,Boolean,;,_4,:,Array,[,Array,[,Float,,,85,],,,0x4,],;,_,:,TS9_,;,g,,,F,:,_15S87iz,),{,},},<EOF>''',101))

    def test_2007(self):
        self.assertTrue(TestLexer.test('''Class _:k_p_gC2{$_J(mf:Array [Float ,02_2];G:String ;K_g__,JQ3A3905,E_,__:qW;r_s_0:Boolean ){Continue ;}Var U44:Array [String ,070];}Class N_:__d{}''','''Class,_,:,k_p_gC2,{,$_J,(,mf,:,Array,[,Float,,,022,],;,G,:,String,;,K_g__,,,JQ3A3905,,,E_,,,__,:,qW,;,r_s_0,:,Boolean,),{,Continue,;,},Var,U44,:,Array,[,String,,,070,],;,},Class,N_,:,__d,{,},<EOF>''',101))

    def test_2008(self):
        self.assertTrue(TestLexer.test('''Class _pO:_OM{$902(i_,_c:Array [String ,0xEA6_D];_,H_6:B2__24_;G:Array [Float ,91];_5_,_:Boolean ;Ml,Me:CI){Break ;} }''','''Class,_pO,:,_OM,{,$902,(,i_,,,_c,:,Array,[,String,,,0xEA6D,],;,_,,,H_6,:,B2__24_,;,G,:,Array,[,Float,,,91,],;,_5_,,,_,:,Boolean,;,Ml,,,Me,:,CI,),{,Break,;,},},<EOF>''',101))

    def test_2009(self):
        self.assertTrue(TestLexer.test('''Class __:M{}Class _2{Var $V_n,$gT,$j:A;Var $5:Array [Boolean ,7];__0(){Val __,k:R;Break ;} }Class y2{Val $al2,$_1nFa_:_5;}Class e_Y3_{}''','''Class,__,:,M,{,},Class,_2,{,Var,$V_n,,,$gT,,,$j,:,A,;,Var,$5,:,Array,[,Boolean,,,7,],;,__0,(,),{,Val,__,,,k,:,R,;,Break,;,},},Class,y2,{,Val,$al2,,,$_1nFa_,:,_5,;,},Class,e_Y3_,{,},<EOF>''',101))

    def test_2010(self):
        self.assertTrue(TestLexer.test('''Class D:n8_S2{Constructor (_QlL,X:Boolean ;vU,_,E_,_:Array [Boolean ,04];_,_2,g,_Y,__:Array [String ,0B110100];C,Gk5:_;_:Float ){}Constructor (){Continue ;}Var $_,_,$i,$_:Float ;Constructor (I9_i6,Q3l,__K:Float ;q,_,___h9:x){Return ;_::$70();}Val $r,$6,$i_,_92,_,$L:Array [String ,012];Constructor (n:Array [Array [Boolean ,0b1],0b10];_m_7,_,_,a:Array [Boolean ,76]){} }Class J_{}''','''Class,D,:,n8_S2,{,Constructor,(,_QlL,,,X,:,Boolean,;,vU,,,_,,,E_,,,_,:,Array,[,Boolean,,,04,],;,_,,,_2,,,g,,,_Y,,,__,:,Array,[,String,,,0B110100,],;,C,,,Gk5,:,_,;,_,:,Float,),{,},Constructor,(,),{,Continue,;,},Var,$_,,,_,,,$i,,,$_,:,Float,;,Constructor,(,I9_i6,,,Q3l,,,__K,:,Float,;,q,,,_,,,___h9,:,x,),{,Return,;,_,::,$70,(,),;,},Val,$r,,,$6,,,$i_,,,_92,,,_,,,$L,:,Array,[,String,,,012,],;,Constructor,(,n,:,Array,[,Array,[,Boolean,,,0b1,],,,0b10,],;,_m_7,,,_,,,_,,,a,:,Array,[,Boolean,,,76,],),{,},},Class,J_,{,},<EOF>''',101))

    def test_2011(self):
        self.assertTrue(TestLexer.test('''Class _5:__b__{Val fj,___,$4w_:Int ;}Class __{_(__:Boolean ;W_5:Float ){}Constructor (_8h_,_:Boolean ;E,_,_,_,F:Array [Array [Array [Array [Array [Boolean ,0101],0b1001100],0b111],8],03_4];Vu,_0,z:_FJ_;O0__:_8){Continue ;}Constructor (){}Val q_2h:Array [Float ,03];}''','''Class,_5,:,__b__,{,Val,fj,,,___,,,$4w_,:,Int,;,},Class,__,{,_,(,__,:,Boolean,;,W_5,:,Float,),{,},Constructor,(,_8h_,,,_,:,Boolean,;,E,,,_,,,_,,,_,,,F,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0101,],,,0b1001100,],,,0b111,],,,8,],,,034,],;,Vu,,,_0,,,z,:,_FJ_,;,O0__,:,_8,),{,Continue,;,},Constructor,(,),{,},Val,q_2h,:,Array,[,Float,,,03,],;,},<EOF>''',101))

    def test_2012(self):
        self.assertTrue(TestLexer.test('''Class Z{$7(_,J_,_,_:Int ;C:YO;S,G:_;_,__:Float ;U:Array [Array [Array [Array [Array [String ,0X40],0b1],21],42_0],04_1_5_7];_:Boolean ){} }''','''Class,Z,{,$7,(,_,,,J_,,,_,,,_,:,Int,;,C,:,YO,;,S,,,G,:,_,;,_,,,__,:,Float,;,U,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X40,],,,0b1,],,,21,],,,420,],,,04157,],;,_,:,Boolean,),{,},},<EOF>''',101))

    def test_2013(self):
        self.assertTrue(TestLexer.test('''Class s{}Class i{Val $1P8,$a,$q0_,_:_;}Class X7{Var e:Array [Array [Boolean ,0b1],0267];Constructor (L:Int ){} }Class j{__(){} }''','''Class,s,{,},Class,i,{,Val,$1P8,,,$a,,,$q0_,,,_,:,_,;,},Class,X7,{,Var,e,:,Array,[,Array,[,Boolean,,,0b1,],,,0267,],;,Constructor,(,L,:,Int,),{,},},Class,j,{,__,(,),{,},},<EOF>''',101))

    def test_2014(self):
        self.assertTrue(TestLexer.test('''Class k{}Class __:G{Constructor (_,D7,J3_O:Boolean ){Continue ;} }Class _{}Class _:__q{}Class _01__{Var $jT1:Array [Int ,54];}''','''Class,k,{,},Class,__,:,G,{,Constructor,(,_,,,D7,,,J3_O,:,Boolean,),{,Continue,;,},},Class,_,{,},Class,_,:,__q,{,},Class,_01__,{,Var,$jT1,:,Array,[,Int,,,54,],;,},<EOF>''',101))

    def test_2015(self):
        self.assertTrue(TestLexer.test('''Class J7W{Constructor (R_l,_,J_,c4,e,_,J_,u6,_55_Z__,H:S;_4:__5){} }Class R{}Class _:r{}Class b_:V{Var $_9:Int ;}''','''Class,J7W,{,Constructor,(,R_l,,,_,,,J_,,,c4,,,e,,,_,,,J_,,,u6,,,_55_Z__,,,H,:,S,;,_4,:,__5,),{,},},Class,R,{,},Class,_,:,r,{,},Class,b_,:,V,{,Var,$_9,:,Int,;,},<EOF>''',101))

    def test_2016(self):
        self.assertTrue(TestLexer.test('''Class eM7:_{}Class _:J{}Class y:b__5{}Class k{Destructor (){Val _,Qtan_c2K_3,UP:i;} }Class p:Q_6_3__{Var _mQ_:Int ;Val o_9_,_,_9_:Int ;}Class _:_{}''','''Class,eM7,:,_,{,},Class,_,:,J,{,},Class,y,:,b__5,{,},Class,k,{,Destructor,(,),{,Val,_,,,Qtan_c2K_3,,,UP,:,i,;,},},Class,p,:,Q_6_3__,{,Var,_mQ_,:,Int,;,Val,o_9_,,,_,,,_9_,:,Int,;,},Class,_,:,_,{,},<EOF>''',101))

    def test_2017(self):
        self.assertTrue(TestLexer.test('''Class V_:E{Var __8Hi_,$F_U_77Dl:Array [Float ,06];Val $cg,$___:Array [Array [Array [Array [Int ,7],7],0b1011011],0b1011011];}Class bD{}Class _{}Class _g0{}''','''Class,V_,:,E,{,Var,__8Hi_,,,$F_U_77Dl,:,Array,[,Float,,,06,],;,Val,$cg,,,$___,:,Array,[,Array,[,Array,[,Array,[,Int,,,7,],,,7,],,,0b1011011,],,,0b1011011,],;,},Class,bD,{,},Class,_,{,},Class,_g0,{,},<EOF>''',101))

    def test_2018(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{}Class _:_{Je0E(_w:_k;_qgZ,_7_0_:V1;_90:Array [String ,6]){}Constructor (P:wB2_1_fc_;L_O_,_0,T3,L,_3_pl:Z;k,J5___m_6:Array [Boolean ,0B110100]){} }Class z{}Class z_:H{Var _1_,_:String ;}''','''Class,_,{,},Class,_,{,},Class,_,:,_,{,Je0E,(,_w,:,_k,;,_qgZ,,,_7_0_,:,V1,;,_90,:,Array,[,String,,,6,],),{,},Constructor,(,P,:,wB2_1_fc_,;,L_O_,,,_0,,,T3,,,L,,,_3_pl,:,Z,;,k,,,J5___m_6,:,Array,[,Boolean,,,0B110100,],),{,},},Class,z,{,},Class,z_,:,H,{,Var,_1_,,,_,:,String,;,},<EOF>''',101))

    def test_2019(self):
        self.assertTrue(TestLexer.test('''Class z_L6{}Class _:K{}Class R_6t5_0{Var $_3,_6:Array [Array [Array [Boolean ,026],0B1_0],0x34];Var _,$_:Array [Array [Array [String ,7_1_9],0x8_F_8D_7],0x34];}''','''Class,z_L6,{,},Class,_,:,K,{,},Class,R_6t5_0,{,Var,$_3,,,_6,:,Array,[,Array,[,Array,[,Boolean,,,026,],,,0B10,],,,0x34,],;,Var,_,,,$_,:,Array,[,Array,[,Array,[,String,,,719,],,,0x8F8D7,],,,0x34,],;,},<EOF>''',101))

    def test_2020(self):
        self.assertTrue(TestLexer.test('''Class _:_{Val _,$2,_:Array [Array [Array [Boolean ,0xA54_3],0b1_01],737];_(__,_6_Un,_Mh_,m8Wz:Boolean ;f:Boolean ;Z:Array [String ,55_3];l,_:Array [Array [Array [Int ,18],0B1010001],0x5];_:Array [Int ,03];H9_786:_1l){}Constructor (N,T_4,_44,l,_q51E__0,a_,Z,__:Array [Array [Array [Float ,0XA8],016],0xB7E3];K:Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,4],5],0X9_0],0X20],014],0x23],0B1010001],0X20],2_4_9];_1:Array [Float ,0x62];r,yp45:Array [Float ,0x4_1]){} }''','''Class,_,:,_,{,Val,_,,,$2,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0xA543,],,,0b101,],,,737,],;,_,(,__,,,_6_Un,,,_Mh_,,,m8Wz,:,Boolean,;,f,:,Boolean,;,Z,:,Array,[,String,,,553,],;,l,,,_,:,Array,[,Array,[,Array,[,Int,,,18,],,,0B1010001,],,,0x5,],;,_,:,Array,[,Int,,,03,],;,H9_786,:,_1l,),{,},Constructor,(,N,,,T_4,,,_44,,,l,,,_q51E__0,,,a_,,,Z,,,__,:,Array,[,Array,[,Array,[,Float,,,0XA8,],,,016,],,,0xB7E3,],;,K,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,4,],,,5,],,,0X90,],,,0X20,],,,014,],,,0x23,],,,0B1010001,],,,0X20,],,,249,],;,_1,:,Array,[,Float,,,0x62,],;,r,,,yp45,:,Array,[,Float,,,0x41,],),{,},},<EOF>''',101))

    def test_2021(self):
        self.assertTrue(TestLexer.test('''Class p__:__a{Val n28:qQ7;}Class J:t{}Class _:__{Var $_,$4,$1:Ao;Destructor (){}Val k,__,_m:v;Destructor (){}Var O,U7,$0,E:Array [Array [Float ,072],2];}Class NHp{Constructor (_d,S,_:_8){}Val __:Array [Array [Array [Float ,0b10],0X3F],06];Destructor (){} }''','''Class,p__,:,__a,{,Val,n28,:,qQ7,;,},Class,J,:,t,{,},Class,_,:,__,{,Var,$_,,,$4,,,$1,:,Ao,;,Destructor,(,),{,},Val,k,,,__,,,_m,:,v,;,Destructor,(,),{,},Var,O,,,U7,,,$0,,,E,:,Array,[,Array,[,Float,,,072,],,,2,],;,},Class,NHp,{,Constructor,(,_d,,,S,,,_,:,_8,),{,},Val,__,:,Array,[,Array,[,Array,[,Float,,,0b10,],,,0X3F,],,,06,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_2022(self):
        self.assertTrue(TestLexer.test('''Class _pm____:D1{Val $E:Array [Array [Array [Boolean ,03],80],05];}Class _:_WIy{Constructor (){} }Class K_9_E7:N_{}''','''Class,_pm____,:,D1,{,Val,$E,:,Array,[,Array,[,Array,[,Boolean,,,03,],,,80,],,,05,],;,},Class,_,:,_WIy,{,Constructor,(,),{,},},Class,K_9_E7,:,N_,{,},<EOF>''',101))

    def test_2023(self):
        self.assertTrue(TestLexer.test('''Class _7g:_{Val $_,it,$1,$_:_4r;Constructor (){}Var $2,_,$l,$C,_SU:Array [Array [Array [Float ,0114],0B10],0XF4];}''','''Class,_7g,:,_,{,Val,$_,,,it,,,$1,,,$_,:,_4r,;,Constructor,(,),{,},Var,$2,,,_,,,$l,,,$C,,,_SU,:,Array,[,Array,[,Array,[,Float,,,0114,],,,0B10,],,,0XF4,],;,},<EOF>''',101))

    def test_2024(self):
        self.assertTrue(TestLexer.test('''Class _9d:_{Var _:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0xA5_EA_7],045],0B1001001],0X1B],40_0],53],0x95_C],045],53];}''','''Class,_9d,:,_,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0xA5EA7,],,,045,],,,0B1001001,],,,0X1B,],,,400,],,,53,],,,0x95C,],,,045,],,,53,],;,},<EOF>''',101))

    def test_2025(self):
        self.assertTrue(TestLexer.test('''Class _:Ts{Constructor (_3,__V,_,_aK0W:Array [Array [Array [Array [Boolean ,07_6],036],036],05];_1_6_BY:Array [Int ,5]){Break ;} }''','''Class,_,:,Ts,{,Constructor,(,_3,,,__V,,,_,,,_aK0W,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,076,],,,036,],,,036,],,,05,],;,_1_6_BY,:,Array,[,Int,,,5,],),{,Break,;,},},<EOF>''',101))

    def test_2026(self):
        self.assertTrue(TestLexer.test('''Class Dh_{Destructor (){}Val $0,_Gi:String ;}Class aK:_2{}Class __{Var $___,$3,$L:Boolean ;}Class J:h{}Class I_d:M{Constructor (){ {} }Var B_,$m9,_:Array [String ,0B1];}''','''Class,Dh_,{,Destructor,(,),{,},Val,$0,,,_Gi,:,String,;,},Class,aK,:,_2,{,},Class,__,{,Var,$___,,,$3,,,$L,:,Boolean,;,},Class,J,:,h,{,},Class,I_d,:,M,{,Constructor,(,),{,{,},},Var,B_,,,$m9,,,_,:,Array,[,String,,,0B1,],;,},<EOF>''',101))

    def test_2027(self):
        self.assertTrue(TestLexer.test('''Class __24H{}Class a:_0{Destructor (){}Constructor (_3,_t_,d3,_,m:Float ;__:Boolean ){B::$T9_1();} }Class __{}Class Zz8:J{}Class __:_{}Class W:L{Constructor (_x,_7:Boolean ;__2:Array [Boolean ,0X575];_1,_:Array [Float ,46]){Return ;Continue ;} }''','''Class,__24H,{,},Class,a,:,_0,{,Destructor,(,),{,},Constructor,(,_3,,,_t_,,,d3,,,_,,,m,:,Float,;,__,:,Boolean,),{,B,::,$T9_1,(,),;,},},Class,__,{,},Class,Zz8,:,J,{,},Class,__,:,_,{,},Class,W,:,L,{,Constructor,(,_x,,,_7,:,Boolean,;,__2,:,Array,[,Boolean,,,0X575,],;,_1,,,_,:,Array,[,Float,,,46,],),{,Return,;,Continue,;,},},<EOF>''',101))

    def test_2028(self):
        self.assertTrue(TestLexer.test('''Class RJ:_1R1s{Constructor (A:Array [Int ,054];i,_:Array [Array [Array [String ,054],030],0XA];_,_,_:_26;e,___Y5:String ){}l(){} }''','''Class,RJ,:,_1R1s,{,Constructor,(,A,:,Array,[,Int,,,054,],;,i,,,_,:,Array,[,Array,[,Array,[,String,,,054,],,,030,],,,0XA,],;,_,,,_,,,_,:,_26,;,e,,,___Y5,:,String,),{,},l,(,),{,},},<EOF>''',101))

    def test_2029(self):
        self.assertTrue(TestLexer.test('''Class _1cUE:_U{Constructor (_:Boolean ;K6K_:_;_u,_s6:Int ;_5n:Array [Array [Float ,02602],0X36]){}Destructor (){} }''','''Class,_1cUE,:,_U,{,Constructor,(,_,:,Boolean,;,K6K_,:,_,;,_u,,,_s6,:,Int,;,_5n,:,Array,[,Array,[,Float,,,02602,],,,0X36,],),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_2030(self):
        self.assertTrue(TestLexer.test('''Class Q:_2{}Class CC:B{}Class _:w{Constructor (_3,c,i3,_9_:Array [Array [Boolean ,17],0b1100_1]){}Constructor (){} }''','''Class,Q,:,_2,{,},Class,CC,:,B,{,},Class,_,:,w,{,Constructor,(,_3,,,c,,,i3,,,_9_,:,Array,[,Array,[,Boolean,,,17,],,,0b11001,],),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_2031(self):
        self.assertTrue(TestLexer.test('''Class a_{}Class A0:A{_(Ge,_:Array [Float ,1];_q,k,_y:Float ;p:Array [String ,026]){Break ;}Constructor (l2,A8:k){}Constructor (M:Float ;L7XR:Array [Array [Boolean ,0B10],0x55]){Var __6_,_,_:Boolean ;} }''','''Class,a_,{,},Class,A0,:,A,{,_,(,Ge,,,_,:,Array,[,Float,,,1,],;,_q,,,k,,,_y,:,Float,;,p,:,Array,[,String,,,026,],),{,Break,;,},Constructor,(,l2,,,A8,:,k,),{,},Constructor,(,M,:,Float,;,L7XR,:,Array,[,Array,[,Boolean,,,0B10,],,,0x55,],),{,Var,__6_,,,_,,,_,:,Boolean,;,},},<EOF>''',101))

    def test_2032(self):
        self.assertTrue(TestLexer.test('''Class t_{}Class _S6T:fy__{}Class _:w7{Val $R,_22,JV:_N_2K_72;}Class _:t{}Class __h_:B_Bk{}Class j{_(t:Array [String ,0116];q:Array [Int ,0116];_c_,_,_,Q_:uP){Val Nm:Int ;}Var $03,_:J;}''','''Class,t_,{,},Class,_S6T,:,fy__,{,},Class,_,:,w7,{,Val,$R,,,_22,,,JV,:,_N_2K_72,;,},Class,_,:,t,{,},Class,__h_,:,B_Bk,{,},Class,j,{,_,(,t,:,Array,[,String,,,0116,],;,q,:,Array,[,Int,,,0116,],;,_c_,,,_,,,_,,,Q_,:,uP,),{,Val,Nm,:,Int,;,},Var,$03,,,_,:,J,;,},<EOF>''',101))

    def test_2033(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (d,B:_9_6P;_t2__:Int ;_l__,J,L__:W_;_:Int ;b_9Gq,n,iR,z,s:_){} }Class q{Destructor (){} }''','''Class,_,{,Constructor,(,d,,,B,:,_9_6P,;,_t2__,:,Int,;,_l__,,,J,,,L__,:,W_,;,_,:,Int,;,b_9Gq,,,n,,,iR,,,z,,,s,:,_,),{,},},Class,q,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2034(self):
        self.assertTrue(TestLexer.test('''Class _4{Constructor (){}Val _83,$_Q,$H,_,_,$_,G_5,_:HT;Val A:Array [Array [Array [Float ,0x29],0B1],0b10];}Class _{Var $2,$_,J,$P:String ;Var e08,_x,l:_;}Class __{}''','''Class,_4,{,Constructor,(,),{,},Val,_83,,,$_Q,,,$H,,,_,,,_,,,$_,,,G_5,,,_,:,HT,;,Val,A,:,Array,[,Array,[,Array,[,Float,,,0x29,],,,0B1,],,,0b10,],;,},Class,_,{,Var,$2,,,$_,,,J,,,$P,:,String,;,Var,e08,,,_x,,,l,:,_,;,},Class,__,{,},<EOF>''',101))

    def test_2035(self):
        self.assertTrue(TestLexer.test('''Class l{}Class _{Val $0mJu_1z:Array [Float ,21];Constructor (Z_e,f:String ;_c_:Array [Boolean ,1]){}Val $E:String ;}Class _:_u_{}''','''Class,l,{,},Class,_,{,Val,$0mJu_1z,:,Array,[,Float,,,21,],;,Constructor,(,Z_e,,,f,:,String,;,_c_,:,Array,[,Boolean,,,1,],),{,},Val,$E,:,String,;,},Class,_,:,_u_,{,},<EOF>''',101))

    def test_2036(self):
        self.assertTrue(TestLexer.test('''Class f{}Class _:_3b{Var _g:Boolean =_O8::$_;Var $bd62,$l,Z_,$X,$_:String ;Destructor (){Continue ;}Constructor (){}Constructor (_,__,_h:HOHe_;P:Uo){} }Class U{}''','''Class,f,{,},Class,_,:,_3b,{,Var,_g,:,Boolean,=,_O8,::,$_,;,Var,$bd62,,,$l,,,Z_,,,$X,,,$_,:,String,;,Destructor,(,),{,Continue,;,},Constructor,(,),{,},Constructor,(,_,,,__,,,_h,:,HOHe_,;,P,:,Uo,),{,},},Class,U,{,},<EOF>''',101))

    def test_2037(self):
        self.assertTrue(TestLexer.test('''Class G9_:N{Constructor (){}Var _1,_p:_;Val q1,$0,q:_;_9_(_:String ;_6:Array [Array [Array [Array [Int ,0B11100],042],0b1_1],042];_:Int ){} }''','''Class,G9_,:,N,{,Constructor,(,),{,},Var,_1,,,_p,:,_,;,Val,q1,,,$0,,,q,:,_,;,_9_,(,_,:,String,;,_6,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B11100,],,,042,],,,0b11,],,,042,],;,_,:,Int,),{,},},<EOF>''',101))

    def test_2038(self):
        self.assertTrue(TestLexer.test('''Class __{Constructor (a_2:Array [String ,0B11];_2:Array [Array [Array [Boolean ,0x77],0B110],074_3]){ {} }Constructor (_,_M:Array [Float ,0b1000010]){} }Class _:x{Val s4:_X;Val $_P,$98:Array [Boolean ,52];}Class __{Val z:Kb;Destructor (){}Constructor (){}$A(){Var i,C4:Float ;New _().q__8();}Var _:Array [Array [Array [Int ,0B110],0XE],1_7_1];}''','''Class,__,{,Constructor,(,a_2,:,Array,[,String,,,0B11,],;,_2,:,Array,[,Array,[,Array,[,Boolean,,,0x77,],,,0B110,],,,0743,],),{,{,},},Constructor,(,_,,,_M,:,Array,[,Float,,,0b1000010,],),{,},},Class,_,:,x,{,Val,s4,:,_X,;,Val,$_P,,,$98,:,Array,[,Boolean,,,52,],;,},Class,__,{,Val,z,:,Kb,;,Destructor,(,),{,},Constructor,(,),{,},$A,(,),{,Var,i,,,C4,:,Float,;,New,_,(,),.,q__8,(,),;,},Var,_,:,Array,[,Array,[,Array,[,Int,,,0B110,],,,0XE,],,,171,],;,},<EOF>''',101))

    def test_2039(self):
        self.assertTrue(TestLexer.test('''Class _:d{Val $G:Array [String ,0x58];Destructor (){} }Class R55B:_{Val _:Yy;}Class _9{Var z_,D,LA_:Boolean ;}Class X:q{}''','''Class,_,:,d,{,Val,$G,:,Array,[,String,,,0x58,],;,Destructor,(,),{,},},Class,R55B,:,_,{,Val,_,:,Yy,;,},Class,_9,{,Var,z_,,,D,,,LA_,:,Boolean,;,},Class,X,:,q,{,},<EOF>''',101))

    def test_2040(self):
        self.assertTrue(TestLexer.test('''Class _9_9e_{Destructor (){}Constructor (_6__:A;__:Float ;P,Q:_;_,NF,_,_:Array [Array [Array [Array [String ,0b110101],03],0b10_11],59]){} }''','''Class,_9_9e_,{,Destructor,(,),{,},Constructor,(,_6__,:,A,;,__,:,Float,;,P,,,Q,:,_,;,_,,,NF,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b110101,],,,03,],,,0b1011,],,,59,],),{,},},<EOF>''',101))

    def test_2041(self):
        self.assertTrue(TestLexer.test('''Class _{Val s_:Array [String ,7];}Class _:__{}Class yZ_C:_{}Class _:__{Val _,_V,T,$0___r:A;Var _3_:Array [Float ,041_4];}Class S{}''','''Class,_,{,Val,s_,:,Array,[,String,,,7,],;,},Class,_,:,__,{,},Class,yZ_C,:,_,{,},Class,_,:,__,{,Val,_,,,_V,,,T,,,$0___r,:,A,;,Var,_3_,:,Array,[,Float,,,0414,],;,},Class,S,{,},<EOF>''',101))

    def test_2042(self):
        self.assertTrue(TestLexer.test('''Class l:_{Constructor (Y7wo,N:Array [Array [Array [Array [Array [Array [Array [Int ,54],54],54],0b1011110],9],052],0B10];R,_:_;r:Array [Array [Array [Boolean ,54],0xD],0B101011]){}Var $9BVM:Array [Array [Array [Array [Array [Array [Array [Boolean ,0B101011],0XB],54],07],0b1011110],01],0b1];}''','''Class,l,:,_,{,Constructor,(,Y7wo,,,N,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,54,],,,54,],,,54,],,,0b1011110,],,,9,],,,052,],,,0B10,],;,R,,,_,:,_,;,r,:,Array,[,Array,[,Array,[,Boolean,,,54,],,,0xD,],,,0B101011,],),{,},Var,$9BVM,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B101011,],,,0XB,],,,54,],,,07,],,,0b1011110,],,,01,],,,0b1,],;,},<EOF>''',101))

    def test_2043(self):
        self.assertTrue(TestLexer.test('''Class JT_:e0{z__(h:Boolean ;wl_:String ){Break ;}Val _v:Array [Array [Array [Array [Array [Float ,0X2C],0b1_1],0B1],0b11],0x5F];}''','''Class,JT_,:,e0,{,z__,(,h,:,Boolean,;,wl_,:,String,),{,Break,;,},Val,_v,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X2C,],,,0b11,],,,0B1,],,,0b11,],,,0x5F,],;,},<EOF>''',101))

    def test_2044(self):
        self.assertTrue(TestLexer.test('''Class S{}Class _N{}Class i{}Class Jj:mDw6s{$Y(H:f;_9:Boolean ;x:Array [Array [Array [Array [Boolean ,62],053],536_24_3],1425];_9_1_,T3,_:Array [Array [Array [Boolean ,62],01],0X1_C]){}Destructor (){Return ;} }Class J08{}''','''Class,S,{,},Class,_N,{,},Class,i,{,},Class,Jj,:,mDw6s,{,$Y,(,H,:,f,;,_9,:,Boolean,;,x,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,62,],,,053,],,,536243,],,,1425,],;,_9_1_,,,T3,,,_,:,Array,[,Array,[,Array,[,Boolean,,,62,],,,01,],,,0X1C,],),{,},Destructor,(,),{,Return,;,},},Class,J08,{,},<EOF>''',101))

    def test_2045(self):
        self.assertTrue(TestLexer.test('''Class m:xi{Destructor (){} }Class _{Var _____k9:Float ;Constructor (_:Array [Float ,0b1001110];a,g1,N:Array [Array [Float ,0b1],43];_xy9_,M2_5,_:Array [String ,0B100111]){} }''','''Class,m,:,xi,{,Destructor,(,),{,},},Class,_,{,Var,_____k9,:,Float,;,Constructor,(,_,:,Array,[,Float,,,0b1001110,],;,a,,,g1,,,N,:,Array,[,Array,[,Float,,,0b1,],,,43,],;,_xy9_,,,M2_5,,,_,:,Array,[,String,,,0B100111,],),{,},},<EOF>''',101))

    def test_2046(self):
        self.assertTrue(TestLexer.test('''Class _:_34{_(j0_6:e;_:Array [String ,012];r2,y:l){ {}Break ;} }Class ___:_x{Destructor (){}Destructor (){}b_(_:_){} }''','''Class,_,:,_34,{,_,(,j0_6,:,e,;,_,:,Array,[,String,,,012,],;,r2,,,y,:,l,),{,{,},Break,;,},},Class,___,:,_x,{,Destructor,(,),{,},Destructor,(,),{,},b_,(,_,:,_,),{,},},<EOF>''',101))

    def test_2047(self):
        self.assertTrue(TestLexer.test('''Class w:s{Val $_0:e1;}Class _:j{Var _:_;Var $8_:Array [Boolean ,0x5];Val _,$_6,$_q:_;}Class __0{}Class N:e7_{Constructor (B:Float ){} }Class Q:c{Val __:String ;Var _,$_:Int ;}''','''Class,w,:,s,{,Val,$_0,:,e1,;,},Class,_,:,j,{,Var,_,:,_,;,Var,$8_,:,Array,[,Boolean,,,0x5,],;,Val,_,,,$_6,,,$_q,:,_,;,},Class,__0,{,},Class,N,:,e7_,{,Constructor,(,B,:,Float,),{,},},Class,Q,:,c,{,Val,__,:,String,;,Var,_,,,$_,:,Int,;,},<EOF>''',101))

    def test_2048(self):
        self.assertTrue(TestLexer.test('''Class e:_KLp{Destructor (){} }Class N{}Class _o244{}Class u__n{}Class _{Z(){}z(_0,p:Array [Array [Float ,0b1],0b101];V,S,F,I_0E0Wq,e62,T_:Float ;__1,lX0:Array [Int ,66]){}Var $Oa:Array [Int ,0x6C];Destructor (){Break ;} }''','''Class,e,:,_KLp,{,Destructor,(,),{,},},Class,N,{,},Class,_o244,{,},Class,u__n,{,},Class,_,{,Z,(,),{,},z,(,_0,,,p,:,Array,[,Array,[,Float,,,0b1,],,,0b101,],;,V,,,S,,,F,,,I_0E0Wq,,,e62,,,T_,:,Float,;,__1,,,lX0,:,Array,[,Int,,,66,],),{,},Var,$Oa,:,Array,[,Int,,,0x6C,],;,Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_2049(self):
        self.assertTrue(TestLexer.test('''Class m{Constructor (_:Array [Int ,0x7];_,G,_:b;Ov,x0:Array [Float ,40_23];_:Array [Array [Array [Boolean ,36],010],0XD_4];_:Int ;_,B1,O:Array [Float ,48];Go:Array [Int ,0b1];TS_0_,s:Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,0b1011100],0b1011100],02],0B1_0],0x59],48],0XC],0x19_4_8_8],48];_,q:Array [Float ,0b1_11];H,_,e_,_,h__:Float ){} }Class K:n{}''','''Class,m,{,Constructor,(,_,:,Array,[,Int,,,0x7,],;,_,,,G,,,_,:,b,;,Ov,,,x0,:,Array,[,Float,,,4023,],;,_,:,Array,[,Array,[,Array,[,Boolean,,,36,],,,010,],,,0XD4,],;,_,:,Int,;,_,,,B1,,,O,:,Array,[,Float,,,48,],;,Go,:,Array,[,Int,,,0b1,],;,TS_0_,,,s,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b1011100,],,,0b1011100,],,,02,],,,0B10,],,,0x59,],,,48,],,,0XC,],,,0x19488,],,,48,],;,_,,,q,:,Array,[,Float,,,0b111,],;,H,,,_,,,e_,,,_,,,h__,:,Float,),{,},},Class,K,:,n,{,},<EOF>''',101))

    def test_2050(self):
        self.assertTrue(TestLexer.test('''Class PE:S33{}Class W{}Class _{_(__JHB,_f4:Array [Float ,046];_W,i:Array [Array [Float ,0B1000],0X3C];_NSI_7:Float ){}Val $_H,$90__,$H__,_,$___:y;}''','''Class,PE,:,S33,{,},Class,W,{,},Class,_,{,_,(,__JHB,,,_f4,:,Array,[,Float,,,046,],;,_W,,,i,:,Array,[,Array,[,Float,,,0B1000,],,,0X3C,],;,_NSI_7,:,Float,),{,},Val,$_H,,,$90__,,,$H__,,,_,,,$___,:,y,;,},<EOF>''',101))

    def test_2051(self):
        self.assertTrue(TestLexer.test('''Class _{}Class Ix_{Constructor (_3H6,_8669:Array [Array [Float ,24],24];_:Array [Array [Array [Boolean ,7],0b1010100],07]){Var _:Boolean ;} }''','''Class,_,{,},Class,Ix_,{,Constructor,(,_3H6,,,_8669,:,Array,[,Array,[,Float,,,24,],,,24,],;,_,:,Array,[,Array,[,Array,[,Boolean,,,7,],,,0b1010100,],,,07,],),{,Var,_,:,Boolean,;,},},<EOF>''',101))

    def test_2052(self):
        self.assertTrue(TestLexer.test('''Class K{__(){Var X_Uzz6,hg12:Array [Array [Array [Array [Boolean ,01],3],71],7_1];}Var $70:Boolean ;Val $Hy,__:String ;}''','''Class,K,{,__,(,),{,Var,X_Uzz6,,,hg12,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,01,],,,3,],,,71,],,,71,],;,},Var,$70,:,Boolean,;,Val,$Hy,,,__,:,String,;,},<EOF>''',101))

    def test_2053(self):
        self.assertTrue(TestLexer.test('''Class V_:_1{Destructor (){Continue ;}Constructor (){}Val $s_,_W,A0:Array [Int ,0b11];Constructor (){}Constructor (a8__:_){} }''','''Class,V_,:,_1,{,Destructor,(,),{,Continue,;,},Constructor,(,),{,},Val,$s_,,,_W,,,A0,:,Array,[,Int,,,0b11,],;,Constructor,(,),{,},Constructor,(,a8__,:,_,),{,},},<EOF>''',101))

    def test_2054(self):
        self.assertTrue(TestLexer.test('''Class vk74:_8Qc1{Val __:Array [String ,074];Constructor (_t:A28C;d:_5;h,l,__N_:_;_00:Float ;_6:Array [Array [Boolean ,10],0XF];N2R,V:String ;P_,_,pX_,P,_:Array [Array [String ,074],074];R1:m_5__;_,_6:String ){} }''','''Class,vk74,:,_8Qc1,{,Val,__,:,Array,[,String,,,074,],;,Constructor,(,_t,:,A28C,;,d,:,_5,;,h,,,l,,,__N_,:,_,;,_00,:,Float,;,_6,:,Array,[,Array,[,Boolean,,,10,],,,0XF,],;,N2R,,,V,:,String,;,P_,,,_,,,pX_,,,P,,,_,:,Array,[,Array,[,String,,,074,],,,074,],;,R1,:,m_5__,;,_,,,_6,:,String,),{,},},<EOF>''',101))

    def test_2055(self):
        self.assertTrue(TestLexer.test('''Class __{_p__89(){}Destructor (){} }Class j{___kR6(_3:Array [String ,035];MV:Array [Array [Array [Float ,67],0b11],0X7];z:_y;__L___:Boolean ;_,_4,Z,v:_;_,_,__8_,_,_,_W:_4){ {Continue ;} }Val $E,nr__:Float ;}''','''Class,__,{,_p__89,(,),{,},Destructor,(,),{,},},Class,j,{,___kR6,(,_3,:,Array,[,String,,,035,],;,MV,:,Array,[,Array,[,Array,[,Float,,,67,],,,0b11,],,,0X7,],;,z,:,_y,;,__L___,:,Boolean,;,_,,,_4,,,Z,,,v,:,_,;,_,,,_,,,__8_,,,_,,,_,,,_W,:,_4,),{,{,Continue,;,},},Val,$E,,,nr__,:,Float,;,},<EOF>''',101))

    def test_2056(self):
        self.assertTrue(TestLexer.test('''Class _:b{Destructor (){} }Class X5{Destructor (){Continue ;}Constructor (){ {}Val _vM,L:Array [Int ,0x76E2];}$0(_8QE_0Q,jl_,i:Q){} }''','''Class,_,:,b,{,Destructor,(,),{,},},Class,X5,{,Destructor,(,),{,Continue,;,},Constructor,(,),{,{,},Val,_vM,,,L,:,Array,[,Int,,,0x76E2,],;,},$0,(,_8QE_0Q,,,jl_,,,i,:,Q,),{,},},<EOF>''',101))

    def test_2057(self):
        self.assertTrue(TestLexer.test('''Class C{}Class _:H__{}Class PO_O:e7{Destructor (){}Var $vT:_M0C;L(_,q:e__;_:HR){} }Class _{}Class _:D__{Var $76,j,$4Y_7__:Boolean ;}''','''Class,C,{,},Class,_,:,H__,{,},Class,PO_O,:,e7,{,Destructor,(,),{,},Var,$vT,:,_M0C,;,L,(,_,,,q,:,e__,;,_,:,HR,),{,},},Class,_,{,},Class,_,:,D__,{,Var,$76,,,j,,,$4Y_7__,:,Boolean,;,},<EOF>''',101))

    def test_2058(self):
        self.assertTrue(TestLexer.test('''Class __:w_{Val _,D_9l7:Int ;Constructor (){}Constructor (P,u,__:_2;G_8m,_v,t_,_39,x___9_:Float ){}$8(K:Ed_;K:_1;_2:m){} }Class _i:R_{}Class _:u{Val $d3a3,$_t3,fv,$1,k:_2H;}''','''Class,__,:,w_,{,Val,_,,,D_9l7,:,Int,;,Constructor,(,),{,},Constructor,(,P,,,u,,,__,:,_2,;,G_8m,,,_v,,,t_,,,_39,,,x___9_,:,Float,),{,},$8,(,K,:,Ed_,;,K,:,_1,;,_2,:,m,),{,},},Class,_i,:,R_,{,},Class,_,:,u,{,Val,$d3a3,,,$_t3,,,fv,,,$1,,,k,:,_2H,;,},<EOF>''',101))

    def test_2059(self):
        self.assertTrue(TestLexer.test('''Class s_9__{}Class _5:_{Constructor (_,_:VV){} }Class _:__M_{Constructor (l:Array [Float ,0X10];I,T_,J,C98,__,_:h1c;_s:String ;dm6,W,X6:_){} }''','''Class,s_9__,{,},Class,_5,:,_,{,Constructor,(,_,,,_,:,VV,),{,},},Class,_,:,__M_,{,Constructor,(,l,:,Array,[,Float,,,0X10,],;,I,,,T_,,,J,,,C98,,,__,,,_,:,h1c,;,_s,:,String,;,dm6,,,W,,,X6,:,_,),{,},},<EOF>''',101))

    def test_2060(self):
        self.assertTrue(TestLexer.test('''Class _{Var $9:Array [Array [Array [Array [Array [Array [Int ,012],9],0B1001],0b111111],0b111111],0B11_1_100];Destructor (){}Var _z,$Z_:__;}''','''Class,_,{,Var,$9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,012,],,,9,],,,0B1001,],,,0b111111,],,,0b111111,],,,0B111100,],;,Destructor,(,),{,},Var,_z,,,$Z_,:,__,;,},<EOF>''',101))

    def test_2061(self):
        self.assertTrue(TestLexer.test('''Class z{}Class u{Constructor (_R,c3:Array [Array [Int ,0x34],9];qz:String ;o:Array [Array [Array [Array [String ,7_4],0x34],0X3],0x34];R:__;t8:_){} }''','''Class,z,{,},Class,u,{,Constructor,(,_R,,,c3,:,Array,[,Array,[,Int,,,0x34,],,,9,],;,qz,:,String,;,o,:,Array,[,Array,[,Array,[,Array,[,String,,,74,],,,0x34,],,,0X3,],,,0x34,],;,R,:,__,;,t8,:,_,),{,},},<EOF>''',101))

    def test_2062(self):
        self.assertTrue(TestLexer.test('''Class _9_u__2{}Class _:_{Val $_v,_,__2:Array [Array [Array [String ,0x5B],065],0b10_1];Destructor (){Continue ;}Var $_z,u_,$p:_5_;}Class g{}''','''Class,_9_u__2,{,},Class,_,:,_,{,Val,$_v,,,_,,,__2,:,Array,[,Array,[,Array,[,String,,,0x5B,],,,065,],,,0b101,],;,Destructor,(,),{,Continue,;,},Var,$_z,,,u_,,,$p,:,_5_,;,},Class,g,{,},<EOF>''',101))

    def test_2063(self):
        self.assertTrue(TestLexer.test('''Class q159S:w_q___U{$89(y_:Array [Array [Array [Float ,0b1],0b1],0x15]){}_(PrE,_:Array [Array [Array [Int ,036],0x3],04];__,j:__){}Val K,_6:Array [Array [Int ,0B101101],03];}Class _{}''','''Class,q159S,:,w_q___U,{,$89,(,y_,:,Array,[,Array,[,Array,[,Float,,,0b1,],,,0b1,],,,0x15,],),{,},_,(,PrE,,,_,:,Array,[,Array,[,Array,[,Int,,,036,],,,0x3,],,,04,],;,__,,,j,:,__,),{,},Val,K,,,_6,:,Array,[,Array,[,Int,,,0B101101,],,,03,],;,},Class,_,{,},<EOF>''',101))

    def test_2064(self):
        self.assertTrue(TestLexer.test('''Class L6{$2_y(){} }Class _{Var _,fS91,_,$_:Array [Int ,0143];Constructor (){}Val r,$L__C:Boolean ;}Class _LM:V_{$_(){Break ;}Constructor (){}Val $R,$_:Int ;}Class _{}''','''Class,L6,{,$2_y,(,),{,},},Class,_,{,Var,_,,,fS91,,,_,,,$_,:,Array,[,Int,,,0143,],;,Constructor,(,),{,},Val,r,,,$L__C,:,Boolean,;,},Class,_LM,:,V_,{,$_,(,),{,Break,;,},Constructor,(,),{,},Val,$R,,,$_,:,Int,;,},Class,_,{,},<EOF>''',101))

    def test_2065(self):
        self.assertTrue(TestLexer.test('''Class M{__(_k,_:Int ){Continue ;Continue ;{}{}{} }Constructor (_g,__4_J:Boolean ;U,_:Boolean ;rF,zHX:Boolean ;_J_:String ){} }''','''Class,M,{,__,(,_k,,,_,:,Int,),{,Continue,;,Continue,;,{,},{,},{,},},Constructor,(,_g,,,__4_J,:,Boolean,;,U,,,_,:,Boolean,;,rF,,,zHX,:,Boolean,;,_J_,:,String,),{,},},<EOF>''',101))

    def test_2066(self):
        self.assertTrue(TestLexer.test('''Class bHO3:_{Destructor (){}$7(_Y:Array [Boolean ,0B100000]){Continue ;}Val $p,$0:Array [Array [Int ,070],02];}Class v{}''','''Class,bHO3,:,_,{,Destructor,(,),{,},$7,(,_Y,:,Array,[,Boolean,,,0B100000,],),{,Continue,;,},Val,$p,,,$0,:,Array,[,Array,[,Int,,,070,],,,02,],;,},Class,v,{,},<EOF>''',101))

    def test_2067(self):
        self.assertTrue(TestLexer.test('''Class VZ:b__F{}Class _1{}Class q:____{}Class _{$y_(_j,_,__b8,_77nZ:String ){}Var _,$7,__:Boolean ;}Class H{Val _:m__;Val $0:Array [Boolean ,3];}''','''Class,VZ,:,b__F,{,},Class,_1,{,},Class,q,:,____,{,},Class,_,{,$y_,(,_j,,,_,,,__b8,,,_77nZ,:,String,),{,},Var,_,,,$7,,,__,:,Boolean,;,},Class,H,{,Val,_,:,m__,;,Val,$0,:,Array,[,Boolean,,,3,],;,},<EOF>''',101))

    def test_2068(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){} }Class _i{Destructor (){}Var _,_72,$44,$_07g,$9:Array [Array [Array [Int ,0x5D],024_5],0x3];}''','''Class,_,{,Constructor,(,),{,},},Class,_i,{,Destructor,(,),{,},Var,_,,,_72,,,$44,,,$_07g,,,$9,:,Array,[,Array,[,Array,[,Int,,,0x5D,],,,0245,],,,0x3,],;,},<EOF>''',101))

    def test_2069(self):
        self.assertTrue(TestLexer.test('''Class E___9K{}Class _{Var _:Float ;j1(__9_,_:Int ;_,__6_2,_7:Array [Float ,29];K395_Z,ZB__44,_:Int ){}Val $i,__:Array [Array [Float ,0x2A],29];u(){}$9s(__,P,_,J:String ;_1,Y_,g:_g){} }''','''Class,E___9K,{,},Class,_,{,Var,_,:,Float,;,j1,(,__9_,,,_,:,Int,;,_,,,__6_2,,,_7,:,Array,[,Float,,,29,],;,K395_Z,,,ZB__44,,,_,:,Int,),{,},Val,$i,,,__,:,Array,[,Array,[,Float,,,0x2A,],,,29,],;,u,(,),{,},$9s,(,__,,,P,,,_,,,J,:,String,;,_1,,,Y_,,,g,:,_g,),{,},},<EOF>''',101))

    def test_2070(self):
        self.assertTrue(TestLexer.test('''Class nT:J{Var $V_:Array [Array [Array [Array [Array [String ,0b1011],0B111001],66],0B10_1],067_6_7_7_4];Val Zl,$_,$Q,_:l_3;}''','''Class,nT,:,J,{,Var,$V_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b1011,],,,0B111001,],,,66,],,,0B101,],,,0676774,],;,Val,Zl,,,$_,,,$Q,,,_,:,l_3,;,},<EOF>''',101))

    def test_2071(self):
        self.assertTrue(TestLexer.test('''Class _:_MB{$_(T,_:s){}Var $_,$3,$_1,$nFiIP_,$8_,D0__:_;rVv0(){Return ;{Var E_6,__,__,_,n:Array [Boolean ,0B10];}Break ;} }''','''Class,_,:,_MB,{,$_,(,T,,,_,:,s,),{,},Var,$_,,,$3,,,$_1,,,$nFiIP_,,,$8_,,,D0__,:,_,;,rVv0,(,),{,Return,;,{,Var,E_6,,,__,,,__,,,_,,,n,:,Array,[,Boolean,,,0B10,],;,},Break,;,},},<EOF>''',101))

    def test_2072(self):
        self.assertTrue(TestLexer.test('''Class b_{$3nX_(A3__1,_:Boolean ){Break ;{Continue ;} }Constructor (__,X,__,_:Array [Array [Boolean ,061],0XB]){} }Class __9_8_{Var $9,$9J5:Array [Float ,0B1];Destructor (){} }Class hA{}Class _{}''','''Class,b_,{,$3nX_,(,A3__1,,,_,:,Boolean,),{,Break,;,{,Continue,;,},},Constructor,(,__,,,X,,,__,,,_,:,Array,[,Array,[,Boolean,,,061,],,,0XB,],),{,},},Class,__9_8_,{,Var,$9,,,$9J5,:,Array,[,Float,,,0B1,],;,Destructor,(,),{,},},Class,hA,{,},Class,_,{,},<EOF>''',101))

    def test_2073(self):
        self.assertTrue(TestLexer.test('''Class _:_18_{}Class r_8:Qg1{Constructor (){}Val $_,$b,$_:Array [Array [Array [Float ,01],0B1],0B1];Constructor (_4,_,_,M:Array [Array [String ,8],0b1_1_0]){Return ;} }''','''Class,_,:,_18_,{,},Class,r_8,:,Qg1,{,Constructor,(,),{,},Val,$_,,,$b,,,$_,:,Array,[,Array,[,Array,[,Float,,,01,],,,0B1,],,,0B1,],;,Constructor,(,_4,,,_,,,_,,,M,:,Array,[,Array,[,String,,,8,],,,0b110,],),{,Return,;,},},<EOF>''',101))

    def test_2074(self):
        self.assertTrue(TestLexer.test('''Class W_{Destructor (){}Val $_435:String ;$7_(_,__:n7;w9,_:Int ;_:Array [Array [Array [Array [Array [Float ,0126],0x3],0x27],0126],95]){}Var o2_:Array [Int ,0b1];Val $1,$o_N:Array [Float ,0x8];}Class _6{}Class _:_{}''','''Class,W_,{,Destructor,(,),{,},Val,$_435,:,String,;,$7_,(,_,,,__,:,n7,;,w9,,,_,:,Int,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0126,],,,0x3,],,,0x27,],,,0126,],,,95,],),{,},Var,o2_,:,Array,[,Int,,,0b1,],;,Val,$1,,,$o_N,:,Array,[,Float,,,0x8,],;,},Class,_6,{,},Class,_,:,_,{,},<EOF>''',101))

    def test_2075(self):
        self.assertTrue(TestLexer.test('''Class N1{}Class _:_Y0{}Class _:__{Destructor (){} }Class iT{}Class _p{}Class _{Var $q,$6:Boolean ;$9_d(_1,_q:_B){Continue ;} }''','''Class,N1,{,},Class,_,:,_Y0,{,},Class,_,:,__,{,Destructor,(,),{,},},Class,iT,{,},Class,_p,{,},Class,_,{,Var,$q,,,$6,:,Boolean,;,$9_d,(,_1,,,_q,:,_B,),{,Continue,;,},},<EOF>''',101))

    def test_2076(self):
        self.assertTrue(TestLexer.test('''Class m{}Class _6__{Val _,_,_,$_,_QQ,_,h:oP;}Class i:N6{Val G8_J:Float ;Val _d66,S_,N8:Array [Array [Int ,0X48],04];Val H:_;}Class g_:_{}Class j_{}Class eZ0{Destructor (){} }''','''Class,m,{,},Class,_6__,{,Val,_,,,_,,,_,,,$_,,,_QQ,,,_,,,h,:,oP,;,},Class,i,:,N6,{,Val,G8_J,:,Float,;,Val,_d66,,,S_,,,N8,:,Array,[,Array,[,Int,,,0X48,],,,04,],;,Val,H,:,_,;,},Class,g_,:,_,{,},Class,j_,{,},Class,eZ0,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2077(self):
        self.assertTrue(TestLexer.test('''Class _2_{}Class ke{sk(){__::$o8();Break ;} }Class _:l{}Class _h{}Class __{Constructor (Qx:Int ;h:S;_7,_y_:Array [Int ,0b11000]){ {} }}Class Mrk:_7_{}''','''Class,_2_,{,},Class,ke,{,sk,(,),{,__,::,$o8,(,),;,Break,;,},},Class,_,:,l,{,},Class,_h,{,},Class,__,{,Constructor,(,Qx,:,Int,;,h,:,S,;,_7,,,_y_,:,Array,[,Int,,,0b11000,],),{,{,},},},Class,Mrk,:,_7_,{,},<EOF>''',101))

    def test_2078(self):
        self.assertTrue(TestLexer.test('''Class G_6_{Constructor (p,_,_31,T__,z,_:Array [Array [Float ,0B1001110],0B1001110];__k_:_){}Destructor (){}Var _58,$41,$9__,$F_:Int ;Val _:_;Var $_6,$g_:w;Var __:Array [String ,0x4];Val $b:a;Constructor (){} }Class _{Constructor (_:Int ;__J,_:String ){Break ;}Destructor (){}$3_84(L:Array [String ,0b1010];Qw,N0n,M4,__,s,_0:e29O){} }''','''Class,G_6_,{,Constructor,(,p,,,_,,,_31,,,T__,,,z,,,_,:,Array,[,Array,[,Float,,,0B1001110,],,,0B1001110,],;,__k_,:,_,),{,},Destructor,(,),{,},Var,_58,,,$41,,,$9__,,,$F_,:,Int,;,Val,_,:,_,;,Var,$_6,,,$g_,:,w,;,Var,__,:,Array,[,String,,,0x4,],;,Val,$b,:,a,;,Constructor,(,),{,},},Class,_,{,Constructor,(,_,:,Int,;,__J,,,_,:,String,),{,Break,;,},Destructor,(,),{,},$3_84,(,L,:,Array,[,String,,,0b1010,],;,Qw,,,N0n,,,M4,,,__,,,s,,,_0,:,e29O,),{,},},<EOF>''',101))

    def test_2079(self):
        self.assertTrue(TestLexer.test('''Class E:__1{}Class _S5{$7_1g(c_,_:Float ;I3__,_:Array [Array [Array [Float ,0B11],0x60],11];_5s9:String ;i:Array [Array [String ,027],0b1_0];_D,x,_,_:Array [Array [Float ,027],0B10011];vG_:_;__27,_:Array [Array [Array [String ,0x95DA_6_D1_8_E_E_94],0x47],016];Nv_:String ){}_(_:Float ){} }Class m:U9{}''','''Class,E,:,__1,{,},Class,_S5,{,$7_1g,(,c_,,,_,:,Float,;,I3__,,,_,:,Array,[,Array,[,Array,[,Float,,,0B11,],,,0x60,],,,11,],;,_5s9,:,String,;,i,:,Array,[,Array,[,String,,,027,],,,0b10,],;,_D,,,x,,,_,,,_,:,Array,[,Array,[,Float,,,027,],,,0B10011,],;,vG_,:,_,;,__27,,,_,:,Array,[,Array,[,Array,[,String,,,0x95DA6D18EE94,],,,0x47,],,,016,],;,Nv_,:,String,),{,},_,(,_,:,Float,),{,},},Class,m,:,U9,{,},<EOF>''',101))

    def test_2080(self):
        self.assertTrue(TestLexer.test('''Class C4:w{Var W,$c,LI:Y;}Class __ge:__{Var _,_K2E,_,_:String ;Constructor (g_J,fN9K,_:Array [Array [Array [Array [Array [Float ,0b100100],0X3],05],0b100100],0X95A6]){}Val _z:_;Destructor (){}Constructor (){} }Class __{}''','''Class,C4,:,w,{,Var,W,,,$c,,,LI,:,Y,;,},Class,__ge,:,__,{,Var,_,,,_K2E,,,_,,,_,:,String,;,Constructor,(,g_J,,,fN9K,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b100100,],,,0X3,],,,05,],,,0b100100,],,,0X95A6,],),{,},Val,_z,:,_,;,Destructor,(,),{,},Constructor,(,),{,},},Class,__,{,},<EOF>''',101))

    def test_2081(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (U,__,_L:Boolean ;_,B,W:String ;s,_1:Array [Float ,03]){}Val f_X59J:Array [Array [Array [Array [Float ,86],92],026],0x5A];}''','''Class,_,{,Constructor,(,U,,,__,,,_L,:,Boolean,;,_,,,B,,,W,:,String,;,s,,,_1,:,Array,[,Float,,,03,],),{,},Val,f_X59J,:,Array,[,Array,[,Array,[,Array,[,Float,,,86,],,,92,],,,026,],,,0x5A,],;,},<EOF>''',101))

    def test_2082(self):
        self.assertTrue(TestLexer.test('''Class j_:D{Destructor (){Continue ;} }Class a2_:_1{$_6_(K3F,q:Array [Array [Boolean ,05],48];Z:Array [String ,0x35];Q:Array [Array [Array [Array [Array [Array [Array [Int ,0B1_0_0],01],37],5],07],87],0B1];O0:Float ;_:Array [Int ,0x2B_E];K7LE:AnI_){} }''','''Class,j_,:,D,{,Destructor,(,),{,Continue,;,},},Class,a2_,:,_1,{,$_6_,(,K3F,,,q,:,Array,[,Array,[,Boolean,,,05,],,,48,],;,Z,:,Array,[,String,,,0x35,],;,Q,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B100,],,,01,],,,37,],,,5,],,,07,],,,87,],,,0B1,],;,O0,:,Float,;,_,:,Array,[,Int,,,0x2BE,],;,K7LE,:,AnI_,),{,},},<EOF>''',101))

    def test_2083(self):
        self.assertTrue(TestLexer.test('''Class _r:t{Var __5_,$S,$__,y,$HgZ_:__;s_(Mu4:Array [Array [String ,0B1_0],0b1];k:Array [Array [Int ,63],45_8_2_9_7_4_6]){} }Class _:g{}''','''Class,_r,:,t,{,Var,__5_,,,$S,,,$__,,,y,,,$HgZ_,:,__,;,s_,(,Mu4,:,Array,[,Array,[,String,,,0B10,],,,0b1,],;,k,:,Array,[,Array,[,Int,,,63,],,,45829746,],),{,},},Class,_,:,g,{,},<EOF>''',101))

    def test_2084(self):
        self.assertTrue(TestLexer.test('''Class d:W{Destructor (){}Destructor (){Break ;}Destructor (){Var v_,_,_1r_:Array [Array [Array [Int ,010],47],0B1001101];} }''','''Class,d,:,W,{,Destructor,(,),{,},Destructor,(,),{,Break,;,},Destructor,(,),{,Var,v_,,,_,,,_1r_,:,Array,[,Array,[,Array,[,Int,,,010,],,,47,],,,0B1001101,],;,},},<EOF>''',101))

    def test_2085(self):
        self.assertTrue(TestLexer.test('''Class a{_(){}$C(f,g,Hl_:_;x29_:M;_:_;Y,l:String ){}$5(){}Val $noo:_3d;Constructor (){} }Class _h:__{}Class _{}Class Ha2k5:G{}''','''Class,a,{,_,(,),{,},$C,(,f,,,g,,,Hl_,:,_,;,x29_,:,M,;,_,:,_,;,Y,,,l,:,String,),{,},$5,(,),{,},Val,$noo,:,_3d,;,Constructor,(,),{,},},Class,_h,:,__,{,},Class,_,{,},Class,Ha2k5,:,G,{,},<EOF>''',101))

    def test_2086(self):
        self.assertTrue(TestLexer.test('''Class _f:_9__81{Var _o,$p,$8d_,$TTK5:Array [Int ,0x3];}Class V_K_h:_{}Class _:T1{Constructor (A,S_a,l__,_,_,_:_){}Var $_,$XHB,_,$F:Float ;}Class Q_:_{Val $94,k:___2;}''','''Class,_f,:,_9__81,{,Var,_o,,,$p,,,$8d_,,,$TTK5,:,Array,[,Int,,,0x3,],;,},Class,V_K_h,:,_,{,},Class,_,:,T1,{,Constructor,(,A,,,S_a,,,l__,,,_,,,_,,,_,:,_,),{,},Var,$_,,,$XHB,,,_,,,$F,:,Float,;,},Class,Q_,:,_,{,Val,$94,,,k,:,___2,;,},<EOF>''',101))

    def test_2087(self):
        self.assertTrue(TestLexer.test('''Class __:_{}Class _{}Class g:_k{}Class z{Val $84_,X7_36:w;}Class __:_85{Destructor (){}_r2(t_7:String ){} }Class u2x_2{}Class _R{Var _,$d_,$8,a:Boolean ;}''','''Class,__,:,_,{,},Class,_,{,},Class,g,:,_k,{,},Class,z,{,Val,$84_,,,X7_36,:,w,;,},Class,__,:,_85,{,Destructor,(,),{,},_r2,(,t_7,:,String,),{,},},Class,u2x_2,{,},Class,_R,{,Var,_,,,$d_,,,$8,,,a,:,Boolean,;,},<EOF>''',101))

    def test_2088(self):
        self.assertTrue(TestLexer.test('''Class rB:_{Val $E:Array [Array [Array [Array [Array [Array [Array [Int ,0X34],0XE_5_1_C_F4_9],03],0b1010001],03],0B1_0],9];}Class Vs_60:N{}Class t:L0{Val rQJ_,$_t,$Db_:String ;}''','''Class,rB,:,_,{,Val,$E,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X34,],,,0XE51CF49,],,,03,],,,0b1010001,],,,03,],,,0B10,],,,9,],;,},Class,Vs_60,:,N,{,},Class,t,:,L0,{,Val,rQJ_,,,$_t,,,$Db_,:,String,;,},<EOF>''',101))

    def test_2089(self):
        self.assertTrue(TestLexer.test('''Class _t:K__{Val Z_H:Array [Array [Array [String ,0b10_0],0xB],05_5];Constructor (){} }Class _0ff:N{}Class K_:w_{Val $__,__45_,__j4_e:_;}''','''Class,_t,:,K__,{,Val,Z_H,:,Array,[,Array,[,Array,[,String,,,0b100,],,,0xB,],,,055,],;,Constructor,(,),{,},},Class,_0ff,:,N,{,},Class,K_,:,w_,{,Val,$__,,,__45_,,,__j4_e,:,_,;,},<EOF>''',101))

    def test_2090(self):
        self.assertTrue(TestLexer.test('''Class _95{Constructor (G:Array [String ,07_6];___p:Array [Array [Array [Array [Array [Array [Array [String ,0b111],6],68],68],0B1001011],0x51],0x51];H:Array [Boolean ,0b100110];___4:Boolean ){} }''','''Class,_95,{,Constructor,(,G,:,Array,[,String,,,076,],;,___p,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b111,],,,6,],,,68,],,,68,],,,0B1001011,],,,0x51,],,,0x51,],;,H,:,Array,[,Boolean,,,0b100110,],;,___4,:,Boolean,),{,},},<EOF>''',101))

    def test_2091(self):
        self.assertTrue(TestLexer.test('''Class q:K{Destructor (){} }Class _W4:_m{}Class _:_{_(){} }Class ur_{$_(){} }Class _{Constructor (L:ew_){}Var e3,__:Boolean ;Val _:_13;Constructor (){} }Class R2:C09{$_(m,w:Array [Int ,0x73];Y_,th03_c4_,P,_:_q){}Var $_,a:Float ;}''','''Class,q,:,K,{,Destructor,(,),{,},},Class,_W4,:,_m,{,},Class,_,:,_,{,_,(,),{,},},Class,ur_,{,$_,(,),{,},},Class,_,{,Constructor,(,L,:,ew_,),{,},Var,e3,,,__,:,Boolean,;,Val,_,:,_13,;,Constructor,(,),{,},},Class,R2,:,C09,{,$_,(,m,,,w,:,Array,[,Int,,,0x73,],;,Y_,,,th03_c4_,,,P,,,_,:,_q,),{,},Var,$_,,,a,:,Float,;,},<EOF>''',101))

    def test_2092(self):
        self.assertTrue(TestLexer.test('''Class Y{}Class T:P__{}Class _7{_(y,_52,_G:Boolean ;N:Array [String ,036];_,_s,R1_G_,_:Int ;q,U:_;E_u:Array [Array [Float ,0XBB7E_B],0X54];n6:Int ){} }Class u:tK8{}''','''Class,Y,{,},Class,T,:,P__,{,},Class,_7,{,_,(,y,,,_52,,,_G,:,Boolean,;,N,:,Array,[,String,,,036,],;,_,,,_s,,,R1_G_,,,_,:,Int,;,q,,,U,:,_,;,E_u,:,Array,[,Array,[,Float,,,0XBB7EB,],,,0X54,],;,n6,:,Int,),{,},},Class,u,:,tK8,{,},<EOF>''',101))

    def test_2093(self):
        self.assertTrue(TestLexer.test('''Class _{Var $573,$9_4l_k,$0:__;}Class _:k3Pe{Constructor (_8:Float ;_a_,_:K3j;___,_:String ;_6:Array [Boolean ,0B111011];__2WZ_:Boolean ){ {Val _:Array [Int ,0b11100];}Break ;}Val N:_t;Constructor (S:String ){} }''','''Class,_,{,Var,$573,,,$9_4l_k,,,$0,:,__,;,},Class,_,:,k3Pe,{,Constructor,(,_8,:,Float,;,_a_,,,_,:,K3j,;,___,,,_,:,String,;,_6,:,Array,[,Boolean,,,0B111011,],;,__2WZ_,:,Boolean,),{,{,Val,_,:,Array,[,Int,,,0b11100,],;,},Break,;,},Val,N,:,_t,;,Constructor,(,S,:,String,),{,},},<EOF>''',101))

    def test_2094(self):
        self.assertTrue(TestLexer.test('''Class _:I4{}Class uh{Val $_P:zL;}Class Z{D4_(_,_:Array [Int ,0XE];___,_6,__,_,s,_,e_,_:Array [Float ,0x6]){} }''','''Class,_,:,I4,{,},Class,uh,{,Val,$_P,:,zL,;,},Class,Z,{,D4_,(,_,,,_,:,Array,[,Int,,,0XE,],;,___,,,_6,,,__,,,_,,,s,,,_,,,e_,,,_,:,Array,[,Float,,,0x6,],),{,},},<EOF>''',101))

    def test_2095(self):
        self.assertTrue(TestLexer.test('''Class _{}Class glk:_{Z_(aD:Array [Array [Array [Array [Array [Array [String ,05_13_3],03],03],03],03_63],7];sd:__;_,X:b){} }''','''Class,_,{,},Class,glk,:,_,{,Z_,(,aD,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,05133,],,,03,],,,03,],,,03,],,,0363,],,,7,],;,sd,:,__,;,_,,,X,:,b,),{,},},<EOF>''',101))

    def test_2096(self):
        self.assertTrue(TestLexer.test('''Class _o{}Class m9{}Class _{$_Q4n(_,hOb,_0:V;_,_,z___,A_4:Array [Array [Array [Float ,0X8],0103],36]){}Constructor (_:Array [Float ,36]){} }''','''Class,_o,{,},Class,m9,{,},Class,_,{,$_Q4n,(,_,,,hOb,,,_0,:,V,;,_,,,_,,,z___,,,A_4,:,Array,[,Array,[,Array,[,Float,,,0X8,],,,0103,],,,36,],),{,},Constructor,(,_,:,Array,[,Float,,,36,],),{,},},<EOF>''',101))

    def test_2097(self):
        self.assertTrue(TestLexer.test('''Class U0:_{L(O,y:iN;_L9:Array [Boolean ,0B1];o,y__:Boolean ){Return ;}Var $9:Array [Array [Array [Float ,02_2],06_1_6_3],0b100];x_(){}Var $X3:Array [String ,062];}Class _{}Class G:H{}''','''Class,U0,:,_,{,L,(,O,,,y,:,iN,;,_L9,:,Array,[,Boolean,,,0B1,],;,o,,,y__,:,Boolean,),{,Return,;,},Var,$9,:,Array,[,Array,[,Array,[,Float,,,022,],,,06163,],,,0b100,],;,x_,(,),{,},Var,$X3,:,Array,[,String,,,062,],;,},Class,_,{,},Class,G,:,H,{,},<EOF>''',101))

    def test_2098(self):
        self.assertTrue(TestLexer.test('''Class _8c:_{_(Y_S_:Array [Array [Array [Array [Array [Int ,0X2],0x4],044],0X1_9],0X63];g,_:Boolean ){} }Class _:_KRm1r2{}''','''Class,_8c,:,_,{,_,(,Y_S_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X2,],,,0x4,],,,044,],,,0X19,],,,0X63,],;,g,,,_,:,Boolean,),{,},},Class,_,:,_KRm1r2,{,},<EOF>''',101))

    def test_2099(self):
        self.assertTrue(TestLexer.test('''Class __1Uz_{Val s,$_b,$58,$7_T:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,033],0x4B],0xA_3],0B11_1000],34],0B1],34],0X6_3_4],0X1F];Constructor (M:Array [Array [Array [Array [Array [Float ,033],024],34],0xE_4],0b100_00_1_1];e,_,p,b:Array [Float ,0B1]){} }Class u{}''','''Class,__1Uz_,{,Val,s,,,$_b,,,$58,,,$7_T,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,033,],,,0x4B,],,,0xA3,],,,0B111000,],,,34,],,,0B1,],,,34,],,,0X634,],,,0X1F,],;,Constructor,(,M,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,033,],,,024,],,,34,],,,0xE4,],,,0b1000011,],;,e,,,_,,,p,,,b,:,Array,[,Float,,,0B1,],),{,},},Class,u,{,},<EOF>''',101))

    def test_2100(self):
        self.assertTrue(TestLexer.test('''Class kXO7_{Constructor (_:Array [Boolean ,8_8];__:Array [Array [Array [Array [Array [Boolean ,0b1],0x2],0XFA_87],0135],0B1001110];_1,_:_){} }''','''Class,kXO7_,{,Constructor,(,_,:,Array,[,Boolean,,,88,],;,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,0x2,],,,0XFA87,],,,0135,],,,0B1001110,],;,_1,,,_,:,_,),{,},},<EOF>''',101))

    def test_2101(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_:SO;_2,U0_,Y_,_7:__4;_:Array [Float ,02];I8c:T_9;_,D4:_){Return ;Var _G_jOt2_,i,__:i_;} }Class lN{}''','''Class,_,{,Constructor,(,_,:,SO,;,_2,,,U0_,,,Y_,,,_7,:,__4,;,_,:,Array,[,Float,,,02,],;,I8c,:,T_9,;,_,,,D4,:,_,),{,Return,;,Var,_G_jOt2_,,,i,,,__,:,i_,;,},},Class,lN,{,},<EOF>''',101))

    def test_2102(self):
        self.assertTrue(TestLexer.test('''Class eD{}Class _j:_{}Class m8:_8_Z{_XJ_(r7y:Float ;N:u5_){ {} }Var $m:Af5;}Class _:K{Val $u_,M2_,_:String ;}Class Y:D{}''','''Class,eD,{,},Class,_j,:,_,{,},Class,m8,:,_8_Z,{,_XJ_,(,r7y,:,Float,;,N,:,u5_,),{,{,},},Var,$m,:,Af5,;,},Class,_,:,K,{,Val,$u_,,,M2_,,,_,:,String,;,},Class,Y,:,D,{,},<EOF>''',101))

    def test_2103(self):
        self.assertTrue(TestLexer.test('''Class _L_:_{}Class __:_H07l_{}Class _{Var $V,_F_n:rJe;}Class _{Val _N:I_5;$bC_(__2:Array [Array [Array [Array [String ,94],07],0b1000010],2_5]){Break ;Break ;{ {}Break ;Break ;Var d_8af:Array [Array [Int ,07],0X18];}Var ___1,_:Float ;} }''','''Class,_L_,:,_,{,},Class,__,:,_H07l_,{,},Class,_,{,Var,$V,,,_F_n,:,rJe,;,},Class,_,{,Val,_N,:,I_5,;,$bC_,(,__2,:,Array,[,Array,[,Array,[,Array,[,String,,,94,],,,07,],,,0b1000010,],,,25,],),{,Break,;,Break,;,{,{,},Break,;,Break,;,Var,d_8af,:,Array,[,Array,[,Int,,,07,],,,0X18,],;,},Var,___1,,,_,:,Float,;,},},<EOF>''',101))

    def test_2104(self):
        self.assertTrue(TestLexer.test('''Class c7x{Val $4:Array [Array [Array [Array [Array [Int ,0X1E],0B100],44],221],7];$_(){ {} }Var $5,__F5,$_:_;}Class _L3:_{$85(){} }''','''Class,c7x,{,Val,$4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X1E,],,,0B100,],,,44,],,,221,],,,7,],;,$_,(,),{,{,},},Var,$5,,,__F5,,,$_,:,_,;,},Class,_L3,:,_,{,$85,(,),{,},},<EOF>''',101))

    def test_2105(self):
        self.assertTrue(TestLexer.test('''Class Wn{Destructor (){} }Class b_:mv___{Var $__,x:__725;Var _:Array [Array [Float ,78],06_0];$1(_1,_,L_:_;ac23__f_,_,D6:_dP){}Destructor (){} }Class ___:__{Val n_,$3,_:U;}Class F{Destructor (){Break ;Continue ;} }''','''Class,Wn,{,Destructor,(,),{,},},Class,b_,:,mv___,{,Var,$__,,,x,:,__725,;,Var,_,:,Array,[,Array,[,Float,,,78,],,,060,],;,$1,(,_1,,,_,,,L_,:,_,;,ac23__f_,,,_,,,D6,:,_dP,),{,},Destructor,(,),{,},},Class,___,:,__,{,Val,n_,,,$3,,,_,:,U,;,},Class,F,{,Destructor,(,),{,Break,;,Continue,;,},},<EOF>''',101))

    def test_2106(self):
        self.assertTrue(TestLexer.test('''Class _7_:q{_8(_,u:String ){}Destructor (){} }Class J:g7{}Class x{}Class _{}Class p:_{Destructor (){Continue ;}Var $_,$_,_,$J:Int ;}Class a:y{}Class _:M6{}''','''Class,_7_,:,q,{,_8,(,_,,,u,:,String,),{,},Destructor,(,),{,},},Class,J,:,g7,{,},Class,x,{,},Class,_,{,},Class,p,:,_,{,Destructor,(,),{,Continue,;,},Var,$_,,,$_,,,_,,,$J,:,Int,;,},Class,a,:,y,{,},Class,_,:,M6,{,},<EOF>''',101))

    def test_2107(self):
        self.assertTrue(TestLexer.test('''Class H5:_7_b0{Constructor (_10:Array [Array [Array [Array [Boolean ,0X18],0b101],01],2];_:Int ;_o_,_,R__Oa:Array [Array [Array [Array [Int ,0x19],0x19],037_7],2];x1,N_:D__){} }''','''Class,H5,:,_7_b0,{,Constructor,(,_10,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X18,],,,0b101,],,,01,],,,2,],;,_,:,Int,;,_o_,,,_,,,R__Oa,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x19,],,,0x19,],,,0377,],,,2,],;,x1,,,N_,:,D__,),{,},},<EOF>''',101))

    def test_2108(self):
        self.assertTrue(TestLexer.test('''Class q{Constructor (o:f){} }Class _{Var w,$_9:_5TBi_q;Var h,$7K5:Array [Array [Array [Array [String ,0b1_01_1],0b1],064],0X45];}''','''Class,q,{,Constructor,(,o,:,f,),{,},},Class,_,{,Var,w,,,$_9,:,_5TBi_q,;,Var,h,,,$7K5,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1011,],,,0b1,],,,064,],,,0X45,],;,},<EOF>''',101))

    def test_2109(self):
        self.assertTrue(TestLexer.test('''Class k8:DR{}Class KOc:__{Var _:Array [Boolean ,9]=!-------Q::$0.U4._F+_3::$_.t.P()._2;Val _,_:String ;Constructor (t:c;T___:_;_u,m,_,QV,l,_0:Array [String ,0B1];___,A:b17a4_){} }''','''Class,k8,:,DR,{,},Class,KOc,:,__,{,Var,_,:,Array,[,Boolean,,,9,],=,!,-,-,-,-,-,-,-,Q,::,$0,.,U4,.,_F,+,_3,::,$_,.,t,.,P,(,),.,_2,;,Val,_,,,_,:,String,;,Constructor,(,t,:,c,;,T___,:,_,;,_u,,,m,,,_,,,QV,,,l,,,_0,:,Array,[,String,,,0B1,],;,___,,,A,:,b17a4_,),{,},},<EOF>''',101))

    def test_2110(self):
        self.assertTrue(TestLexer.test('''Class zG{}Class v{}Class t{Var _,$7:Array [Array [Boolean ,01],023];}Class _{Var $_:Array [Array [String ,0b10],0B11];}''','''Class,zG,{,},Class,v,{,},Class,t,{,Var,_,,,$7,:,Array,[,Array,[,Boolean,,,01,],,,023,],;,},Class,_,{,Var,$_,:,Array,[,Array,[,String,,,0b10,],,,0B11,],;,},<EOF>''',101))

    def test_2111(self):
        self.assertTrue(TestLexer.test('''Class _8p__Lb6__5_C{Constructor (O,_n4__:BW){}Constructor (_8,U__0_c:_1__d;p_GE38_J,_p:Array [Float ,70]){}Var $W:String ;}''','''Class,_8p__Lb6__5_C,{,Constructor,(,O,,,_n4__,:,BW,),{,},Constructor,(,_8,,,U__0_c,:,_1__d,;,p_GE38_J,,,_p,:,Array,[,Float,,,70,],),{,},Var,$W,:,String,;,},<EOF>''',101))

    def test_2112(self):
        self.assertTrue(TestLexer.test('''Class T{Constructor (L,_,WXj_5,h:Int ;B,N9_,U7ZJ,__,_:Float ){}Var $6R:Array [Array [Float ,04_6],0B10];}Class _5:w{}Class __:_{}''','''Class,T,{,Constructor,(,L,,,_,,,WXj_5,,,h,:,Int,;,B,,,N9_,,,U7ZJ,,,__,,,_,:,Float,),{,},Var,$6R,:,Array,[,Array,[,Float,,,046,],,,0B10,],;,},Class,_5,:,w,{,},Class,__,:,_,{,},<EOF>''',101))

    def test_2113(self):
        self.assertTrue(TestLexer.test('''Class R9:B{$s91X___(b,F,a,V9,f,m_:Array [Array [Array [Array [Array [Array [Int ,0B1011_10],04],0b101],0X1],0X1C],3]){} }Class I_J{$07(R9g,L,i8_:String ;n78,_,__:_8_;n_,s:Array [Array [Boolean ,06],4_5]){Break ;}Destructor (){} }''','''Class,R9,:,B,{,$s91X___,(,b,,,F,,,a,,,V9,,,f,,,m_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B101110,],,,04,],,,0b101,],,,0X1,],,,0X1C,],,,3,],),{,},},Class,I_J,{,$07,(,R9g,,,L,,,i8_,:,String,;,n78,,,_,,,__,:,_8_,;,n_,,,s,:,Array,[,Array,[,Boolean,,,06,],,,45,],),{,Break,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_2114(self):
        self.assertTrue(TestLexer.test('''Class I0o:w{Val i:d;V(_t,_M_,_,w,_0,i:_;J:_5;t,dXR:Array [Float ,0x15];_:Array [Array [Array [Array [Float ,34_3_0],81],0XC],0B110111];z,H:Array [String ,81];ZQ:Int ;g:Int ){} }Class X{Val $8:Float ;}Class _{Var _:Float ;Var $3:Array [Boolean ,0x15];}Class iLV:__{}''','''Class,I0o,:,w,{,Val,i,:,d,;,V,(,_t,,,_M_,,,_,,,w,,,_0,,,i,:,_,;,J,:,_5,;,t,,,dXR,:,Array,[,Float,,,0x15,],;,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,3430,],,,81,],,,0XC,],,,0B110111,],;,z,,,H,:,Array,[,String,,,81,],;,ZQ,:,Int,;,g,:,Int,),{,},},Class,X,{,Val,$8,:,Float,;,},Class,_,{,Var,_,:,Float,;,Var,$3,:,Array,[,Boolean,,,0x15,],;,},Class,iLV,:,__,{,},<EOF>''',101))

    def test_2115(self):
        self.assertTrue(TestLexer.test('''Class _:_{$3(z_,A,cHM:Array [Array [Array [Array [Array [String ,0xE4_C],0x9],02],0B10101],0B10101]){i::$_.Z7().__._0();} }Class l:e{Val $9:Array [Array [Array [Int ,06_502_0_5_0],0xE7A_1],0X37];}''','''Class,_,:,_,{,$3,(,z_,,,A,,,cHM,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0xE4C,],,,0x9,],,,02,],,,0B10101,],,,0B10101,],),{,i,::,$_,.,Z7,(,),.,__,.,_0,(,),;,},},Class,l,:,e,{,Val,$9,:,Array,[,Array,[,Array,[,Int,,,06502050,],,,0xE7A1,],,,0X37,],;,},<EOF>''',101))

    def test_2116(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class I9:e{Val __I1_,$_k,$7_l98,m,_:Int ;Constructor (_p__2t:__;x775:Array [Array [Int ,60],60];H,_:Array [Array [String ,0X15],0b1]){} }Class K:H{Var $1O1_,$5:yD;Val $2:O;}''','''Class,_,:,_,{,},Class,I9,:,e,{,Val,__I1_,,,$_k,,,$7_l98,,,m,,,_,:,Int,;,Constructor,(,_p__2t,:,__,;,x775,:,Array,[,Array,[,Int,,,60,],,,60,],;,H,,,_,:,Array,[,Array,[,String,,,0X15,],,,0b1,],),{,},},Class,K,:,H,{,Var,$1O1_,,,$5,:,yD,;,Val,$2,:,O,;,},<EOF>''',101))

    def test_2117(self):
        self.assertTrue(TestLexer.test('''Class c:LM_O{$5J(){}$2(___x_,_:Array [Array [Int ,02],0B1011101];E:Array [Int ,026_1];c_,k:Array [Int ,0x4]){} }Class o0:B_1{}''','''Class,c,:,LM_O,{,$5J,(,),{,},$2,(,___x_,,,_,:,Array,[,Array,[,Int,,,02,],,,0B1011101,],;,E,:,Array,[,Int,,,0261,],;,c_,,,k,:,Array,[,Int,,,0x4,],),{,},},Class,o0,:,B_1,{,},<EOF>''',101))

    def test_2118(self):
        self.assertTrue(TestLexer.test('''Class Q{}Class Y_{Constructor (k6_QgA,P4:__h){} }Class e_{}Class Bn{Destructor (){}Val $_c_:Array [Boolean ,42];}''','''Class,Q,{,},Class,Y_,{,Constructor,(,k6_QgA,,,P4,:,__h,),{,},},Class,e_,{,},Class,Bn,{,Destructor,(,),{,},Val,$_c_,:,Array,[,Boolean,,,42,],;,},<EOF>''',101))

    def test_2119(self):
        self.assertTrue(TestLexer.test('''Class _15:V{}Class h1:e_08{}Class __6:KiL{}Class G_{Constructor (_:E___;_f,_jf,__:Array [Array [Int ,0B1010001],0xD];b,g8,j,e__:W_f_y;_,_,_5:Float ;_6:Int ;t:Float ){}Val g,_:Array [Array [Boolean ,0B11_0_0_0_0],0b1];Val $6:Array [Array [Float ,0252],0X1B];$_(C:Array [Boolean ,0B1];_:w){} }Class H9_B:__{Destructor (){} }''','''Class,_15,:,V,{,},Class,h1,:,e_08,{,},Class,__6,:,KiL,{,},Class,G_,{,Constructor,(,_,:,E___,;,_f,,,_jf,,,__,:,Array,[,Array,[,Int,,,0B1010001,],,,0xD,],;,b,,,g8,,,j,,,e__,:,W_f_y,;,_,,,_,,,_5,:,Float,;,_6,:,Int,;,t,:,Float,),{,},Val,g,,,_,:,Array,[,Array,[,Boolean,,,0B110000,],,,0b1,],;,Val,$6,:,Array,[,Array,[,Float,,,0252,],,,0X1B,],;,$_,(,C,:,Array,[,Boolean,,,0B1,],;,_,:,w,),{,},},Class,H9_B,:,__,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2120(self):
        self.assertTrue(TestLexer.test('''Class q:_3{Val __:Array [Array [String ,0b11],0X6];}Class ow8:J3{}Class _:L{Val P:_u;Destructor (){} }Class _:q{}''','''Class,q,:,_3,{,Val,__,:,Array,[,Array,[,String,,,0b11,],,,0X6,],;,},Class,ow8,:,J3,{,},Class,_,:,L,{,Val,P,:,_u,;,Destructor,(,),{,},},Class,_,:,q,{,},<EOF>''',101))

    def test_2121(self):
        self.assertTrue(TestLexer.test('''Class _6__:__1{}Class y65n{$_(M7,_:Float ;_:Array [Array [Array [Array [Array [Array [Boolean ,59],021_5],0b1011001],0X1A],59],8]){} }''','''Class,_6__,:,__1,{,},Class,y65n,{,$_,(,M7,,,_,:,Float,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,59,],,,0215,],,,0b1011001,],,,0X1A,],,,59,],,,8,],),{,},},<EOF>''',101))

    def test_2122(self):
        self.assertTrue(TestLexer.test('''Class z{XI_O(_i__52_:Array [Boolean ,9];_4:Array [Array [Array [Array [Int ,0B10100],59],0x42],61];Y,__,a:__M_){Break ;} }''','''Class,z,{,XI_O,(,_i__52_,:,Array,[,Boolean,,,9,],;,_4,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B10100,],,,59,],,,0x42,],,,61,],;,Y,,,__,,,a,:,__M_,),{,Break,;,},},<EOF>''',101))

    def test_2123(self):
        self.assertTrue(TestLexer.test('''Class d:A{v(Fw:_;_,W__0,S___,_:String ;_x,_,a:String ;j_mXo__:C){}Val _,$_S5r4,_:Array [Array [Float ,033],0x2E];Val h:Int ;}Class _:QR{$p_9(){} }Class ___2:___{Constructor (){} }''','''Class,d,:,A,{,v,(,Fw,:,_,;,_,,,W__0,,,S___,,,_,:,String,;,_x,,,_,,,a,:,String,;,j_mXo__,:,C,),{,},Val,_,,,$_S5r4,,,_,:,Array,[,Array,[,Float,,,033,],,,0x2E,],;,Val,h,:,Int,;,},Class,_,:,QR,{,$p_9,(,),{,},},Class,___2,:,___,{,Constructor,(,),{,},},<EOF>''',101))

    def test_2124(self):
        self.assertTrue(TestLexer.test('''Class _:x{Destructor (){}Constructor (_t_1D2t,__Z,_,y,_,v:Array [Array [Array [String ,94],94],0X11];_2,r6,o5O,_:Vz){}$h6(__PK,_q:Array [Array [Array [Array [Boolean ,056],94],0X6_4_A_A],0X7_6E7]){} }Class J053Ff0_0_{Var _:String ;}Class _{Constructor (){} }''','''Class,_,:,x,{,Destructor,(,),{,},Constructor,(,_t_1D2t,,,__Z,,,_,,,y,,,_,,,v,:,Array,[,Array,[,Array,[,String,,,94,],,,94,],,,0X11,],;,_2,,,r6,,,o5O,,,_,:,Vz,),{,},$h6,(,__PK,,,_q,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,056,],,,94,],,,0X64AA,],,,0X76E7,],),{,},},Class,J053Ff0_0_,{,Var,_,:,String,;,},Class,_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_2125(self):
        self.assertTrue(TestLexer.test('''Class _60_6__:__{Destructor (){}Var $_:Array [String ,0XB36]=!!_6::$_("")>--t::$gfh0F.H()._();_(){} }Class E:_{}Class r:V{Destructor (){} }Class _:_{Constructor (){} }Class _{}''','''Class,_60_6__,:,__,{,Destructor,(,),{,},Var,$_,:,Array,[,String,,,0XB36,],=,!,!,_6,::,$_,(,,),>,-,-,t,::,$gfh0F,.,H,(,),.,_,(,),;,_,(,),{,},},Class,E,:,_,{,},Class,r,:,V,{,Destructor,(,),{,},},Class,_,:,_,{,Constructor,(,),{,},},Class,_,{,},<EOF>''',101))

    def test_2126(self):
        self.assertTrue(TestLexer.test('''Class K{C_(U:Boolean ;m:Float ;m_i:W;Y_:Array [String ,0B1];_93,_:Boolean ;m,T9,v,Zb,_,__,_x,_,SN,Cw:_;Q,E_:Float ;P:Array [Array [Int ,026],493_4]){}Constructor (n3H_,_____,b_:Int ;__:k;_1:_;_W:Array [Int ,026];_:String ){} }''','''Class,K,{,C_,(,U,:,Boolean,;,m,:,Float,;,m_i,:,W,;,Y_,:,Array,[,String,,,0B1,],;,_93,,,_,:,Boolean,;,m,,,T9,,,v,,,Zb,,,_,,,__,,,_x,,,_,,,SN,,,Cw,:,_,;,Q,,,E_,:,Float,;,P,:,Array,[,Array,[,Int,,,026,],,,4934,],),{,},Constructor,(,n3H_,,,_____,,,b_,:,Int,;,__,:,k,;,_1,:,_,;,_W,:,Array,[,Int,,,026,],;,_,:,String,),{,},},<EOF>''',101))

    def test_2127(self):
        self.assertTrue(TestLexer.test('''Class __:z{Destructor (){Continue ;}Constructor (NK_7,D7,y,_:Int ){} }Class C{}Class _{}Class _1{Destructor (){Break ;} }''','''Class,__,:,z,{,Destructor,(,),{,Continue,;,},Constructor,(,NK_7,,,D7,,,y,,,_,:,Int,),{,},},Class,C,{,},Class,_,{,},Class,_1,{,Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_2128(self):
        self.assertTrue(TestLexer.test('''Class __9:N{}Class A{Constructor (_:Float ){}Constructor (_d6,_:Array [Int ,01_4];_t,_:Boolean ){ {} }}Class A:_9_{}''','''Class,__9,:,N,{,},Class,A,{,Constructor,(,_,:,Float,),{,},Constructor,(,_d6,,,_,:,Array,[,Int,,,014,],;,_t,,,_,:,Boolean,),{,{,},},},Class,A,:,_9_,{,},<EOF>''',101))

    def test_2129(self):
        self.assertTrue(TestLexer.test('''Class L{Constructor (_:Array [Array [Array [Array [Array [Int ,0xB],0x63C_4_9],0b1011001],4_66],0X3B];D:Array [Boolean ,12];_,_i4QEl,_:String ){} }''','''Class,L,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0xB,],,,0x63C49,],,,0b1011001,],,,466,],,,0X3B,],;,D,:,Array,[,Boolean,,,12,],;,_,,,_i4QEl,,,_,:,String,),{,},},<EOF>''',101))

    def test_2130(self):
        self.assertTrue(TestLexer.test('''Class on_U_92:_o38{Constructor (x,_7:__8;_:Float ;cO,a25:Array [Array [Array [Array [Array [Boolean ,0B1],0100],54],4],0B10];_0,_96_S0,g,__,C:D;_7:X){} }''','''Class,on_U_92,:,_o38,{,Constructor,(,x,,,_7,:,__8,;,_,:,Float,;,cO,,,a25,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0100,],,,54,],,,4,],,,0B10,],;,_0,,,_96_S0,,,g,,,__,,,C,:,D,;,_7,:,X,),{,},},<EOF>''',101))

    def test_2131(self):
        self.assertTrue(TestLexer.test('''Class _f_{Var R,$6_,_:Boolean ;}Class __E:_8{}Class F{Constructor (_,Mf:_p){Return -_::$p()._6._();} }Class _{}''','''Class,_f_,{,Var,R,,,$6_,,,_,:,Boolean,;,},Class,__E,:,_8,{,},Class,F,{,Constructor,(,_,,,Mf,:,_p,),{,Return,-,_,::,$p,(,),.,_6,.,_,(,),;,},},Class,_,{,},<EOF>''',101))

    def test_2132(self):
        self.assertTrue(TestLexer.test('''Class mv:___{Var _2__,$0,ln37,_,$__,_2,$G:J_8;}Class _NyJ:R4{Constructor (){}Val _n:Array [Array [Boolean ,0x64],0x64];}''','''Class,mv,:,___,{,Var,_2__,,,$0,,,ln37,,,_,,,$__,,,_2,,,$G,:,J_8,;,},Class,_NyJ,:,R4,{,Constructor,(,),{,},Val,_n,:,Array,[,Array,[,Boolean,,,0x64,],,,0x64,],;,},<EOF>''',101))

    def test_2133(self):
        self.assertTrue(TestLexer.test('''Class K_{_I(_,h_,yC1:_;I:Float ){}Z__4TE_(_,_:Array [Array [Float ,24],0x14]){ {} }_(){Continue ;}Var $09:_;}Class O57_:_{}Class _{}Class _4_8{}Class _K{}Class i:jy{}''','''Class,K_,{,_I,(,_,,,h_,,,yC1,:,_,;,I,:,Float,),{,},Z__4TE_,(,_,,,_,:,Array,[,Array,[,Float,,,24,],,,0x14,],),{,{,},},_,(,),{,Continue,;,},Var,$09,:,_,;,},Class,O57_,:,_,{,},Class,_,{,},Class,_4_8,{,},Class,_K,{,},Class,i,:,jy,{,},<EOF>''',101))

    def test_2134(self):
        self.assertTrue(TestLexer.test('''Class D:_k__q_6N_{Var K,$_,_:_;}Class _{}Class e_24:K00{Constructor (E_V_,_:_;_9:Q){} }Class X:_{Var $_4_:_;}Class _{}''','''Class,D,:,_k__q_6N_,{,Var,K,,,$_,,,_,:,_,;,},Class,_,{,},Class,e_24,:,K00,{,Constructor,(,E_V_,,,_,:,_,;,_9,:,Q,),{,},},Class,X,:,_,{,Var,$_4_,:,_,;,},Class,_,{,},<EOF>''',101))

    def test_2135(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_40P:Array [Array [Array [Array [Array [Array [String ,075],174],53],075],0b1_0],075]){} }Class _{}''','''Class,_,{,Constructor,(,_40P,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,075,],,,174,],,,53,],,,075,],,,0b10,],,,075,],),{,},},Class,_,{,},<EOF>''',101))

    def test_2136(self):
        self.assertTrue(TestLexer.test('''Class D{kM(cj:Array [Array [Int ,03],4]){} }Class _:N_3_c{$_N9Q(_d:Array [Array [Array [Array [Array [Float ,4],0x5C],0x5C],033],033];hu,M_,AX4:r){Continue ;} }Class R:m2w{Constructor (_,_W:uhX;z5:_6){}Val $5uN_:Array [Float ,033];}''','''Class,D,{,kM,(,cj,:,Array,[,Array,[,Int,,,03,],,,4,],),{,},},Class,_,:,N_3_c,{,$_N9Q,(,_d,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,4,],,,0x5C,],,,0x5C,],,,033,],,,033,],;,hu,,,M_,,,AX4,:,r,),{,Continue,;,},},Class,R,:,m2w,{,Constructor,(,_,,,_W,:,uhX,;,z5,:,_6,),{,},Val,$5uN_,:,Array,[,Float,,,033,],;,},<EOF>''',101))

    def test_2137(self):
        self.assertTrue(TestLexer.test('''Class __Z_{Destructor (){}Val U,$9:_;Var O:Array [Array [Array [Array [String ,0B1],0xF],0x95_9],0b11011];}Class __0__{}''','''Class,__Z_,{,Destructor,(,),{,},Val,U,,,$9,:,_,;,Var,O,:,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,0xF,],,,0x959,],,,0b11011,],;,},Class,__0__,{,},<EOF>''',101))

    def test_2138(self):
        self.assertTrue(TestLexer.test('''Class i__p_{Val $6_:Array [Array [String ,03_2],0B1010001];Constructor (xw:Array [Array [Int ,0B1010001],5_5_6_9]){} }Class _:__p{}Class __03:_6{}''','''Class,i__p_,{,Val,$6_,:,Array,[,Array,[,String,,,032,],,,0B1010001,],;,Constructor,(,xw,:,Array,[,Array,[,Int,,,0B1010001,],,,5569,],),{,},},Class,_,:,__p,{,},Class,__03,:,_6,{,},<EOF>''',101))

    def test_2139(self):
        self.assertTrue(TestLexer.test('''Class _{Var G,__E7_l__55_:_90;Destructor (){}_(_gP6h7,_0:Boolean ){} }Class _:_{Var $_s_96I9_,_,$_6_,$sV_:_y0_7__;}''','''Class,_,{,Var,G,,,__E7_l__55_,:,_90,;,Destructor,(,),{,},_,(,_gP6h7,,,_0,:,Boolean,),{,},},Class,_,:,_,{,Var,$_s_96I9_,,,_,,,$_6_,,,$sV_,:,_y0_7__,;,},<EOF>''',101))

    def test_2140(self):
        self.assertTrue(TestLexer.test('''Class _:r{Var $z,__4,$_:H__;Constructor (){}Var $3Ue7,$9_,$3OT:Array [Int ,0B1];Constructor (w_12,V9:Array [Int ,47]){Val _:S;}Destructor (){} }Class s{}Class _{$vS(){} }''','''Class,_,:,r,{,Var,$z,,,__4,,,$_,:,H__,;,Constructor,(,),{,},Var,$3Ue7,,,$9_,,,$3OT,:,Array,[,Int,,,0B1,],;,Constructor,(,w_12,,,V9,:,Array,[,Int,,,47,],),{,Val,_,:,S,;,},Destructor,(,),{,},},Class,s,{,},Class,_,{,$vS,(,),{,},},<EOF>''',101))

    def test_2141(self):
        self.assertTrue(TestLexer.test('''Class kD_n:_8_l__{Constructor (_,B_3,BM_,c8:String ){}Val _T__:Array [Float ,0b11];Destructor (){Continue ;} }''','''Class,kD_n,:,_8_l__,{,Constructor,(,_,,,B_3,,,BM_,,,c8,:,String,),{,},Val,_T__,:,Array,[,Float,,,0b11,],;,Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_2142(self):
        self.assertTrue(TestLexer.test('''Class zT{}Class __u:c{Constructor (__,u:Float ;L4,U:Array [Array [Array [Array [Array [Array [Float ,04],7_47],0x20],0b100100],0B1],0b1]){}Var r,o9_5:__;}''','''Class,zT,{,},Class,__u,:,c,{,Constructor,(,__,,,u,:,Float,;,L4,,,U,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,04,],,,747,],,,0x20,],,,0b100100,],,,0B1,],,,0b1,],),{,},Var,r,,,o9_5,:,__,;,},<EOF>''',101))

    def test_2143(self):
        self.assertTrue(TestLexer.test('''Class __:_p{}Class g:_o1{Var $O,_,$N:___;G(B,_,pzM:Array [Array [Boolean ,034],0b1100];k_O:Array [Array [String ,0B110100],8];_,_:_;__,_,J:_s_){} }''','''Class,__,:,_p,{,},Class,g,:,_o1,{,Var,$O,,,_,,,$N,:,___,;,G,(,B,,,_,,,pzM,:,Array,[,Array,[,Boolean,,,034,],,,0b1100,],;,k_O,:,Array,[,Array,[,String,,,0B110100,],,,8,],;,_,,,_,:,_,;,__,,,_,,,J,:,_s_,),{,},},<EOF>''',101))

    def test_2144(self):
        self.assertTrue(TestLexer.test('''Class P:_{}Class m:_{Destructor (){ {} }Var _hW,$H2_:Float ;}Class J_u:s{}Class X{Var $y:l;Var _N:Boolean ;}Class _{Destructor (){} }Class _{}Class n_G0:_3{}Class U2f{Val _,_1,s:Array [String ,0134];$3(){} }Class __{}''','''Class,P,:,_,{,},Class,m,:,_,{,Destructor,(,),{,{,},},Var,_hW,,,$H2_,:,Float,;,},Class,J_u,:,s,{,},Class,X,{,Var,$y,:,l,;,Var,_N,:,Boolean,;,},Class,_,{,Destructor,(,),{,},},Class,_,{,},Class,n_G0,:,_3,{,},Class,U2f,{,Val,_,,,_1,,,s,:,Array,[,String,,,0134,],;,$3,(,),{,},},Class,__,{,},<EOF>''',101))

    def test_2145(self):
        self.assertTrue(TestLexer.test('''Class c81:o_{Constructor (K5:Int ;_,Y:Boolean ;_44:Array [Boolean ,051]){Var c,_,_,h:Array [Array [Array [Boolean ,0x1_5_0D],4],0x32];}Constructor (x,_:Array [Array [Array [Array [Array [Array [Array [Array [Float ,01_3],04],7_5],0X5B],051],0b100_0],3],0x32];_:Array [Array [Array [Array [Int ,1],0B1],051],0b1];__:Boolean ;_D,t_y,_,_:Array [Array [String ,051],0x6];o:Boolean ;C9:Array [Int ,0B1000]){} }Class a:R{}''','''Class,c81,:,o_,{,Constructor,(,K5,:,Int,;,_,,,Y,:,Boolean,;,_44,:,Array,[,Boolean,,,051,],),{,Var,c,,,_,,,_,,,h,:,Array,[,Array,[,Array,[,Boolean,,,0x150D,],,,4,],,,0x32,],;,},Constructor,(,x,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,013,],,,04,],,,75,],,,0X5B,],,,051,],,,0b1000,],,,3,],,,0x32,],;,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,1,],,,0B1,],,,051,],,,0b1,],;,__,:,Boolean,;,_D,,,t_y,,,_,,,_,:,Array,[,Array,[,String,,,051,],,,0x6,],;,o,:,Boolean,;,C9,:,Array,[,Int,,,0B1000,],),{,},},Class,a,:,R,{,},<EOF>''',101))

    def test_2146(self):
        self.assertTrue(TestLexer.test('''Class _:J{}Class r_:S{}Class J_{Constructor (m6_:Array [Float ,0B1_1];i:String ;mY:Array [Array [Array [Boolean ,0X54],497],0B1]){} }''','''Class,_,:,J,{,},Class,r_,:,S,{,},Class,J_,{,Constructor,(,m6_,:,Array,[,Float,,,0B11,],;,i,:,String,;,mY,:,Array,[,Array,[,Array,[,Boolean,,,0X54,],,,497,],,,0B1,],),{,},},<EOF>''',101))

    def test_2147(self):
        self.assertTrue(TestLexer.test('''Class y_{}Class v:G{}Class _:x___7{Var _D:Array [Array [Array [Array [Array [Boolean ,63],0110],0xC_9_7D_F1_1A],0B1],28_1_6];}Class _X{N(){} }''','''Class,y_,{,},Class,v,:,G,{,},Class,_,:,x___7,{,Var,_D,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,63,],,,0110,],,,0xC97DF11A,],,,0B1,],,,2816,],;,},Class,_X,{,N,(,),{,},},<EOF>''',101))

    def test_2148(self):
        self.assertTrue(TestLexer.test('''Class s{Val a,r3v7_4:Array [Boolean ,0b10000];}Class A:_8{_(_,_,_x,_:_;F,g:Array [Array [Int ,4],79]){ {Break ;{} }}Constructor (){Break ;} }''','''Class,s,{,Val,a,,,r3v7_4,:,Array,[,Boolean,,,0b10000,],;,},Class,A,:,_8,{,_,(,_,,,_,,,_x,,,_,:,_,;,F,,,g,:,Array,[,Array,[,Int,,,4,],,,79,],),{,{,Break,;,{,},},},Constructor,(,),{,Break,;,},},<EOF>''',101))

    def test_2149(self):
        self.assertTrue(TestLexer.test('''Class w{Constructor (h,_:Array [String ,0113];b:Array [Array [Boolean ,0x3],0x1C];_7:Array [Array [Array [Boolean ,26],0X2],26]){bF9_::$w95();} }Class __:y{}''','''Class,w,{,Constructor,(,h,,,_,:,Array,[,String,,,0113,],;,b,:,Array,[,Array,[,Boolean,,,0x3,],,,0x1C,],;,_7,:,Array,[,Array,[,Array,[,Boolean,,,26,],,,0X2,],,,26,],),{,bF9_,::,$w95,(,),;,},},Class,__,:,y,{,},<EOF>''',101))

    def test_2150(self):
        self.assertTrue(TestLexer.test('''Class ___:_{}Class __9k0:ny{Destructor (){G::$8.n();} }Class Wlj0i{Val _:Boolean ;$V(_,_:Array [Array [Array [Array [Array [Array [String ,0b11010],0b11010],0127],0x5D],06],0127]){Break ;Return ;} }Class r5{}''','''Class,___,:,_,{,},Class,__9k0,:,ny,{,Destructor,(,),{,G,::,$8,.,n,(,),;,},},Class,Wlj0i,{,Val,_,:,Boolean,;,$V,(,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b11010,],,,0b11010,],,,0127,],,,0x5D,],,,06,],,,0127,],),{,Break,;,Return,;,},},Class,r5,{,},<EOF>''',101))

    def test_2151(self):
        self.assertTrue(TestLexer.test('''Class _{}Class V{}Class _3_{}Class EI{}Class ___:_{}Class _{}Class sq53:J2__9{$BI(_,_L,_,_n_1Y5,__udM:Float ;u:String ){} }Class _{}''','''Class,_,{,},Class,V,{,},Class,_3_,{,},Class,EI,{,},Class,___,:,_,{,},Class,_,{,},Class,sq53,:,J2__9,{,$BI,(,_,,,_L,,,_,,,_n_1Y5,,,__udM,:,Float,;,u,:,String,),{,},},Class,_,{,},<EOF>''',101))

    def test_2152(self):
        self.assertTrue(TestLexer.test('''Class _:_{Val $O,$1_:_67;}Class w:LT9{Var $b,$Y_U:Array [Array [Array [Array [String ,74],74],74],74];Destructor (){} }''','''Class,_,:,_,{,Val,$O,,,$1_,:,_67,;,},Class,w,:,LT9,{,Var,$b,,,$Y_U,:,Array,[,Array,[,Array,[,Array,[,String,,,74,],,,74,],,,74,],,,74,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_2153(self):
        self.assertTrue(TestLexer.test('''Class _L:F5V{Constructor (L_3_2:String ;us:Array [Array [String ,066],0x2F];pX1_:Array [Array [Array [Int ,03_67],181],0B1];_:String ){}$___7_(Y9:h___7_;_,v:_14rY){} }Class u:c{}Class _:B_a{Var $A_,$R0:__;Val _,$f:Boolean ;$5(_f4Yi,__7:_;___3:_M){Var P,_D:_r8;}Constructor (_,pt_,d0:Array [String ,5];_1r_:Array [String ,0XA]){} }Class _{}Class _:inm{}Class L:O{}''','''Class,_L,:,F5V,{,Constructor,(,L_3_2,:,String,;,us,:,Array,[,Array,[,String,,,066,],,,0x2F,],;,pX1_,:,Array,[,Array,[,Array,[,Int,,,0367,],,,181,],,,0B1,],;,_,:,String,),{,},$___7_,(,Y9,:,h___7_,;,_,,,v,:,_14rY,),{,},},Class,u,:,c,{,},Class,_,:,B_a,{,Var,$A_,,,$R0,:,__,;,Val,_,,,$f,:,Boolean,;,$5,(,_f4Yi,,,__7,:,_,;,___3,:,_M,),{,Var,P,,,_D,:,_r8,;,},Constructor,(,_,,,pt_,,,d0,:,Array,[,String,,,5,],;,_1r_,:,Array,[,String,,,0XA,],),{,},},Class,_,{,},Class,_,:,inm,{,},Class,L,:,O,{,},<EOF>''',101))

    def test_2154(self):
        self.assertTrue(TestLexer.test('''Class __:_6_{}Class t9{Var c:_t;Val _0h:Array [Float ,05];Destructor (){Break ;} }Class d_U{Var _7_,j1,$K6:String ;Val $_,$3,R_,$X8_,g:_;}''','''Class,__,:,_6_,{,},Class,t9,{,Var,c,:,_t,;,Val,_0h,:,Array,[,Float,,,05,],;,Destructor,(,),{,Break,;,},},Class,d_U,{,Var,_7_,,,j1,,,$K6,:,String,;,Val,$_,,,$3,,,R_,,,$X8_,,,g,:,_,;,},<EOF>''',101))

    def test_2155(self):
        self.assertTrue(TestLexer.test('''Class _QH:gx{Destructor (){Break ;} }Class _{$N(){Return ;Val k:Array [Array [Array [Array [Array [Boolean ,0x3D6],0121],0X1_D6],0121],0x64];} }Class _xk0D:__{Val $z,_:_;}''','''Class,_QH,:,gx,{,Destructor,(,),{,Break,;,},},Class,_,{,$N,(,),{,Return,;,Val,k,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x3D6,],,,0121,],,,0X1D6,],,,0121,],,,0x64,],;,},},Class,_xk0D,:,__,{,Val,$z,,,_,:,_,;,},<EOF>''',101))

    def test_2156(self):
        self.assertTrue(TestLexer.test('''Class P_AD1_4uL:zt0p_{}Class _a_{Var __8__87,Fy8:Array [Array [Float ,05],21];}Class _:_K{Val _:Float ;Destructor (){} }''','''Class,P_AD1_4uL,:,zt0p_,{,},Class,_a_,{,Var,__8__87,,,Fy8,:,Array,[,Array,[,Float,,,05,],,,21,],;,},Class,_,:,_K,{,Val,_,:,Float,;,Destructor,(,),{,},},<EOF>''',101))

    def test_2157(self):
        self.assertTrue(TestLexer.test('''Class Y5E{$A(c__41,m:String ;_V1,a1:Array [Int ,5];u5v9_3Br_,t:_5;x,_:z_hB;E8_0:Array [Array [Array [Boolean ,3],0101],0101];_J,_,H2N:_;o7,F:UJ;v,_,g:Array [Array [Int ,231],065_1]){} }''','''Class,Y5E,{,$A,(,c__41,,,m,:,String,;,_V1,,,a1,:,Array,[,Int,,,5,],;,u5v9_3Br_,,,t,:,_5,;,x,,,_,:,z_hB,;,E8_0,:,Array,[,Array,[,Array,[,Boolean,,,3,],,,0101,],,,0101,],;,_J,,,_,,,H2N,:,_,;,o7,,,F,:,UJ,;,v,,,_,,,g,:,Array,[,Array,[,Int,,,231,],,,0651,],),{,},},<EOF>''',101))

    def test_2158(self):
        self.assertTrue(TestLexer.test('''Class tp:h8{Destructor (){}Constructor (n_H_:Array [Array [Boolean ,0x21],0120];_,_,RK,S,_,C1_,_d:Float ){Return ;Break ;Continue ;} }''','''Class,tp,:,h8,{,Destructor,(,),{,},Constructor,(,n_H_,:,Array,[,Array,[,Boolean,,,0x21,],,,0120,],;,_,,,_,,,RK,,,S,,,_,,,C1_,,,_d,:,Float,),{,Return,;,Break,;,Continue,;,},},<EOF>''',101))

    def test_2159(self):
        self.assertTrue(TestLexer.test('''Class kL{Destructor (){}Var T,$_:String ;}Class _gI7_:_{_(T,L,_:H;_6T_,__4,_,fug:g;__,yA_:Array [Float ,0b1]){} }''','''Class,kL,{,Destructor,(,),{,},Var,T,,,$_,:,String,;,},Class,_gI7_,:,_,{,_,(,T,,,L,,,_,:,H,;,_6T_,,,__4,,,_,,,fug,:,g,;,__,,,yA_,:,Array,[,Float,,,0b1,],),{,},},<EOF>''',101))

    def test_2160(self):
        self.assertTrue(TestLexer.test('''Class _:g_{Val _6,uBw,_4:Array [Array [Array [Array [Array [Boolean ,0b1001101],0xA],47],0B10],4_214_797];}Class e1{Val _:Array [String ,06_2314_046];}''','''Class,_,:,g_,{,Val,_6,,,uBw,,,_4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1001101,],,,0xA,],,,47,],,,0B10,],,,4214797,],;,},Class,e1,{,Val,_,:,Array,[,String,,,062314046,],;,},<EOF>''',101))

    def test_2161(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _8{$0(zl,_,_:Boolean ){}Constructor (){} }Class O{}Class e{}Class _{}Class g{Destructor (){}Constructor (r:Float ;B_,S,m,_,P9,_:Array [Int ,0b1]){} }''','''Class,_,:,_,{,},Class,_8,{,$0,(,zl,,,_,,,_,:,Boolean,),{,},Constructor,(,),{,},},Class,O,{,},Class,e,{,},Class,_,{,},Class,g,{,Destructor,(,),{,},Constructor,(,r,:,Float,;,B_,,,S,,,m,,,_,,,P9,,,_,:,Array,[,Int,,,0b1,],),{,},},<EOF>''',101))

    def test_2162(self):
        self.assertTrue(TestLexer.test('''Class K{}Class T:_{}Class z_:dj{Constructor (_v,S:Float ){}Constructor (){}Val $99v,_,_an3:Boolean ;}Class x_:q_Dd766_{}Class A_814_jk6{}Class __:_{}''','''Class,K,{,},Class,T,:,_,{,},Class,z_,:,dj,{,Constructor,(,_v,,,S,:,Float,),{,},Constructor,(,),{,},Val,$99v,,,_,,,_an3,:,Boolean,;,},Class,x_,:,q_Dd766_,{,},Class,A_814_jk6,{,},Class,__,:,_,{,},<EOF>''',101))

    def test_2163(self):
        self.assertTrue(TestLexer.test('''Class _:zk{Val $9:String ;r(r,_a3,__:Array [Array [Boolean ,46],2_711_5];ky:Array [Array [Float ,0120],0x1E];_,_,_:Array [Array [Float ,0120],46]){} }''','''Class,_,:,zk,{,Val,$9,:,String,;,r,(,r,,,_a3,,,__,:,Array,[,Array,[,Boolean,,,46,],,,27115,],;,ky,:,Array,[,Array,[,Float,,,0120,],,,0x1E,],;,_,,,_,,,_,:,Array,[,Array,[,Float,,,0120,],,,46,],),{,},},<EOF>''',101))

    def test_2164(self):
        self.assertTrue(TestLexer.test('''Class _{}Class ez:_B{}Class _{G(k3,a_,V____,__,_,q,_,_,_n51W:Array [String ,0X1_8]){Return ;Break ;} }Class _:I{}''','''Class,_,{,},Class,ez,:,_B,{,},Class,_,{,G,(,k3,,,a_,,,V____,,,__,,,_,,,q,,,_,,,_,,,_n51W,:,Array,[,String,,,0X18,],),{,Return,;,Break,;,},},Class,_,:,I,{,},<EOF>''',101))

    def test_2165(self):
        self.assertTrue(TestLexer.test('''Class _:_f{}Class T{}Class P:_{$a_(o:Array [Array [Int ,0b1010000],023];G__:Array [Array [String ,0B10010],2]){}Constructor (S:Array [Array [Array [Array [Array [Boolean ,0B10010],0b11],0B1],39],0x7D];L:e_;_:_){} }Class l7_k8q_t_6:JC{Val _u:f;}''','''Class,_,:,_f,{,},Class,T,{,},Class,P,:,_,{,$a_,(,o,:,Array,[,Array,[,Int,,,0b1010000,],,,023,],;,G__,:,Array,[,Array,[,String,,,0B10010,],,,2,],),{,},Constructor,(,S,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B10010,],,,0b11,],,,0B1,],,,39,],,,0x7D,],;,L,:,e_,;,_,:,_,),{,},},Class,l7_k8q_t_6,:,JC,{,Val,_u,:,f,;,},<EOF>''',101))

    def test_2166(self):
        self.assertTrue(TestLexer.test('''Class p{Constructor (a_E:Array [Array [String ,0B11],026];RC:Array [Array [Array [Array [Array [Boolean ,0b1],053_271],9],58],01];__Om:g;_7,tK,koI5,d,_,_j_3i:u;_:Int ){Continue ;}Val _,_1:Boolean ;Val $V_02:Z;}Class Z:T9{}''','''Class,p,{,Constructor,(,a_E,:,Array,[,Array,[,String,,,0B11,],,,026,],;,RC,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,053271,],,,9,],,,58,],,,01,],;,__Om,:,g,;,_7,,,tK,,,koI5,,,d,,,_,,,_j_3i,:,u,;,_,:,Int,),{,Continue,;,},Val,_,,,_1,:,Boolean,;,Val,$V_02,:,Z,;,},Class,Z,:,T9,{,},<EOF>''',101))

    def test_2167(self):
        self.assertTrue(TestLexer.test('''Class D:m4pm{Destructor (){ {}Continue ;}Constructor (j__S:A_;_1:Array [Array [Array [Int ,0X6],0x1_1_C],0X8_E49]){} }''','''Class,D,:,m4pm,{,Destructor,(,),{,{,},Continue,;,},Constructor,(,j__S,:,A_,;,_1,:,Array,[,Array,[,Array,[,Int,,,0X6,],,,0x11C,],,,0X8E49,],),{,},},<EOF>''',101))

    def test_2168(self):
        self.assertTrue(TestLexer.test('''Class R:E_1{}Class bK{Val _,j1M4,$__t7:_;}Class T:__{}Class Kg91i__:v{}Class _{f(Y1_4,E:Array [Array [String ,0X5_B],49];G,h,P_81:Array [Array [Int ,7_8_9],0x5C]){}Val __r:Boolean ;}Class _6_:V{}''','''Class,R,:,E_1,{,},Class,bK,{,Val,_,,,j1M4,,,$__t7,:,_,;,},Class,T,:,__,{,},Class,Kg91i__,:,v,{,},Class,_,{,f,(,Y1_4,,,E,:,Array,[,Array,[,String,,,0X5B,],,,49,],;,G,,,h,,,P_81,:,Array,[,Array,[,Int,,,789,],,,0x5C,],),{,},Val,__r,:,Boolean,;,},Class,_6_,:,V,{,},<EOF>''',101))

    def test_2169(self):
        self.assertTrue(TestLexer.test('''Class j0V{Val _:Boolean ;Constructor (){} }Class n_{Var $_:Array [Array [Float ,95],0x24];}Class R_{Var T,_:Boolean ;}''','''Class,j0V,{,Val,_,:,Boolean,;,Constructor,(,),{,},},Class,n_,{,Var,$_,:,Array,[,Array,[,Float,,,95,],,,0x24,],;,},Class,R_,{,Var,T,,,_,:,Boolean,;,},<EOF>''',101))

    def test_2170(self):
        self.assertTrue(TestLexer.test('''Class __{Val $_:z;}Class B_:__r{Val G_:T5;Val $_:Array [Array [Array [Array [Int ,04],0xE_4],87],0X6];Destructor (){} }''','''Class,__,{,Val,$_,:,z,;,},Class,B_,:,__r,{,Val,G_,:,T5,;,Val,$_,:,Array,[,Array,[,Array,[,Array,[,Int,,,04,],,,0xE4,],,,87,],,,0X6,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_2171(self):
        self.assertTrue(TestLexer.test('''Class v:__T{_91(){}Val ___:Float ;Var __:Array [Array [Int ,0x2D],99_15_7];Destructor (){} }Class u:_{Constructor (_3_wm,_:_;_Z:Boolean ;_:Array [Boolean ,0120];s,Z:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,0b1_0],0XD],0x2D],0B111001],85],0X3D],07],0x92],85],0X3D],0b1010001],0B111001];M_l_9,_:Array [Int ,0b1_1_1_1]){} }''','''Class,v,:,__T,{,_91,(,),{,},Val,___,:,Float,;,Var,__,:,Array,[,Array,[,Int,,,0x2D,],,,99157,],;,Destructor,(,),{,},},Class,u,:,_,{,Constructor,(,_3_wm,,,_,:,_,;,_Z,:,Boolean,;,_,:,Array,[,Boolean,,,0120,],;,s,,,Z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b10,],,,0XD,],,,0x2D,],,,0B111001,],,,85,],,,0X3D,],,,07,],,,0x92,],,,85,],,,0X3D,],,,0b1010001,],,,0B111001,],;,M_l_9,,,_,:,Array,[,Int,,,0b1111,],),{,},},<EOF>''',101))

    def test_2172(self):
        self.assertTrue(TestLexer.test('''Class KYP__Wc_:a2{Destructor (){}_(_3w:Array [String ,0B101];_8R,MM5:Array [Boolean ,5_3];w:_;r:Float ;VE,__,_h:_M){} }Class a:_{}Class _{}''','''Class,KYP__Wc_,:,a2,{,Destructor,(,),{,},_,(,_3w,:,Array,[,String,,,0B101,],;,_8R,,,MM5,:,Array,[,Boolean,,,53,],;,w,:,_,;,r,:,Float,;,VE,,,__,,,_h,:,_M,),{,},},Class,a,:,_,{,},Class,_,{,},<EOF>''',101))

    def test_2173(self):
        self.assertTrue(TestLexer.test('''Class _0{Constructor (z_15_,IX0,_ecE:Array [Array [Boolean ,0B1],0B1];___Nr,_:Array [String ,0B1011111]){} }Class _Hnh{}Class e__:_{Val $s:String ;Constructor (pC:Array [Array [Array [Array [Array [Array [Int ,0B1011111],04],0x38],0XB_2],87],0xC];_0,n:String ){} }''','''Class,_0,{,Constructor,(,z_15_,,,IX0,,,_ecE,:,Array,[,Array,[,Boolean,,,0B1,],,,0B1,],;,___Nr,,,_,:,Array,[,String,,,0B1011111,],),{,},},Class,_Hnh,{,},Class,e__,:,_,{,Val,$s,:,String,;,Constructor,(,pC,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1011111,],,,04,],,,0x38,],,,0XB2,],,,87,],,,0xC,],;,_0,,,n,:,String,),{,},},<EOF>''',101))

    def test_2174(self):
        self.assertTrue(TestLexer.test('''Class c9I:_05{Val s,_:Float ;}Class _{Val __,G783b3v_,$Q19,$1,$_:Array [Int ,0x84];Constructor (){} }Class _3{Val _:Array [String ,3_6_5];Var _S:Boolean ;Constructor (r_:Float ;_6__:Array [String ,0b1001100];_7_:_;I:Boolean ;_:Array [Array [Boolean ,0B110010],0x5]){}Destructor (){} }Class G{}Class _:s{Destructor (){} }Class i:_{}''','''Class,c9I,:,_05,{,Val,s,,,_,:,Float,;,},Class,_,{,Val,__,,,G783b3v_,,,$Q19,,,$1,,,$_,:,Array,[,Int,,,0x84,],;,Constructor,(,),{,},},Class,_3,{,Val,_,:,Array,[,String,,,365,],;,Var,_S,:,Boolean,;,Constructor,(,r_,:,Float,;,_6__,:,Array,[,String,,,0b1001100,],;,_7_,:,_,;,I,:,Boolean,;,_,:,Array,[,Array,[,Boolean,,,0B110010,],,,0x5,],),{,},Destructor,(,),{,},},Class,G,{,},Class,_,:,s,{,Destructor,(,),{,},},Class,i,:,_,{,},<EOF>''',101))

    def test_2175(self):
        self.assertTrue(TestLexer.test('''Class _k_:_{Constructor (){}Var F:Array [Array [Array [Array [Array [Float ,0b1_01],0X10],4],0B100000],03];Constructor (){} }Class _:_{}''','''Class,_k_,:,_,{,Constructor,(,),{,},Var,F,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b101,],,,0X10,],,,4,],,,0B100000,],,,03,],;,Constructor,(,),{,},},Class,_,:,_,{,},<EOF>''',101))

    def test_2176(self):
        self.assertTrue(TestLexer.test('''Class Z9:_{Constructor (_:Array [Array [Float ,0X5],0x5];bKw0_:Array [Boolean ,0B1]){}Var D_,Nw:Array [Array [Array [Array [Float ,0X9F6],054],0B10],13];}''','''Class,Z9,:,_,{,Constructor,(,_,:,Array,[,Array,[,Float,,,0X5,],,,0x5,],;,bKw0_,:,Array,[,Boolean,,,0B1,],),{,},Var,D_,,,Nw,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X9F6,],,,054,],,,0B10,],,,13,],;,},<EOF>''',101))

    def test_2177(self):
        self.assertTrue(TestLexer.test('''Class t:__65{}Class i:a{Var a0,_J,$AE,_:_V;Destructor (){}Val $u,$o,X,_:G;Destructor (){Continue ;Break ;Break ;}__(){Break ;{Continue ;}Return ;} }Class _{}''','''Class,t,:,__65,{,},Class,i,:,a,{,Var,a0,,,_J,,,$AE,,,_,:,_V,;,Destructor,(,),{,},Val,$u,,,$o,,,X,,,_,:,G,;,Destructor,(,),{,Continue,;,Break,;,Break,;,},__,(,),{,Break,;,{,Continue,;,},Return,;,},},Class,_,{,},<EOF>''',101))

    def test_2178(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (s:__;_,__G,k:Array [Array [Array [Array [Boolean ,10],10],0B1011011],0B1011011]){}Destructor (){}Constructor (a05,y_,u,a:Array [String ,031]){}Val $8:y;}''','''Class,_,:,_,{,Constructor,(,s,:,__,;,_,,,__G,,,k,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,10,],,,10,],,,0B1011011,],,,0B1011011,],),{,},Destructor,(,),{,},Constructor,(,a05,,,y_,,,u,,,a,:,Array,[,String,,,031,],),{,},Val,$8,:,y,;,},<EOF>''',101))

    def test_2179(self):
        self.assertTrue(TestLexer.test('''Class __:__976{}Class _2:__3O{}Class U_{Constructor (){} }Class LA{}Class P__:__{Constructor (_,E,_mV:_y;_,p,_:v){} }''','''Class,__,:,__976,{,},Class,_2,:,__3O,{,},Class,U_,{,Constructor,(,),{,},},Class,LA,{,},Class,P__,:,__,{,Constructor,(,_,,,E,,,_mV,:,_y,;,_,,,p,,,_,:,v,),{,},},<EOF>''',101))

    def test_2180(self):
        self.assertTrue(TestLexer.test('''Class y:_{Val $Sl__HZ_:Array [Array [Array [Array [Array [Array [String ,0x3D],05_0],0b110001],02],57],0x1F_0];Val L0_,$3o,$_,F:_b1YC;}Class O{}''','''Class,y,:,_,{,Val,$Sl__HZ_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x3D,],,,050,],,,0b110001,],,,02,],,,57,],,,0x1F0,],;,Val,L0_,,,$3o,,,$_,,,F,:,_b1YC,;,},Class,O,{,},<EOF>''',101))

    def test_2181(self):
        self.assertTrue(TestLexer.test('''Class _0:Q{}Class __j:_3T{}Class ___17c{Val _:_k;Var Mr:Boolean ;}Class G5{$7d(w,H_:Array [Boolean ,0b11];_:Array [Array [Boolean ,0112],0b10]){} }Class _S{V(_7:Array [Array [Array [Boolean ,0b100001],0B11100],0b1]){Var g_migTT:Array [Boolean ,0XE];Break ;} }Class _:_{Constructor (){} }''','''Class,_0,:,Q,{,},Class,__j,:,_3T,{,},Class,___17c,{,Val,_,:,_k,;,Var,Mr,:,Boolean,;,},Class,G5,{,$7d,(,w,,,H_,:,Array,[,Boolean,,,0b11,],;,_,:,Array,[,Array,[,Boolean,,,0112,],,,0b10,],),{,},},Class,_S,{,V,(,_7,:,Array,[,Array,[,Array,[,Boolean,,,0b100001,],,,0B11100,],,,0b1,],),{,Var,g_migTT,:,Array,[,Boolean,,,0XE,],;,Break,;,},},Class,_,:,_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_2182(self):
        self.assertTrue(TestLexer.test('''Class _:_HO{}Class _:S{}Class _:b3_7{Val $__,$7:__;Destructor (){}Var i_k,I_Q,W,zx80__,dt__8,$4,__:_T__;}Class _:B{$_(e_x_:_;_:__){}Var $t5,d:String ;}Class d79_O:w{}''','''Class,_,:,_HO,{,},Class,_,:,S,{,},Class,_,:,b3_7,{,Val,$__,,,$7,:,__,;,Destructor,(,),{,},Var,i_k,,,I_Q,,,W,,,zx80__,,,dt__8,,,$4,,,__,:,_T__,;,},Class,_,:,B,{,$_,(,e_x_,:,_,;,_,:,__,),{,},Var,$t5,,,d,:,String,;,},Class,d79_O,:,w,{,},<EOF>''',101))

    def test_2183(self):
        self.assertTrue(TestLexer.test('''Class t_{}Class Z{}Class B{}Class C{Var $7s:Int ;}Class Iu_{Constructor (_b:Array [Array [Array [Float ,1],037],01_1];i:Boolean ;h:Int ;YD_,__:__;_,D0,o,w9,_N__2,_F:_;_:w){} }''','''Class,t_,{,},Class,Z,{,},Class,B,{,},Class,C,{,Var,$7s,:,Int,;,},Class,Iu_,{,Constructor,(,_b,:,Array,[,Array,[,Array,[,Float,,,1,],,,037,],,,011,],;,i,:,Boolean,;,h,:,Int,;,YD_,,,__,:,__,;,_,,,D0,,,o,,,w9,,,_N__2,,,_F,:,_,;,_,:,w,),{,},},<EOF>''',101))

    def test_2184(self):
        self.assertTrue(TestLexer.test('''Class _:F__{Constructor (c,_27,__:Array [Array [Array [Float ,052],61],833];_3Y_:Array [Array [Array [Array [Array [String ,01],070],052],8],052];_:Boolean ){} }Class _{}''','''Class,_,:,F__,{,Constructor,(,c,,,_27,,,__,:,Array,[,Array,[,Array,[,Float,,,052,],,,61,],,,833,],;,_3Y_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,01,],,,070,],,,052,],,,8,],,,052,],;,_,:,Boolean,),{,},},Class,_,{,},<EOF>''',101))

    def test_2185(self):
        self.assertTrue(TestLexer.test('''Class _5v_{}Class _:M{Constructor (B6:Array [Array [Array [Array [String ,0X44],0417],0B1],075]){}Var $152u:Boolean ;}Class x_1{Constructor (z,l:Array [Float ,0X3_7_B]){}$_(_:Array [Int ,0X44];_8k,_:E;R5:String ;p:Array [Int ,0B1000001];I_,uHQ:Int ){} }Class vV{}Class _K{$1(D:_;_O,_D_0:String ){}Destructor (){} }Class _:_{}''','''Class,_5v_,{,},Class,_,:,M,{,Constructor,(,B6,:,Array,[,Array,[,Array,[,Array,[,String,,,0X44,],,,0417,],,,0B1,],,,075,],),{,},Var,$152u,:,Boolean,;,},Class,x_1,{,Constructor,(,z,,,l,:,Array,[,Float,,,0X37B,],),{,},$_,(,_,:,Array,[,Int,,,0X44,],;,_8k,,,_,:,E,;,R5,:,String,;,p,:,Array,[,Int,,,0B1000001,],;,I_,,,uHQ,:,Int,),{,},},Class,vV,{,},Class,_K,{,$1,(,D,:,_,;,_O,,,_D_0,:,String,),{,},Destructor,(,),{,},},Class,_,:,_,{,},<EOF>''',101))

    def test_2186(self):
        self.assertTrue(TestLexer.test('''Class iz{}Class M_:y{Val ___323,$_,$D:Array [Array [String ,0B111],01];Val _,$8,d,$G_p,$_020Pm:Array [Array [Array [Boolean ,01],05_67],057];}Class F_:Efw_{Constructor (){} }Class _U:_{}''','''Class,iz,{,},Class,M_,:,y,{,Val,___323,,,$_,,,$D,:,Array,[,Array,[,String,,,0B111,],,,01,],;,Val,_,,,$8,,,d,,,$G_p,,,$_020Pm,:,Array,[,Array,[,Array,[,Boolean,,,01,],,,0567,],,,057,],;,},Class,F_,:,Efw_,{,Constructor,(,),{,},},Class,_U,:,_,{,},<EOF>''',101))

    def test_2187(self):
        self.assertTrue(TestLexer.test('''Class h_:_{Val $_1,$4Fw9,va__,$9BIe,_o__8,$x:Array [Array [String ,0X13],04];Destructor (){Break ;} }Class g__7e{}''','''Class,h_,:,_,{,Val,$_1,,,$4Fw9,,,va__,,,$9BIe,,,_o__8,,,$x,:,Array,[,Array,[,String,,,0X13,],,,04,],;,Destructor,(,),{,Break,;,},},Class,g__7e,{,},<EOF>''',101))

    def test_2188(self):
        self.assertTrue(TestLexer.test('''Class H1__{}Class _h1{Constructor (r64:Array [Array [Array [Boolean ,06],69],0xC]){}$W2(_:___;F:Int ;I__,vF_7__,_,_:b;E:w8PL){ {} }}''','''Class,H1__,{,},Class,_h1,{,Constructor,(,r64,:,Array,[,Array,[,Array,[,Boolean,,,06,],,,69,],,,0xC,],),{,},$W2,(,_,:,___,;,F,:,Int,;,I__,,,vF_7__,,,_,,,_,:,b,;,E,:,w8PL,),{,{,},},},<EOF>''',101))

    def test_2189(self):
        self.assertTrue(TestLexer.test('''Class _5:_{Constructor (t,_,_:_LA){}$__i(){}Var $04:String ;Constructor (_6,M,Jj_:Array [Array [Array [Int ,0X1],0124],06]){} }''','''Class,_5,:,_,{,Constructor,(,t,,,_,,,_,:,_LA,),{,},$__i,(,),{,},Var,$04,:,String,;,Constructor,(,_6,,,M,,,Jj_,:,Array,[,Array,[,Array,[,Int,,,0X1,],,,0124,],,,06,],),{,},},<EOF>''',101))

    def test_2190(self):
        self.assertTrue(TestLexer.test('''Class a{}Class _pN{Val _:_;}Class __1:_{$_x(t:Array [Boolean ,040];_E5:Array [Int ,0x3];_95:Array [Boolean ,7]){Var o:Float ;} }''','''Class,a,{,},Class,_pN,{,Val,_,:,_,;,},Class,__1,:,_,{,$_x,(,t,:,Array,[,Boolean,,,040,],;,_E5,:,Array,[,Int,,,0x3,],;,_95,:,Array,[,Boolean,,,7,],),{,Var,o,:,Float,;,},},<EOF>''',101))

    def test_2191(self):
        self.assertTrue(TestLexer.test('''Class X_74{$z(_8222,_2,k,_5:String ;W:l;s:R;_,__,kjX,_5,_h_:Array [Array [Array [Array [Array [Boolean ,0140],0B10110],0B10110],0140],2_6_26_9];FW:Array [Array [Boolean ,0XB_E],07_64]){}Destructor (){} }Class _:_n_{}''','''Class,X_74,{,$z,(,_8222,,,_2,,,k,,,_5,:,String,;,W,:,l,;,s,:,R,;,_,,,__,,,kjX,,,_5,,,_h_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0140,],,,0B10110,],,,0B10110,],,,0140,],,,26269,],;,FW,:,Array,[,Array,[,Boolean,,,0XBE,],,,0764,],),{,},Destructor,(,),{,},},Class,_,:,_n_,{,},<EOF>''',101))

    def test_2192(self):
        self.assertTrue(TestLexer.test('''Class __7i{$_RQ_(p_:Array [Array [Boolean ,06_22],81];l_9_:Array [Float ,0x722];C,h3,a:bI;Z:Array [Float ,81];n:b;_:Array [Float ,0XF];_,f:Array [Int ,81];_h:Boolean ;_:D___87e__){Continue ;}Constructor (_4:Float ){} }''','''Class,__7i,{,$_RQ_,(,p_,:,Array,[,Array,[,Boolean,,,0622,],,,81,],;,l_9_,:,Array,[,Float,,,0x722,],;,C,,,h3,,,a,:,bI,;,Z,:,Array,[,Float,,,81,],;,n,:,b,;,_,:,Array,[,Float,,,0XF,],;,_,,,f,:,Array,[,Int,,,81,],;,_h,:,Boolean,;,_,:,D___87e__,),{,Continue,;,},Constructor,(,_4,:,Float,),{,},},<EOF>''',101))

    def test_2193(self):
        self.assertTrue(TestLexer.test('''Class W:_{}Class A:__{$8_(__99_,w,_ZI_:Int ;E2,py_:Array [String ,8];R1298,_8I,_y5G_3Ph:Array [String ,0104];F,D__8_F:Array [Boolean ,0B110];_O,P4:H;_5,n:_3){} }''','''Class,W,:,_,{,},Class,A,:,__,{,$8_,(,__99_,,,w,,,_ZI_,:,Int,;,E2,,,py_,:,Array,[,String,,,8,],;,R1298,,,_8I,,,_y5G_3Ph,:,Array,[,String,,,0104,],;,F,,,D__8_F,:,Array,[,Boolean,,,0B110,],;,_O,,,P4,:,H,;,_5,,,n,:,_3,),{,},},<EOF>''',101))

    def test_2194(self):
        self.assertTrue(TestLexer.test('''Class q:N{Constructor (L,_8:Float ;_I5,Q:Array [Boolean ,0113]){}$W(__:ei_;_e_:Float ;a6,B_v:Array [Int ,0b11110]){} }''','''Class,q,:,N,{,Constructor,(,L,,,_8,:,Float,;,_I5,,,Q,:,Array,[,Boolean,,,0113,],),{,},$W,(,__,:,ei_,;,_e_,:,Float,;,a6,,,B_v,:,Array,[,Int,,,0b11110,],),{,},},<EOF>''',101))

    def test_2195(self):
        self.assertTrue(TestLexer.test('''Class _{}Class xer:__{Constructor (__:_2W_){}Var $Z,$C,$_v:_i;Val $_:Boolean ;Var p92_:Int =_::$_()._;}Class Ga:q4{}''','''Class,_,{,},Class,xer,:,__,{,Constructor,(,__,:,_2W_,),{,},Var,$Z,,,$C,,,$_v,:,_i,;,Val,$_,:,Boolean,;,Var,p92_,:,Int,=,_,::,$_,(,),.,_,;,},Class,Ga,:,q4,{,},<EOF>''',101))

    def test_2196(self):
        self.assertTrue(TestLexer.test('''Class __{}Class _{}Class __j5{Var $9,$T,$W,Gn,$a_,$V,h:Array [Boolean ,0X20];Var $___:Array [Array [Int ,0B1],36];}Class _{}Class f_:F{}Class C:_{p(){Continue ;}Constructor (LZ_7:Array [String ,032]){}Constructor (){} }''','''Class,__,{,},Class,_,{,},Class,__j5,{,Var,$9,,,$T,,,$W,,,Gn,,,$a_,,,$V,,,h,:,Array,[,Boolean,,,0X20,],;,Var,$___,:,Array,[,Array,[,Int,,,0B1,],,,36,],;,},Class,_,{,},Class,f_,:,F,{,},Class,C,:,_,{,p,(,),{,Continue,;,},Constructor,(,LZ_7,:,Array,[,String,,,032,],),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_2197(self):
        self.assertTrue(TestLexer.test('''Class B:_{Constructor (uEGX:Int ;l,w71_y0,F:String ;b:String ;_:Float ;_,c_:Array [Array [Boolean ,25],0B110];m,E,F_,GW77,_7W8lt:f){}$_x1__(E_:String ;_:Float ){}Var $h_9m_,T:y_O;}Class _:z_{Constructor (_LcB,V:Int ;R,_W4,_:Array [Array [Array [Float ,01],8],0x31]){} }Class _{}''','''Class,B,:,_,{,Constructor,(,uEGX,:,Int,;,l,,,w71_y0,,,F,:,String,;,b,:,String,;,_,:,Float,;,_,,,c_,:,Array,[,Array,[,Boolean,,,25,],,,0B110,],;,m,,,E,,,F_,,,GW77,,,_7W8lt,:,f,),{,},$_x1__,(,E_,:,String,;,_,:,Float,),{,},Var,$h_9m_,,,T,:,y_O,;,},Class,_,:,z_,{,Constructor,(,_LcB,,,V,:,Int,;,R,,,_W4,,,_,:,Array,[,Array,[,Array,[,Float,,,01,],,,8,],,,0x31,],),{,},},Class,_,{,},<EOF>''',101))

    def test_2198(self):
        self.assertTrue(TestLexer.test('''Class _:_M_{Destructor (){Val _19:Int ;}Constructor (lk:p3r_____1;_,_6H:U;H7P1m_9,_7,_:Q;wq:Boolean ){Var aS_:Float ;Break ;} }Class _x4_{}Class _{}''','''Class,_,:,_M_,{,Destructor,(,),{,Val,_19,:,Int,;,},Constructor,(,lk,:,p3r_____1,;,_,,,_6H,:,U,;,H7P1m_9,,,_7,,,_,:,Q,;,wq,:,Boolean,),{,Var,aS_,:,Float,;,Break,;,},},Class,_x4_,{,},Class,_,{,},<EOF>''',101))

    def test_2199(self):
        self.assertTrue(TestLexer.test('''Class y:_CwW{Val __,n_,$X,$UU:j_;Val _,$8,$_:N;Constructor (){}Constructor (){Val _:_;} }Class K:__{}Class e:l{}Class _ii_:XP{}''','''Class,y,:,_CwW,{,Val,__,,,n_,,,$X,,,$UU,:,j_,;,Val,_,,,$8,,,$_,:,N,;,Constructor,(,),{,},Constructor,(,),{,Val,_,:,_,;,},},Class,K,:,__,{,},Class,e,:,l,{,},Class,_ii_,:,XP,{,},<EOF>''',101))

    def test_2200(self):
        self.assertTrue(TestLexer.test('''Class __{RN(_,O7,_,X7,z9,__5,_u0X9_0_3_:_;w,J_,t_:Array [Array [Array [Float ,0B1000],0b1],0x4F]){O::$4e_u_();Break ;} }''','''Class,__,{,RN,(,_,,,O7,,,_,,,X7,,,z9,,,__5,,,_u0X9_0_3_,:,_,;,w,,,J_,,,t_,:,Array,[,Array,[,Array,[,Float,,,0B1000,],,,0b1,],,,0x4F,],),{,O,::,$4e_u_,(,),;,Break,;,},},<EOF>''',101))

    def test_2201(self):
        self.assertTrue(TestLexer.test('''Class B:P{Constructor (){ {}Var __,O:z63i8;} }Class _:v4_{}Class d:_{Val $9_,D_,VU0_:_;}Class R_2{Var $8,$8_0:_;}''','''Class,B,:,P,{,Constructor,(,),{,{,},Var,__,,,O,:,z63i8,;,},},Class,_,:,v4_,{,},Class,d,:,_,{,Val,$9_,,,D_,,,VU0_,:,_,;,},Class,R_2,{,Var,$8,,,$8_0,:,_,;,},<EOF>''',101))

    def test_2202(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (BR,q,S,r,_Hk_,_,_:Boolean ;_:D;Ah:Array [String ,0b1]){Break ;} }Class l_{}Class __13O:S{Constructor (_,o:Boolean ){}Destructor (){Return ;Break ;} }''','''Class,_,:,_,{,Constructor,(,BR,,,q,,,S,,,r,,,_Hk_,,,_,,,_,:,Boolean,;,_,:,D,;,Ah,:,Array,[,String,,,0b1,],),{,Break,;,},},Class,l_,{,},Class,__13O,:,S,{,Constructor,(,_,,,o,:,Boolean,),{,},Destructor,(,),{,Return,;,Break,;,},},<EOF>''',101))

    def test_2203(self):
        self.assertTrue(TestLexer.test('''Class _{$L(rO,R,H:Float ){Val _e:Array [Array [Array [Boolean ,0xB_7_5_C_8],0XC5],03_0];} }Class _Q6:_L{Destructor (){}Val l,_R,__4,$7aZ,s:Array [Array [Int ,0B1111],0X46];}Class u_:w{Constructor (nP,_m:Array [Array [Array [Float ,22],0xF],8];E:L;_,_:O){} }''','''Class,_,{,$L,(,rO,,,R,,,H,:,Float,),{,Val,_e,:,Array,[,Array,[,Array,[,Boolean,,,0xB75C8,],,,0XC5,],,,030,],;,},},Class,_Q6,:,_L,{,Destructor,(,),{,},Val,l,,,_R,,,__4,,,$7aZ,,,s,:,Array,[,Array,[,Int,,,0B1111,],,,0X46,],;,},Class,u_,:,w,{,Constructor,(,nP,,,_m,:,Array,[,Array,[,Array,[,Float,,,22,],,,0xF,],,,8,],;,E,:,L,;,_,,,_,:,O,),{,},},<EOF>''',101))

    def test_2204(self):
        self.assertTrue(TestLexer.test('''Class _:_{$g_(c0_,_:Array [Array [String ,0B10010],0B10010]){Break ;Return ;}sS56d78(){Continue ;U::$3();{Break ;}Continue ;} }Class _{Val v_v,_:Boolean ;Var $6_,Z_6_,_24:Array [String ,0B110_10];}Class _:CP{}Class _:i{}''','''Class,_,:,_,{,$g_,(,c0_,,,_,:,Array,[,Array,[,String,,,0B10010,],,,0B10010,],),{,Break,;,Return,;,},sS56d78,(,),{,Continue,;,U,::,$3,(,),;,{,Break,;,},Continue,;,},},Class,_,{,Val,v_v,,,_,:,Boolean,;,Var,$6_,,,Z_6_,,,_24,:,Array,[,String,,,0B11010,],;,},Class,_,:,CP,{,},Class,_,:,i,{,},<EOF>''',101))

    def test_2205(self):
        self.assertTrue(TestLexer.test('''Class _L{Var vN0,$_4,$d9:Array [Array [Array [Array [Array [Array [String ,5_41],0b1],07],0777],06],7_6_27_14_9_6];}''','''Class,_L,{,Var,vN0,,,$_4,,,$d9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,541,],,,0b1,],,,07,],,,0777,],,,06,],,,76271496,],;,},<EOF>''',101))

    def test_2206(self):
        self.assertTrue(TestLexer.test('''Class _0_{Val T,$_2,mbj9:Boolean ;Constructor (u:Array [Boolean ,0X30]){Break ;}Constructor (Z98l,__:Float ){Break ;Return ;}Et(){Continue ;Return ;} }''','''Class,_0_,{,Val,T,,,$_2,,,mbj9,:,Boolean,;,Constructor,(,u,:,Array,[,Boolean,,,0X30,],),{,Break,;,},Constructor,(,Z98l,,,__,:,Float,),{,Break,;,Return,;,},Et,(,),{,Continue,;,Return,;,},},<EOF>''',101))

    def test_2207(self):
        self.assertTrue(TestLexer.test('''Class T_8{Constructor (){J_i::$_();}Constructor (_:Array [Boolean ,5];z_95_,_k,o:String ;_X_:_){Return ;Break ;} }''','''Class,T_8,{,Constructor,(,),{,J_i,::,$_,(,),;,},Constructor,(,_,:,Array,[,Boolean,,,5,],;,z_95_,,,_k,,,o,:,String,;,_X_,:,_,),{,Return,;,Break,;,},},<EOF>''',101))

    def test_2208(self):
        self.assertTrue(TestLexer.test('''Class __{Var $7,w,_,$0P2__:_;}Class _:_C_{Constructor (){Var U:Array [Array [Array [Array [String ,4_6_4],02],9],65];} }''','''Class,__,{,Var,$7,,,w,,,_,,,$0P2__,:,_,;,},Class,_,:,_C_,{,Constructor,(,),{,Var,U,:,Array,[,Array,[,Array,[,Array,[,String,,,464,],,,02,],,,9,],,,65,],;,},},<EOF>''',101))

    def test_2209(self):
        self.assertTrue(TestLexer.test('''Class _:T{}Class PM{Constructor (){}$0(_a3_:Array [Array [Array [Array [Int ,1_9],28],0115],0B1010110]){} }Class o:_L__D{}''','''Class,_,:,T,{,},Class,PM,{,Constructor,(,),{,},$0,(,_a3_,:,Array,[,Array,[,Array,[,Array,[,Int,,,19,],,,28,],,,0115,],,,0B1010110,],),{,},},Class,o,:,_L__D,{,},<EOF>''',101))

    def test_2210(self):
        self.assertTrue(TestLexer.test('''Class Bk60{$R(V3b,l,d:Int ){} }Class M64:u_{}Class l:_{$xd(K_C_:Array [Array [Float ,0X36],8_0];I_,V9_6_,_V,w,__S,_:Array [Int ,0123]){} }Class _s:a6{}Class hD:_{Var R_T6,F,$_,$R_L____,g:Array [Array [Array [Int ,92],03],074];Var _:s_8k_;Var $7K:String ;Destructor (){} }''','''Class,Bk60,{,$R,(,V3b,,,l,,,d,:,Int,),{,},},Class,M64,:,u_,{,},Class,l,:,_,{,$xd,(,K_C_,:,Array,[,Array,[,Float,,,0X36,],,,80,],;,I_,,,V9_6_,,,_V,,,w,,,__S,,,_,:,Array,[,Int,,,0123,],),{,},},Class,_s,:,a6,{,},Class,hD,:,_,{,Var,R_T6,,,F,,,$_,,,$R_L____,,,g,:,Array,[,Array,[,Array,[,Int,,,92,],,,03,],,,074,],;,Var,_,:,s_8k_,;,Var,$7K,:,String,;,Destructor,(,),{,},},<EOF>''',101))

    def test_2211(self):
        self.assertTrue(TestLexer.test('''Class _{}Class HB_{Constructor (___,sh6,u:Array [Array [Array [Array [Array [Array [Boolean ,7],03_7],0xC],0X8],011],011];G,_,_X:Array [Boolean ,0b111000]){}_(l,_7___0,_7:Array [Int ,38];_:Boolean ;ak,_r6,cO,p_,x_:Boolean ){}Var $_M9:_;Constructor (){Continue ;}Var _,$24:nv;}''','''Class,_,{,},Class,HB_,{,Constructor,(,___,,,sh6,,,u,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,7,],,,037,],,,0xC,],,,0X8,],,,011,],,,011,],;,G,,,_,,,_X,:,Array,[,Boolean,,,0b111000,],),{,},_,(,l,,,_7___0,,,_7,:,Array,[,Int,,,38,],;,_,:,Boolean,;,ak,,,_r6,,,cO,,,p_,,,x_,:,Boolean,),{,},Var,$_M9,:,_,;,Constructor,(,),{,Continue,;,},Var,_,,,$24,:,nv,;,},<EOF>''',101))

    def test_2212(self):
        self.assertTrue(TestLexer.test('''Class __n{}Class _{}Class _vR{}Class _L5G2N_{}Class _84_80Q:_w_E7{q(____:__6;_,M:Array [Boolean ,3]){} }Class t{}Class F{}Class i9I:_8{Constructor (){} }Class s{}''','''Class,__n,{,},Class,_,{,},Class,_vR,{,},Class,_L5G2N_,{,},Class,_84_80Q,:,_w_E7,{,q,(,____,:,__6,;,_,,,M,:,Array,[,Boolean,,,3,],),{,},},Class,t,{,},Class,F,{,},Class,i9I,:,_8,{,Constructor,(,),{,},},Class,s,{,},<EOF>''',101))

    def test_2213(self):
        self.assertTrue(TestLexer.test('''Class _:IZ{i(p8f_8_6:Array [Array [Array [Int ,0B1],0B1],6];_:Gii;Ct5:Float ;_9:String ;ym0:Array [Array [String ,27],75];Jx2iZ,g9:_;_,O:Int ;__,_4:Array [Boolean ,0B110100]){}Destructor (){_S::$2();} }''','''Class,_,:,IZ,{,i,(,p8f_8_6,:,Array,[,Array,[,Array,[,Int,,,0B1,],,,0B1,],,,6,],;,_,:,Gii,;,Ct5,:,Float,;,_9,:,String,;,ym0,:,Array,[,Array,[,String,,,27,],,,75,],;,Jx2iZ,,,g9,:,_,;,_,,,O,:,Int,;,__,,,_4,:,Array,[,Boolean,,,0B110100,],),{,},Destructor,(,),{,_S,::,$2,(,),;,},},<EOF>''',101))

    def test_2214(self):
        self.assertTrue(TestLexer.test('''Class Z:_{__(i,b,P,_,J6:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0x1F],0117],0117],0333_25_0],2],0X6],3],80],0B1000001];R:Array [Int ,0B1_0]){Var _,r_9ho,m,_,_c,_R3:Float ;}Val $_:Array [String ,0X87];}Class _W{Var $__V:Array [Float ,4];o_(_:Boolean ){} }Class _{}''','''Class,Z,:,_,{,__,(,i,,,b,,,P,,,_,,,J6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x1F,],,,0117,],,,0117,],,,0333250,],,,2,],,,0X6,],,,3,],,,80,],,,0B1000001,],;,R,:,Array,[,Int,,,0B10,],),{,Var,_,,,r_9ho,,,m,,,_,,,_c,,,_R3,:,Float,;,},Val,$_,:,Array,[,String,,,0X87,],;,},Class,_W,{,Var,$__V,:,Array,[,Float,,,4,],;,o_,(,_,:,Boolean,),{,},},Class,_,{,},<EOF>''',101))

    def test_2215(self):
        self.assertTrue(TestLexer.test('''Class p:w{Destructor (){} }Class _F:fm{}Class _4{$2K(_:Array [Array [Int ,0x51],73_1];F:Boolean ;_3:Array [Boolean ,5]){}$24(_,_o,_,_9,_:Float ){} }Class bF_:R_{Constructor (){} }''','''Class,p,:,w,{,Destructor,(,),{,},},Class,_F,:,fm,{,},Class,_4,{,$2K,(,_,:,Array,[,Array,[,Int,,,0x51,],,,731,],;,F,:,Boolean,;,_3,:,Array,[,Boolean,,,5,],),{,},$24,(,_,,,_o,,,_,,,_9,,,_,:,Float,),{,},},Class,bF_,:,R_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_2216(self):
        self.assertTrue(TestLexer.test('''Class _{Var ajfF,h:_6Cf5U_;Destructor (){} }Class _{}Class _:_{Constructor (_:Ok;R,_1T_:Float ;_q,_:Array [Boolean ,0b101010];_j:Array [Array [Array [Array [Boolean ,2],0x5B_F9],34],0x4B]){} }Class _:_{Constructor (){_::$_().G_();}Constructor (){}Var $_:Array [Array [Array [String ,05_7],8],0B101111];}''','''Class,_,{,Var,ajfF,,,h,:,_6Cf5U_,;,Destructor,(,),{,},},Class,_,{,},Class,_,:,_,{,Constructor,(,_,:,Ok,;,R,,,_1T_,:,Float,;,_q,,,_,:,Array,[,Boolean,,,0b101010,],;,_j,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,2,],,,0x5BF9,],,,34,],,,0x4B,],),{,},},Class,_,:,_,{,Constructor,(,),{,_,::,$_,(,),.,G_,(,),;,},Constructor,(,),{,},Var,$_,:,Array,[,Array,[,Array,[,String,,,057,],,,8,],,,0B101111,],;,},<EOF>''',101))

    def test_2217(self):
        self.assertTrue(TestLexer.test('''Class F{Constructor (){Val O,_:Array [String ,0x9];}$_(E_,_349,L6:Boolean ;_T_:Array [String ,0X3B];g_B:d){} }Class _4324{}Class _{}''','''Class,F,{,Constructor,(,),{,Val,O,,,_,:,Array,[,String,,,0x9,],;,},$_,(,E_,,,_349,,,L6,:,Boolean,;,_T_,:,Array,[,String,,,0X3B,],;,g_B,:,d,),{,},},Class,_4324,{,},Class,_,{,},<EOF>''',101))

    def test_2218(self):
        self.assertTrue(TestLexer.test('''Class I:_{Constructor (U,o:Array [Array [Array [Array [Array [Float ,0x59],61],0x59],6_4_1],025]){}Constructor (W6_,u,_Z,M,n,x0,h,_,__3:i33_;_:Array [Array [Float ,0X4E],0B111010]){}$51(){} }''','''Class,I,:,_,{,Constructor,(,U,,,o,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x59,],,,61,],,,0x59,],,,641,],,,025,],),{,},Constructor,(,W6_,,,u,,,_Z,,,M,,,n,,,x0,,,h,,,_,,,__3,:,i33_,;,_,:,Array,[,Array,[,Float,,,0X4E,],,,0B111010,],),{,},$51,(,),{,},},<EOF>''',101))

    def test_2219(self):
        self.assertTrue(TestLexer.test('''Class _:_kH_{Var $b_e1_,b0:Boolean ;$3(){}Var $4:Boolean ;}Class H4_:H3{}Class V{y___(_,_F0,N,o,_7,_:_8VVvQ63_){} }''','''Class,_,:,_kH_,{,Var,$b_e1_,,,b0,:,Boolean,;,$3,(,),{,},Var,$4,:,Boolean,;,},Class,H4_,:,H3,{,},Class,V,{,y___,(,_,,,_F0,,,N,,,o,,,_7,,,_,:,_8VVvQ63_,),{,},},<EOF>''',101))

    def test_2220(self):
        self.assertTrue(TestLexer.test('''Class c_{$07(e_:Array [Array [Boolean ,0B110000],016]){}$4(J,__,w_,V,q:__88N){} }Class L_:m5_{Val $0,_,$ud__:q5;Var $S:e_;}''','''Class,c_,{,$07,(,e_,:,Array,[,Array,[,Boolean,,,0B110000,],,,016,],),{,},$4,(,J,,,__,,,w_,,,V,,,q,:,__88N,),{,},},Class,L_,:,m5_,{,Val,$0,,,_,,,$ud__,:,q5,;,Var,$S,:,e_,;,},<EOF>''',101))

    def test_2221(self):
        self.assertTrue(TestLexer.test('''Class A{Constructor (R,_7,i:C;_:Array [Array [Array [Int ,38_02133],0B1],3];l:Array [Float ,05];_,_:Array [Float ,03];_e:_9_1){_::$_.PV();}Constructor (_i,_,_Ru,_2:Boolean ;q:___){ {} }}Class H{}Class K3:l{$1(){Break ;}Var $_G,_,Q,$8:String ;}''','''Class,A,{,Constructor,(,R,,,_7,,,i,:,C,;,_,:,Array,[,Array,[,Array,[,Int,,,3802133,],,,0B1,],,,3,],;,l,:,Array,[,Float,,,05,],;,_,,,_,:,Array,[,Float,,,03,],;,_e,:,_9_1,),{,_,::,$_,.,PV,(,),;,},Constructor,(,_i,,,_,,,_Ru,,,_2,:,Boolean,;,q,:,___,),{,{,},},},Class,H,{,},Class,K3,:,l,{,$1,(,),{,Break,;,},Var,$_G,,,_,,,Q,,,$8,:,String,;,},<EOF>''',101))

    def test_2222(self):
        self.assertTrue(TestLexer.test('''Class IH93m_s:NA_9{Constructor (Ue,_3,x,_EB___9,_G_:Boolean ;G:_736;_o___43w6:H6B_){Break ;}Var _,$6_1y:Array [Array [Array [Array [Boolean ,75],03],02],0X14];}''','''Class,IH93m_s,:,NA_9,{,Constructor,(,Ue,,,_3,,,x,,,_EB___9,,,_G_,:,Boolean,;,G,:,_736,;,_o___43w6,:,H6B_,),{,Break,;,},Var,_,,,$6_1y,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,75,],,,03,],,,02,],,,0X14,],;,},<EOF>''',101))

    def test_2223(self):
        self.assertTrue(TestLexer.test('''Class n:QMA{}Class __86OD_:H{Destructor (){}Val $L_:String ;Constructor (){Return ;}Val $D,H,_z1L_0f,p_:Float ;}''','''Class,n,:,QMA,{,},Class,__86OD_,:,H,{,Destructor,(,),{,},Val,$L_,:,String,;,Constructor,(,),{,Return,;,},Val,$D,,,H,,,_z1L_0f,,,p_,:,Float,;,},<EOF>''',101))

    def test_2224(self):
        self.assertTrue(TestLexer.test('''Class I{Destructor (){} }Class _6D__2_:___1{}Class __m_K{Var z:Array [Array [Array [Int ,0x18],0B101010],95];___(_,__,_:z){Break ;} }''','''Class,I,{,Destructor,(,),{,},},Class,_6D__2_,:,___1,{,},Class,__m_K,{,Var,z,:,Array,[,Array,[,Array,[,Int,,,0x18,],,,0B101010,],,,95,],;,___,(,_,,,__,,,_,:,z,),{,Break,;,},},<EOF>''',101))

    def test_2225(self):
        self.assertTrue(TestLexer.test('''Class _6{}Class ___U___1_7:_{}Class C6{qm(b:Boolean ;B,A,a,z_:y9k){} }Class _3R{Constructor (GJ,_:Array [Array [Array [Boolean ,4],4_9],07]){}_6N(_,_:r_d){ {} }}''','''Class,_6,{,},Class,___U___1_7,:,_,{,},Class,C6,{,qm,(,b,:,Boolean,;,B,,,A,,,a,,,z_,:,y9k,),{,},},Class,_3R,{,Constructor,(,GJ,,,_,:,Array,[,Array,[,Array,[,Boolean,,,4,],,,49,],,,07,],),{,},_6N,(,_,,,_,:,r_d,),{,{,},},},<EOF>''',101))

    def test_2226(self):
        self.assertTrue(TestLexer.test('''Class dTo:s{Destructor (){Break ;}Destructor (){}Destructor (){} }Class _D{Val C:Array [Array [String ,59],0b1010000];}''','''Class,dTo,:,s,{,Destructor,(,),{,Break,;,},Destructor,(,),{,},Destructor,(,),{,},},Class,_D,{,Val,C,:,Array,[,Array,[,String,,,59,],,,0b1010000,],;,},<EOF>''',101))

    def test_2227(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _:C_0_8_i{}Class _{$Xx__(o:Float ;_:Boolean ;O,GT:Int ;w_4_:Boolean ){}Destructor (){}Var $___,p_,l,J:Array [Array [String ,0131],0X43];}Class _:_{}''','''Class,_,{,},Class,_,:,C_0_8_i,{,},Class,_,{,$Xx__,(,o,:,Float,;,_,:,Boolean,;,O,,,GT,:,Int,;,w_4_,:,Boolean,),{,},Destructor,(,),{,},Var,$___,,,p_,,,l,,,J,:,Array,[,Array,[,String,,,0131,],,,0X43,],;,},Class,_,:,_,{,},<EOF>''',101))

    def test_2228(self):
        self.assertTrue(TestLexer.test('''Class L5_{Constructor (){} }Class _{}Class qMGH_j5S_m:_05O_{}Class aBa:_ED{Var _5:String ;$Co(){}Var $M:Float ;}''','''Class,L5_,{,Constructor,(,),{,},},Class,_,{,},Class,qMGH_j5S_m,:,_05O_,{,},Class,aBa,:,_ED,{,Var,_5,:,String,;,$Co,(,),{,},Var,$M,:,Float,;,},<EOF>''',101))

    def test_2229(self):
        self.assertTrue(TestLexer.test('''Class d9:_{Constructor (){} }Class dq:__{$6(_7,P,K,_e,_:Boolean ;D__,_:Boolean ){h_::$_._();Continue ;}E(_:Boolean ;o:String ;mu_:Array [Array [Array [Int ,037],9],0b1];_:String ){}Destructor (){} }Class _V:_{}''','''Class,d9,:,_,{,Constructor,(,),{,},},Class,dq,:,__,{,$6,(,_7,,,P,,,K,,,_e,,,_,:,Boolean,;,D__,,,_,:,Boolean,),{,h_,::,$_,.,_,(,),;,Continue,;,},E,(,_,:,Boolean,;,o,:,String,;,mu_,:,Array,[,Array,[,Array,[,Int,,,037,],,,9,],,,0b1,],;,_,:,String,),{,},Destructor,(,),{,},},Class,_V,:,_,{,},<EOF>''',101))

    def test_2230(self):
        self.assertTrue(TestLexer.test('''Class _6_bEM8:k7{}Class __2_2_7p{}Class _3:f4{$4(_,_:Array [Array [Array [Int ,5],040],0x11]){} }Class v{Constructor (Zw,_4m:Array [Array [Boolean ,01_76],0121]){}_5e(_:Array [Float ,0b100110]){Break ;} }''','''Class,_6_bEM8,:,k7,{,},Class,__2_2_7p,{,},Class,_3,:,f4,{,$4,(,_,,,_,:,Array,[,Array,[,Array,[,Int,,,5,],,,040,],,,0x11,],),{,},},Class,v,{,Constructor,(,Zw,,,_4m,:,Array,[,Array,[,Boolean,,,0176,],,,0121,],),{,},_5e,(,_,:,Array,[,Float,,,0b100110,],),{,Break,;,},},<EOF>''',101))

    def test_2231(self):
        self.assertTrue(TestLexer.test('''Class X{Val $_O,_n_:Array [Array [Int ,42],0b1010110];Var _:N6kX__;Val $8,$14:Array [Int ,0B1];$807(_:Array [String ,0x885_5_0C]){Continue ;}Destructor (){ {} }}''','''Class,X,{,Val,$_O,,,_n_,:,Array,[,Array,[,Int,,,42,],,,0b1010110,],;,Var,_,:,N6kX__,;,Val,$8,,,$14,:,Array,[,Int,,,0B1,],;,$807,(,_,:,Array,[,String,,,0x88550C,],),{,Continue,;,},Destructor,(,),{,{,},},},<EOF>''',101))

    def test_2232(self):
        self.assertTrue(TestLexer.test('''Class N{B(_x:Array [Array [String ,0b11000],3];hY,cF:_;_9,JC64_K:c;X,_n:T_){}Constructor (){} }Class y__{Var w:H;}''','''Class,N,{,B,(,_x,:,Array,[,Array,[,String,,,0b11000,],,,3,],;,hY,,,cF,:,_,;,_9,,,JC64_K,:,c,;,X,,,_n,:,T_,),{,},Constructor,(,),{,},},Class,y__,{,Var,w,:,H,;,},<EOF>''',101))

    def test_2233(self):
        self.assertTrue(TestLexer.test('''Class X2:I{Var $_5:_8;Constructor (){}Constructor (_:__){Continue ;} }Class _{Constructor (DNa,QJ_6,_:geh){} }''','''Class,X2,:,I,{,Var,$_5,:,_8,;,Constructor,(,),{,},Constructor,(,_,:,__,),{,Continue,;,},},Class,_,{,Constructor,(,DNa,,,QJ_6,,,_,:,geh,),{,},},<EOF>''',101))

    def test_2234(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (Z_:String ;_T89:e8;_,p:_){} }Class _:_zb_{}Class _b_e:B_{G(u_j18a_:Array [Array [Array [Array [Boolean ,0B1],02_1_2_4],026],19]){} }''','''Class,_,{,Constructor,(,Z_,:,String,;,_T89,:,e8,;,_,,,p,:,_,),{,},},Class,_,:,_zb_,{,},Class,_b_e,:,B_,{,G,(,u_j18a_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,02124,],,,026,],,,19,],),{,},},<EOF>''',101))

    def test_2235(self):
        self.assertTrue(TestLexer.test('''Class _3{Var f,$M__bOd,_:Array [Array [Array [Array [Array [Array [Array [Array [Float ,6],0x52],0x52],9_9],45],0b1],0B1001001],0b110110];}''','''Class,_3,{,Var,f,,,$M__bOd,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,6,],,,0x52,],,,0x52,],,,99,],,,45,],,,0b1,],,,0B1001001,],,,0b110110,],;,},<EOF>''',101))

    def test_2236(self):
        self.assertTrue(TestLexer.test('''Class _56{$_hi(_,J:Float ;_,_6:Float ;N,e5,_8:Boolean ){Break ;Return ;}Var fm:Array [Array [Array [Array [Array [Array [Array [Array [String ,0133],0133],0XF_24],07],8_6],0b1],0x50],0B1001111];Var _,$_:Array [Array [Boolean ,90],0b1];}''','''Class,_56,{,$_hi,(,_,,,J,:,Float,;,_,,,_6,:,Float,;,N,,,e5,,,_8,:,Boolean,),{,Break,;,Return,;,},Var,fm,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0133,],,,0133,],,,0XF24,],,,07,],,,86,],,,0b1,],,,0x50,],,,0B1001111,],;,Var,_,,,$_,:,Array,[,Array,[,Boolean,,,90,],,,0b1,],;,},<EOF>''',101))

    def test_2237(self):
        self.assertTrue(TestLexer.test('''Class _{}Class __{}Class _{Val $1:Int ;$o__pN__FC__7h(X,_:_){}Var ___,$__FC_,$70i:bP4_;Val i_,$5,$_8,T_:Array [Array [Array [Int ,0B1100001],06_6],0x12];}''','''Class,_,{,},Class,__,{,},Class,_,{,Val,$1,:,Int,;,$o__pN__FC__7h,(,X,,,_,:,_,),{,},Var,___,,,$__FC_,,,$70i,:,bP4_,;,Val,i_,,,$5,,,$_8,,,T_,:,Array,[,Array,[,Array,[,Int,,,0B1100001,],,,066,],,,0x12,],;,},<EOF>''',101))

    def test_2238(self):
        self.assertTrue(TestLexer.test('''Class f_:u{}Class T{Var $7N6:Array [Boolean ,96];Constructor (p:Array [Float ,0X2C];__F___,_:Array [Int ,2_6];O8:Int ){Continue ;Break ;Var I_f:String ;} }Class _0oY:R_R{}''','''Class,f_,:,u,{,},Class,T,{,Var,$7N6,:,Array,[,Boolean,,,96,],;,Constructor,(,p,:,Array,[,Float,,,0X2C,],;,__F___,,,_,:,Array,[,Int,,,26,],;,O8,:,Int,),{,Continue,;,Break,;,Var,I_f,:,String,;,},},Class,_0oY,:,R_R,{,},<EOF>''',101))

    def test_2239(self):
        self.assertTrue(TestLexer.test('''Class D:_3{}Class M_{}Class jC:__{Val $_2,_,$V__L:Array [Boolean ,8_4];Var $7:o;Destructor (){Continue ;}$_v(k2:String ;a,P:Boolean ){} }''','''Class,D,:,_3,{,},Class,M_,{,},Class,jC,:,__,{,Val,$_2,,,_,,,$V__L,:,Array,[,Boolean,,,84,],;,Var,$7,:,o,;,Destructor,(,),{,Continue,;,},$_v,(,k2,:,String,;,a,,,P,:,Boolean,),{,},},<EOF>''',101))

    def test_2240(self):
        self.assertTrue(TestLexer.test('''Class A_TEF{Val W,$_:Array [Int ,0X7_7];Destructor (){}Var _X_C,_4___,_:Array [Array [Array [Array [Array [Array [Array [Int ,42],07],42],0X9_D],0X3],0B1],010];Destructor (){} }Class h{}''','''Class,A_TEF,{,Val,W,,,$_,:,Array,[,Int,,,0X77,],;,Destructor,(,),{,},Var,_X_C,,,_4___,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,42,],,,07,],,,42,],,,0X9D,],,,0X3,],,,0B1,],,,010,],;,Destructor,(,),{,},},Class,h,{,},<EOF>''',101))

    def test_2241(self):
        self.assertTrue(TestLexer.test('''Class f:_{Constructor (l2,_3,__c,b7,_2,_:Array [Array [Array [String ,86],0x85],03];_:Int ){}d(L,_,C9e:Array [Int ,0XAE_8];_,r:_9Q_Vi8_n5;_,v_:Int ;f,_2_,d,_:__n){} }Class _:_{Destructor (){} }''','''Class,f,:,_,{,Constructor,(,l2,,,_3,,,__c,,,b7,,,_2,,,_,:,Array,[,Array,[,Array,[,String,,,86,],,,0x85,],,,03,],;,_,:,Int,),{,},d,(,L,,,_,,,C9e,:,Array,[,Int,,,0XAE8,],;,_,,,r,:,_9Q_Vi8_n5,;,_,,,v_,:,Int,;,f,,,_2_,,,d,,,_,:,__n,),{,},},Class,_,:,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2242(self):
        self.assertTrue(TestLexer.test('''Class o_956___{Val $35,$4v_,__,$h,__:nxA;}Class _{}Class _{Constructor (){} }Class w:D4C940{}Class _a{$_(dkIx:Boolean ){} }''','''Class,o_956___,{,Val,$35,,,$4v_,,,__,,,$h,,,__,:,nxA,;,},Class,_,{,},Class,_,{,Constructor,(,),{,},},Class,w,:,D4C940,{,},Class,_a,{,$_,(,dkIx,:,Boolean,),{,},},<EOF>''',101))

    def test_2243(self):
        self.assertTrue(TestLexer.test('''Class _{}Class f{Constructor (S_U47:Array [Float ,01];_:_3;e_Hd,_,_8_:String ;Ys,_:YR;P5F_F_:Array [Array [Float ,0B1],062]){} }''','''Class,_,{,},Class,f,{,Constructor,(,S_U47,:,Array,[,Float,,,01,],;,_,:,_3,;,e_Hd,,,_,,,_8_,:,String,;,Ys,,,_,:,YR,;,P5F_F_,:,Array,[,Array,[,Float,,,0B1,],,,062,],),{,},},<EOF>''',101))

    def test_2244(self):
        self.assertTrue(TestLexer.test('''Class D{Constructor (b3Q:Array [Array [Int ,03],0X2F];_,W:Boolean ;N5,A_,_,_,__J0b:String ;sd3__,_Q,__SB,_J:Int ;_L_M_72,___,__,_m_5,_g:String ){} }Class D:T9_x{}''','''Class,D,{,Constructor,(,b3Q,:,Array,[,Array,[,Int,,,03,],,,0X2F,],;,_,,,W,:,Boolean,;,N5,,,A_,,,_,,,_,,,__J0b,:,String,;,sd3__,,,_Q,,,__SB,,,_J,:,Int,;,_L_M_72,,,___,,,__,,,_m_5,,,_g,:,String,),{,},},Class,D,:,T9_x,{,},<EOF>''',101))

    def test_2245(self):
        self.assertTrue(TestLexer.test('''Class _1:H{Constructor (){}Val _O:Array [Array [Int ,0b101001],90];Constructor (_,rhEr1,PX01,w,_:Array [Int ,0X51]){Return ;Return ;}LW_(_:Array [String ,0133];_90_n:Array [Array [Array [Boolean ,90],0X51],0x8]){ {} }}''','''Class,_1,:,H,{,Constructor,(,),{,},Val,_O,:,Array,[,Array,[,Int,,,0b101001,],,,90,],;,Constructor,(,_,,,rhEr1,,,PX01,,,w,,,_,:,Array,[,Int,,,0X51,],),{,Return,;,Return,;,},LW_,(,_,:,Array,[,String,,,0133,],;,_90_n,:,Array,[,Array,[,Array,[,Boolean,,,90,],,,0X51,],,,0x8,],),{,{,},},},<EOF>''',101))

    def test_2246(self):
        self.assertTrue(TestLexer.test('''Class u_d:__{Constructor (_:Array [String ,061_4]){d::$G6();Continue ;}$w(_,_,G:_7){Continue ;__2k::$_();} }''','''Class,u_d,:,__,{,Constructor,(,_,:,Array,[,String,,,0614,],),{,d,::,$G6,(,),;,Continue,;,},$w,(,_,,,_,,,G,:,_7,),{,Continue,;,__2k,::,$_,(,),;,},},<EOF>''',101))

    def test_2247(self):
        self.assertTrue(TestLexer.test('''Class z{}Class p{Var $_,s_:Array [Float ,67];}Class F{Val $jWT,$3,__:Array [Boolean ,0x60];Val $b__i:_;}Class z:_{}''','''Class,z,{,},Class,p,{,Var,$_,,,s_,:,Array,[,Float,,,67,],;,},Class,F,{,Val,$jWT,,,$3,,,__,:,Array,[,Boolean,,,0x60,],;,Val,$b__i,:,_,;,},Class,z,:,_,{,},<EOF>''',101))

    def test_2248(self):
        self.assertTrue(TestLexer.test('''Class ae1{Val $9XO,$9:Int ;}Class s:_o{}Class __H:G{}Class bj{Constructor (W,___dv:Array [Boolean ,0X3]){} }Class LH{}Class _36_:_{$1r(){}Var $4:Float ;}Class _z_6:_{}Class _VO{}Class _:__{}''','''Class,ae1,{,Val,$9XO,,,$9,:,Int,;,},Class,s,:,_o,{,},Class,__H,:,G,{,},Class,bj,{,Constructor,(,W,,,___dv,:,Array,[,Boolean,,,0X3,],),{,},},Class,LH,{,},Class,_36_,:,_,{,$1r,(,),{,},Var,$4,:,Float,;,},Class,_z_6,:,_,{,},Class,_VO,{,},Class,_,:,__,{,},<EOF>''',101))

    def test_2249(self):
        self.assertTrue(TestLexer.test('''Class S{Var $8d__,_2:Array [Array [Float ,0B11010],36];}Class _{Constructor (k,p,h_:Array [Float ,03];n9,JX:Array [Array [Int ,0b1],0101]){}Val $p:Array [String ,0xF_6];Destructor (){Continue ;} }''','''Class,S,{,Var,$8d__,,,_2,:,Array,[,Array,[,Float,,,0B11010,],,,36,],;,},Class,_,{,Constructor,(,k,,,p,,,h_,:,Array,[,Float,,,03,],;,n9,,,JX,:,Array,[,Array,[,Int,,,0b1,],,,0101,],),{,},Val,$p,:,Array,[,String,,,0xF6,],;,Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_2250(self):
        self.assertTrue(TestLexer.test('''Class J:C{}Class __{__(I,w_,_9__M9l:Array [Array [Int ,0b1],79]){}Val J9,$_8_a_,$M0PL:_;}Class s:_{}Class _6_5{}''','''Class,J,:,C,{,},Class,__,{,__,(,I,,,w_,,,_9__M9l,:,Array,[,Array,[,Int,,,0b1,],,,79,],),{,},Val,J9,,,$_8_a_,,,$M0PL,:,_,;,},Class,s,:,_,{,},Class,_6_5,{,},<EOF>''',101))

    def test_2251(self):
        self.assertTrue(TestLexer.test('''Class _5:Y{Var m:Array [Array [Float ,0X51],0b11010];}Class _{Var _:Boolean ;_7(S:Array [Array [Array [Array [String ,0X51],0X4C],0B1001011],07];__,_:_){} }Class xL{}''','''Class,_5,:,Y,{,Var,m,:,Array,[,Array,[,Float,,,0X51,],,,0b11010,],;,},Class,_,{,Var,_,:,Boolean,;,_7,(,S,:,Array,[,Array,[,Array,[,Array,[,String,,,0X51,],,,0X4C,],,,0B1001011,],,,07,],;,__,,,_,:,_,),{,},},Class,xL,{,},<EOF>''',101))

    def test_2252(self):
        self.assertTrue(TestLexer.test('''Class _3{Var _23,__:Int ;Destructor (){} }Class _O__:__{$7(_:String ;_:Float ;_,Z,r:Float ;__3_:_8_8){Return ;}Destructor (){} }''','''Class,_3,{,Var,_23,,,__,:,Int,;,Destructor,(,),{,},},Class,_O__,:,__,{,$7,(,_,:,String,;,_,:,Float,;,_,,,Z,,,r,:,Float,;,__3_,:,_8_8,),{,Return,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_2253(self):
        self.assertTrue(TestLexer.test('''Class or{$53(Y,_,_,_:_N;__:h_N){}Constructor (){ {} }Val $V_I:X;Var CZ_8:Array [Array [Array [Array [Array [Boolean ,0xA4],0b110111],0b110111],0b110111],04];}Class _{}''','''Class,or,{,$53,(,Y,,,_,,,_,,,_,:,_N,;,__,:,h_N,),{,},Constructor,(,),{,{,},},Val,$V_I,:,X,;,Var,CZ_8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xA4,],,,0b110111,],,,0b110111,],,,0b110111,],,,04,],;,},Class,_,{,},<EOF>''',101))

    def test_2254(self):
        self.assertTrue(TestLexer.test('''Class __{Destructor (){} }Class t:_{Constructor (_3_8:Array [Array [Array [Array [Array [String ,03],0144],0144],07_25],0b101010]){} }Class J5__HU_X9:_{}Class _:a{}Class _{}''','''Class,__,{,Destructor,(,),{,},},Class,t,:,_,{,Constructor,(,_3_8,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,03,],,,0144,],,,0144,],,,0725,],,,0b101010,],),{,},},Class,J5__HU_X9,:,_,{,},Class,_,:,a,{,},Class,_,{,},<EOF>''',101))

    def test_2255(self):
        self.assertTrue(TestLexer.test('''Class __{}Class c{Constructor (){}Var _,_9x,$_6,R:Array [Array [Array [Array [Int ,0xB_00_1C_A_D2_C23_4_7_9_C],36],36],0x3_AA];Val $6_g_,$2:W;}''','''Class,__,{,},Class,c,{,Constructor,(,),{,},Var,_,,,_9x,,,$_6,,,R,:,Array,[,Array,[,Array,[,Array,[,Int,,,0xB001CAD2C23479C,],,,36,],,,36,],,,0x3AA,],;,Val,$6_g_,,,$2,:,W,;,},<EOF>''',101))

    def test_2256(self):
        self.assertTrue(TestLexer.test('''Class T9n6{Destructor (){Continue ;} }Class Fb:_{P(_,hGc:Boolean ;K9a:_E;__8G,_64:Array [Array [Boolean ,76],76]){Return ;}Var $_,$6B,_E,$_4k_,_:Array [Float ,0B1110];Var $V,$_:String ;}''','''Class,T9n6,{,Destructor,(,),{,Continue,;,},},Class,Fb,:,_,{,P,(,_,,,hGc,:,Boolean,;,K9a,:,_E,;,__8G,,,_64,:,Array,[,Array,[,Boolean,,,76,],,,76,],),{,Return,;,},Var,$_,,,$6B,,,_E,,,$_4k_,,,_,:,Array,[,Float,,,0B1110,],;,Var,$V,,,$_,:,String,;,},<EOF>''',101))

    def test_2257(self):
        self.assertTrue(TestLexer.test('''Class _:i_{}Class _:__78{}Class Y__9{}Class n___0j0{}Class a5Q_u_:k{}Class _{Constructor (E__,v,_,k__H_,c,_,v:Array [Array [Array [Array [Array [Array [Array [String ,0B1001000],0x38],16],0x5_0],0b1_1_0],06_2],11_4_83]){} }''','''Class,_,:,i_,{,},Class,_,:,__78,{,},Class,Y__9,{,},Class,n___0j0,{,},Class,a5Q_u_,:,k,{,},Class,_,{,Constructor,(,E__,,,v,,,_,,,k__H_,,,c,,,_,,,v,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1001000,],,,0x38,],,,16,],,,0x50,],,,0b110,],,,062,],,,11483,],),{,},},<EOF>''',101))

    def test_2258(self):
        self.assertTrue(TestLexer.test('''Class _:ph{w9x(_,__p__:Array [Array [Array [Array [String ,0137],0B1],0137],0X15];U0:R){} }Class RY:_{Constructor (){} }Class y_:J{Constructor (){}Constructor (){} }Class _{}''','''Class,_,:,ph,{,w9x,(,_,,,__p__,:,Array,[,Array,[,Array,[,Array,[,String,,,0137,],,,0B1,],,,0137,],,,0X15,],;,U0,:,R,),{,},},Class,RY,:,_,{,Constructor,(,),{,},},Class,y_,:,J,{,Constructor,(,),{,},Constructor,(,),{,},},Class,_,{,},<EOF>''',101))

    def test_2259(self):
        self.assertTrue(TestLexer.test('''Class _1S:_{Var _,$_,$1,_,kr_Sv:Array [Array [Array [Array [Array [Int ,85],0x6_9_12_F],0b101111],85],0x18];Val _gS,$_49yYU4:j4;_5(){}Constructor (){}_(){}Val $4:Array [String ,0b1];Destructor (){} }''','''Class,_1S,:,_,{,Var,_,,,$_,,,$1,,,_,,,kr_Sv,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,85,],,,0x6912F,],,,0b101111,],,,85,],,,0x18,],;,Val,_gS,,,$_49yYU4,:,j4,;,_5,(,),{,},Constructor,(,),{,},_,(,),{,},Val,$4,:,Array,[,String,,,0b1,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_2260(self):
        self.assertTrue(TestLexer.test('''Class G7QR_:_{Constructor (o,__0:Array [Boolean ,0b111011];sz:X;u_9,__:Array [Array [Array [Boolean ,01_30],0B11000],0x9];_,__,c:j37){} }''','''Class,G7QR_,:,_,{,Constructor,(,o,,,__0,:,Array,[,Boolean,,,0b111011,],;,sz,:,X,;,u_9,,,__,:,Array,[,Array,[,Array,[,Boolean,,,0130,],,,0B11000,],,,0x9,],;,_,,,__,,,c,:,j37,),{,},},<EOF>''',101))

    def test_2261(self):
        self.assertTrue(TestLexer.test('''Class c3{Constructor (O_:__;M:Array [Float ,9_6];_:Boolean ;qE_:a;xO:Array [Array [Int ,0125],0B10];__1g_,K:__v_){} }Class __g{}Class l:_2R531_R{}''','''Class,c3,{,Constructor,(,O_,:,__,;,M,:,Array,[,Float,,,96,],;,_,:,Boolean,;,qE_,:,a,;,xO,:,Array,[,Array,[,Int,,,0125,],,,0B10,],;,__1g_,,,K,:,__v_,),{,},},Class,__g,{,},Class,l,:,_2R531_R,{,},<EOF>''',101))

    def test_2262(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (w_,l0,u_:_y_){}_04(_X_,_:Float ;___4:Array [Float ,0X7_E]){}Constructor (_:__){}Var $fI_k3,$_I,_:_B;}''','''Class,_,{,Constructor,(,w_,,,l0,,,u_,:,_y_,),{,},_04,(,_X_,,,_,:,Float,;,___4,:,Array,[,Float,,,0X7E,],),{,},Constructor,(,_,:,__,),{,},Var,$fI_k3,,,$_I,,,_,:,_B,;,},<EOF>''',101))

    def test_2263(self):
        self.assertTrue(TestLexer.test('''Class __5{}Class _:_V0{}Class _:w5{_(Fl3:f_){} }Class T__:__{}Class _:_7E{Var _9,$_,$r9,$C_,$n:Array [String ,0X1B];Constructor (){} }''','''Class,__5,{,},Class,_,:,_V0,{,},Class,_,:,w5,{,_,(,Fl3,:,f_,),{,},},Class,T__,:,__,{,},Class,_,:,_7E,{,Var,_9,,,$_,,,$r9,,,$C_,,,$n,:,Array,[,String,,,0X1B,],;,Constructor,(,),{,},},<EOF>''',101))

    def test_2264(self):
        self.assertTrue(TestLexer.test('''Class __D:__b6i{Var y_,$m_,$_,_:String ;Val $BV,_I,Hq,n__:Array [Array [Array [Array [Int ,045],0B1],0x2_F34],0x12];}''','''Class,__D,:,__b6i,{,Var,y_,,,$m_,,,$_,,,_,:,String,;,Val,$BV,,,_I,,,Hq,,,n__,:,Array,[,Array,[,Array,[,Array,[,Int,,,045,],,,0B1,],,,0x2F34,],,,0x12,],;,},<EOF>''',101))

    def test_2265(self):
        self.assertTrue(TestLexer.test('''Class H:_{}Class __{}Class _{Val _:Float ;}Class _{Constructor (U___6,_,s_b7,_:Int ;__:Float ;G8,_:Boolean ;M:_c74_){} }''','''Class,H,:,_,{,},Class,__,{,},Class,_,{,Val,_,:,Float,;,},Class,_,{,Constructor,(,U___6,,,_,,,s_b7,,,_,:,Int,;,__,:,Float,;,G8,,,_,:,Boolean,;,M,:,_c74_,),{,},},<EOF>''',101))

    def test_2266(self):
        self.assertTrue(TestLexer.test('''Class _S5{Constructor (_:Boolean ;SEG:Array [String ,0B1010011];_:RW8;V__,__,V:Int ;Z:String ;v6,_,_:Array [Array [Int ,68],0xAC];P27:Array [Array [Array [Int ,0134],0b1100],0X56];z,_:P){}$F_(){}Val _4:E_;}''','''Class,_S5,{,Constructor,(,_,:,Boolean,;,SEG,:,Array,[,String,,,0B1010011,],;,_,:,RW8,;,V__,,,__,,,V,:,Int,;,Z,:,String,;,v6,,,_,,,_,:,Array,[,Array,[,Int,,,68,],,,0xAC,],;,P27,:,Array,[,Array,[,Array,[,Int,,,0134,],,,0b1100,],,,0X56,],;,z,,,_,:,P,),{,},$F_,(,),{,},Val,_4,:,E_,;,},<EOF>''',101))

    def test_2267(self):
        self.assertTrue(TestLexer.test('''Class _Ls:B_6{Constructor (_1f:Array [Array [Array [String ,052],0x56],0b101111]){}Constructor (){}Destructor (){}Val __8:Array [Array [Boolean ,0X27],4];}''','''Class,_Ls,:,B_6,{,Constructor,(,_1f,:,Array,[,Array,[,Array,[,String,,,052,],,,0x56,],,,0b101111,],),{,},Constructor,(,),{,},Destructor,(,),{,},Val,__8,:,Array,[,Array,[,Boolean,,,0X27,],,,4,],;,},<EOF>''',101))

    def test_2268(self):
        self.assertTrue(TestLexer.test('''Class Y1S2{}Class _K:az_{QdN(By __,__:Boolean ;lP,r:Float ;_,_:Array [Boolean ,41]){} }Class sp{}Class H{Destructor (){} }''','''Class,Y1S2,{,},Class,_K,:,az_,{,QdN,(,By,__,,,__,:,Boolean,;,lP,,,r,:,Float,;,_,,,_,:,Array,[,Boolean,,,41,],),{,},},Class,sp,{,},Class,H,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2269(self):
        self.assertTrue(TestLexer.test('''Class __{Destructor (){Continue ;}$_583S_(R503,_H_:String ;__:Array [Array [Float ,0B111100],85]){}Destructor (){Return ;Continue ;}Destructor (){} }''','''Class,__,{,Destructor,(,),{,Continue,;,},$_583S_,(,R503,,,_H_,:,String,;,__,:,Array,[,Array,[,Float,,,0B111100,],,,85,],),{,},Destructor,(,),{,Return,;,Continue,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_2270(self):
        self.assertTrue(TestLexer.test('''Class y{}Class __YX:_{}Class r_{Constructor (u:Int ;vt:i){}Val $__x:Array [Array [Int ,0B11001],1];Val $__,iy:Int ;K(){}Val $U_,$K,__Sk,Q4,$_:Array [Array [Array [Int ,07_0175_70],90],0112];Constructor (){}Destructor (){Continue ;}Constructor (__26_:String ){} }Class __{}Class n:_g{Var _:Array [Array [Array [Array [Boolean ,0B1],0x46],0B1],7_38];}''','''Class,y,{,},Class,__YX,:,_,{,},Class,r_,{,Constructor,(,u,:,Int,;,vt,:,i,),{,},Val,$__x,:,Array,[,Array,[,Int,,,0B11001,],,,1,],;,Val,$__,,,iy,:,Int,;,K,(,),{,},Val,$U_,,,$K,,,__Sk,,,Q4,,,$_,:,Array,[,Array,[,Array,[,Int,,,07017570,],,,90,],,,0112,],;,Constructor,(,),{,},Destructor,(,),{,Continue,;,},Constructor,(,__26_,:,String,),{,},},Class,__,{,},Class,n,:,_g,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0x46,],,,0B1,],,,738,],;,},<EOF>''',101))

    def test_2271(self):
        self.assertTrue(TestLexer.test('''Class _:___{}Class __r{Var $q9_,$_M7,$_:Array [Array [Float ,5],0X52];Var $16_L,N:Array [Array [Float ,97],0b1011110];}Class _3{}''','''Class,_,:,___,{,},Class,__r,{,Var,$q9_,,,$_M7,,,$_,:,Array,[,Array,[,Float,,,5,],,,0X52,],;,Var,$16_L,,,N,:,Array,[,Array,[,Float,,,97,],,,0b1011110,],;,},Class,_3,{,},<EOF>''',101))

    def test_2272(self):
        self.assertTrue(TestLexer.test('''Class _72:g93{Val L:String ;Constructor (_3_:Array [Float ,061]){}$_(cN,__:Array [Array [Boolean ,0X6F],84];_7z,x:__h){} }''','''Class,_72,:,g93,{,Val,L,:,String,;,Constructor,(,_3_,:,Array,[,Float,,,061,],),{,},$_,(,cN,,,__,:,Array,[,Array,[,Boolean,,,0X6F,],,,84,],;,_7z,,,x,:,__h,),{,},},<EOF>''',101))

    def test_2273(self):
        self.assertTrue(TestLexer.test('''Class u_7{}Class __8:_0{Constructor (_,g,_:Array [Array [Array [Array [String ,0b1_10],0x8_3_3],0b10011],43];I__:Array [Array [Array [Array [Array [Int ,0X6],0XE],0x3],43],0B11]){Break ;} }''','''Class,u_7,{,},Class,__8,:,_0,{,Constructor,(,_,,,g,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b110,],,,0x833,],,,0b10011,],,,43,],;,I__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X6,],,,0XE,],,,0x3,],,,43,],,,0B11,],),{,Break,;,},},<EOF>''',101))

    def test_2274(self):
        self.assertTrue(TestLexer.test('''Class o:_{Val zm8,_,_:Array [Array [Array [Array [Array [Array [Boolean ,0X4D],0b1100000],024],0b1100000],024],0XE];Val $0,J,$6:Array [Array [Array [Int ,0B110001],0b1],39];}Class X2:_S{r_(__:Array [Boolean ,0X4D]){} }Class _3:JP9{}Class _:_{Val $F,S7f7:Array [Float ,0X20];}''','''Class,o,:,_,{,Val,zm8,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X4D,],,,0b1100000,],,,024,],,,0b1100000,],,,024,],,,0XE,],;,Val,$0,,,J,,,$6,:,Array,[,Array,[,Array,[,Int,,,0B110001,],,,0b1,],,,39,],;,},Class,X2,:,_S,{,r_,(,__,:,Array,[,Boolean,,,0X4D,],),{,},},Class,_3,:,JP9,{,},Class,_,:,_,{,Val,$F,,,S7f7,:,Array,[,Float,,,0X20,],;,},<EOF>''',101))

    def test_2275(self):
        self.assertTrue(TestLexer.test('''Class j{Val _,$M1,B,t,$8_,_Q,p,_F2:Boolean ;}Class P:f_{Constructor (_,I,I,__:__68_;r:Array [Array [Array [Array [Array [String ,97],3_0],0XE],05],0B1]){} }''','''Class,j,{,Val,_,,,$M1,,,B,,,t,,,$8_,,,_Q,,,p,,,_F2,:,Boolean,;,},Class,P,:,f_,{,Constructor,(,_,,,I,,,I,,,__,:,__68_,;,r,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,97,],,,30,],,,0XE,],,,05,],,,0B1,],),{,},},<EOF>''',101))

    def test_2276(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{}Class v{}Class _{k(_39G,j:Array [Array [Float ,0X4A],4103_5];m,_:Boolean ;ExdA_,_S,P,NJB:Boolean ;_45,b_,B_k287:Float ;zp:_3d0;_:Boolean ;a,_3,_x,j_,e30B,P_TN,_2:k_F0F;_,_:Float ;__7__:Boolean ;R5,_Y49i0:Vd;_JW,ht8,_,h_1,s:r){} }Class _{}''','''Class,_,{,},Class,_,{,},Class,v,{,},Class,_,{,k,(,_39G,,,j,:,Array,[,Array,[,Float,,,0X4A,],,,41035,],;,m,,,_,:,Boolean,;,ExdA_,,,_S,,,P,,,NJB,:,Boolean,;,_45,,,b_,,,B_k287,:,Float,;,zp,:,_3d0,;,_,:,Boolean,;,a,,,_3,,,_x,,,j_,,,e30B,,,P_TN,,,_2,:,k_F0F,;,_,,,_,:,Float,;,__7__,:,Boolean,;,R5,,,_Y49i0,:,Vd,;,_JW,,,ht8,,,_,,,h_1,,,s,:,r,),{,},},Class,_,{,},<EOF>''',101))

    def test_2277(self):
        self.assertTrue(TestLexer.test('''Class a{}Class U:Fzk_{Val $_OP,_:Array [Array [Int ,0X2],61];}Class _{Destructor (){} }Class fR:_{Val _w,$_,_:String ;}''','''Class,a,{,},Class,U,:,Fzk_,{,Val,$_OP,,,_,:,Array,[,Array,[,Int,,,0X2,],,,61,],;,},Class,_,{,Destructor,(,),{,},},Class,fR,:,_,{,Val,_w,,,$_,,,_,:,String,;,},<EOF>''',101))

    def test_2278(self):
        self.assertTrue(TestLexer.test('''Class i:C_{Val $Y_,$333__5_c:String ;}Class l:n4dg{Constructor (C_,_3a:String ){}Constructor (_6,v:Array [Int ,0b1];_3,_18:Float ;_:C94;_,y:_;_,_43:Array [Array [Int ,4],0X6];K__:Array [Float ,0B10];c:Array [Array [Boolean ,0B1],022]){New L_j().s().q_().z();Break ;} }Class _jh_:_{}''','''Class,i,:,C_,{,Val,$Y_,,,$333__5_c,:,String,;,},Class,l,:,n4dg,{,Constructor,(,C_,,,_3a,:,String,),{,},Constructor,(,_6,,,v,:,Array,[,Int,,,0b1,],;,_3,,,_18,:,Float,;,_,:,C94,;,_,,,y,:,_,;,_,,,_43,:,Array,[,Array,[,Int,,,4,],,,0X6,],;,K__,:,Array,[,Float,,,0B10,],;,c,:,Array,[,Array,[,Boolean,,,0B1,],,,022,],),{,New,L_j,(,),.,s,(,),.,q_,(,),.,z,(,),;,Break,;,},},Class,_jh_,:,_,{,},<EOF>''',101))

    def test_2279(self):
        self.assertTrue(TestLexer.test('''Class _:L{}Class _:_9{}Class __7:__{}Class _2{_(_,T1:_;K7:KO){Continue ;} }Class b:_B0n{Val $8,$JA,$_g1:Array [Boolean ,4];}''','''Class,_,:,L,{,},Class,_,:,_9,{,},Class,__7,:,__,{,},Class,_2,{,_,(,_,,,T1,:,_,;,K7,:,KO,),{,Continue,;,},},Class,b,:,_B0n,{,Val,$8,,,$JA,,,$_g1,:,Array,[,Boolean,,,4,],;,},<EOF>''',101))

    def test_2280(self):
        self.assertTrue(TestLexer.test('''Class _:_n{Destructor (){}Val $2__9:Array [Array [Array [Array [Array [Boolean ,0112],58],0b1100011],7],3];}Class X:_0{Val fV,$__:Int ;Constructor (_i,t:_){}Val i:Boolean ;Destructor (){} }''','''Class,_,:,_n,{,Destructor,(,),{,},Val,$2__9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0112,],,,58,],,,0b1100011,],,,7,],,,3,],;,},Class,X,:,_0,{,Val,fV,,,$__,:,Int,;,Constructor,(,_i,,,t,:,_,),{,},Val,i,:,Boolean,;,Destructor,(,),{,},},<EOF>''',101))

    def test_2281(self):
        self.assertTrue(TestLexer.test('''Class d:_K{}Class _{Val _:Array [Boolean ,0X46];}Class Z:_{$9(GY,O:Int ){}Constructor (){}Var $2e,_:Boolean ;}Class _:_{}''','''Class,d,:,_K,{,},Class,_,{,Val,_,:,Array,[,Boolean,,,0X46,],;,},Class,Z,:,_,{,$9,(,GY,,,O,:,Int,),{,},Constructor,(,),{,},Var,$2e,,,_,:,Boolean,;,},Class,_,:,_,{,},<EOF>''',101))

    def test_2282(self):
        self.assertTrue(TestLexer.test('''Class g:q{$7_2_(m,_2,E,_:Array [Array [Array [Array [Float ,0XC],0X7],05],0x8];_,Gq_:String ;_,u_r,M:Int ;l__Jz:c_8){}Destructor (){Return ;}Var _:__;}Class _{}''','''Class,g,:,q,{,$7_2_,(,m,,,_2,,,E,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0XC,],,,0X7,],,,05,],,,0x8,],;,_,,,Gq_,:,String,;,_,,,u_r,,,M,:,Int,;,l__Jz,:,c_8,),{,},Destructor,(,),{,Return,;,},Var,_,:,__,;,},Class,_,{,},<EOF>''',101))

    def test_2283(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_7:String ;hu,_5m,z_gy,_S:String ;_,_,_,_,_,v_8,nNExy:Float ){Break ;Break ;} }Class g4_L{}''','''Class,_,{,Constructor,(,_7,:,String,;,hu,,,_5m,,,z_gy,,,_S,:,String,;,_,,,_,,,_,,,_,,,_,,,v_8,,,nNExy,:,Float,),{,Break,;,Break,;,},},Class,g4_L,{,},<EOF>''',101))

    def test_2284(self):
        self.assertTrue(TestLexer.test('''Class _{_(){}_(){}Val $_:Array [Array [Boolean ,02_4_2],0B10_1];}Class _{Var y_6,$9Lp1,_:Array [Array [String ,0xA],8_0];l_5(__:_K){} }''','''Class,_,{,_,(,),{,},_,(,),{,},Val,$_,:,Array,[,Array,[,Boolean,,,0242,],,,0B101,],;,},Class,_,{,Var,y_6,,,$9Lp1,,,_,:,Array,[,Array,[,String,,,0xA,],,,80,],;,l_5,(,__,:,_K,),{,},},<EOF>''',101))

    def test_2285(self):
        self.assertTrue(TestLexer.test('''Class _569{$_u(_:Array [Boolean ,0xF]){}$22O93_(){}Destructor (){Continue ;Return ;} }Class _A_ok__{}Class up:___{Constructor (_3Q:Float ;__:Array [Array [Array [String ,06],0B11],0103]){} }Class _:_{Constructor (){}Val $5:String ;}''','''Class,_569,{,$_u,(,_,:,Array,[,Boolean,,,0xF,],),{,},$22O93_,(,),{,},Destructor,(,),{,Continue,;,Return,;,},},Class,_A_ok__,{,},Class,up,:,___,{,Constructor,(,_3Q,:,Float,;,__,:,Array,[,Array,[,Array,[,String,,,06,],,,0B11,],,,0103,],),{,},},Class,_,:,_,{,Constructor,(,),{,},Val,$5,:,String,;,},<EOF>''',101))

    def test_2286(self):
        self.assertTrue(TestLexer.test('''Class okQ:_3{}Class r3{}Class _:k2{_(n_d2C:Int ){Continue ;Continue ;Var Lx:Array [Array [Array [Array [String ,21],052],0X1B],0X1B];} }''','''Class,okQ,:,_3,{,},Class,r3,{,},Class,_,:,k2,{,_,(,n_d2C,:,Int,),{,Continue,;,Continue,;,Var,Lx,:,Array,[,Array,[,Array,[,Array,[,String,,,21,],,,052,],,,0X1B,],,,0X1B,],;,},},<EOF>''',101))

    def test_2287(self):
        self.assertTrue(TestLexer.test('''Class HuV46{_(_,k6C,q34A_,G,__,a:Array [String ,0X37];a_,c_:Int ){} }Class Z:O{Constructor (I:_f;__:Int ){}Destructor (){} }''','''Class,HuV46,{,_,(,_,,,k6C,,,q34A_,,,G,,,__,,,a,:,Array,[,String,,,0X37,],;,a_,,,c_,:,Int,),{,},},Class,Z,:,O,{,Constructor,(,I,:,_f,;,__,:,Int,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_2288(self):
        self.assertTrue(TestLexer.test('''Class n_:__{}Class _W_:q{_d(_76_3:Array [Array [Array [Array [Array [Array [Array [Array [String ,75],0x9],0xA0],75],0XD],0B1_0],0B1000111],0B1000111];z,__:D__){} }''','''Class,n_,:,__,{,},Class,_W_,:,q,{,_d,(,_76_3,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,75,],,,0x9,],,,0xA0,],,,75,],,,0XD,],,,0B10,],,,0B1000111,],,,0B1000111,],;,z,,,__,:,D__,),{,},},<EOF>''',101))

    def test_2289(self):
        self.assertTrue(TestLexer.test('''Class E{Val s:_;Var $92:Boolean ;_(k:Array [Array [Array [Array [Float ,0x3D],0X43],1_9_0_9_9],9_1_3];x,_:Array [Array [Array [Float ,30],05_2_6],0X4C];__r,_,E,_,b,L:_){} }''','''Class,E,{,Val,s,:,_,;,Var,$92,:,Boolean,;,_,(,k,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x3D,],,,0X43,],,,19099,],,,913,],;,x,,,_,:,Array,[,Array,[,Array,[,Float,,,30,],,,0526,],,,0X4C,],;,__r,,,_,,,E,,,_,,,b,,,L,:,_,),{,},},<EOF>''',101))

    def test_2290(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){}Var _,_:Array [Array [String ,0X1],0B11011];Destructor (){}L(rI,ID:String ;_R,P:Float ;P:String ){} }''','''Class,_,{,Destructor,(,),{,},Var,_,,,_,:,Array,[,Array,[,String,,,0X1,],,,0B11011,],;,Destructor,(,),{,},L,(,rI,,,ID,:,String,;,_R,,,P,:,Float,;,P,:,String,),{,},},<EOF>''',101))

    def test_2291(self):
        self.assertTrue(TestLexer.test('''Class _2:w{Val $_,__,$_,SO,$_:Int ;}Class _c{}Class b:_h_{Val $5R:_5;Constructor (w,V8:J1x_;__,ISP,gaC,E:__2e_){} }''','''Class,_2,:,w,{,Val,$_,,,__,,,$_,,,SO,,,$_,:,Int,;,},Class,_c,{,},Class,b,:,_h_,{,Val,$5R,:,_5,;,Constructor,(,w,,,V8,:,J1x_,;,__,,,ISP,,,gaC,,,E,:,__2e_,),{,},},<EOF>''',101))

    def test_2292(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (I:Int ;h7,_eI_,O_:Array [Int ,06];_:Q;_5D:Boolean ;fP,_:M_;_,h:Array [Float ,06_2]){}$_P(){} }Class z2_z_{}''','''Class,_,{,Constructor,(,I,:,Int,;,h7,,,_eI_,,,O_,:,Array,[,Int,,,06,],;,_,:,Q,;,_5D,:,Boolean,;,fP,,,_,:,M_,;,_,,,h,:,Array,[,Float,,,062,],),{,},$_P,(,),{,},},Class,z2_z_,{,},<EOF>''',101))

    def test_2293(self):
        self.assertTrue(TestLexer.test('''Class _:K{$_(__:Array [Array [Array [Array [String ,060],0X30],81],7];__oF8,_7:Array [Array [String ,0B10],0B1011000];_9A_m,_:Array [Array [Array [Int ,81],0X6_80],0B1011000];LR:Boolean ;iS:Array [Array [Array [Float ,1_4_2],0b111011],0b1_11_1_0]){} }''','''Class,_,:,K,{,$_,(,__,:,Array,[,Array,[,Array,[,Array,[,String,,,060,],,,0X30,],,,81,],,,7,],;,__oF8,,,_7,:,Array,[,Array,[,String,,,0B10,],,,0B1011000,],;,_9A_m,,,_,:,Array,[,Array,[,Array,[,Int,,,81,],,,0X680,],,,0B1011000,],;,LR,:,Boolean,;,iS,:,Array,[,Array,[,Array,[,Float,,,142,],,,0b111011,],,,0b11110,],),{,},},<EOF>''',101))

    def test_2294(self):
        self.assertTrue(TestLexer.test('''Class _{Ta(_23,__:_;e:Array [Array [Array [Array [Int ,0x3],7],040],0b1010011];V:_){}Var $o:Array [Boolean ,0x48];}Class o4Ea:_{}Class _n_h_B_{Var F,$_V,$y_5:T;}Class _j_6:F{}''','''Class,_,{,Ta,(,_23,,,__,:,_,;,e,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x3,],,,7,],,,040,],,,0b1010011,],;,V,:,_,),{,},Var,$o,:,Array,[,Boolean,,,0x48,],;,},Class,o4Ea,:,_,{,},Class,_n_h_B_,{,Var,F,,,$_V,,,$y_5,:,T,;,},Class,_j_6,:,F,{,},<EOF>''',101))

    def test_2295(self):
        self.assertTrue(TestLexer.test('''Class _1qj6{}Class _:__l7_{Val __,cE_:Array [Array [Array [Array [Array [Float ,53_2],0B1_1],0B1011110],0141],0x5C];}Class _{C0(C:String ;O7:Array [Boolean ,0b1]){}$_(_5,s:Boolean ){}Destructor (){}Var zZ:String ;}''','''Class,_1qj6,{,},Class,_,:,__l7_,{,Val,__,,,cE_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,532,],,,0B11,],,,0B1011110,],,,0141,],,,0x5C,],;,},Class,_,{,C0,(,C,:,String,;,O7,:,Array,[,Boolean,,,0b1,],),{,},$_,(,_5,,,s,:,Boolean,),{,},Destructor,(,),{,},Var,zZ,:,String,;,},<EOF>''',101))

    def test_2296(self):
        self.assertTrue(TestLexer.test('''Class _:a{Var _48_V:Float ;$__(_w,i,__,v_,QZ7:Array [Array [Boolean ,0xF_E],13];__lGS:Array [Int ,668_63_8];_,_:Array [Array [Array [Boolean ,032_0],0134],13]){}_(s0_6N5,__R,q:Array [Float ,0x11]){} }''','''Class,_,:,a,{,Var,_48_V,:,Float,;,$__,(,_w,,,i,,,__,,,v_,,,QZ7,:,Array,[,Array,[,Boolean,,,0xFE,],,,13,],;,__lGS,:,Array,[,Int,,,668638,],;,_,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0320,],,,0134,],,,13,],),{,},_,(,s0_6N5,,,__R,,,q,:,Array,[,Float,,,0x11,],),{,},},<EOF>''',101))

    def test_2297(self):
        self.assertTrue(TestLexer.test('''Class h26:E{Destructor (){} }Class v__:b_{Var $z:Array [Array [Array [Array [Array [String ,0X1B],1],0X4],0x58],1];}Class _:X_t{}''','''Class,h26,:,E,{,Destructor,(,),{,},},Class,v__,:,b_,{,Var,$z,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X1B,],,,1,],,,0X4,],,,0x58,],,,1,],;,},Class,_,:,X_t,{,},<EOF>''',101))

    def test_2298(self):
        self.assertTrue(TestLexer.test('''Class i:_{Val _,$6:V;Val $_:M17;}Class Ez:W{_9(_:Array [Array [Array [Array [Int ,04_2],01_1],0X6],74];w3_q:_p;_,_fR5_l7__:Array [Float ,023]){}$G(){} }''','''Class,i,:,_,{,Val,_,,,$6,:,V,;,Val,$_,:,M17,;,},Class,Ez,:,W,{,_9,(,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,042,],,,011,],,,0X6,],,,74,],;,w3_q,:,_p,;,_,,,_fR5_l7__,:,Array,[,Float,,,023,],),{,},$G,(,),{,},},<EOF>''',101))

    def test_2299(self):
        self.assertTrue(TestLexer.test('''Class _r:G{}Class __a{Val k:Array [Array [Array [Array [Boolean ,036],036],0XC],0b1];Var $_:Int ;Constructor (){}Var $1:Boolean ;}Class s_:Y{}''','''Class,_r,:,G,{,},Class,__a,{,Val,k,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,036,],,,036,],,,0XC,],,,0b1,],;,Var,$_,:,Int,;,Constructor,(,),{,},Var,$1,:,Boolean,;,},Class,s_,:,Y,{,},<EOF>''',101))

    def test_2300(self):
        self.assertTrue(TestLexer.test('''Class cHY_{Constructor (){} }Class p:_0eK_4_4D__55{Constructor (_4:Array [Array [Boolean ,0B1001101],0X6]){}Var $_5,$1_q:_;Val $_N_:String ;}''','''Class,cHY_,{,Constructor,(,),{,},},Class,p,:,_0eK_4_4D__55,{,Constructor,(,_4,:,Array,[,Array,[,Boolean,,,0B1001101,],,,0X6,],),{,},Var,$_5,,,$1_q,:,_,;,Val,$_N_,:,String,;,},<EOF>''',101))

    def test_2301(self):
        self.assertTrue(TestLexer.test('''Class _GZ2O:Un{}Class _{Destructor (){}Val $4:Array [Array [Array [Boolean ,0X6],0x7],055];}Class __6{}Class H{Val $3V:_;}''','''Class,_GZ2O,:,Un,{,},Class,_,{,Destructor,(,),{,},Val,$4,:,Array,[,Array,[,Array,[,Boolean,,,0X6,],,,0x7,],,,055,],;,},Class,__6,{,},Class,H,{,Val,$3V,:,_,;,},<EOF>''',101))

    def test_2302(self):
        self.assertTrue(TestLexer.test('''Class _:_{Destructor (){} }Class ___8{Constructor (_:Float ){}Destructor (){} }Class x:R9{Destructor (){Var m,D_7,L5,K_:_44L;} }Class V{}''','''Class,_,:,_,{,Destructor,(,),{,},},Class,___8,{,Constructor,(,_,:,Float,),{,},Destructor,(,),{,},},Class,x,:,R9,{,Destructor,(,),{,Var,m,,,D_7,,,L5,,,K_,:,_44L,;,},},Class,V,{,},<EOF>''',101))

    def test_2303(self):
        self.assertTrue(TestLexer.test('''Class _:I{Val P,_:Array [Array [Array [Array [Array [Array [Boolean ,0b1000100],06],0B1],0B1],1_71],7];}Class o:_{}Class A_6z{Constructor (vP:Array [Boolean ,0B1_101]){Continue ;}Val E:l;Constructor (_w,l:Array [Int ,07];_Y:k1_8n_m;_,J:_;G,pt:S){Break ;} }''','''Class,_,:,I,{,Val,P,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1000100,],,,06,],,,0B1,],,,0B1,],,,171,],,,7,],;,},Class,o,:,_,{,},Class,A_6z,{,Constructor,(,vP,:,Array,[,Boolean,,,0B1101,],),{,Continue,;,},Val,E,:,l,;,Constructor,(,_w,,,l,:,Array,[,Int,,,07,],;,_Y,:,k1_8n_m,;,_,,,J,:,_,;,G,,,pt,:,S,),{,Break,;,},},<EOF>''',101))

    def test_2304(self):
        self.assertTrue(TestLexer.test('''Class __:TAM3{Val $5sW:_;__8(_,__6:__;_11e_:Array [Array [Array [Array [Float ,05],4],0100],0B1];h:yM37){Var J_,H_:Float ;} }''','''Class,__,:,TAM3,{,Val,$5sW,:,_,;,__8,(,_,,,__6,:,__,;,_11e_,:,Array,[,Array,[,Array,[,Array,[,Float,,,05,],,,4,],,,0100,],,,0B1,],;,h,:,yM37,),{,Var,J_,,,H_,:,Float,;,},},<EOF>''',101))

    def test_2305(self):
        self.assertTrue(TestLexer.test('''Class o:_W{}Class _:_{Var $s:Array [Array [Array [Int ,4_3],0106],0B100000];}Class _tI:R{Constructor (_5:Array [Array [Array [Array [Array [Float ,2_8],0X18],0X18],05],0B100000]){} }''','''Class,o,:,_W,{,},Class,_,:,_,{,Var,$s,:,Array,[,Array,[,Array,[,Int,,,43,],,,0106,],,,0B100000,],;,},Class,_tI,:,R,{,Constructor,(,_5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,28,],,,0X18,],,,0X18,],,,05,],,,0B100000,],),{,},},<EOF>''',101))

    def test_2306(self):
        self.assertTrue(TestLexer.test('''Class I_{}Class _i_2{Var _:Int ;Val _,_,$qu:Array [Array [Boolean ,06],0b1];Val _m__0,$_,r3:Array [Array [Boolean ,0x62],0XF];}Class O{}''','''Class,I_,{,},Class,_i_2,{,Var,_,:,Int,;,Val,_,,,_,,,$qu,:,Array,[,Array,[,Boolean,,,06,],,,0b1,],;,Val,_m__0,,,$_,,,r3,:,Array,[,Array,[,Boolean,,,0x62,],,,0XF,],;,},Class,O,{,},<EOF>''',101))

    def test_2307(self):
        self.assertTrue(TestLexer.test('''Class _X{s(_4,zB:i;q,__47,B:Array [Array [Float ,0x3B],0127];_:Array [Boolean ,0b101001];_:String ){} }Class __:_{Var B,$9m:Int ;}Class t:s{}''','''Class,_X,{,s,(,_4,,,zB,:,i,;,q,,,__47,,,B,:,Array,[,Array,[,Float,,,0x3B,],,,0127,],;,_,:,Array,[,Boolean,,,0b101001,],;,_,:,String,),{,},},Class,__,:,_,{,Var,B,,,$9m,:,Int,;,},Class,t,:,s,{,},<EOF>''',101))

    def test_2308(self):
        self.assertTrue(TestLexer.test('''Class __:_X{Var $nNH_,_,_5_31,$__:Array [Array [Array [Array [Int ,0XF_5],05_63_5],0x853],041];}Class __{Constructor (){} }''','''Class,__,:,_X,{,Var,$nNH_,,,_,,,_5_31,,,$__,:,Array,[,Array,[,Array,[,Array,[,Int,,,0XF5,],,,05635,],,,0x853,],,,041,],;,},Class,__,{,Constructor,(,),{,},},<EOF>''',101))

    def test_2309(self):
        self.assertTrue(TestLexer.test('''Class __:H__Y9{Constructor (_T,K4:Array [Array [Array [Array [Array [Int ,44_7],2_0],0xD_6_C_A_9F],0x5C],37]){} }Class zCj{}''','''Class,__,:,H__Y9,{,Constructor,(,_T,,,K4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,447,],,,20,],,,0xD6CA9F,],,,0x5C,],,,37,],),{,},},Class,zCj,{,},<EOF>''',101))

    def test_2310(self):
        self.assertTrue(TestLexer.test('''Class S8L9{Val P,$_q,$24p_,$B__0:h;}Class t:_{s_O(J37:Array [Array [Boolean ,0B10],61]){}Var $t_7H,$8_:Array [Array [Array [Array [Array [Boolean ,0b110101],0B10],014],0b110101],05];}Class _{}Class _{}''','''Class,S8L9,{,Val,P,,,$_q,,,$24p_,,,$B__0,:,h,;,},Class,t,:,_,{,s_O,(,J37,:,Array,[,Array,[,Boolean,,,0B10,],,,61,],),{,},Var,$t_7H,,,$8_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b110101,],,,0B10,],,,014,],,,0b110101,],,,05,],;,},Class,_,{,},Class,_,{,},<EOF>''',101))

    def test_2311(self):
        self.assertTrue(TestLexer.test('''Class q_55_{Constructor (){}Constructor (___,j92_:Array [Array [Array [Array [Array [Array [Boolean ,29],29],0125],0B11],0X1],0x9]){} }Class AT64z:__{}''','''Class,q_55_,{,Constructor,(,),{,},Constructor,(,___,,,j92_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,29,],,,29,],,,0125,],,,0B11,],,,0X1,],,,0x9,],),{,},},Class,AT64z,:,__,{,},<EOF>''',101))

    def test_2312(self):
        self.assertTrue(TestLexer.test('''Class t:QM{Constructor (_3:Array [Boolean ,0b101110]){}_(_:Int ){}Val __:xJ;Constructor (_,j:Array [Boolean ,0B1001000];_:String ;o:Array [Boolean ,02_6]){} }''','''Class,t,:,QM,{,Constructor,(,_3,:,Array,[,Boolean,,,0b101110,],),{,},_,(,_,:,Int,),{,},Val,__,:,xJ,;,Constructor,(,_,,,j,:,Array,[,Boolean,,,0B1001000,],;,_,:,String,;,o,:,Array,[,Boolean,,,026,],),{,},},<EOF>''',101))

    def test_2313(self):
        self.assertTrue(TestLexer.test('''Class _7{}Class V0_{}Class _:u{}Class ___Z:q{Constructor (U:___){}Var $h_85h,B_:_8;Constructor (IB:Int ;_Uw_:Int ;g6:Boolean ){} }Class o{JMq(){} }Class j{}''','''Class,_7,{,},Class,V0_,{,},Class,_,:,u,{,},Class,___Z,:,q,{,Constructor,(,U,:,___,),{,},Var,$h_85h,,,B_,:,_8,;,Constructor,(,IB,:,Int,;,_Uw_,:,Int,;,g6,:,Boolean,),{,},},Class,o,{,JMq,(,),{,},},Class,j,{,},<EOF>''',101))

    def test_2314(self):
        self.assertTrue(TestLexer.test('''Class h:__{Constructor (__8_:Float ;_N,__:Array [Boolean ,0x60];fF,__2,_:_B;_U4_,xT:String ;_N_3,_,hY,_6K:Q;_,_,_,q8:_2_;zG_,_07k,_I:Boolean ){Break ;} }''','''Class,h,:,__,{,Constructor,(,__8_,:,Float,;,_N,,,__,:,Array,[,Boolean,,,0x60,],;,fF,,,__2,,,_,:,_B,;,_U4_,,,xT,:,String,;,_N_3,,,_,,,hY,,,_6K,:,Q,;,_,,,_,,,_,,,q8,:,_2_,;,zG_,,,_07k,,,_I,:,Boolean,),{,Break,;,},},<EOF>''',101))

    def test_2315(self):
        self.assertTrue(TestLexer.test('''Class t1:EG_5{Val $l3:Array [Array [Array [Int ,8],3],050];Destructor (){} }Class O:gG{Var $IF1_F:Array [Float ,0B1];}''','''Class,t1,:,EG_5,{,Val,$l3,:,Array,[,Array,[,Array,[,Int,,,8,],,,3,],,,050,],;,Destructor,(,),{,},},Class,O,:,gG,{,Var,$IF1_F,:,Array,[,Float,,,0B1,],;,},<EOF>''',101))

    def test_2316(self):
        self.assertTrue(TestLexer.test('''Class U{Constructor (_c:String ;e_6:String ;l:Array [Array [Array [Array [Float ,0b101000],20_8],0B1011111],0B10];QVNm5M_o8:Boolean ;_,fx,__,_:String ){} }''','''Class,U,{,Constructor,(,_c,:,String,;,e_6,:,String,;,l,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b101000,],,,208,],,,0B1011111,],,,0B10,],;,QVNm5M_o8,:,Boolean,;,_,,,fx,,,__,,,_,:,String,),{,},},<EOF>''',101))

    def test_2317(self):
        self.assertTrue(TestLexer.test('''Class _U9{$03(){}Var _0H0w9,$__,$_z,$6,_:Boolean ;Var _V,$2:Boolean ;Destructor (){Continue ;} }Class Yvp:_{}Class _5_{Destructor (){} }''','''Class,_U9,{,$03,(,),{,},Var,_0H0w9,,,$__,,,$_z,,,$6,,,_,:,Boolean,;,Var,_V,,,$2,:,Boolean,;,Destructor,(,),{,Continue,;,},},Class,Yvp,:,_,{,},Class,_5_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2318(self):
        self.assertTrue(TestLexer.test('''Class rWJJ_:P{Var $_2,$___4K,___1J_T,k,$_:String ;Val $i5,$5,_,P_,_,E_,$Dk_,e,$_9C29:r4u_0;Val $55,$g:Int ;Val $3,$m_,$483_5s,$Z,$8,_W2,$_,$_K,$3:DT0;}Class _069{}Class _{}''','''Class,rWJJ_,:,P,{,Var,$_2,,,$___4K,,,___1J_T,,,k,,,$_,:,String,;,Val,$i5,,,$5,,,_,,,P_,,,_,,,E_,,,$Dk_,,,e,,,$_9C29,:,r4u_0,;,Val,$55,,,$g,:,Int,;,Val,$3,,,$m_,,,$483_5s,,,$Z,,,$8,,,_W2,,,$_,,,$_K,,,$3,:,DT0,;,},Class,_069,{,},Class,_,{,},<EOF>''',101))

    def test_2319(self):
        self.assertTrue(TestLexer.test('''Class P_36_6I__1_k58_o{Constructor (){_X::$___B_r()._.h._().U._._.k.l._._().Rv();}Val i,$52,_,_4,j:Array [Int ,17];Var _5_,W,_,_:Array [Float ,0B1];}''','''Class,P_36_6I__1_k58_o,{,Constructor,(,),{,_X,::,$___B_r,(,),.,_,.,h,.,_,(,),.,U,.,_,.,_,.,k,.,l,.,_,.,_,(,),.,Rv,(,),;,},Val,i,,,$52,,,_,,,_4,,,j,:,Array,[,Int,,,17,],;,Var,_5_,,,W,,,_,,,_,:,Array,[,Float,,,0B1,],;,},<EOF>''',101))

    def test_2320(self):
        self.assertTrue(TestLexer.test('''Class ___{$P44(n_,e,u:Array [String ,0b1011001];nv_I:Int ){}Constructor (m,_:_){}e(){}Constructor (){Continue ;Continue ;} }Class _:al{}Class W:C{$34__128(){}Var S_WC_3,u,$_:l;}''','''Class,___,{,$P44,(,n_,,,e,,,u,:,Array,[,String,,,0b1011001,],;,nv_I,:,Int,),{,},Constructor,(,m,,,_,:,_,),{,},e,(,),{,},Constructor,(,),{,Continue,;,Continue,;,},},Class,_,:,al,{,},Class,W,:,C,{,$34__128,(,),{,},Var,S_WC_3,,,u,,,$_,:,l,;,},<EOF>''',101))

    def test_2321(self):
        self.assertTrue(TestLexer.test('''Class _:_v_{}Class __1{_(O_:Array [Float ,861_7];B,_:Array [Array [Boolean ,02],0B10]){}Val $Q,_:Boolean ;}Class xFdl9:_06_g{Constructor (_:_21_;V:o_){} }Class k{}Class Xf:e_u{}''','''Class,_,:,_v_,{,},Class,__1,{,_,(,O_,:,Array,[,Float,,,8617,],;,B,,,_,:,Array,[,Array,[,Boolean,,,02,],,,0B10,],),{,},Val,$Q,,,_,:,Boolean,;,},Class,xFdl9,:,_06_g,{,Constructor,(,_,:,_21_,;,V,:,o_,),{,},},Class,k,{,},Class,Xf,:,e_u,{,},<EOF>''',101))

    def test_2322(self):
        self.assertTrue(TestLexer.test('''Class __:H7_k{E(){}Var $5_,_:_4;Constructor (f:Array [Float ,46];q:Float ;G:_p8_f;_:Array [Array [Boolean ,0x9],03_1_1];_,N:Array [String ,0144];_:Y497){} }''','''Class,__,:,H7_k,{,E,(,),{,},Var,$5_,,,_,:,_4,;,Constructor,(,f,:,Array,[,Float,,,46,],;,q,:,Float,;,G,:,_p8_f,;,_,:,Array,[,Array,[,Boolean,,,0x9,],,,0311,],;,_,,,N,:,Array,[,String,,,0144,],;,_,:,Y497,),{,},},<EOF>''',101))

    def test_2323(self):
        self.assertTrue(TestLexer.test('''Class Z__7:_8{Val $3,__A_H:Boolean ;Val $6t3QW:Array [Boolean ,014];}Class Bw9:__{$5(p_7t,_s:Float ;y:A_8;_,Y_0Y:Array [Array [String ,0X59],38];_:Array [Array [Array [Array [Int ,38],055],0B1100011],0b1];_bg_j9:Boolean ;k:Array [Array [Array [Float ,055],6],0b1];h,_:Array [Boolean ,055]){} }''','''Class,Z__7,:,_8,{,Val,$3,,,__A_H,:,Boolean,;,Val,$6t3QW,:,Array,[,Boolean,,,014,],;,},Class,Bw9,:,__,{,$5,(,p_7t,,,_s,:,Float,;,y,:,A_8,;,_,,,Y_0Y,:,Array,[,Array,[,String,,,0X59,],,,38,],;,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,38,],,,055,],,,0B1100011,],,,0b1,],;,_bg_j9,:,Boolean,;,k,:,Array,[,Array,[,Array,[,Float,,,055,],,,6,],,,0b1,],;,h,,,_,:,Array,[,Boolean,,,055,],),{,},},<EOF>''',101))

    def test_2324(self):
        self.assertTrue(TestLexer.test('''Class O_:__{Val $7:Array [Array [Array [Float ,0X46],050],06];Var _8_2_14:Int ;Destructor (){} }Class _7_6{}Class H__7{Val $_3td,__:Array [Array [Array [String ,04],17],0b1100];}Class _:I{}Class m:yO_{}''','''Class,O_,:,__,{,Val,$7,:,Array,[,Array,[,Array,[,Float,,,0X46,],,,050,],,,06,],;,Var,_8_2_14,:,Int,;,Destructor,(,),{,},},Class,_7_6,{,},Class,H__7,{,Val,$_3td,,,__,:,Array,[,Array,[,Array,[,String,,,04,],,,17,],,,0b1100,],;,},Class,_,:,I,{,},Class,m,:,yO_,{,},<EOF>''',101))

    def test_2325(self):
        self.assertTrue(TestLexer.test('''Class _ko_8G3:_{}Class m:r{Val d7___V96,_8,$C,$0j:_;Constructor (W:g165d__;__:_s_;t_,_e:Int ;___:Int ;_,p:Array [String ,82]){} }Class ___m:g{}Class r0r:_{}''','''Class,_ko_8G3,:,_,{,},Class,m,:,r,{,Val,d7___V96,,,_8,,,$C,,,$0j,:,_,;,Constructor,(,W,:,g165d__,;,__,:,_s_,;,t_,,,_e,:,Int,;,___,:,Int,;,_,,,p,:,Array,[,String,,,82,],),{,},},Class,___m,:,g,{,},Class,r0r,:,_,{,},<EOF>''',101))

    def test_2326(self):
        self.assertTrue(TestLexer.test('''Class f__mf:_RE{Var _0_:Array [Array [Array [Array [Array [Float ,0b101010],01_5],9],0B1011100],03_50_3];}Class J:Sl17V{Destructor (){}$_(_,_,y,Z:_3v;_,ud___0:Array [Array [Array [Array [Array [Array [String ,0B1011100],0B1],28],0X3C],042],0x51]){}Val d:Array [Int ,28];}''','''Class,f__mf,:,_RE,{,Var,_0_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b101010,],,,015,],,,9,],,,0B1011100,],,,03503,],;,},Class,J,:,Sl17V,{,Destructor,(,),{,},$_,(,_,,,_,,,y,,,Z,:,_3v,;,_,,,ud___0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1011100,],,,0B1,],,,28,],,,0X3C,],,,042,],,,0x51,],),{,},Val,d,:,Array,[,Int,,,28,],;,},<EOF>''',101))

    def test_2327(self):
        self.assertTrue(TestLexer.test('''Class ___Q{$W__5(){}Val _Zl,_,$V:Array [Float ,0b1];Var $13,$J6,$N3E:__;}Class _:C{Constructor (_H9s0:Array [Float ,0B101];ns56:Float ){ {} }}Class ___2:C{}''','''Class,___Q,{,$W__5,(,),{,},Val,_Zl,,,_,,,$V,:,Array,[,Float,,,0b1,],;,Var,$13,,,$J6,,,$N3E,:,__,;,},Class,_,:,C,{,Constructor,(,_H9s0,:,Array,[,Float,,,0B101,],;,ns56,:,Float,),{,{,},},},Class,___2,:,C,{,},<EOF>''',101))

    def test_2328(self):
        self.assertTrue(TestLexer.test('''Class _3{}Class h1{$__(D0,v:Array [Array [Int ,0xF78F8],59];q_:Boolean ;B,__:Array [Boolean ,0b110000]){} }Class __:_7_{}''','''Class,_3,{,},Class,h1,{,$__,(,D0,,,v,:,Array,[,Array,[,Int,,,0xF78F8,],,,59,],;,q_,:,Boolean,;,B,,,__,:,Array,[,Boolean,,,0b110000,],),{,},},Class,__,:,_7_,{,},<EOF>''',101))

    def test_2329(self):
        self.assertTrue(TestLexer.test('''Class _CQ:_x4{Constructor (_:Boolean ){}$__y(){}Val _:Array [Array [Int ,0B101010],72];Destructor (){}T_H4_(){Continue ;Var C:Float ;} }''','''Class,_CQ,:,_x4,{,Constructor,(,_,:,Boolean,),{,},$__y,(,),{,},Val,_,:,Array,[,Array,[,Int,,,0B101010,],,,72,],;,Destructor,(,),{,},T_H4_,(,),{,Continue,;,Var,C,:,Float,;,},},<EOF>''',101))

    def test_2330(self):
        self.assertTrue(TestLexer.test('''Class _:_31F{}Class lS{Val $O_q,_r26p:Array [Array [Array [String ,54],6_1],0b1100010];Val $m:Array [Array [Array [Int ,0b10],0B1001],046];Destructor (){Break ;} }''','''Class,_,:,_31F,{,},Class,lS,{,Val,$O_q,,,_r26p,:,Array,[,Array,[,Array,[,String,,,54,],,,61,],,,0b1100010,],;,Val,$m,:,Array,[,Array,[,Array,[,Int,,,0b10,],,,0B1001,],,,046,],;,Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_2331(self):
        self.assertTrue(TestLexer.test('''Class p4_7:_{$5_5(){Break ;Val A,a,MZ,_:Array [Array [Boolean ,0b11000],8_9];}Constructor (){Break ;}Var $__:Float ;}''','''Class,p4_7,:,_,{,$5_5,(,),{,Break,;,Val,A,,,a,,,MZ,,,_,:,Array,[,Array,[,Boolean,,,0b11000,],,,89,],;,},Constructor,(,),{,Break,;,},Var,$__,:,Float,;,},<EOF>''',101))

    def test_2332(self):
        self.assertTrue(TestLexer.test('''Class _{}Class zAx:rV{}Class _{Var $_,$_,Z,$2_:Array [Array [Boolean ,0X9_215_2_3C],37];}Class O1{Val $P:Boolean ;}''','''Class,_,{,},Class,zAx,:,rV,{,},Class,_,{,Var,$_,,,$_,,,Z,,,$2_,:,Array,[,Array,[,Boolean,,,0X921523C,],,,37,],;,},Class,O1,{,Val,$P,:,Boolean,;,},<EOF>''',101))

    def test_2333(self):
        self.assertTrue(TestLexer.test('''Class _:__{Constructor (){Val _6,___,Cx_:Array [Array [Array [Array [Boolean ,0x2_8],01],0x8],0x52];} }Class _{}Class __{Val _:String ;}Class S:g_{}''','''Class,_,:,__,{,Constructor,(,),{,Val,_6,,,___,,,Cx_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x28,],,,01,],,,0x8,],,,0x52,],;,},},Class,_,{,},Class,__,{,Val,_,:,String,;,},Class,S,:,g_,{,},<EOF>''',101))

    def test_2334(self):
        self.assertTrue(TestLexer.test('''Class _eh{_XL(fZ:Array [Array [Int ,045],0B1];_,Y,_7:String ){} }Class L{Val ___C:Array [Array [Boolean ,34],0B110001];Var $1I,_5:Boolean ;}''','''Class,_eh,{,_XL,(,fZ,:,Array,[,Array,[,Int,,,045,],,,0B1,],;,_,,,Y,,,_7,:,String,),{,},},Class,L,{,Val,___C,:,Array,[,Array,[,Boolean,,,34,],,,0B110001,],;,Var,$1I,,,_5,:,Boolean,;,},<EOF>''',101))

    def test_2335(self):
        self.assertTrue(TestLexer.test('''Class _:__{}Class _8:r{Var JO:_;Destructor (){} }Class _{}Class t{}Class _{Val $G_,$3,$_,$5w___,$_,T_,_x:Array [Array [Array [Array [Array [Array [Float ,82],01_37_16],0X5],82],82],0b100110];Destructor (){} }''','''Class,_,:,__,{,},Class,_8,:,r,{,Var,JO,:,_,;,Destructor,(,),{,},},Class,_,{,},Class,t,{,},Class,_,{,Val,$G_,,,$3,,,$_,,,$5w___,,,$_,,,T_,,,_x,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,82,],,,013716,],,,0X5,],,,82,],,,82,],,,0b100110,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_2336(self):
        self.assertTrue(TestLexer.test('''Class bH{Constructor (){}Val $o6eC3,$w,G:Array [Array [String ,065],13];Destructor (){_J_71::$6();}Destructor (){}Val $5,$_p:Float ;}Class H1:QL0{}''','''Class,bH,{,Constructor,(,),{,},Val,$o6eC3,,,$w,,,G,:,Array,[,Array,[,String,,,065,],,,13,],;,Destructor,(,),{,_J_71,::,$6,(,),;,},Destructor,(,),{,},Val,$5,,,$_p,:,Float,;,},Class,H1,:,QL0,{,},<EOF>''',101))

    def test_2337(self):
        self.assertTrue(TestLexer.test('''Class _0x:mi{$z_8(_:F;aa,s_:Array [String ,04_1]){} }Class XS:y8N{Val t,_s_N36_60,q,$_:Array [String ,016];}Class O59_W{}''','''Class,_0x,:,mi,{,$z_8,(,_,:,F,;,aa,,,s_,:,Array,[,String,,,041,],),{,},},Class,XS,:,y8N,{,Val,t,,,_s_N36_60,,,q,,,$_,:,Array,[,String,,,016,],;,},Class,O59_W,{,},<EOF>''',101))

    def test_2338(self):
        self.assertTrue(TestLexer.test('''Class Hm{}Class vu{_(__,a:Array [Array [Array [Array [Array [String ,0B1010000],0B1_0],72],02_40],0x59];X:Boolean ;Gn5,_:String ;I5,UH:t6;t,_:j0){_::$35.l();{} }}''','''Class,Hm,{,},Class,vu,{,_,(,__,,,a,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1010000,],,,0B10,],,,72,],,,0240,],,,0x59,],;,X,:,Boolean,;,Gn5,,,_,:,String,;,I5,,,UH,:,t6,;,t,,,_,:,j0,),{,_,::,$35,.,l,(,),;,{,},},},<EOF>''',101))

    def test_2339(self):
        self.assertTrue(TestLexer.test('''Class P9Vy___:_{Constructor (gi:String ;G,__,r,_,_:X;__3:Array [Float ,0x5];hWc,_:XW;W_9,_,H8n4:Z){} }Class _{}''','''Class,P9Vy___,:,_,{,Constructor,(,gi,:,String,;,G,,,__,,,r,,,_,,,_,:,X,;,__3,:,Array,[,Float,,,0x5,],;,hWc,,,_,:,XW,;,W_9,,,_,,,H8n4,:,Z,),{,},},Class,_,{,},<EOF>''',101))

    def test_2340(self):
        self.assertTrue(TestLexer.test('''Class x_:___Qb5{Constructor (P,_:Float ){}Val _667:Float =!!zI::$E()<!!--W7K::$_*-_::$_X.__();}Class __{}Class t_5d3y_8{}''','''Class,x_,:,___Qb5,{,Constructor,(,P,,,_,:,Float,),{,},Val,_667,:,Float,=,!,!,zI,::,$E,(,),<,!,!,-,-,W7K,::,$_,*,-,_,::,$_X,.,__,(,),;,},Class,__,{,},Class,t_5d3y_8,{,},<EOF>''',101))

    def test_2341(self):
        self.assertTrue(TestLexer.test('''Class lI11:z6{}Class e{X0N___(){}$M(_,_05,_,__,_t,__:_;u,y_e:v;j_,_,_:Float ;E_O:_92;I:String ){}Constructor (){} }''','''Class,lI11,:,z6,{,},Class,e,{,X0N___,(,),{,},$M,(,_,,,_05,,,_,,,__,,,_t,,,__,:,_,;,u,,,y_e,:,v,;,j_,,,_,,,_,:,Float,;,E_O,:,_92,;,I,:,String,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_2342(self):
        self.assertTrue(TestLexer.test('''Class __{Destructor (){Return ;_::$i_()._6();} }Class _7__:J{Val F,$H:Array [Float ,0xC_BFB_FB];}Class _h_T:z5{}''','''Class,__,{,Destructor,(,),{,Return,;,_,::,$i_,(,),.,_6,(,),;,},},Class,_7__,:,J,{,Val,F,,,$H,:,Array,[,Float,,,0xCBFBFB,],;,},Class,_h_T,:,z5,{,},<EOF>''',101))

    def test_2343(self):
        self.assertTrue(TestLexer.test('''Class s7:A7__{$8iD(c,C__:Array [Array [Array [Array [Array [Int ,68],0X26],0B1100010],0xD],68];X,_,zl19,_2_6,R7q:Float ;KV:Array [Array [Array [Array [Float ,05_2],05],01],01];_:__;_9:Int ){} }''','''Class,s7,:,A7__,{,$8iD,(,c,,,C__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,68,],,,0X26,],,,0B1100010,],,,0xD,],,,68,],;,X,,,_,,,zl19,,,_2_6,,,R7q,:,Float,;,KV,:,Array,[,Array,[,Array,[,Array,[,Float,,,052,],,,05,],,,01,],,,01,],;,_,:,__,;,_9,:,Int,),{,},},<EOF>''',101))

    def test_2344(self):
        self.assertTrue(TestLexer.test('''Class _mE{}Class v{}Class P{Var $_:Boolean ;Val _:String ;U(_6a:String ;ZMn,W5_,u:Array [Array [Array [Float ,2],0B1_0],0x4E]){_4::$0y();Val L:Float ;}Var $o_:Boolean ;Val L_:String ;}''','''Class,_mE,{,},Class,v,{,},Class,P,{,Var,$_,:,Boolean,;,Val,_,:,String,;,U,(,_6a,:,String,;,ZMn,,,W5_,,,u,:,Array,[,Array,[,Array,[,Float,,,2,],,,0B10,],,,0x4E,],),{,_4,::,$0y,(,),;,Val,L,:,Float,;,},Var,$o_,:,Boolean,;,Val,L_,:,String,;,},<EOF>''',101))

    def test_2345(self):
        self.assertTrue(TestLexer.test('''Class _6_b9:_{}Class u3Q{$_47(p,_v,J_:Int ;k,_n:Array [Int ,0B11010]){Continue ;}Val ____,J_:Array [Array [Array [Int ,0b1],0b1010],0xB];Destructor (){} }Class _6{}''','''Class,_6_b9,:,_,{,},Class,u3Q,{,$_47,(,p,,,_v,,,J_,:,Int,;,k,,,_n,:,Array,[,Int,,,0B11010,],),{,Continue,;,},Val,____,,,J_,:,Array,[,Array,[,Array,[,Int,,,0b1,],,,0b1010,],,,0xB,],;,Destructor,(,),{,},},Class,_6,{,},<EOF>''',101))

    def test_2346(self):
        self.assertTrue(TestLexer.test('''Class S5_S9:j{}Class W5:_p_{Destructor (){Continue ;} }Class __{}Class _{Constructor (__P6:_YTd__90){} }Class _U{}''','''Class,S5_S9,:,j,{,},Class,W5,:,_p_,{,Destructor,(,),{,Continue,;,},},Class,__,{,},Class,_,{,Constructor,(,__P6,:,_YTd__90,),{,},},Class,_U,{,},<EOF>''',101))

    def test_2347(self):
        self.assertTrue(TestLexer.test('''Class __t9C{}Class _:_{}Class E{Destructor (){} }Class __{Destructor (){Continue ;Break ;} }Class _{}Class bt{}Class M{}Class e:_V9{}''','''Class,__t9C,{,},Class,_,:,_,{,},Class,E,{,Destructor,(,),{,},},Class,__,{,Destructor,(,),{,Continue,;,Break,;,},},Class,_,{,},Class,bt,{,},Class,M,{,},Class,e,:,_V9,{,},<EOF>''',101))

    def test_2348(self):
        self.assertTrue(TestLexer.test('''Class _{}Class z{}Class O{}Class _1__:y{}Class p:__{Val $z,Q,_,$_:Array [Array [Array [Array [Array [Boolean ,045],0B10110],2],045],1];}Class r9:V{}Class _:_{}''','''Class,_,{,},Class,z,{,},Class,O,{,},Class,_1__,:,y,{,},Class,p,:,__,{,Val,$z,,,Q,,,_,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,045,],,,0B10110,],,,2,],,,045,],,,1,],;,},Class,r9,:,V,{,},Class,_,:,_,{,},<EOF>''',101))

    def test_2349(self):
        self.assertTrue(TestLexer.test('''Class _:w{Constructor (w0V:Array [Array [Array [Int ,0xE],020],067_70];I,_:Array [Array [Float ,020],0B1000101]){Return ;} }Class _G9_{}''','''Class,_,:,w,{,Constructor,(,w0V,:,Array,[,Array,[,Array,[,Int,,,0xE,],,,020,],,,06770,],;,I,,,_,:,Array,[,Array,[,Float,,,020,],,,0B1000101,],),{,Return,;,},},Class,_G9_,{,},<EOF>''',101))

    def test_2350(self):
        self.assertTrue(TestLexer.test('''Class _{Var _8_:_;Var $_:Array [Array [Array [Array [Array [Array [String ,0b10_10_0_111],46],7],0XF_8],0X59],021];}''','''Class,_,{,Var,_8_,:,_,;,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b10100111,],,,46,],,,7,],,,0XF8,],,,0X59,],,,021,],;,},<EOF>''',101))

    def test_2351(self):
        self.assertTrue(TestLexer.test('''Class O276A{Val $_:_;Val $8,$9:_;}Class __:Z_5I{Constructor (G5Is5___,c:Array [Array [Array [Float ,010],1],042_6]){}Destructor (){} }Class y:_{Constructor (){}$_(_,_:String ){Continue ;} }''','''Class,O276A,{,Val,$_,:,_,;,Val,$8,,,$9,:,_,;,},Class,__,:,Z_5I,{,Constructor,(,G5Is5___,,,c,:,Array,[,Array,[,Array,[,Float,,,010,],,,1,],,,0426,],),{,},Destructor,(,),{,},},Class,y,:,_,{,Constructor,(,),{,},$_,(,_,,,_,:,String,),{,Continue,;,},},<EOF>''',101))

    def test_2352(self):
        self.assertTrue(TestLexer.test('''Class _n{}Class _e8{}Class F:Hx{}Class __:_{Var $R:Array [Array [Int ,02],84];}Class __F_:_{Constructor (){} }Class __6:_b{}Class Ejs{Constructor (n:Array [Boolean ,05];Wf,_:Int ;q9,_:Y0;_:Array [Int ,0b1_1]){} }''','''Class,_n,{,},Class,_e8,{,},Class,F,:,Hx,{,},Class,__,:,_,{,Var,$R,:,Array,[,Array,[,Int,,,02,],,,84,],;,},Class,__F_,:,_,{,Constructor,(,),{,},},Class,__6,:,_b,{,},Class,Ejs,{,Constructor,(,n,:,Array,[,Boolean,,,05,],;,Wf,,,_,:,Int,;,q9,,,_,:,Y0,;,_,:,Array,[,Int,,,0b11,],),{,},},<EOF>''',101))

    def test_2353(self):
        self.assertTrue(TestLexer.test('''Class B:_0{Destructor (){Continue ;} }Class _:L2{Val ___,$172T5,$_c,U,$S_24_:Array [Int ,4_0];}Class _:C{}Class _:V{}''','''Class,B,:,_0,{,Destructor,(,),{,Continue,;,},},Class,_,:,L2,{,Val,___,,,$172T5,,,$_c,,,U,,,$S_24_,:,Array,[,Int,,,40,],;,},Class,_,:,C,{,},Class,_,:,V,{,},<EOF>''',101))

    def test_2354(self):
        self.assertTrue(TestLexer.test('''Class ___j:_5_{$74(H:Int ;_,c,_,k0:Array [Array [Array [String ,0x4A],0B110110],8];d_,_ymGE:String ;_:_;_a,_,_,D_:Array [Array [Array [Int ,0X6],8],8]){ {} }}''','''Class,___j,:,_5_,{,$74,(,H,:,Int,;,_,,,c,,,_,,,k0,:,Array,[,Array,[,Array,[,String,,,0x4A,],,,0B110110,],,,8,],;,d_,,,_ymGE,:,String,;,_,:,_,;,_a,,,_,,,_,,,D_,:,Array,[,Array,[,Array,[,Int,,,0X6,],,,8,],,,8,],),{,{,},},},<EOF>''',101))

    def test_2355(self):
        self.assertTrue(TestLexer.test('''Class b{}Class _{}Class t{}Class _S:_64{Constructor (_7,_8,_3:Array [Array [Float ,0b101101],042];y9f,r,___:Array [Array [String ,0XB9],4]){} }Class _{c3(_:___){}Var $5:Int ;}''','''Class,b,{,},Class,_,{,},Class,t,{,},Class,_S,:,_64,{,Constructor,(,_7,,,_8,,,_3,:,Array,[,Array,[,Float,,,0b101101,],,,042,],;,y9f,,,r,,,___,:,Array,[,Array,[,String,,,0XB9,],,,4,],),{,},},Class,_,{,c3,(,_,:,___,),{,},Var,$5,:,Int,;,},<EOF>''',101))

    def test_2356(self):
        self.assertTrue(TestLexer.test('''Class __l{$1Q(y:_){}$___dz(){Continue ;} }Class _o__5:b7o0{}Class H87:m_A_{Destructor (){} }Class _{}Class KV{}''','''Class,__l,{,$1Q,(,y,:,_,),{,},$___dz,(,),{,Continue,;,},},Class,_o__5,:,b7o0,{,},Class,H87,:,m_A_,{,Destructor,(,),{,},},Class,_,{,},Class,KV,{,},<EOF>''',101))

    def test_2357(self):
        self.assertTrue(TestLexer.test('''Class V{G_P(){}Destructor (){Break ;Var _1:Int ;Continue ;}Var $9:_;}Class f{}Class j:Q5h{}Class __:_{}Class _:_{}''','''Class,V,{,G_P,(,),{,},Destructor,(,),{,Break,;,Var,_1,:,Int,;,Continue,;,},Var,$9,:,_,;,},Class,f,{,},Class,j,:,Q5h,{,},Class,__,:,_,{,},Class,_,:,_,{,},<EOF>''',101))

    def test_2358(self):
        self.assertTrue(TestLexer.test('''Class __Al{}Class ___:_{}Class _T3{}Class n:__1{Destructor (){}G(i:Array [Int ,0B1_1];NN46Ecl:___;J_50___,_F:Array [Array [Boolean ,66],66];S,__C,h:Array [String ,0b11];E_1q_,_,w,_,T:h62){} }Class _{}Class _591i_{}Class F{Val $9_:w;}''','''Class,__Al,{,},Class,___,:,_,{,},Class,_T3,{,},Class,n,:,__1,{,Destructor,(,),{,},G,(,i,:,Array,[,Int,,,0B11,],;,NN46Ecl,:,___,;,J_50___,,,_F,:,Array,[,Array,[,Boolean,,,66,],,,66,],;,S,,,__C,,,h,:,Array,[,String,,,0b11,],;,E_1q_,,,_,,,w,,,_,,,T,:,h62,),{,},},Class,_,{,},Class,_591i_,{,},Class,F,{,Val,$9_,:,w,;,},<EOF>''',101))

    def test_2359(self):
        self.assertTrue(TestLexer.test('''Class wl{Var _j,Y49_:Array [Array [Boolean ,063],0B111010];}Class h3_{}Class _{Constructor (){Continue ;Break ;} }Class _{}''','''Class,wl,{,Var,_j,,,Y49_,:,Array,[,Array,[,Boolean,,,063,],,,0B111010,],;,},Class,h3_,{,},Class,_,{,Constructor,(,),{,Continue,;,Break,;,},},Class,_,{,},<EOF>''',101))

    def test_2360(self):
        self.assertTrue(TestLexer.test('''Class _:_M_{Constructor (__9__,_,G:_;F:j;_,_:Array [Array [Array [Array [Array [String ,0b110010],0b1],0X26_8_8],06],0XD_CB]){}Constructor (_:J5Zav_){} }''','''Class,_,:,_M_,{,Constructor,(,__9__,,,_,,,G,:,_,;,F,:,j,;,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b110010,],,,0b1,],,,0X2688,],,,06,],,,0XDCB,],),{,},Constructor,(,_,:,J5Zav_,),{,},},<EOF>''',101))

    def test_2361(self):
        self.assertTrue(TestLexer.test('''Class _:T{Val _,_5k:Boolean ;Var _:Array [String ,76];Var $B_b1F,v:Boolean ;Val $4,_,$2_:Array [Array [Array [Array [Boolean ,0X28],0b100100],0X5],0B1];}Class B7____{}''','''Class,_,:,T,{,Val,_,,,_5k,:,Boolean,;,Var,_,:,Array,[,String,,,76,],;,Var,$B_b1F,,,v,:,Boolean,;,Val,$4,,,_,,,$2_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X28,],,,0b100100,],,,0X5,],,,0B1,],;,},Class,B7____,{,},<EOF>''',101))

    def test_2362(self):
        self.assertTrue(TestLexer.test('''Class _T__:va{_j(_T:Array [Int ,43];f_:Array [Array [Float ,242],01_7]){Return ;}Constructor (D:__){Continue ;} }Class _8:U{}Class _7{}Class U{}''','''Class,_T__,:,va,{,_j,(,_T,:,Array,[,Int,,,43,],;,f_,:,Array,[,Array,[,Float,,,242,],,,017,],),{,Return,;,},Constructor,(,D,:,__,),{,Continue,;,},},Class,_8,:,U,{,},Class,_7,{,},Class,U,{,},<EOF>''',101))

    def test_2363(self):
        self.assertTrue(TestLexer.test('''Class v:eD{Constructor (__:String ){Break ;Continue ;} }Class H:__{$268(_,E:Array [Array [Boolean ,0B1],39]){ {Break ;}Continue ;}Val _,_Z,$9,_O:Array [Int ,0B1101_0];}Class f5_{Destructor (){} }''','''Class,v,:,eD,{,Constructor,(,__,:,String,),{,Break,;,Continue,;,},},Class,H,:,__,{,$268,(,_,,,E,:,Array,[,Array,[,Boolean,,,0B1,],,,39,],),{,{,Break,;,},Continue,;,},Val,_,,,_Z,,,$9,,,_O,:,Array,[,Int,,,0B11010,],;,},Class,f5_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2364(self):
        self.assertTrue(TestLexer.test('''Class _{Val _:_;Constructor (_,_,__q8,_:Int ;k:Array [Float ,0B1101];_,_,K,_,_,_4,_:Array [Int ,75];Z____,_I4s9,G,u1,_X4:Array [Float ,90];_:Array [Array [Array [Array [Int ,0X41],02_24_7_3_17],0X41],01]){ {} }}''','''Class,_,{,Val,_,:,_,;,Constructor,(,_,,,_,,,__q8,,,_,:,Int,;,k,:,Array,[,Float,,,0B1101,],;,_,,,_,,,K,,,_,,,_,,,_4,,,_,:,Array,[,Int,,,75,],;,Z____,,,_I4s9,,,G,,,u1,,,_X4,:,Array,[,Float,,,90,],;,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X41,],,,02247317,],,,0X41,],,,01,],),{,{,},},},<EOF>''',101))

    def test_2365(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _:__L{}Class L{Destructor (){} }Class _:_8{Var Z:Array [Boolean ,0B1_0];$_(__,l:V63){Val vL,_:ij37_4_;Break ;{}Return ;Break ;Break ;} }Class i{}''','''Class,_,{,},Class,_,:,__L,{,},Class,L,{,Destructor,(,),{,},},Class,_,:,_8,{,Var,Z,:,Array,[,Boolean,,,0B10,],;,$_,(,__,,,l,:,V63,),{,Val,vL,,,_,:,ij37_4_,;,Break,;,{,},Return,;,Break,;,Break,;,},},Class,i,{,},<EOF>''',101))

    def test_2366(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_13:Array [Boolean ,78];_Q0,K8,g,W08,__,__3,_,d,_4c6Ck_:Array [String ,78];_4:Array [Array [Boolean ,0X60],0X60]){} }Class __{}Class uW{}Class _:k{c(k_,____4,_e7,_,N,f,T:_;Z,__z:C1;_,_:_a;__n,L5u,i,R,zm_2_8,Di:Array [Array [Int ,84_8_8],4]){}EI(){} }''','''Class,_,{,Constructor,(,_13,:,Array,[,Boolean,,,78,],;,_Q0,,,K8,,,g,,,W08,,,__,,,__3,,,_,,,d,,,_4c6Ck_,:,Array,[,String,,,78,],;,_4,:,Array,[,Array,[,Boolean,,,0X60,],,,0X60,],),{,},},Class,__,{,},Class,uW,{,},Class,_,:,k,{,c,(,k_,,,____4,,,_e7,,,_,,,N,,,f,,,T,:,_,;,Z,,,__z,:,C1,;,_,,,_,:,_a,;,__n,,,L5u,,,i,,,R,,,zm_2_8,,,Di,:,Array,[,Array,[,Int,,,8488,],,,4,],),{,},EI,(,),{,},},<EOF>''',101))

    def test_2367(self):
        self.assertTrue(TestLexer.test('''Class __u{Z(IG,o_a,z,WHU,N2H:_8;__:Array [Int ,0B1];_,X:_b9;r,IL_,x:String ;a,_:K48;A,_k_85,m,c4b:W7;A__:String ;__:K58;_:Array [Array [String ,0X41],0XA_B_4_4];_6:Array [Array [Array [String ,02],0130],0b10]){} }''','''Class,__u,{,Z,(,IG,,,o_a,,,z,,,WHU,,,N2H,:,_8,;,__,:,Array,[,Int,,,0B1,],;,_,,,X,:,_b9,;,r,,,IL_,,,x,:,String,;,a,,,_,:,K48,;,A,,,_k_85,,,m,,,c4b,:,W7,;,A__,:,String,;,__,:,K58,;,_,:,Array,[,Array,[,String,,,0X41,],,,0XAB44,],;,_6,:,Array,[,Array,[,Array,[,String,,,02,],,,0130,],,,0b10,],),{,},},<EOF>''',101))

    def test_2368(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class vO_5_:s5_9{}Class X:c914{}Class A:_{Constructor (G_:_;_9:String ;__,_,n7D5:q){}Var $_b:R;Val $mG,$na:Array [String ,01];Var $D,$g,$8_L_K_:_ok;}Class j{}''','''Class,_,:,_,{,},Class,vO_5_,:,s5_9,{,},Class,X,:,c914,{,},Class,A,:,_,{,Constructor,(,G_,:,_,;,_9,:,String,;,__,,,_,,,n7D5,:,q,),{,},Var,$_b,:,R,;,Val,$mG,,,$na,:,Array,[,String,,,01,],;,Var,$D,,,$g,,,$8_L_K_,:,_ok,;,},Class,j,{,},<EOF>''',101))

    def test_2369(self):
        self.assertTrue(TestLexer.test('''Class _{Var z,_3_z_B,$8_P0_:Int ;Val _,$3,v_:Float ;Destructor (){Break ;}$0x(__:E__;s_3,__,_,__,JhRl,a,_,_5:Int ){}Destructor (){} }Class _V:r{}''','''Class,_,{,Var,z,,,_3_z_B,,,$8_P0_,:,Int,;,Val,_,,,$3,,,v_,:,Float,;,Destructor,(,),{,Break,;,},$0x,(,__,:,E__,;,s_3,,,__,,,_,,,__,,,JhRl,,,a,,,_,,,_5,:,Int,),{,},Destructor,(,),{,},},Class,_V,:,r,{,},<EOF>''',101))

    def test_2370(self):
        self.assertTrue(TestLexer.test('''Class d5J_{Var $_,_,$0_6:Array [Array [Array [Int ,6910],077],0X6];Var m:Array [Array [Array [Array [Boolean ,010],7_3],0x44],8];}''','''Class,d5J_,{,Var,$_,,,_,,,$0_6,:,Array,[,Array,[,Array,[,Int,,,6910,],,,077,],,,0X6,],;,Var,m,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,010,],,,73,],,,0x44,],,,8,],;,},<EOF>''',101))

    def test_2371(self):
        self.assertTrue(TestLexer.test('''Class d:Xb_{}Class ____{}Class __p:_{_l(_,A_:Array [String ,06_3];Na,___zH:String ){} }Class eYQh__m_0{Val ALa,$d,$06DJ:Array [Array [Boolean ,0x48],0b1_00];}Class __:Pd{Val cX1:Array [Array [Boolean ,0x48],0b1];}Class H{}Class Hb:j{Var _4_,_:Array [Int ,0b1_0_0];}Class _x{}''','''Class,d,:,Xb_,{,},Class,____,{,},Class,__p,:,_,{,_l,(,_,,,A_,:,Array,[,String,,,063,],;,Na,,,___zH,:,String,),{,},},Class,eYQh__m_0,{,Val,ALa,,,$d,,,$06DJ,:,Array,[,Array,[,Boolean,,,0x48,],,,0b100,],;,},Class,__,:,Pd,{,Val,cX1,:,Array,[,Array,[,Boolean,,,0x48,],,,0b1,],;,},Class,H,{,},Class,Hb,:,j,{,Var,_4_,,,_,:,Array,[,Int,,,0b100,],;,},Class,_x,{,},<EOF>''',101))

    def test_2372(self):
        self.assertTrue(TestLexer.test('''Class _q:_{}Class f{Val q,l,$_Rra,k:Array [Array [Float ,8_88_1],0x31];}Class q:_vW{Constructor (Zm4w:Array [Array [Array [Int ,0B10011],03_0],05_2_3];__:Boolean ){Continue ;} }''','''Class,_q,:,_,{,},Class,f,{,Val,q,,,l,,,$_Rra,,,k,:,Array,[,Array,[,Float,,,8881,],,,0x31,],;,},Class,q,:,_vW,{,Constructor,(,Zm4w,:,Array,[,Array,[,Array,[,Int,,,0B10011,],,,030,],,,0523,],;,__,:,Boolean,),{,Continue,;,},},<EOF>''',101))

    def test_2373(self):
        self.assertTrue(TestLexer.test('''Class __:_{Constructor (f5T:Array [String ,0B1011001];E0__:Array [Array [Array [Int ,0X7],0x4C],04_4];_,_848P4:u){}$6(){ {Continue ;Return ;}{} }}Class __{Val _yA,_:xX7;}Class r:_k{}''','''Class,__,:,_,{,Constructor,(,f5T,:,Array,[,String,,,0B1011001,],;,E0__,:,Array,[,Array,[,Array,[,Int,,,0X7,],,,0x4C,],,,044,],;,_,,,_848P4,:,u,),{,},$6,(,),{,{,Continue,;,Return,;,},{,},},},Class,__,{,Val,_yA,,,_,:,xX7,;,},Class,r,:,_k,{,},<EOF>''',101))

    def test_2374(self):
        self.assertTrue(TestLexer.test('''Class _:u_{$_2(_:Array [Int ,042]){ {}Return ;} }Class _{Var P,e3A,$q_U4:Array [Int ,0X50];Val __vw_5,$W_,$VE:N;Destructor (){ {} }Val _T79,b:Int ;Var $5,$C1,$_Y:Array [Array [Int ,042],49];Val Xq_:Array [Array [Int ,0x2_6],0B1010001];Destructor (){}$R(_:Int ){}Destructor (){Continue ;Continue ;} }Class j{Destructor (){} }Class exF{Val $5vs,$6,Uk,_:_;}Class _1:_{}''','''Class,_,:,u_,{,$_2,(,_,:,Array,[,Int,,,042,],),{,{,},Return,;,},},Class,_,{,Var,P,,,e3A,,,$q_U4,:,Array,[,Int,,,0X50,],;,Val,__vw_5,,,$W_,,,$VE,:,N,;,Destructor,(,),{,{,},},Val,_T79,,,b,:,Int,;,Var,$5,,,$C1,,,$_Y,:,Array,[,Array,[,Int,,,042,],,,49,],;,Val,Xq_,:,Array,[,Array,[,Int,,,0x26,],,,0B1010001,],;,Destructor,(,),{,},$R,(,_,:,Int,),{,},Destructor,(,),{,Continue,;,Continue,;,},},Class,j,{,Destructor,(,),{,},},Class,exF,{,Val,$5vs,,,$6,,,Uk,,,_,:,_,;,},Class,_1,:,_,{,},<EOF>''',101))

    def test_2375(self):
        self.assertTrue(TestLexer.test('''Class _:bq{}Class I:_e{}Class p:__gj{Constructor (){Break ;} }Class x{}Class jln:_2{$t(){}Constructor (wU:Array [Float ,1]){} }''','''Class,_,:,bq,{,},Class,I,:,_e,{,},Class,p,:,__gj,{,Constructor,(,),{,Break,;,},},Class,x,{,},Class,jln,:,_2,{,$t,(,),{,},Constructor,(,wU,:,Array,[,Float,,,1,],),{,},},<EOF>''',101))

    def test_2376(self):
        self.assertTrue(TestLexer.test('''Class _{X(){Val Y:Array [Array [Array [Boolean ,71],041],5_7_76_52];}$R(_,_:C8;f,_0:Array [Boolean ,06]){Continue ;} }''','''Class,_,{,X,(,),{,Val,Y,:,Array,[,Array,[,Array,[,Boolean,,,71,],,,041,],,,577652,],;,},$R,(,_,,,_,:,C8,;,f,,,_0,:,Array,[,Boolean,,,06,],),{,Continue,;,},},<EOF>''',101))

    def test_2377(self):
        self.assertTrue(TestLexer.test('''Class BqzE:i{Val qV_:Array [String ,0b10011];}Class g{}Class J:E{__(p,_Ff:S2){Return ;} }Class _{}Class W:_{Val _,__8c:Array [Float ,0106];$tc(){} }Class x5:_{}''','''Class,BqzE,:,i,{,Val,qV_,:,Array,[,String,,,0b10011,],;,},Class,g,{,},Class,J,:,E,{,__,(,p,,,_Ff,:,S2,),{,Return,;,},},Class,_,{,},Class,W,:,_,{,Val,_,,,__8c,:,Array,[,Float,,,0106,],;,$tc,(,),{,},},Class,x5,:,_,{,},<EOF>''',101))

    def test_2378(self):
        self.assertTrue(TestLexer.test('''Class ___:o{$x(y4_x:Array [Array [String ,68],1];_:Int ;_:String ;f_:Boolean ;__a6_51K,_5,X:P;_:Int ){Return -_1::$4s;} }Class _:L{}''','''Class,___,:,o,{,$x,(,y4_x,:,Array,[,Array,[,String,,,68,],,,1,],;,_,:,Int,;,_,:,String,;,f_,:,Boolean,;,__a6_51K,,,_5,,,X,:,P,;,_,:,Int,),{,Return,-,_1,::,$4s,;,},},Class,_,:,L,{,},<EOF>''',101))

    def test_2379(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _1{Var $3:Array [String ,0127];}Class a4Y{}Class __O:Y6{}Class _{Val $1c,__e_,$p_,I:Boolean ;}Class ff690{}''','''Class,_,{,},Class,_1,{,Var,$3,:,Array,[,String,,,0127,],;,},Class,a4Y,{,},Class,__O,:,Y6,{,},Class,_,{,Val,$1c,,,__e_,,,$p_,,,I,:,Boolean,;,},Class,ff690,{,},<EOF>''',101))

    def test_2380(self):
        self.assertTrue(TestLexer.test('''Class l:f3R{Var O_:Array [Array [String ,0x5],0b1011010];}Class _5:A_ST{Val _9:String ;Var _,__:Array [String ,0x11];Var _:F2;}''','''Class,l,:,f3R,{,Var,O_,:,Array,[,Array,[,String,,,0x5,],,,0b1011010,],;,},Class,_5,:,A_ST,{,Val,_9,:,String,;,Var,_,,,__,:,Array,[,String,,,0x11,],;,Var,_,:,F2,;,},<EOF>''',101))

    def test_2381(self):
        self.assertTrue(TestLexer.test('''Class s{}Class I{Constructor (_:Array [Array [Array [Array [Array [Array [String ,79],18],031],0X16],0x12],7]){}Destructor (){} }''','''Class,s,{,},Class,I,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,79,],,,18,],,,031,],,,0X16,],,,0x12,],,,7,],),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_2382(self):
        self.assertTrue(TestLexer.test('''Class _4__:_{Val $03a__:Array [Array [Int ,06],06];Val a,_:Array [String ,0x5];}Class _{Destructor (){k5::$6()._();Var _,B:Array [Array [Array [Array [Int ,02],0b1],9],4];} }Class __97__{Constructor (){} }Class __z:_{}''','''Class,_4__,:,_,{,Val,$03a__,:,Array,[,Array,[,Int,,,06,],,,06,],;,Val,a,,,_,:,Array,[,String,,,0x5,],;,},Class,_,{,Destructor,(,),{,k5,::,$6,(,),.,_,(,),;,Var,_,,,B,:,Array,[,Array,[,Array,[,Array,[,Int,,,02,],,,0b1,],,,9,],,,4,],;,},},Class,__97__,{,Constructor,(,),{,},},Class,__z,:,_,{,},<EOF>''',101))

    def test_2383(self):
        self.assertTrue(TestLexer.test('''Class _:__{Val M,$_:Array [Float ,0X20];Var $s:Float ;}Class u:_L_{Destructor (){Continue ;Var Oj,_:Array [Array [Int ,0x8],0B111111];Continue ;}Var _3,v:_;}''','''Class,_,:,__,{,Val,M,,,$_,:,Array,[,Float,,,0X20,],;,Var,$s,:,Float,;,},Class,u,:,_L_,{,Destructor,(,),{,Continue,;,Var,Oj,,,_,:,Array,[,Array,[,Int,,,0x8,],,,0B111111,],;,Continue,;,},Var,_3,,,v,:,_,;,},<EOF>''',101))

    def test_2384(self):
        self.assertTrue(TestLexer.test('''Class _:_7j2_{Var _DZf,$Cy_,$o9_d,$_:_;$O8V_(V__e_,_____:Array [Array [Array [Int ,0140],0140],0x18];i_:z_o_2;___,_95,d___48yid:_8){} }Class _:_9{}''','''Class,_,:,_7j2_,{,Var,_DZf,,,$Cy_,,,$o9_d,,,$_,:,_,;,$O8V_,(,V__e_,,,_____,:,Array,[,Array,[,Array,[,Int,,,0140,],,,0140,],,,0x18,],;,i_,:,z_o_2,;,___,,,_95,,,d___48yid,:,_8,),{,},},Class,_,:,_9,{,},<EOF>''',101))

    def test_2385(self):
        self.assertTrue(TestLexer.test('''Class g:__{Constructor (Z,I:Array [Array [Array [Array [Int ,01],07],3],0XC]){} }Class C_:V{}Class O:_{Constructor (_c_:V;Dc____,_:Array [Float ,9];_dOL_:Array [Array [Array [Array [Float ,07],0B111000],0142],0XBD]){} }''','''Class,g,:,__,{,Constructor,(,Z,,,I,:,Array,[,Array,[,Array,[,Array,[,Int,,,01,],,,07,],,,3,],,,0XC,],),{,},},Class,C_,:,V,{,},Class,O,:,_,{,Constructor,(,_c_,:,V,;,Dc____,,,_,:,Array,[,Float,,,9,],;,_dOL_,:,Array,[,Array,[,Array,[,Array,[,Float,,,07,],,,0B111000,],,,0142,],,,0XBD,],),{,},},<EOF>''',101))

    def test_2386(self):
        self.assertTrue(TestLexer.test('''Class M:V1F9V{}Class _Y15_:U1{Val M5:Array [Array [Array [Array [Float ,0b1],0B1],0X3A],36];Val $__,_,$f_84_m:Int ;}''','''Class,M,:,V1F9V,{,},Class,_Y15_,:,U1,{,Val,M5,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,0B1,],,,0X3A,],,,36,],;,Val,$__,,,_,,,$f_84_m,:,Int,;,},<EOF>''',101))

    def test_2387(self):
        self.assertTrue(TestLexer.test('''Class b:f{}Class _:_vv_{}Class uh:_{Val N30,J,k:Array [String ,0x2A];$78T(FI:M;_76_E__LG:_4MK){}Destructor (){} }Class _{$s(){Break ;} }Class K:W_{}''','''Class,b,:,f,{,},Class,_,:,_vv_,{,},Class,uh,:,_,{,Val,N30,,,J,,,k,:,Array,[,String,,,0x2A,],;,$78T,(,FI,:,M,;,_76_E__LG,:,_4MK,),{,},Destructor,(,),{,},},Class,_,{,$s,(,),{,Break,;,},},Class,K,:,W_,{,},<EOF>''',101))

    def test_2388(self):
        self.assertTrue(TestLexer.test('''Class v{$_0_6(pz:Array [Array [Array [Array [Int ,0XE],0X32],0x29],047];G,_:Array [Array [Array [Float ,0113],2],3_7]){} }''','''Class,v,{,$_0_6,(,pz,:,Array,[,Array,[,Array,[,Array,[,Int,,,0XE,],,,0X32,],,,0x29,],,,047,],;,G,,,_,:,Array,[,Array,[,Array,[,Float,,,0113,],,,2,],,,37,],),{,},},<EOF>''',101))

    def test_2389(self):
        self.assertTrue(TestLexer.test('''Class O{Val $_,$u_C,$477776,$66,$g:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0b1001110],0B1010001],3],04],024],61],0B1_0],0B1010001],0b1],0b1];}Class _{}Class __W{__tN(){}D(){}Val HY,$9:Array [Boolean ,0X50];Val $d,__tR:M;}''','''Class,O,{,Val,$_,,,$u_C,,,$477776,,,$66,,,$g,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b1001110,],,,0B1010001,],,,3,],,,04,],,,024,],,,61,],,,0B10,],,,0B1010001,],,,0b1,],,,0b1,],;,},Class,_,{,},Class,__W,{,__tN,(,),{,},D,(,),{,},Val,HY,,,$9,:,Array,[,Boolean,,,0X50,],;,Val,$d,,,__tR,:,M,;,},<EOF>''',101))

    def test_2390(self):
        self.assertTrue(TestLexer.test('''Class __3{}Class ____5_2_{}Class _{Val E:Array [Array [Array [Array [String ,0B1_0],3_12],4],0b1_0];Destructor (){} }Class W:m7{}''','''Class,__3,{,},Class,____5_2_,{,},Class,_,{,Val,E,:,Array,[,Array,[,Array,[,Array,[,String,,,0B10,],,,312,],,,4,],,,0b10,],;,Destructor,(,),{,},},Class,W,:,m7,{,},<EOF>''',101))

    def test_2391(self):
        self.assertTrue(TestLexer.test('''Class _:_137{}Class ___:tO7{Val f6,$y1,H,$_8:Boolean ;_(){}H0(dx:Array [Float ,0B1010000];___8,g,b8Y:Array [Array [Boolean ,0X13],07]){} }Class _{}''','''Class,_,:,_137,{,},Class,___,:,tO7,{,Val,f6,,,$y1,,,H,,,$_8,:,Boolean,;,_,(,),{,},H0,(,dx,:,Array,[,Float,,,0B1010000,],;,___8,,,g,,,b8Y,:,Array,[,Array,[,Boolean,,,0X13,],,,07,],),{,},},Class,_,{,},<EOF>''',101))

    def test_2392(self):
        self.assertTrue(TestLexer.test('''Class S{$44(_:Int ;M1,_,SZB,__,X:Array [Array [Array [String ,0X5A],0B10110],5_3_1];_9:I6_){}Var $u:Array [String ,40];}''','''Class,S,{,$44,(,_,:,Int,;,M1,,,_,,,SZB,,,__,,,X,:,Array,[,Array,[,Array,[,String,,,0X5A,],,,0B10110,],,,531,],;,_9,:,I6_,),{,},Var,$u,:,Array,[,String,,,40,],;,},<EOF>''',101))

    def test_2393(self):
        self.assertTrue(TestLexer.test('''Class Y_:D{}Class jVi5M:P{Destructor (){New __()._yQ();}Val $_:Array [Array [Array [Array [Float ,0x17],025],0X4A],0XA6];}''','''Class,Y_,:,D,{,},Class,jVi5M,:,P,{,Destructor,(,),{,New,__,(,),.,_yQ,(,),;,},Val,$_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x17,],,,025,],,,0X4A,],,,0XA6,],;,},<EOF>''',101))

    def test_2394(self):
        self.assertTrue(TestLexer.test('''Class _Ua2{Destructor (){Break ;}Destructor (){} }Class _:__i_d{Destructor (){}Constructor (){}Constructor (h:_qpNS){} }Class __:W_cABX_Jp{Val $9_,_:Int ;}Class _:Y{}''','''Class,_Ua2,{,Destructor,(,),{,Break,;,},Destructor,(,),{,},},Class,_,:,__i_d,{,Destructor,(,),{,},Constructor,(,),{,},Constructor,(,h,:,_qpNS,),{,},},Class,__,:,W_cABX_Jp,{,Val,$9_,,,_,:,Int,;,},Class,_,:,Y,{,},<EOF>''',101))

    def test_2395(self):
        self.assertTrue(TestLexer.test('''Class J:_{Val $_:String ;Destructor (){} }Class _{Val $6O9,__m:M;Val $PlR,a,$6:Array [Array [Boolean ,02],53];}Class BL:_{Val a:_O7;}Class DC9:__{}''','''Class,J,:,_,{,Val,$_,:,String,;,Destructor,(,),{,},},Class,_,{,Val,$6O9,,,__m,:,M,;,Val,$PlR,,,a,,,$6,:,Array,[,Array,[,Boolean,,,02,],,,53,],;,},Class,BL,:,_,{,Val,a,:,_O7,;,},Class,DC9,:,__,{,},<EOF>''',101))

    def test_2396(self):
        self.assertTrue(TestLexer.test('''Class __{$1(_:Boolean ){}$_9(){}Destructor (){Return ;} }Class Y{Val K8S_6:Float ;Val BY,$Tj_,x,_7_,$_,$_,_:Array [Float ,033];Var _L1:I;Val $_m8re3:Boolean =!--_::$5.C1BhNe8_G.h._().I+-_::$w_R.cO9_85_._O0.K_____6_c.B;}''','''Class,__,{,$1,(,_,:,Boolean,),{,},$_9,(,),{,},Destructor,(,),{,Return,;,},},Class,Y,{,Val,K8S_6,:,Float,;,Val,BY,,,$Tj_,,,x,,,_7_,,,$_,,,$_,,,_,:,Array,[,Float,,,033,],;,Var,_L1,:,I,;,Val,$_m8re3,:,Boolean,=,!,-,-,_,::,$5,.,C1BhNe8_G,.,h,.,_,(,),.,I,+,-,_,::,$w_R,.,cO9_85_,.,_O0,.,K_____6_c,.,B,;,},<EOF>''',101))

    def test_2397(self):
        self.assertTrue(TestLexer.test('''Class h:y_{Val _,$z4__W:b0g;Constructor (){}Var _:Array [Array [Array [Array [Array [String ,0104],0x1],0X32],0b110100],0b110100];}''','''Class,h,:,y_,{,Val,_,,,$z4__W,:,b0g,;,Constructor,(,),{,},Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0104,],,,0x1,],,,0X32,],,,0b110100,],,,0b110100,],;,},<EOF>''',101))

    def test_2398(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (u_M0d_8:String ){}Var O_:String ;Constructor (_,_,v:String ;J5:Array [Int ,0xF];z62,_,_:Boolean ){}Var $4:Array [Boolean ,0b10];}''','''Class,_,{,Constructor,(,u_M0d_8,:,String,),{,},Var,O_,:,String,;,Constructor,(,_,,,_,,,v,:,String,;,J5,:,Array,[,Int,,,0xF,],;,z62,,,_,,,_,:,Boolean,),{,},Var,$4,:,Array,[,Boolean,,,0b10,],;,},<EOF>''',101))

    def test_2399(self):
        self.assertTrue(TestLexer.test('''Class _:G{}Class _6_71{Destructor (){}Val l,$Tb4e,$N:Array [Array [Array [Array [Array [Array [Array [Int ,0b10_0],0xD],74],0b10111],0B1001011],0X9],06];$_B(_:Int ){} }Class Y{}Class B_{Var U,$_:Boolean ;}''','''Class,_,:,G,{,},Class,_6_71,{,Destructor,(,),{,},Val,l,,,$Tb4e,,,$N,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b100,],,,0xD,],,,74,],,,0b10111,],,,0B1001011,],,,0X9,],,,06,],;,$_B,(,_,:,Int,),{,},},Class,Y,{,},Class,B_,{,Var,U,,,$_,:,Boolean,;,},<EOF>''',101))

    def test_2400(self):
        self.assertTrue(TestLexer.test('''Class _:_1{}Class _{Var X,_E,w,$6:O;}Class c3__1rZ{Var y2q:Array [Array [Array [Array [Array [Boolean ,06],0B1],0X28],0x1],044];}''','''Class,_,:,_1,{,},Class,_,{,Var,X,,,_E,,,w,,,$6,:,O,;,},Class,c3__1rZ,{,Var,y2q,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,06,],,,0B1,],,,0X28,],,,0x1,],,,044,],;,},<EOF>''',101))

    def test_2401(self):
        self.assertTrue(TestLexer.test('''Class _1{Constructor (n_:Array [Array [Array [Float ,44],0XD],0B1];_:Array [Array [Array [Array [Float ,0b1_001],0B11_10_1],0X6],6]){} }Class _8_{$_(n:Boolean ){} }''','''Class,_1,{,Constructor,(,n_,:,Array,[,Array,[,Array,[,Float,,,44,],,,0XD,],,,0B1,],;,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1001,],,,0B11101,],,,0X6,],,,6,],),{,},},Class,_8_,{,$_,(,n,:,Boolean,),{,},},<EOF>''',101))

    def test_2402(self):
        self.assertTrue(TestLexer.test('''Class _:D{}Class _:mrV_l{}Class _{Var $a54_,_:Array [Array [Float ,0b1_1],8];}Class _{}Class R:j{}Class i_:l_P{}''','''Class,_,:,D,{,},Class,_,:,mrV_l,{,},Class,_,{,Var,$a54_,,,_,:,Array,[,Array,[,Float,,,0b11,],,,8,],;,},Class,_,{,},Class,R,:,j,{,},Class,i_,:,l_P,{,},<EOF>''',101))

    def test_2403(self):
        self.assertTrue(TestLexer.test('''Class E1_V{Destructor (){Val r_93_:Array [Float ,0B1];Continue ;Var _,_,_,_d,__2,__Y,_83C,__4:_s;}Val $__,$Af1_:String ;Var a,Bb,j_,_,$_:_M7;Val Zz_8_,wu_:W7;Var $_,$__h_:Array [Int ,06_52];}Class Y_{}''','''Class,E1_V,{,Destructor,(,),{,Val,r_93_,:,Array,[,Float,,,0B1,],;,Continue,;,Var,_,,,_,,,_,,,_d,,,__2,,,__Y,,,_83C,,,__4,:,_s,;,},Val,$__,,,$Af1_,:,String,;,Var,a,,,Bb,,,j_,,,_,,,$_,:,_M7,;,Val,Zz_8_,,,wu_,:,W7,;,Var,$_,,,$__h_,:,Array,[,Int,,,0652,],;,},Class,Y_,{,},<EOF>''',101))

    def test_2404(self):
        self.assertTrue(TestLexer.test('''Class _44LD:_{_(){Val B:Int ;}Val $w:n;}Class _8:B_ZQ9{}Class G__Y_:_{Var $G,_5_:_;}Class o:__{}Class _{}Class A{Val $_kU_:Array [Array [Array [Boolean ,0x17],05726_7],0142];}''','''Class,_44LD,:,_,{,_,(,),{,Val,B,:,Int,;,},Val,$w,:,n,;,},Class,_8,:,B_ZQ9,{,},Class,G__Y_,:,_,{,Var,$G,,,_5_,:,_,;,},Class,o,:,__,{,},Class,_,{,},Class,A,{,Val,$_kU_,:,Array,[,Array,[,Array,[,Boolean,,,0x17,],,,057267,],,,0142,],;,},<EOF>''',101))

    def test_2405(self):
        self.assertTrue(TestLexer.test('''Class _Oev3{Constructor (B,_:r_;__:String ;_,_c:String ;__,__M,_K:Boolean ;j:Array [Array [Array [Float ,03],0B1000111],0120]){} }Class hP8m0:_b_{Destructor (){} }''','''Class,_Oev3,{,Constructor,(,B,,,_,:,r_,;,__,:,String,;,_,,,_c,:,String,;,__,,,__M,,,_K,:,Boolean,;,j,:,Array,[,Array,[,Array,[,Float,,,03,],,,0B1000111,],,,0120,],),{,},},Class,hP8m0,:,_b_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2406(self):
        self.assertTrue(TestLexer.test('''Class __{}Class x_1{Val _,$K,k:Array [String ,04];Val $2,_:Array [Array [String ,0x21],0b100011];}Class d:_b{_(Hk:Array [String ,6]){} }''','''Class,__,{,},Class,x_1,{,Val,_,,,$K,,,k,:,Array,[,String,,,04,],;,Val,$2,,,_,:,Array,[,Array,[,String,,,0x21,],,,0b100011,],;,},Class,d,:,_b,{,_,(,Hk,:,Array,[,String,,,6,],),{,},},<EOF>''',101))

    def test_2407(self):
        self.assertTrue(TestLexer.test('''Class _:_C{Val $2,cS,i,_,$61_,X:Array [String ,011];Var $M82,$0q_CB_,Y:Array [Boolean ,0XE];Constructor (a_,_K,Q,i8z,_:k_;__:__59;R,_:B){} }''','''Class,_,:,_C,{,Val,$2,,,cS,,,i,,,_,,,$61_,,,X,:,Array,[,String,,,011,],;,Var,$M82,,,$0q_CB_,,,Y,:,Array,[,Boolean,,,0XE,],;,Constructor,(,a_,,,_K,,,Q,,,i8z,,,_,:,k_,;,__,:,__59,;,R,,,_,:,B,),{,},},<EOF>''',101))

    def test_2408(self):
        self.assertTrue(TestLexer.test('''Class qf:c{$02x(_M,pu:_;_,F_:Array [Array [Array [Int ,0134],0b1],32];p,G3L:Int ){} }Class _{}Class _{Destructor (){}Destructor (){} }''','''Class,qf,:,c,{,$02x,(,_M,,,pu,:,_,;,_,,,F_,:,Array,[,Array,[,Array,[,Int,,,0134,],,,0b1,],,,32,],;,p,,,G3L,:,Int,),{,},},Class,_,{,},Class,_,{,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_2409(self):
        self.assertTrue(TestLexer.test('''Class H{}Class _:sH{}Class _:_82{Var G,_P,$_C_:Array [Array [Array [Float ,3_06],0B101011],92];}Class _56:__8{}Class M:_D{}Class Wv:___{}''','''Class,H,{,},Class,_,:,sH,{,},Class,_,:,_82,{,Var,G,,,_P,,,$_C_,:,Array,[,Array,[,Array,[,Float,,,306,],,,0B101011,],,,92,],;,},Class,_56,:,__8,{,},Class,M,:,_D,{,},Class,Wv,:,___,{,},<EOF>''',101))

    def test_2410(self):
        self.assertTrue(TestLexer.test('''Class r:g__e{Val Cu9p2_7:Int ;}Class pb{Constructor (){Continue ;Break ;} }Class _3_{Constructor (_9S,k4,tN:_;_,p,C,_,H,u6m147_l:_){} }Class F{}Class f:_0{}''','''Class,r,:,g__e,{,Val,Cu9p2_7,:,Int,;,},Class,pb,{,Constructor,(,),{,Continue,;,Break,;,},},Class,_3_,{,Constructor,(,_9S,,,k4,,,tN,:,_,;,_,,,p,,,C,,,_,,,H,,,u6m147_l,:,_,),{,},},Class,F,{,},Class,f,:,_0,{,},<EOF>''',101))

    def test_2411(self):
        self.assertTrue(TestLexer.test('''Class H{Destructor (){Val __,Y_X__,_8,_,n,_:T7;{ {Continue ;Return ;} }} }Class __{Val $107__:Array [Float ,0114];}''','''Class,H,{,Destructor,(,),{,Val,__,,,Y_X__,,,_8,,,_,,,n,,,_,:,T7,;,{,{,Continue,;,Return,;,},},},},Class,__,{,Val,$107__,:,Array,[,Float,,,0114,],;,},<EOF>''',101))

    def test_2412(self):
        self.assertTrue(TestLexer.test('''Class _6{}Class j__4{_G_ZJ9(n:_4_;_,P,_:Array [Array [Array [Array [Array [String ,057],0b101],057],0X9],16_7];p:U_){Break ;} }''','''Class,_6,{,},Class,j__4,{,_G_ZJ9,(,n,:,_4_,;,_,,,P,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,057,],,,0b101,],,,057,],,,0X9,],,,167,],;,p,:,U_,),{,Break,;,},},<EOF>''',101))

    def test_2413(self):
        self.assertTrue(TestLexer.test('''Class _d_:w{Constructor (w,_,U,u63,_,gR:_h;b:String ;_O_:Int ;__:Array [Float ,98];_____8,R:String ;_,_,_S,_0,_,_3,ZS,lE,_:Array [Array [String ,14_04],0b111101]){} }Class _{Val $4_:String =!_0J3z::$I;Destructor (){}Constructor (){}Destructor (){} }Class E{}''','''Class,_d_,:,w,{,Constructor,(,w,,,_,,,U,,,u63,,,_,,,gR,:,_h,;,b,:,String,;,_O_,:,Int,;,__,:,Array,[,Float,,,98,],;,_____8,,,R,:,String,;,_,,,_,,,_S,,,_0,,,_,,,_3,,,ZS,,,lE,,,_,:,Array,[,Array,[,String,,,1404,],,,0b111101,],),{,},},Class,_,{,Val,$4_,:,String,=,!,_0J3z,::,$I,;,Destructor,(,),{,},Constructor,(,),{,},Destructor,(,),{,},},Class,E,{,},<EOF>''',101))

    def test_2414(self):
        self.assertTrue(TestLexer.test('''Class _:Tw_{$O(){}Constructor (){}Constructor (_:Array [Float ,0b1001000];__85r,O9:Array [Array [Array [Int ,0x4],0B1100100],0b1]){ {} }}''','''Class,_,:,Tw_,{,$O,(,),{,},Constructor,(,),{,},Constructor,(,_,:,Array,[,Float,,,0b1001000,],;,__85r,,,O9,:,Array,[,Array,[,Array,[,Int,,,0x4,],,,0B1100100,],,,0b1,],),{,{,},},},<EOF>''',101))

    def test_2415(self):
        self.assertTrue(TestLexer.test('''Class _G:_{Destructor (){Val d,P,_:Array [Array [Boolean ,0B1001],0XC];}Destructor (){}Var $hR939:Float ;}Class s_{Constructor (){} }Class Z_{}''','''Class,_G,:,_,{,Destructor,(,),{,Val,d,,,P,,,_,:,Array,[,Array,[,Boolean,,,0B1001,],,,0XC,],;,},Destructor,(,),{,},Var,$hR939,:,Float,;,},Class,s_,{,Constructor,(,),{,},},Class,Z_,{,},<EOF>''',101))

    def test_2416(self):
        self.assertTrue(TestLexer.test('''Class U7:K{Constructor (_,G_:Float ;a7,_,_m__:Array [Array [Array [Int ,0xE],4_8],0x21];_:Array [Array [Array [Array [Array [Float ,20],033],0x21],0B1_0_0],0B1_0]){Val B_3,_:Float ;} }Class _6:_{_(_,_6:Array [Array [Int ,7],0X37];Y,aos:E){}Constructor (_0,U2,__4,_t,Q:Array [Float ,0XE_8_A]){}Constructor (){}Val X__3,_R:Array [Array [Float ,0b101110],0x8];F(){} }Class lm_{Destructor (){}Constructor (){} }''','''Class,U7,:,K,{,Constructor,(,_,,,G_,:,Float,;,a7,,,_,,,_m__,:,Array,[,Array,[,Array,[,Int,,,0xE,],,,48,],,,0x21,],;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,20,],,,033,],,,0x21,],,,0B100,],,,0B10,],),{,Val,B_3,,,_,:,Float,;,},},Class,_6,:,_,{,_,(,_,,,_6,:,Array,[,Array,[,Int,,,7,],,,0X37,],;,Y,,,aos,:,E,),{,},Constructor,(,_0,,,U2,,,__4,,,_t,,,Q,:,Array,[,Float,,,0XE8A,],),{,},Constructor,(,),{,},Val,X__3,,,_R,:,Array,[,Array,[,Float,,,0b101110,],,,0x8,],;,F,(,),{,},},Class,lm_,{,Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_2417(self):
        self.assertTrue(TestLexer.test('''Class r:__w{}Class C{}Class r_zve{$e_(C84,h_5_8,_H8:Array [Array [Array [Array [Array [Array [Array [Boolean ,0X7],0x28],0b1011100],0x28],0b1011100],016],2];_p:Array [Array [Int ,4],38]){Return ;{}Var _:Array [Array [Array [Array [Array [Int ,016],1],01],0x2F_8],38];} }''','''Class,r,:,__w,{,},Class,C,{,},Class,r_zve,{,$e_,(,C84,,,h_5_8,,,_H8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X7,],,,0x28,],,,0b1011100,],,,0x28,],,,0b1011100,],,,016,],,,2,],;,_p,:,Array,[,Array,[,Int,,,4,],,,38,],),{,Return,;,{,},Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,016,],,,1,],,,01,],,,0x2F8,],,,38,],;,},},<EOF>''',101))

    def test_2418(self):
        self.assertTrue(TestLexer.test('''Class __54:_{}Class Z:Q_L_{}Class _R{Var _:Float ;Constructor (o_:Array [Array [Array [Int ,0B1],063],0b11]){} }Class _8_0_:g{Val $_:String ;Constructor (UF4_l_U,Y,NF:k;b,_v0:__M){} }''','''Class,__54,:,_,{,},Class,Z,:,Q_L_,{,},Class,_R,{,Var,_,:,Float,;,Constructor,(,o_,:,Array,[,Array,[,Array,[,Int,,,0B1,],,,063,],,,0b11,],),{,},},Class,_8_0_,:,g,{,Val,$_,:,String,;,Constructor,(,UF4_l_U,,,Y,,,NF,:,k,;,b,,,_v0,:,__M,),{,},},<EOF>''',101))

    def test_2419(self):
        self.assertTrue(TestLexer.test('''Class _4{Constructor (E_g,_4X:Array [Boolean ,06];J_oh:_){Continue ;Return ;} }Class c_K:x{Val $mU9:S___;}Class __:S4_{Constructor (_:Array [Int ,0121]){} }''','''Class,_4,{,Constructor,(,E_g,,,_4X,:,Array,[,Boolean,,,06,],;,J_oh,:,_,),{,Continue,;,Return,;,},},Class,c_K,:,x,{,Val,$mU9,:,S___,;,},Class,__,:,S4_,{,Constructor,(,_,:,Array,[,Int,,,0121,],),{,},},<EOF>''',101))

    def test_2420(self):
        self.assertTrue(TestLexer.test('''Class _:_96_j{Destructor (){Var _,X_:Array [Float ,0x20];}Destructor (){}__(_:Array [Int ,01_0];_14,_,h_K6:Float ;qY,d5D,W,_:_){} }''','''Class,_,:,_96_j,{,Destructor,(,),{,Var,_,,,X_,:,Array,[,Float,,,0x20,],;,},Destructor,(,),{,},__,(,_,:,Array,[,Int,,,010,],;,_14,,,_,,,h_K6,:,Float,;,qY,,,d5D,,,W,,,_,:,_,),{,},},<EOF>''',101))

    def test_2421(self):
        self.assertTrue(TestLexer.test('''Class q{Val $2:_E_hQ_;Var _:i;Val $_:_r;}Class D{Destructor (){}Var _15e_858q,$0:Array [Boolean ,0X45];Var $9,$_L:Int ;}Class _9{}''','''Class,q,{,Val,$2,:,_E_hQ_,;,Var,_,:,i,;,Val,$_,:,_r,;,},Class,D,{,Destructor,(,),{,},Var,_15e_858q,,,$0,:,Array,[,Boolean,,,0X45,],;,Var,$9,,,$_L,:,Int,;,},Class,_9,{,},<EOF>''',101))

    def test_2422(self):
        self.assertTrue(TestLexer.test('''Class _:j4{}Class Z1_{Constructor (M_,_70:Array [Array [Array [Float ,05],5],0X25BD];_:Array [Array [Float ,03],0111];J:Array [Array [Array [Int ,41],0b1100011],0B1]){S::$M();{} }}Class z_K:A_{}''','''Class,_,:,j4,{,},Class,Z1_,{,Constructor,(,M_,,,_70,:,Array,[,Array,[,Array,[,Float,,,05,],,,5,],,,0X25BD,],;,_,:,Array,[,Array,[,Float,,,03,],,,0111,],;,J,:,Array,[,Array,[,Array,[,Int,,,41,],,,0b1100011,],,,0B1,],),{,S,::,$M,(,),;,{,},},},Class,z_K,:,A_,{,},<EOF>''',101))

    def test_2423(self):
        self.assertTrue(TestLexer.test('''Class _:_{Var _y6:Array [Array [Array [Float ,0xA_8_A_A],0B111011],4722];}Class u7j_{}Class ___{Destructor (){Return ;} }Class _3{}''','''Class,_,:,_,{,Var,_y6,:,Array,[,Array,[,Array,[,Float,,,0xA8AA,],,,0B111011,],,,4722,],;,},Class,u7j_,{,},Class,___,{,Destructor,(,),{,Return,;,},},Class,_3,{,},<EOF>''',101))

    def test_2424(self):
        self.assertTrue(TestLexer.test('''Class _7{Destructor (){}Constructor (_M,DS,w_:Array [Array [Float ,0x3A],58];_,i_7,Q,__:Array [Array [Array [Array [Boolean ,5],0B1],7_0],0B1011110]){} }''','''Class,_7,{,Destructor,(,),{,},Constructor,(,_M,,,DS,,,w_,:,Array,[,Array,[,Float,,,0x3A,],,,58,],;,_,,,i_7,,,Q,,,__,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,5,],,,0B1,],,,70,],,,0B1011110,],),{,},},<EOF>''',101))

    def test_2425(self):
        self.assertTrue(TestLexer.test('''Class _{}Class n{_8(){D_10_06::$8_();}$1(){} }Class __:d_{}Class __{}Class _1:_T1{}Class _D_686gH0_V{}Class z:P{}''','''Class,_,{,},Class,n,{,_8,(,),{,D_10_06,::,$8_,(,),;,},$1,(,),{,},},Class,__,:,d_,{,},Class,__,{,},Class,_1,:,_T1,{,},Class,_D_686gH0_V,{,},Class,z,:,P,{,},<EOF>''',101))

    def test_2426(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){}Destructor (){}Var l,$g:Array [Array [Boolean ,072],716];Constructor (){}$_(){UV::$7();} }''','''Class,_,{,Destructor,(,),{,},Destructor,(,),{,},Var,l,,,$g,:,Array,[,Array,[,Boolean,,,072,],,,716,],;,Constructor,(,),{,},$_,(,),{,UV,::,$7,(,),;,},},<EOF>''',101))

    def test_2427(self):
        self.assertTrue(TestLexer.test('''Class _E:_{Var u:O;Constructor (_2g4J:Array [Float ,6];_16,_:String ;Y__,y_k,_,_W,k:Array [Array [String ,75],0106]){Return ;}Val $2:Float ;}''','''Class,_E,:,_,{,Var,u,:,O,;,Constructor,(,_2g4J,:,Array,[,Float,,,6,],;,_16,,,_,:,String,;,Y__,,,y_k,,,_,,,_W,,,k,:,Array,[,Array,[,String,,,75,],,,0106,],),{,Return,;,},Val,$2,:,Float,;,},<EOF>''',101))

    def test_2428(self):
        self.assertTrue(TestLexer.test('''Class d{}Class __:k_s{Val $_:Array [Array [String ,0B1_110],4];Var _:Array [Array [Float ,0b1_0],0B1_11];Var $L,j_,$301L,$_:RB;}''','''Class,d,{,},Class,__,:,k_s,{,Val,$_,:,Array,[,Array,[,String,,,0B1110,],,,4,],;,Var,_,:,Array,[,Array,[,Float,,,0b10,],,,0B111,],;,Var,$L,,,j_,,,$301L,,,$_,:,RB,;,},<EOF>''',101))

    def test_2429(self):
        self.assertTrue(TestLexer.test('''Class _Zv7{}Class O_:__P{Val _3_2,_:y70;}Class n9:L_{_(){}Destructor (){Return ;}Constructor (_M:String ;_d_2:Array [Array [Int ,0X60],057]){} }''','''Class,_Zv7,{,},Class,O_,:,__P,{,Val,_3_2,,,_,:,y70,;,},Class,n9,:,L_,{,_,(,),{,},Destructor,(,),{,Return,;,},Constructor,(,_M,:,String,;,_d_2,:,Array,[,Array,[,Int,,,0X60,],,,057,],),{,},},<EOF>''',101))

    def test_2430(self):
        self.assertTrue(TestLexer.test('''Class __3J7{}Class cDe:N{$_(V:l;g:Array [Array [Float ,0B10001],0143];ILQ7u__:Array [Boolean ,0X2_9_C];_:W){} }Class _{}Class _{Val $_mi_GC_,$3b:Int ;}''','''Class,__3J7,{,},Class,cDe,:,N,{,$_,(,V,:,l,;,g,:,Array,[,Array,[,Float,,,0B10001,],,,0143,],;,ILQ7u__,:,Array,[,Boolean,,,0X29C,],;,_,:,W,),{,},},Class,_,{,},Class,_,{,Val,$_mi_GC_,,,$3b,:,Int,;,},<EOF>''',101))

    def test_2431(self):
        self.assertTrue(TestLexer.test('''Class _7_:_{}Class G{Destructor (){Return ;}$_(){}$XI(){Continue ;} }Class Z{Var $3:Array [Array [Float ,04],05];Var $j,zrH_0:V95W518;}''','''Class,_7_,:,_,{,},Class,G,{,Destructor,(,),{,Return,;,},$_,(,),{,},$XI,(,),{,Continue,;,},},Class,Z,{,Var,$3,:,Array,[,Array,[,Float,,,04,],,,05,],;,Var,$j,,,zrH_0,:,V95W518,;,},<EOF>''',101))

    def test_2432(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (Tr:Array [Int ,30];AP:FQtQ1){} }Class WO{}Class B_:E{Val $0d,_:Array [Array [Array [Array [Array [Boolean ,0x27],30],0125],0X57],5];}Class vz:_{}''','''Class,_,{,Constructor,(,Tr,:,Array,[,Int,,,30,],;,AP,:,FQtQ1,),{,},},Class,WO,{,},Class,B_,:,E,{,Val,$0d,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x27,],,,30,],,,0125,],,,0X57,],,,5,],;,},Class,vz,:,_,{,},<EOF>''',101))

    def test_2433(self):
        self.assertTrue(TestLexer.test('''Class ___:uM{$_1(Y,_:Array [Array [Array [Array [Array [Array [Int ,0xE],041],71],0B1_0_00],0B1_1_1],9];bK8_A_5_:Array [Boolean ,97]){}Constructor (){Continue ;} }''','''Class,___,:,uM,{,$_1,(,Y,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0xE,],,,041,],,,71,],,,0B1000,],,,0B111,],,,9,],;,bK8_A_5_,:,Array,[,Boolean,,,97,],),{,},Constructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_2434(self):
        self.assertTrue(TestLexer.test('''Class _{}Class eRM_{Constructor (){ {} }$_3(){}Constructor (){ {} }}Class N_c{}Class _:A{_(){}A(_y,c,_6,y_2X9_,_,_zJ0:m;_,_UOZ_:Array [Array [Int ,054],94]){ {} }}''','''Class,_,{,},Class,eRM_,{,Constructor,(,),{,{,},},$_3,(,),{,},Constructor,(,),{,{,},},},Class,N_c,{,},Class,_,:,A,{,_,(,),{,},A,(,_y,,,c,,,_6,,,y_2X9_,,,_,,,_zJ0,:,m,;,_,,,_UOZ_,:,Array,[,Array,[,Int,,,054,],,,94,],),{,{,},},},<EOF>''',101))

    def test_2435(self):
        self.assertTrue(TestLexer.test('''Class _0:_k57{Constructor (){}Constructor (E__2_,_5:_L;_5_,_,_c,__7__J:Array [Array [Array [Array [Array [Array [Array [Int ,0126],94],0b100000],0X64],94],016],0b10]){} }''','''Class,_0,:,_k57,{,Constructor,(,),{,},Constructor,(,E__2_,,,_5,:,_L,;,_5_,,,_,,,_c,,,__7__J,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0126,],,,94,],,,0b100000,],,,0X64,],,,94,],,,016,],,,0b10,],),{,},},<EOF>''',101))

    def test_2436(self):
        self.assertTrue(TestLexer.test('''Class _{i(z:Float ;__,_,O0,v_7:Float ;d_l:Jn;q9_,_:Array [String ,0b11_0_1]){ {}Break ;}Constructor (){Continue ;{} }}''','''Class,_,{,i,(,z,:,Float,;,__,,,_,,,O0,,,v_7,:,Float,;,d_l,:,Jn,;,q9_,,,_,:,Array,[,String,,,0b1101,],),{,{,},Break,;,},Constructor,(,),{,Continue,;,{,},},},<EOF>''',101))

    def test_2437(self):
        self.assertTrue(TestLexer.test('''Class i9Z:l{h9(){}Val _,$_yo_No,$_:je__;$5_(){} }Class _{}Class eW{__M(Zr,m2:Float ;H9,xRq:Array [Array [Array [Array [Array [Float ,01],031_0],7_1],0105],0B1];b,H9:__m;_V_Q,_4J:String ){} }''','''Class,i9Z,:,l,{,h9,(,),{,},Val,_,,,$_yo_No,,,$_,:,je__,;,$5_,(,),{,},},Class,_,{,},Class,eW,{,__M,(,Zr,,,m2,:,Float,;,H9,,,xRq,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,01,],,,0310,],,,71,],,,0105,],,,0B1,],;,b,,,H9,:,__m,;,_V_Q,,,_4J,:,String,),{,},},<EOF>''',101))

    def test_2438(self):
        self.assertTrue(TestLexer.test('''Class s:v{Val $1,$OQb:Array [String ,0X26];}Class _{Var C_i___,c,$8,$F,LiZ,$v,$_:Array [Array [Float ,0xE],0b10000];Var _g:String ;}''','''Class,s,:,v,{,Val,$1,,,$OQb,:,Array,[,String,,,0X26,],;,},Class,_,{,Var,C_i___,,,c,,,$8,,,$F,,,LiZ,,,$v,,,$_,:,Array,[,Array,[,Float,,,0xE,],,,0b10000,],;,Var,_g,:,String,;,},<EOF>''',101))

    def test_2439(self):
        self.assertTrue(TestLexer.test('''Class tX{Constructor (_,c:Boolean ;f:Array [Array [Array [Array [Boolean ,057],0B1_111_1],077],21];_0j,J:String ){Break ;Break ;} }Class a:R{}Class Z:g{}''','''Class,tX,{,Constructor,(,_,,,c,:,Boolean,;,f,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,057,],,,0B11111,],,,077,],,,21,],;,_0j,,,J,:,String,),{,Break,;,Break,;,},},Class,a,:,R,{,},Class,Z,:,g,{,},<EOF>''',101))

    def test_2440(self):
        self.assertTrue(TestLexer.test('''Class _T2t:n{}Class P_:_{}Class _P5{}Class c:Je2{_(_Z1,B,__:Array [Array [Array [Array [Array [Int ,9_2],0B1],0X4A],0b1],9];fN8,Ae:Array [String ,0b10];_5,__9,__49X:Float ){}Var $_:Array [Array [Int ,0B11110],0b10100];Var $fQ_4:_;}Class H{}''','''Class,_T2t,:,n,{,},Class,P_,:,_,{,},Class,_P5,{,},Class,c,:,Je2,{,_,(,_Z1,,,B,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,92,],,,0B1,],,,0X4A,],,,0b1,],,,9,],;,fN8,,,Ae,:,Array,[,String,,,0b10,],;,_5,,,__9,,,__49X,:,Float,),{,},Var,$_,:,Array,[,Array,[,Int,,,0B11110,],,,0b10100,],;,Var,$fQ_4,:,_,;,},Class,H,{,},<EOF>''',101))

    def test_2441(self):
        self.assertTrue(TestLexer.test('''Class S{Var _,$3:Array [String ,04];Destructor (){Continue ;} }Class q5:_7___{}Class _:L{}Class _{}Class _Wg6{}Class Q{}Class _:r{Var _L:y;Constructor (__,_:Array [String ,030]){Break ;}_(){Break ;} }Class U_:_{Var __:Array [Boolean ,07];Var $_:Boolean ;}Class _{}Class K{$7(e_JN:String ){} }''','''Class,S,{,Var,_,,,$3,:,Array,[,String,,,04,],;,Destructor,(,),{,Continue,;,},},Class,q5,:,_7___,{,},Class,_,:,L,{,},Class,_,{,},Class,_Wg6,{,},Class,Q,{,},Class,_,:,r,{,Var,_L,:,y,;,Constructor,(,__,,,_,:,Array,[,String,,,030,],),{,Break,;,},_,(,),{,Break,;,},},Class,U_,:,_,{,Var,__,:,Array,[,Boolean,,,07,],;,Var,$_,:,Boolean,;,},Class,_,{,},Class,K,{,$7,(,e_JN,:,String,),{,},},<EOF>''',101))

    def test_2442(self):
        self.assertTrue(TestLexer.test('''Class _d:_{}Class W30:_{}Class w1P:_{}Class _:E{}Class _u:_H{}Class _1:s_{Constructor (s7_:_;_c_N:_P){ {Val __t:Float ;} }}''','''Class,_d,:,_,{,},Class,W30,:,_,{,},Class,w1P,:,_,{,},Class,_,:,E,{,},Class,_u,:,_H,{,},Class,_1,:,s_,{,Constructor,(,s7_,:,_,;,_c_N,:,_P,),{,{,Val,__t,:,Float,;,},},},<EOF>''',101))

    def test_2443(self):
        self.assertTrue(TestLexer.test('''Class _:e{_(v3,I8,iC03__:_;_,_:q1V_S__;l,f:Array [String ,0b101110];_:Array [Array [Array [Array [String ,4],0B110110],0X12],3];n:String ){Continue ;} }Class _8:i3_t__DE{}''','''Class,_,:,e,{,_,(,v3,,,I8,,,iC03__,:,_,;,_,,,_,:,q1V_S__,;,l,,,f,:,Array,[,String,,,0b101110,],;,_,:,Array,[,Array,[,Array,[,Array,[,String,,,4,],,,0B110110,],,,0X12,],,,3,],;,n,:,String,),{,Continue,;,},},Class,_8,:,i3_t__DE,{,},<EOF>''',101))

    def test_2444(self):
        self.assertTrue(TestLexer.test('''Class H:_1358___d{}Class bp{}Class _3_:Y_{}Class _W__{Var $_,x:Array [Int ,3];}Class __r_{}Class X:_{}Class _:__{Val C:String ;Constructor (){}Val G0,$a:UEc__;}''','''Class,H,:,_1358___d,{,},Class,bp,{,},Class,_3_,:,Y_,{,},Class,_W__,{,Var,$_,,,x,:,Array,[,Int,,,3,],;,},Class,__r_,{,},Class,X,:,_,{,},Class,_,:,__,{,Val,C,:,String,;,Constructor,(,),{,},Val,G0,,,$a,:,UEc__,;,},<EOF>''',101))

    def test_2445(self):
        self.assertTrue(TestLexer.test('''Class _:J{Val __,E1J:_;}Class H{Val $__,$_u:Array [Array [Int ,0b11110],0115];Val $B:Array [Float ,0b11110];}Class _:_895_{}Class R:_L359_aIu{}Class _i3{}''','''Class,_,:,J,{,Val,__,,,E1J,:,_,;,},Class,H,{,Val,$__,,,$_u,:,Array,[,Array,[,Int,,,0b11110,],,,0115,],;,Val,$B,:,Array,[,Float,,,0b11110,],;,},Class,_,:,_895_,{,},Class,R,:,_L359_aIu,{,},Class,_i3,{,},<EOF>''',101))

    def test_2446(self):
        self.assertTrue(TestLexer.test('''Class R{_(){} }Class S:Kh{_1(_:String ;P2_QM,l,_,_5:Boolean ){} }Class _:_3{Val n,$_D_,$_r:Int ;Var $8:_____k;}Class D:_{}''','''Class,R,{,_,(,),{,},},Class,S,:,Kh,{,_1,(,_,:,String,;,P2_QM,,,l,,,_,,,_5,:,Boolean,),{,},},Class,_,:,_3,{,Val,n,,,$_D_,,,$_r,:,Int,;,Var,$8,:,_____k,;,},Class,D,:,_,{,},<EOF>''',101))

    def test_2447(self):
        self.assertTrue(TestLexer.test('''Class Y9{B(_,_:Array [Int ,0B1010010];K,A:Boolean ;_PU:_;b:Boolean ;c:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,100],4],0101],0B1],0x4],0x4_59E],07],0101],04]){} }''','''Class,Y9,{,B,(,_,,,_,:,Array,[,Int,,,0B1010010,],;,K,,,A,:,Boolean,;,_PU,:,_,;,b,:,Boolean,;,c,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,100,],,,4,],,,0101,],,,0B1,],,,0x4,],,,0x459E,],,,07,],,,0101,],,,04,],),{,},},<EOF>''',101))

    def test_2448(self):
        self.assertTrue(TestLexer.test('''Class Y1{Var H,$z0_:___;Constructor (d:Boolean ){Break ;}VD(){}Constructor (){}Constructor (_,_n_,s:__u;_:sd){_::$1i();True .D6_4_().WNk._();} }''','''Class,Y1,{,Var,H,,,$z0_,:,___,;,Constructor,(,d,:,Boolean,),{,Break,;,},VD,(,),{,},Constructor,(,),{,},Constructor,(,_,,,_n_,,,s,:,__u,;,_,:,sd,),{,_,::,$1i,(,),;,True,.,D6_4_,(,),.,WNk,.,_,(,),;,},},<EOF>''',101))

    def test_2449(self):
        self.assertTrue(TestLexer.test('''Class b{$t(){} }Class cn9_:K9{Destructor (){} }Class _{}Class _:B{}Class L:_{}Class d1__i:m{Constructor (_H__:Array [Boolean ,0XB_13_3FC_4_A];m5:_;z,_:Float ){Break ;} }''','''Class,b,{,$t,(,),{,},},Class,cn9_,:,K9,{,Destructor,(,),{,},},Class,_,{,},Class,_,:,B,{,},Class,L,:,_,{,},Class,d1__i,:,m,{,Constructor,(,_H__,:,Array,[,Boolean,,,0XB133FC4A,],;,m5,:,_,;,z,,,_,:,Float,),{,Break,;,},},<EOF>''',101))

    def test_2450(self):
        self.assertTrue(TestLexer.test('''Class _SaS402{Constructor (x_48,_r,_,Y7:e_;x:Array [Array [Float ,0X3B],0b1];_9554:Array [Array [Array [Array [Float ,0B1],0x4F],0X3B],0b1_0];g:Float ;__:_){_::$w6_();} }''','''Class,_SaS402,{,Constructor,(,x_48,,,_r,,,_,,,Y7,:,e_,;,x,:,Array,[,Array,[,Float,,,0X3B,],,,0b1,],;,_9554,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B1,],,,0x4F,],,,0X3B,],,,0b10,],;,g,:,Float,;,__,:,_,),{,_,::,$w6_,(,),;,},},<EOF>''',101))

    def test_2451(self):
        self.assertTrue(TestLexer.test('''Class j_:C8__{Var e:String ;Val N,_,$_:Array [String ,82];Constructor (_,_,_,_,_2:Array [Array [Int ,0b1],02];A,b:Array [Int ,82]){} }''','''Class,j_,:,C8__,{,Var,e,:,String,;,Val,N,,,_,,,$_,:,Array,[,String,,,82,],;,Constructor,(,_,,,_,,,_,,,_,,,_2,:,Array,[,Array,[,Int,,,0b1,],,,02,],;,A,,,b,:,Array,[,Int,,,82,],),{,},},<EOF>''',101))

    def test_2452(self):
        self.assertTrue(TestLexer.test('''Class _2{$__(_n:Array [Float ,0X5]){}Val t:Int ;}Class _:_7h{Var $Y_Y:Array [Array [Float ,5],070];}Class Y:_l{}Class _:S45_{}Class _1__4:_{}''','''Class,_2,{,$__,(,_n,:,Array,[,Float,,,0X5,],),{,},Val,t,:,Int,;,},Class,_,:,_7h,{,Var,$Y_Y,:,Array,[,Array,[,Float,,,5,],,,070,],;,},Class,Y,:,_l,{,},Class,_,:,S45_,{,},Class,_1__4,:,_,{,},<EOF>''',101))

    def test_2453(self):
        self.assertTrue(TestLexer.test('''Class _{Var $2,_:Array [Int ,43];Constructor (__,V:Array [Float ,07];_2:_;z:Array [Array [Array [Array [Float ,7],0B11],43],56];_,vOop:_){} }''','''Class,_,{,Var,$2,,,_,:,Array,[,Int,,,43,],;,Constructor,(,__,,,V,:,Array,[,Float,,,07,],;,_2,:,_,;,z,:,Array,[,Array,[,Array,[,Array,[,Float,,,7,],,,0B11,],,,43,],,,56,],;,_,,,vOop,:,_,),{,},},<EOF>''',101))

    def test_2454(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){} }Class __{Var _:Array [Int ,0b100101];}Class _:_6_Nz{$g(j:O0){}Var S,_s2,$___,$_,N,$_,$C:Float ;}''','''Class,_,{,Destructor,(,),{,},},Class,__,{,Var,_,:,Array,[,Int,,,0b100101,],;,},Class,_,:,_6_Nz,{,$g,(,j,:,O0,),{,},Var,S,,,_s2,,,$___,,,$_,,,N,,,$_,,,$C,:,Float,;,},<EOF>''',101))

    def test_2455(self):
        self.assertTrue(TestLexer.test('''Class J__:_3_Z{Destructor (){}Val $_8_,$q,Jg5umS,$_,$D_:_3z9o;}Class SZ{$__(b_d1,M:Array [Int ,0B1000110]){} }Class m:E{}''','''Class,J__,:,_3_Z,{,Destructor,(,),{,},Val,$_8_,,,$q,,,Jg5umS,,,$_,,,$D_,:,_3z9o,;,},Class,SZ,{,$__,(,b_d1,,,M,:,Array,[,Int,,,0B1000110,],),{,},},Class,m,:,E,{,},<EOF>''',101))

    def test_2456(self):
        self.assertTrue(TestLexer.test('''Class a_{}Class u28_6_00:_{}Class _W_0{H(d,_:_;_sf:d;Z:Array [Array [String ,051],0b1_1];_6,_f,h,Z_:Array [Int ,0B111110];_4_:Float ){Continue ;}Var $__,$_051,$Me,_7,T:Array [String ,8];}''','''Class,a_,{,},Class,u28_6_00,:,_,{,},Class,_W_0,{,H,(,d,,,_,:,_,;,_sf,:,d,;,Z,:,Array,[,Array,[,String,,,051,],,,0b11,],;,_6,,,_f,,,h,,,Z_,:,Array,[,Int,,,0B111110,],;,_4_,:,Float,),{,Continue,;,},Var,$__,,,$_051,,,$Me,,,_7,,,T,:,Array,[,String,,,8,],;,},<EOF>''',101))

    def test_2457(self):
        self.assertTrue(TestLexer.test('''Class _:_8_5_{Var v2_,f27_:Boolean ;Constructor (Z__,W:String ;_,Z:Float ;GQ__T,_D7g_B_:Boolean ){} }Class _:_t_{Val W_:__;}''','''Class,_,:,_8_5_,{,Var,v2_,,,f27_,:,Boolean,;,Constructor,(,Z__,,,W,:,String,;,_,,,Z,:,Float,;,GQ__T,,,_D7g_B_,:,Boolean,),{,},},Class,_,:,_t_,{,Val,W_,:,__,;,},<EOF>''',101))

    def test_2458(self):
        self.assertTrue(TestLexer.test('''Class b0:_20_8{Var $E9,$F_,$4,$6_:Array [Array [String ,0x10],41];}Class i{Var F27:Array [Boolean ,07_1];Destructor (){} }''','''Class,b0,:,_20_8,{,Var,$E9,,,$F_,,,$4,,,$6_,:,Array,[,Array,[,String,,,0x10,],,,41,],;,},Class,i,{,Var,F27,:,Array,[,Boolean,,,071,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_2459(self):
        self.assertTrue(TestLexer.test('''Class _Hi:u_{}Class _Gp{_(){}Constructor (_48,bk4q_:_1_;A,S:Int ;__:Float ;_:Array [Array [Array [String ,0b1011000],0111],0X7];_,O:Array [Boolean ,7_1_4]){}Val _,R_v_,$Rc7_,$S,$0,$rF1V:Float ;}Class H4:_6i{_(){Val _x_,_,_:Array [Float ,0X16];}Val n:Array [Boolean ,9];}''','''Class,_Hi,:,u_,{,},Class,_Gp,{,_,(,),{,},Constructor,(,_48,,,bk4q_,:,_1_,;,A,,,S,:,Int,;,__,:,Float,;,_,:,Array,[,Array,[,Array,[,String,,,0b1011000,],,,0111,],,,0X7,],;,_,,,O,:,Array,[,Boolean,,,714,],),{,},Val,_,,,R_v_,,,$Rc7_,,,$S,,,$0,,,$rF1V,:,Float,;,},Class,H4,:,_6i,{,_,(,),{,Val,_x_,,,_,,,_,:,Array,[,Float,,,0X16,],;,},Val,n,:,Array,[,Boolean,,,9,],;,},<EOF>''',101))

    def test_2460(self):
        self.assertTrue(TestLexer.test('''Class Va9_p:W{Var __,A,$K,xw4:String ;}Class t_0:O{Constructor (_6:Array [Float ,0b1100001]){}Destructor (){} }Class _:_r{}''','''Class,Va9_p,:,W,{,Var,__,,,A,,,$K,,,xw4,:,String,;,},Class,t_0,:,O,{,Constructor,(,_6,:,Array,[,Float,,,0b1100001,],),{,},Destructor,(,),{,},},Class,_,:,_r,{,},<EOF>''',101))

    def test_2461(self):
        self.assertTrue(TestLexer.test('''Class g5i{}Class P:_9{}Class _E:_t_D{Constructor (_,__:Array [Int ,0b1_00]){} }Class L4:w1{Destructor (){} }Class _3:_{Constructor (_,J,_:Boolean ){}Constructor (_c,M___r,K,d397:L;___:Int ){Val _,___8,_5,I,_g:Float ;} }''','''Class,g5i,{,},Class,P,:,_9,{,},Class,_E,:,_t_D,{,Constructor,(,_,,,__,:,Array,[,Int,,,0b100,],),{,},},Class,L4,:,w1,{,Destructor,(,),{,},},Class,_3,:,_,{,Constructor,(,_,,,J,,,_,:,Boolean,),{,},Constructor,(,_c,,,M___r,,,K,,,d397,:,L,;,___,:,Int,),{,Val,_,,,___8,,,_5,,,I,,,_g,:,Float,;,},},<EOF>''',101))

    def test_2462(self):
        self.assertTrue(TestLexer.test('''Class _:Y_27{Val T,_:Boolean ;Destructor (){Continue ;Var I,u:Int ;Continue ;}$_(){} }Class __O6{}Class z{Val _,O9r,$_,$9,__,_,m:_EI;}''','''Class,_,:,Y_27,{,Val,T,,,_,:,Boolean,;,Destructor,(,),{,Continue,;,Var,I,,,u,:,Int,;,Continue,;,},$_,(,),{,},},Class,__O6,{,},Class,z,{,Val,_,,,O9r,,,$_,,,$9,,,__,,,_,,,m,:,_EI,;,},<EOF>''',101))

    def test_2463(self):
        self.assertTrue(TestLexer.test('''Class Q:__P{}Class u_:_{Var K_i_,oIx:Array [Boolean ,05];Constructor (){} }Class _29{Var kh,D1,s_:w9;}Class _3f3r:S{Destructor (){} }''','''Class,Q,:,__P,{,},Class,u_,:,_,{,Var,K_i_,,,oIx,:,Array,[,Boolean,,,05,],;,Constructor,(,),{,},},Class,_29,{,Var,kh,,,D1,,,s_,:,w9,;,},Class,_3f3r,:,S,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2464(self):
        self.assertTrue(TestLexer.test('''Class e:_{Constructor (_l_7I:String ;Z_a_,H_q,_4v5:Boolean ){} }Class _a7__q5v{Destructor (){}Val __q,$uJ,$0,Z49:L33;Val N_:___;Var $Q_8m:Array [Array [Array [Boolean ,012],1_7_9],0B1];}Class _:_M_{H(W:String ;_,F6G_,___:Array [Float ,0b1010];_a,_,h,_,_lX,Nv_:Array [Array [String ,77],2];_:_){}_(){Var __:Float ;} }''','''Class,e,:,_,{,Constructor,(,_l_7I,:,String,;,Z_a_,,,H_q,,,_4v5,:,Boolean,),{,},},Class,_a7__q5v,{,Destructor,(,),{,},Val,__q,,,$uJ,,,$0,,,Z49,:,L33,;,Val,N_,:,___,;,Var,$Q_8m,:,Array,[,Array,[,Array,[,Boolean,,,012,],,,179,],,,0B1,],;,},Class,_,:,_M_,{,H,(,W,:,String,;,_,,,F6G_,,,___,:,Array,[,Float,,,0b1010,],;,_a,,,_,,,h,,,_,,,_lX,,,Nv_,:,Array,[,Array,[,String,,,77,],,,2,],;,_,:,_,),{,},_,(,),{,Var,__,:,Float,;,},},<EOF>''',101))

    def test_2465(self):
        self.assertTrue(TestLexer.test('''Class b{Var __:Float ;}Class _:_{}Class h{Constructor (_,V_8,e,C:Array [Array [Boolean ,0b10011],0B1]){ {} }}Class Z3:qp_{}Class f{}''','''Class,b,{,Var,__,:,Float,;,},Class,_,:,_,{,},Class,h,{,Constructor,(,_,,,V_8,,,e,,,C,:,Array,[,Array,[,Boolean,,,0b10011,],,,0B1,],),{,{,},},},Class,Z3,:,qp_,{,},Class,f,{,},<EOF>''',101))

    def test_2466(self):
        self.assertTrue(TestLexer.test('''Class Q_2:_{}Class _Z:t{}Class __D9:_9_{Var uU_:Y92;Var _,$DK_,$l,$2:Float ;Constructor (){}Destructor (){Continue ;} }''','''Class,Q_2,:,_,{,},Class,_Z,:,t,{,},Class,__D9,:,_9_,{,Var,uU_,:,Y92,;,Var,_,,,$DK_,,,$l,,,$2,:,Float,;,Constructor,(,),{,},Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_2467(self):
        self.assertTrue(TestLexer.test('''Class q:aj{}Class _:_{Var J_,_p:k_1;Destructor (){Return ;} }Class n:_{Constructor (){} }Class o7:V{}Class _:_qFb{}Class f_{_V(HUJj,e:_f){} }Class _8_{}''','''Class,q,:,aj,{,},Class,_,:,_,{,Var,J_,,,_p,:,k_1,;,Destructor,(,),{,Return,;,},},Class,n,:,_,{,Constructor,(,),{,},},Class,o7,:,V,{,},Class,_,:,_qFb,{,},Class,f_,{,_V,(,HUJj,,,e,:,_f,),{,},},Class,_8_,{,},<EOF>''',101))

    def test_2468(self):
        self.assertTrue(TestLexer.test('''Class _5:k{}Class O{$4(M,v:Array [Array [Array [String ,1_1_2_3_7],75],0b1];_6z,_1K,x5kf9F,oL_,_:_;T_R:Boolean ){} }Class d_:U_{}''','''Class,_5,:,k,{,},Class,O,{,$4,(,M,,,v,:,Array,[,Array,[,Array,[,String,,,11237,],,,75,],,,0b1,],;,_6z,,,_1K,,,x5kf9F,,,oL_,,,_,:,_,;,T_R,:,Boolean,),{,},},Class,d_,:,U_,{,},<EOF>''',101))

    def test_2469(self):
        self.assertTrue(TestLexer.test('''Class _1{Constructor (_B_,_,S:Array [Array [Array [Array [Array [Array [Array [Float ,92],0105],07],0B1],69],0B111_1],0X4A];YP,_,u96Mr_:Array [String ,0b1_10];_9:Boolean ){}Destructor (){} }''','''Class,_1,{,Constructor,(,_B_,,,_,,,S,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,92,],,,0105,],,,07,],,,0B1,],,,69,],,,0B1111,],,,0X4A,],;,YP,,,_,,,u96Mr_,:,Array,[,String,,,0b110,],;,_9,:,Boolean,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_2470(self):
        self.assertTrue(TestLexer.test('''Class K:B{Constructor (_2,s7,t:Float ){Val a:Array [Array [Boolean ,6],0122];Break ;} }Class _{}Class d_2x:__O_8_{}''','''Class,K,:,B,{,Constructor,(,_2,,,s7,,,t,:,Float,),{,Val,a,:,Array,[,Array,[,Boolean,,,6,],,,0122,],;,Break,;,},},Class,_,{,},Class,d_2x,:,__O_8_,{,},<EOF>''',101))

    def test_2471(self):
        self.assertTrue(TestLexer.test('''Class _N:_{Val $_:Array [Array [Array [Boolean ,6],4],0B11110];}Class ___2_5:_7__UG{P(){Val _:Int ;} }Class v40{}Class I{}''','''Class,_N,:,_,{,Val,$_,:,Array,[,Array,[,Array,[,Boolean,,,6,],,,4,],,,0B11110,],;,},Class,___2_5,:,_7__UG,{,P,(,),{,Val,_,:,Int,;,},},Class,v40,{,},Class,I,{,},<EOF>''',101))

    def test_2472(self):
        self.assertTrue(TestLexer.test('''Class k{}Class _:_{_(_:_){Continue ;}$7(q:Int ;_j:T3){}Val $_4__,$2,$s,$4,_7_,$8_7_m,$5,$o_:Array [Int ,0X1F];}''','''Class,k,{,},Class,_,:,_,{,_,(,_,:,_,),{,Continue,;,},$7,(,q,:,Int,;,_j,:,T3,),{,},Val,$_4__,,,$2,,,$s,,,$4,,,_7_,,,$8_7_m,,,$5,,,$o_,:,Array,[,Int,,,0X1F,],;,},<EOF>''',101))

    def test_2473(self):
        self.assertTrue(TestLexer.test('''Class ___{}Class _54lC{Constructor (N,O5,_,v_11,_:Int ;Q9RP,jd_,_:Boolean ;v_,_,H,q:Array [Boolean ,04];_,P:p;_,gX_:H_7){}Var Rj8:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0B1],030],0X2],02],0b1100000],41],1],05],0B1_1];}''','''Class,___,{,},Class,_54lC,{,Constructor,(,N,,,O5,,,_,,,v_11,,,_,:,Int,;,Q9RP,,,jd_,,,_,:,Boolean,;,v_,,,_,,,H,,,q,:,Array,[,Boolean,,,04,],;,_,,,P,:,p,;,_,,,gX_,:,H_7,),{,},Var,Rj8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,030,],,,0X2,],,,02,],,,0b1100000,],,,41,],,,1,],,,05,],,,0B11,],;,},<EOF>''',101))

    def test_2474(self):
        self.assertTrue(TestLexer.test('''Class _:_{Var __,$T_,_:String ;Val g_,_:r;$_(_8,A7,_K,V:Array [Array [Int ,0X3],16];B:Float ;_2,r:Float ;I:Int ){}_1_(_4,__,R,hp:i;F:La){} }''','''Class,_,:,_,{,Var,__,,,$T_,,,_,:,String,;,Val,g_,,,_,:,r,;,$_,(,_8,,,A7,,,_K,,,V,:,Array,[,Array,[,Int,,,0X3,],,,16,],;,B,:,Float,;,_2,,,r,:,Float,;,I,:,Int,),{,},_1_,(,_4,,,__,,,R,,,hp,:,i,;,F,:,La,),{,},},<EOF>''',101))

    def test_2475(self):
        self.assertTrue(TestLexer.test('''Class x4__j8{Constructor (j:Boolean ;Q7,_,_:Array [Boolean ,055];J:M){}Constructor (){}Destructor (){}Constructor (_:_){Continue ;} }Class _{}''','''Class,x4__j8,{,Constructor,(,j,:,Boolean,;,Q7,,,_,,,_,:,Array,[,Boolean,,,055,],;,J,:,M,),{,},Constructor,(,),{,},Destructor,(,),{,},Constructor,(,_,:,_,),{,Continue,;,},},Class,_,{,},<EOF>''',101))

    def test_2476(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{Constructor (_,gG:Array [String ,021];_:y;_:Array [Array [Array [Float ,98],98],0b10_1];_,SH4:_;_6:Array [Array [Array [Int ,0x63],021],0XE0_7];__j,G:YT1){} }''','''Class,_,{,},Class,_,{,Constructor,(,_,,,gG,:,Array,[,String,,,021,],;,_,:,y,;,_,:,Array,[,Array,[,Array,[,Float,,,98,],,,98,],,,0b101,],;,_,,,SH4,:,_,;,_6,:,Array,[,Array,[,Array,[,Int,,,0x63,],,,021,],,,0XE07,],;,__j,,,G,:,YT1,),{,},},<EOF>''',101))

    def test_2477(self):
        self.assertTrue(TestLexer.test('''Class _{}Class Smp{Constructor (){}Var rM:Array [Array [Array [Array [Array [String ,0b1],0X31],0xE97],0X31],0b101100];Var $W,$E_90Iwm:E;Val U_,_,_U,_,_3:S;}''','''Class,_,{,},Class,Smp,{,Constructor,(,),{,},Var,rM,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,0X31,],,,0xE97,],,,0X31,],,,0b101100,],;,Var,$W,,,$E_90Iwm,:,E,;,Val,U_,,,_,,,_U,,,_,,,_3,:,S,;,},<EOF>''',101))

    def test_2478(self):
        self.assertTrue(TestLexer.test('''Class d{Constructor (m5:_){}Val $tzz,_,$_,Wd0:Boolean ;}Class _{Constructor (_,Vf_,o,__,Y_,a,__:Array [Array [String ,52],0136]){} }''','''Class,d,{,Constructor,(,m5,:,_,),{,},Val,$tzz,,,_,,,$_,,,Wd0,:,Boolean,;,},Class,_,{,Constructor,(,_,,,Vf_,,,o,,,__,,,Y_,,,a,,,__,:,Array,[,Array,[,String,,,52,],,,0136,],),{,},},<EOF>''',101))

    def test_2479(self):
        self.assertTrue(TestLexer.test('''Class _{Var $_:Float ;Constructor (_:Array [Array [Array [Array [Array [Boolean ,1_4_7],0X4F],0B111011],33],0B1_1]){} }''','''Class,_,{,Var,$_,:,Float,;,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,147,],,,0X4F,],,,0B111011,],,,33,],,,0B11,],),{,},},<EOF>''',101))

    def test_2480(self):
        self.assertTrue(TestLexer.test('''Class _k_K{Destructor (){}Var _876B:Array [Array [Array [Array [Array [Array [Array [Float ,36],36],2],36],0B1010111],0b101_0],36];}Class XR:_{}Class _3{Destructor (){}Var $E:Array [Boolean ,0B1010111];Constructor (z_,_,l_,R_:String ;f,JO,_,_,K,b_3i_:Boolean ;Mz_2,__i_:Float ;_,_6,_2:Array [Array [Float ,0107],0107]){Continue ;}Constructor (_I,S1:Array [Float ,0b11]){} }Class _0:__{}''','''Class,_k_K,{,Destructor,(,),{,},Var,_876B,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,36,],,,36,],,,2,],,,36,],,,0B1010111,],,,0b1010,],,,36,],;,},Class,XR,:,_,{,},Class,_3,{,Destructor,(,),{,},Var,$E,:,Array,[,Boolean,,,0B1010111,],;,Constructor,(,z_,,,_,,,l_,,,R_,:,String,;,f,,,JO,,,_,,,_,,,K,,,b_3i_,:,Boolean,;,Mz_2,,,__i_,:,Float,;,_,,,_6,,,_2,:,Array,[,Array,[,Float,,,0107,],,,0107,],),{,Continue,;,},Constructor,(,_I,,,S1,:,Array,[,Float,,,0b11,],),{,},},Class,_0,:,__,{,},<EOF>''',101))

    def test_2481(self):
        self.assertTrue(TestLexer.test('''Class Nc{Destructor (){} }Class oj{}Class _{$F(){} }Class t_{Constructor (ig5,_:_;_vy,_1_:Float ){} }Class _M7___M{Destructor (){} }''','''Class,Nc,{,Destructor,(,),{,},},Class,oj,{,},Class,_,{,$F,(,),{,},},Class,t_,{,Constructor,(,ig5,,,_,:,_,;,_vy,,,_1_,:,Float,),{,},},Class,_M7___M,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2482(self):
        self.assertTrue(TestLexer.test('''Class Z6G{Var $__V98E_:Array [Boolean ,0B1110];$l(){} }Class M76:_{Constructor (_k,_G3:Int ){ {} }Val $mp:Array [Float ,5];}''','''Class,Z6G,{,Var,$__V98E_,:,Array,[,Boolean,,,0B1110,],;,$l,(,),{,},},Class,M76,:,_,{,Constructor,(,_k,,,_G3,:,Int,),{,{,},},Val,$mp,:,Array,[,Float,,,5,],;,},<EOF>''',101))

    def test_2483(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){Continue ;} }Class B{Val _,$5_m___7:Array [Int ,0B111000];Constructor (S:String ;_:Int ){}Destructor (){} }Class r{Destructor (){} }Class u_:___Q{Constructor (_,_,_,t,pV1__,__,M_8E,_A2D_,__Ex,_kl5:_5;_,_____8__44:Boolean ;P,_4,l:_){} }Class _{$U7(c5,_,H:Array [String ,0X9_D];_:Array [String ,725_2];Q8,h:String ){} }''','''Class,_,{,Destructor,(,),{,Continue,;,},},Class,B,{,Val,_,,,$5_m___7,:,Array,[,Int,,,0B111000,],;,Constructor,(,S,:,String,;,_,:,Int,),{,},Destructor,(,),{,},},Class,r,{,Destructor,(,),{,},},Class,u_,:,___Q,{,Constructor,(,_,,,_,,,_,,,t,,,pV1__,,,__,,,M_8E,,,_A2D_,,,__Ex,,,_kl5,:,_5,;,_,,,_____8__44,:,Boolean,;,P,,,_4,,,l,:,_,),{,},},Class,_,{,$U7,(,c5,,,_,,,H,:,Array,[,String,,,0X9D,],;,_,:,Array,[,String,,,7252,],;,Q8,,,h,:,String,),{,},},<EOF>''',101))

    def test_2484(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _t0{Destructor (){} }Class KjM{fB(_,o:_2;M6R7SM7,_:Array [String ,0x24]){} }Class _18c:T{}Class I{Destructor (){} }Class __E__{}''','''Class,_,{,},Class,_t0,{,Destructor,(,),{,},},Class,KjM,{,fB,(,_,,,o,:,_2,;,M6R7SM7,,,_,:,Array,[,String,,,0x24,],),{,},},Class,_18c,:,T,{,},Class,I,{,Destructor,(,),{,},},Class,__E__,{,},<EOF>''',101))

    def test_2485(self):
        self.assertTrue(TestLexer.test('''Class _:xj{Destructor (){ {} }}Class D:_{}Class _:_{}Class pi1:s_{}Class _:q{Val $8:Boolean ;Var b,h2:Boolean ;}Class _7{Var __:Array [Array [String ,0b1],04];}''','''Class,_,:,xj,{,Destructor,(,),{,{,},},},Class,D,:,_,{,},Class,_,:,_,{,},Class,pi1,:,s_,{,},Class,_,:,q,{,Val,$8,:,Boolean,;,Var,b,,,h2,:,Boolean,;,},Class,_7,{,Var,__,:,Array,[,Array,[,String,,,0b1,],,,04,],;,},<EOF>''',101))

    def test_2486(self):
        self.assertTrue(TestLexer.test('''Class h{Constructor (f3K,__2,_O8,kL:Float ;N:Array [Array [Array [Array [Array [Array [Array [Array [String ,23],55],0x50],55],9],0126],0614_5],2]){} }''','''Class,h,{,Constructor,(,f3K,,,__2,,,_O8,,,kL,:,Float,;,N,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,23,],,,55,],,,0x50,],,,55,],,,9,],,,0126,],,,06145,],,,2,],),{,},},<EOF>''',101))

    def test_2487(self):
        self.assertTrue(TestLexer.test('''Class S:_{}Class r_s{VKg9(){}Var $9,_:Array [String ,56];K(){}Var FD_0,_:String ;Var $0,f:_d_h;}Class _{}Class K:rB{Val P:Array [Boolean ,0B1];}Class t{}''','''Class,S,:,_,{,},Class,r_s,{,VKg9,(,),{,},Var,$9,,,_,:,Array,[,String,,,56,],;,K,(,),{,},Var,FD_0,,,_,:,String,;,Var,$0,,,f,:,_d_h,;,},Class,_,{,},Class,K,:,rB,{,Val,P,:,Array,[,Boolean,,,0B1,],;,},Class,t,{,},<EOF>''',101))

    def test_2488(self):
        self.assertTrue(TestLexer.test('''Class a:zc{}Class X0{}Class _{Destructor (){}Constructor (V9:String ;_f,X,_4:Array [String ,0XCD];_o,H,_____Gd:Q;_,_:Array [Array [String ,0XA],0b1]){} }''','''Class,a,:,zc,{,},Class,X0,{,},Class,_,{,Destructor,(,),{,},Constructor,(,V9,:,String,;,_f,,,X,,,_4,:,Array,[,String,,,0XCD,],;,_o,,,H,,,_____Gd,:,Q,;,_,,,_,:,Array,[,Array,[,String,,,0XA,],,,0b1,],),{,},},<EOF>''',101))

    def test_2489(self):
        self.assertTrue(TestLexer.test('''Class y_{__(_:Array [Array [Array [String ,0b11_0],0xE],4]){Break ;Val zJN,_,Y,K:Int ;Break ;} }Class i{}Class __:z0{}Class _:h{}Class c{}''','''Class,y_,{,__,(,_,:,Array,[,Array,[,Array,[,String,,,0b110,],,,0xE,],,,4,],),{,Break,;,Val,zJN,,,_,,,Y,,,K,:,Int,;,Break,;,},},Class,i,{,},Class,__,:,z0,{,},Class,_,:,h,{,},Class,c,{,},<EOF>''',101))

    def test_2490(self):
        self.assertTrue(TestLexer.test('''Class q:KQ{Constructor (_,d_4,r,_,_,_6,L,_:Float ;E,l9:String ){}$_(t2b:_2_;r:_v){Return ;} }Class F{}Class _{}''','''Class,q,:,KQ,{,Constructor,(,_,,,d_4,,,r,,,_,,,_,,,_6,,,L,,,_,:,Float,;,E,,,l9,:,String,),{,},$_,(,t2b,:,_2_,;,r,:,_v,),{,Return,;,},},Class,F,{,},Class,_,{,},<EOF>''',101))

    def test_2491(self):
        self.assertTrue(TestLexer.test('''Class b215:j{$50F(b:Array [Array [Array [Array [Float ,04],06_6],060],0X5_F6];_:String ){}Val $_5:Int ;Val pGb:r;Destructor (){}Var Vc:Array [Array [Float ,060],0B110011];}''','''Class,b215,:,j,{,$50F,(,b,:,Array,[,Array,[,Array,[,Array,[,Float,,,04,],,,066,],,,060,],,,0X5F6,],;,_,:,String,),{,},Val,$_5,:,Int,;,Val,pGb,:,r,;,Destructor,(,),{,},Var,Vc,:,Array,[,Array,[,Float,,,060,],,,0B110011,],;,},<EOF>''',101))

    def test_2492(self):
        self.assertTrue(TestLexer.test('''Class _1_{Var $_,b,$2:_;Constructor (_,_,J:Array [String ,0b100111]){}J9rs(m5:Array [Int ,0B1101];_,r_B,i,z:Array [Array [Array [String ,0b1_00],1],05]){} }Class _{_(){}Destructor (){Break ;} }''','''Class,_1_,{,Var,$_,,,b,,,$2,:,_,;,Constructor,(,_,,,_,,,J,:,Array,[,String,,,0b100111,],),{,},J9rs,(,m5,:,Array,[,Int,,,0B1101,],;,_,,,r_B,,,i,,,z,:,Array,[,Array,[,Array,[,String,,,0b100,],,,1,],,,05,],),{,},},Class,_,{,_,(,),{,},Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_2493(self):
        self.assertTrue(TestLexer.test('''Class G:Z{Constructor (){}$t83(_:H;_,_:Int ;__0_,_,_,_,_,_0_s,_3:Array [Array [Array [Array [Int ,046],0B1_00],0xE_D],0XD_6]){} }''','''Class,G,:,Z,{,Constructor,(,),{,},$t83,(,_,:,H,;,_,,,_,:,Int,;,__0_,,,_,,,_,,,_,,,_,,,_0_s,,,_3,:,Array,[,Array,[,Array,[,Array,[,Int,,,046,],,,0B100,],,,0xED,],,,0XD6,],),{,},},<EOF>''',101))

    def test_2494(self):
        self.assertTrue(TestLexer.test('''Class G:_H{$__8(_:x_X;__y:_5){Break ;} }Class kY{}Class z_1_{Var _i:Boolean ;}Class z{Constructor (___:Array [Array [Array [Float ,0xC_401],01],0x1C]){} }''','''Class,G,:,_H,{,$__8,(,_,:,x_X,;,__y,:,_5,),{,Break,;,},},Class,kY,{,},Class,z_1_,{,Var,_i,:,Boolean,;,},Class,z,{,Constructor,(,___,:,Array,[,Array,[,Array,[,Float,,,0xC401,],,,01,],,,0x1C,],),{,},},<EOF>''',101))

    def test_2495(self):
        self.assertTrue(TestLexer.test('''Class _4_{Constructor (_:Array [Array [Array [Int ,030],5_268],0XB9];_8_,Yw,g__7R,_f:String ;__9_:Array [Array [Array [Array [Array [Array [Array [Array [String ,0B1110],0X3B],0b10100],0B101011],87],0B101011],0x4B],030]){} }''','''Class,_4_,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Int,,,030,],,,5268,],,,0XB9,],;,_8_,,,Yw,,,g__7R,,,_f,:,String,;,__9_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1110,],,,0X3B,],,,0b10100,],,,0B101011,],,,87,],,,0B101011,],,,0x4B,],,,030,],),{,},},<EOF>''',101))

    def test_2496(self):
        self.assertTrue(TestLexer.test('''Class _:W{Constructor (t,c8Q:_K){ {} }Constructor (__,_,_,v:_;_,v,_:Float ;V,_,A,_:_;_,Y:Array [Float ,0x9_C]){} }''','''Class,_,:,W,{,Constructor,(,t,,,c8Q,:,_K,),{,{,},},Constructor,(,__,,,_,,,_,,,v,:,_,;,_,,,v,,,_,:,Float,;,V,,,_,,,A,,,_,:,_,;,_,,,Y,:,Array,[,Float,,,0x9C,],),{,},},<EOF>''',101))

    def test_2497(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_,Z__6,brWs,__7O__:Boolean ){}$n_(__,__W:Array [Array [Array [Int ,0x77_5],015],0b111000]){} }''','''Class,_,{,Constructor,(,_,,,Z__6,,,brWs,,,__7O__,:,Boolean,),{,},$n_,(,__,,,__W,:,Array,[,Array,[,Array,[,Int,,,0x775,],,,015,],,,0b111000,],),{,},},<EOF>''',101))

    def test_2498(self):
        self.assertTrue(TestLexer.test('''Class _{$__6s3(X_C6:Array [Array [String ,0X7],03];_,T,d:Array [Array [Array [Float ,0107],84],0x3E];Szc:Boolean ;E,A_G_:Array [Int ,0107]){}Var u:Uq_6;}''','''Class,_,{,$__6s3,(,X_C6,:,Array,[,Array,[,String,,,0X7,],,,03,],;,_,,,T,,,d,:,Array,[,Array,[,Array,[,Float,,,0107,],,,84,],,,0x3E,],;,Szc,:,Boolean,;,E,,,A_G_,:,Array,[,Int,,,0107,],),{,},Var,u,:,Uq_6,;,},<EOF>''',101))

    def test_2499(self):
        self.assertTrue(TestLexer.test('''Class p:J_{}Class y{Val $V:E_;Destructor (){Return ;}Var _,A_:Array [Array [Array [Float ,0x27],0X5_8],040];_(){} }''','''Class,p,:,J_,{,},Class,y,{,Val,$V,:,E_,;,Destructor,(,),{,Return,;,},Var,_,,,A_,:,Array,[,Array,[,Array,[,Float,,,0x27,],,,0X58,],,,040,],;,_,(,),{,},},<EOF>''',101))

    def test_2500(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (_1,__,_,q1_,_:String ){Var c12_:Boolean ;} }Class _{Destructor (){Break ;}Val C_,__:____;Constructor (){} }Class e_{Var $2,$_,_:Float ;}''','''Class,_,:,_,{,Constructor,(,_1,,,__,,,_,,,q1_,,,_,:,String,),{,Var,c12_,:,Boolean,;,},},Class,_,{,Destructor,(,),{,Break,;,},Val,C_,,,__,:,____,;,Constructor,(,),{,},},Class,e_,{,Var,$2,,,$_,,,_,:,Float,;,},<EOF>''',101))

    def test_2501(self):
        self.assertTrue(TestLexer.test('''Class d{Constructor (_:Array [Int ,76];_A,h__J,v,O,_:Float ){} }Class g:L{Var $N__,$5V6:Array [Boolean ,0X12];Destructor (){} }Class x{}''','''Class,d,{,Constructor,(,_,:,Array,[,Int,,,76,],;,_A,,,h__J,,,v,,,O,,,_,:,Float,),{,},},Class,g,:,L,{,Var,$N__,,,$5V6,:,Array,[,Boolean,,,0X12,],;,Destructor,(,),{,},},Class,x,{,},<EOF>''',101))

    def test_2502(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{Val $_:Boolean ;Var $I_,$1,$___x6ux:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,47],070],070],070],070],0b1],96_3],47],9],3_8_54];}Class _{}''','''Class,_,{,},Class,_,{,Val,$_,:,Boolean,;,Var,$I_,,,$1,,,$___x6ux,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,47,],,,070,],,,070,],,,070,],,,070,],,,0b1,],,,963,],,,47,],,,9,],,,3854,],;,},Class,_,{,},<EOF>''',101))

    def test_2503(self):
        self.assertTrue(TestLexer.test('''Class _R:_{}Class lD_q:__{Val P0:Array [Int ,7_8];Var $V:String ;Constructor (_0,__:n;_p,_6,_,_70,_G,F__:Int ;s,_:d){}$9(_h_,_,_1,Z8r0,_:Array [Boolean ,0B1];_,k,A_:String ){}Destructor (){Break ;Continue ;Continue ;} }''','''Class,_R,:,_,{,},Class,lD_q,:,__,{,Val,P0,:,Array,[,Int,,,78,],;,Var,$V,:,String,;,Constructor,(,_0,,,__,:,n,;,_p,,,_6,,,_,,,_70,,,_G,,,F__,:,Int,;,s,,,_,:,d,),{,},$9,(,_h_,,,_,,,_1,,,Z8r0,,,_,:,Array,[,Boolean,,,0B1,],;,_,,,k,,,A_,:,String,),{,},Destructor,(,),{,Break,;,Continue,;,Continue,;,},},<EOF>''',101))

    def test_2504(self):
        self.assertTrue(TestLexer.test('''Class _0G:Q{}Class z3I:_9{}Class _{Var $J_,D_:Array [Array [Array [Array [Array [Array [Int ,0b1],50],0B101100],01],0XB_9],0xB];}''','''Class,_0G,:,Q,{,},Class,z3I,:,_9,{,},Class,_,{,Var,$J_,,,D_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,50,],,,0B101100,],,,01,],,,0XB9,],,,0xB,],;,},<EOF>''',101))

    def test_2505(self):
        self.assertTrue(TestLexer.test('''Class kW5:_{}Class P{$w__(_M_6_2:_;R_T:_3_;z,Y:Array [String ,0b11_1_0_0];_4_:Array [Array [Array [Array [Array [Array [Array [Float ,056],5],1],76],76],2],0B1]){Var _:Array [Boolean ,76];} }Class _{}Class c_:J{}Class _:C6H7{}Class rm{}Class Z:f{Var $8yP:Array [Array [Array [Boolean ,0B1],0X31],0B1_1_0];}''','''Class,kW5,:,_,{,},Class,P,{,$w__,(,_M_6_2,:,_,;,R_T,:,_3_,;,z,,,Y,:,Array,[,String,,,0b11100,],;,_4_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,056,],,,5,],,,1,],,,76,],,,76,],,,2,],,,0B1,],),{,Var,_,:,Array,[,Boolean,,,76,],;,},},Class,_,{,},Class,c_,:,J,{,},Class,_,:,C6H7,{,},Class,rm,{,},Class,Z,:,f,{,Var,$8yP,:,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0X31,],,,0B110,],;,},<EOF>''',101))

    def test_2506(self):
        self.assertTrue(TestLexer.test('''Class ___4_:__{}Class __:U_eEI_I{Constructor (_:Float ;P:Int ;_:Array [Array [String ,0100],0407_4];_K,Q:Array [Float ,040];_,_:Array [Array [Array [Int ,4],4],4];_,__,_:Float ){}Var k:Array [Boolean ,4];}''','''Class,___4_,:,__,{,},Class,__,:,U_eEI_I,{,Constructor,(,_,:,Float,;,P,:,Int,;,_,:,Array,[,Array,[,String,,,0100,],,,04074,],;,_K,,,Q,:,Array,[,Float,,,040,],;,_,,,_,:,Array,[,Array,[,Array,[,Int,,,4,],,,4,],,,4,],;,_,,,__,,,_,:,Float,),{,},Var,k,:,Array,[,Boolean,,,4,],;,},<EOF>''',101))

    def test_2507(self):
        self.assertTrue(TestLexer.test('''Class _:t{Constructor (){}Var $_,$8_,$1_w2_2:__;Val __:Array [Array [Array [Array [Array [String ,0x5],2],0b1100010],056],056];Var $W__,$N,_:Ne;Val $3:w3;}Class at3:_F_{Constructor (Zz,__:u1;_cu2Z__,__x_b8,_:Array [Array [Array [Array [Float ,0b1],4_0],056],0x60]){} }Class _b:W{}''','''Class,_,:,t,{,Constructor,(,),{,},Var,$_,,,$8_,,,$1_w2_2,:,__,;,Val,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x5,],,,2,],,,0b1100010,],,,056,],,,056,],;,Var,$W__,,,$N,,,_,:,Ne,;,Val,$3,:,w3,;,},Class,at3,:,_F_,{,Constructor,(,Zz,,,__,:,u1,;,_cu2Z__,,,__x_b8,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,40,],,,056,],,,0x60,],),{,},},Class,_b,:,W,{,},<EOF>''',101))

    def test_2508(self):
        self.assertTrue(TestLexer.test('''Class _{_(h_6,U_Lkq9,F__,T:Array [String ,1_11620];__X,U,I2,_1,e,fA_,_,FU,_:Array [Array [String ,0B1_1],0XB]){Continue ;} }Class g{}Class _{}Class L8{}''','''Class,_,{,_,(,h_6,,,U_Lkq9,,,F__,,,T,:,Array,[,String,,,111620,],;,__X,,,U,,,I2,,,_1,,,e,,,fA_,,,_,,,FU,,,_,:,Array,[,Array,[,String,,,0B11,],,,0XB,],),{,Continue,;,},},Class,g,{,},Class,_,{,},Class,L8,{,},<EOF>''',101))

    def test_2509(self):
        self.assertTrue(TestLexer.test('''Class _{Val _P4_i:Array [Array [Float ,9],0XC];Constructor (){Return ;}Var $_,$G,$X3t:Array [Array [Int ,077],0B1011];}''','''Class,_,{,Val,_P4_i,:,Array,[,Array,[,Float,,,9,],,,0XC,],;,Constructor,(,),{,Return,;,},Var,$_,,,$G,,,$X3t,:,Array,[,Array,[,Int,,,077,],,,0B1011,],;,},<EOF>''',101))

    def test_2510(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{$7(Q:_4){}$7_ZQ_L(_:Array [Array [Boolean ,0b1],46]){}Destructor (){} }Class __:F_{}Class _0{}''','''Class,_,{,},Class,_,{,$7,(,Q,:,_4,),{,},$7_ZQ_L,(,_,:,Array,[,Array,[,Boolean,,,0b1,],,,46,],),{,},Destructor,(,),{,},},Class,__,:,F_,{,},Class,_0,{,},<EOF>''',101))

    def test_2511(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){}Val $7_,___,_:Float ;Constructor (_c___2__,_:String ;_l,y,_,u,l,_N2Z:Boolean ;g7,__6_9,pA,n8d,_,Pv7q,em:Z8_){T::$_();} }''','''Class,_,{,Constructor,(,),{,},Val,$7_,,,___,,,_,:,Float,;,Constructor,(,_c___2__,,,_,:,String,;,_l,,,y,,,_,,,u,,,l,,,_N2Z,:,Boolean,;,g7,,,__6_9,,,pA,,,n8d,,,_,,,Pv7q,,,em,:,Z8_,),{,T,::,$_,(,),;,},},<EOF>''',101))

    def test_2512(self):
        self.assertTrue(TestLexer.test('''Class t:p8{Constructor (_5_:Array [Array [Array [Array [Array [Array [Boolean ,0b1],01],012],0b1],012],0X2D];P,_,G,F,_,K_s9,_,K:Array [Array [Array [Array [Array [Array [Float ,42],0xD],02],6],0xB],0x7];_:Array [Float ,42]){} }''','''Class,t,:,p8,{,Constructor,(,_5_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,01,],,,012,],,,0b1,],,,012,],,,0X2D,],;,P,,,_,,,G,,,F,,,_,,,K_s9,,,_,,,K,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,42,],,,0xD,],,,02,],,,6,],,,0xB,],,,0x7,],;,_,:,Array,[,Float,,,42,],),{,},},<EOF>''',101))

    def test_2513(self):
        self.assertTrue(TestLexer.test('''Class y_5:DD{$5F5_a(){Var _,r,X__:Float ;Continue ;Continue ;Continue ;} }Class xdK:y{Var $K,_,$_J,$1,T517:_d;}Class _:_P{}''','''Class,y_5,:,DD,{,$5F5_a,(,),{,Var,_,,,r,,,X__,:,Float,;,Continue,;,Continue,;,Continue,;,},},Class,xdK,:,y,{,Var,$K,,,_,,,$_J,,,$1,,,T517,:,_d,;,},Class,_,:,_P,{,},<EOF>''',101))

    def test_2514(self):
        self.assertTrue(TestLexer.test('''Class TD{q(){}Constructor (SV:i){}Var $B_,$00:o3_C;}Class __{Val $Z0:Array [Array [Int ,6_45],022];}Class L:_{}''','''Class,TD,{,q,(,),{,},Constructor,(,SV,:,i,),{,},Var,$B_,,,$00,:,o3_C,;,},Class,__,{,Val,$Z0,:,Array,[,Array,[,Int,,,645,],,,022,],;,},Class,L,:,_,{,},<EOF>''',101))

    def test_2515(self):
        self.assertTrue(TestLexer.test('''Class _:Mno6{Constructor (){}Constructor (tN_,_y:Int ;_,___,g:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0B1001],0X21],0b100],05],02_3],0x1],73],1_0],0X4]){Continue ;}Val q:Array [String ,0xBC];Var $p,_,a__5_:Array [Float ,1];}''','''Class,_,:,Mno6,{,Constructor,(,),{,},Constructor,(,tN_,,,_y,:,Int,;,_,,,___,,,g,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1001,],,,0X21,],,,0b100,],,,05,],,,023,],,,0x1,],,,73,],,,10,],,,0X4,],),{,Continue,;,},Val,q,:,Array,[,String,,,0xBC,],;,Var,$p,,,_,,,a__5_,:,Array,[,Float,,,1,],;,},<EOF>''',101))

    def test_2516(self):
        self.assertTrue(TestLexer.test('''Class I_q{}Class _n0:w_{Destructor (){Break ;Continue ;} }Class _{Destructor (){}I(){}$_S(I1i,___:J3F){} }Class q6:o0{Constructor (J,_K3,Q:Int ){} }Class B:T{}''','''Class,I_q,{,},Class,_n0,:,w_,{,Destructor,(,),{,Break,;,Continue,;,},},Class,_,{,Destructor,(,),{,},I,(,),{,},$_S,(,I1i,,,___,:,J3F,),{,},},Class,q6,:,o0,{,Constructor,(,J,,,_K3,,,Q,:,Int,),{,},},Class,B,:,T,{,},<EOF>''',101))

    def test_2517(self):
        self.assertTrue(TestLexer.test('''Class _7:_1{}Class p:YG9_{Constructor (eS,j:Array [Array [Array [Array [String ,0b10101],0B1_1_0],33],05];_,f,k:_){} }''','''Class,_7,:,_1,{,},Class,p,:,YG9_,{,Constructor,(,eS,,,j,:,Array,[,Array,[,Array,[,Array,[,String,,,0b10101,],,,0B110,],,,33,],,,05,],;,_,,,f,,,k,:,_,),{,},},<EOF>''',101))

    def test_2518(self):
        self.assertTrue(TestLexer.test('''Class _E:A{}Class __P_1__8:__h{}Class z5{$E(){Continue ;}Constructor (){}Destructor (){ {} }Val $J,$K7:Array [Array [Array [Array [Float ,0X2C],0b1000111],0b1000111],0B1_0];}''','''Class,_E,:,A,{,},Class,__P_1__8,:,__h,{,},Class,z5,{,$E,(,),{,Continue,;,},Constructor,(,),{,},Destructor,(,),{,{,},},Val,$J,,,$K7,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X2C,],,,0b1000111,],,,0b1000111,],,,0B10,],;,},<EOF>''',101))

    def test_2519(self):
        self.assertTrue(TestLexer.test('''Class s80_15:_x{}Class _3:Rt{}Class _8:V8{c(){}Constructor (zL64_6_3,__r:g){}Constructor (_r:Array [String ,0X4F]){} }''','''Class,s80_15,:,_x,{,},Class,_3,:,Rt,{,},Class,_8,:,V8,{,c,(,),{,},Constructor,(,zL64_6_3,,,__r,:,g,),{,},Constructor,(,_r,:,Array,[,String,,,0X4F,],),{,},},<EOF>''',101))

    def test_2520(self):
        self.assertTrue(TestLexer.test('''Class _s_{Val rz,__z8:Array [String ,0x55];$_U(){} }Class t12{}Class l{}Class z:Xe6{Constructor (F_0:p;p:V;_4,Y3,G,_:Array [Array [Array [Array [Array [Array [String ,1],0x55],0B1010001],0B1010001],045],8_83]){} }''','''Class,_s_,{,Val,rz,,,__z8,:,Array,[,String,,,0x55,],;,$_U,(,),{,},},Class,t12,{,},Class,l,{,},Class,z,:,Xe6,{,Constructor,(,F_0,:,p,;,p,:,V,;,_4,,,Y3,,,G,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,1,],,,0x55,],,,0B1010001,],,,0B1010001,],,,045,],,,883,],),{,},},<EOF>''',101))

    def test_2521(self):
        self.assertTrue(TestLexer.test('''Class __5{}Class rZQ{Constructor (__:Array [Array [Array [Array [Int ,0XE],022],0b11_1],01];O5:Array [Float ,55]){} }''','''Class,__5,{,},Class,rZQ,{,Constructor,(,__,:,Array,[,Array,[,Array,[,Array,[,Int,,,0XE,],,,022,],,,0b111,],,,01,],;,O5,:,Array,[,Float,,,55,],),{,},},<EOF>''',101))

    def test_2522(self):
        self.assertTrue(TestLexer.test('''Class ___{Val $a_1,oL,$1:String ;k(_76:Boolean ;_7,gg,__f:t;_C0:Float ){_7::$_(New C().__Q.C().B_C5.F_);}Destructor (){} }''','''Class,___,{,Val,$a_1,,,oL,,,$1,:,String,;,k,(,_76,:,Boolean,;,_7,,,gg,,,__f,:,t,;,_C0,:,Float,),{,_7,::,$_,(,New,C,(,),.,__Q,.,C,(,),.,B_C5,.,F_,),;,},Destructor,(,),{,},},<EOF>''',101))

    def test_2523(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (k:_k_;__:_0;Z:_;vT:h_;hA_27,_:Float ;F33:Array [Array [Array [Array [Int ,0XC],0b1],0XA_2_1],0144]){} }Class _U0:_{}''','''Class,_,:,_,{,Constructor,(,k,:,_k_,;,__,:,_0,;,Z,:,_,;,vT,:,h_,;,hA_27,,,_,:,Float,;,F33,:,Array,[,Array,[,Array,[,Array,[,Int,,,0XC,],,,0b1,],,,0XA21,],,,0144,],),{,},},Class,_U0,:,_,{,},<EOF>''',101))

    def test_2524(self):
        self.assertTrue(TestLexer.test('''Class e:_{}Class R{Destructor (){}_7_(Rz5e,_1:Array [Array [String ,037],0x3E]){} }Class B_:Ef{Var $6,_3k_:Array [Array [Float ,0B111101],037];}''','''Class,e,:,_,{,},Class,R,{,Destructor,(,),{,},_7_,(,Rz5e,,,_1,:,Array,[,Array,[,String,,,037,],,,0x3E,],),{,},},Class,B_,:,Ef,{,Var,$6,,,_3k_,:,Array,[,Array,[,Float,,,0B111101,],,,037,],;,},<EOF>''',101))

    def test_2525(self):
        self.assertTrue(TestLexer.test('''Class _:D{Constructor (_,_7_,_m:Array [Array [String ,3],0XD1];A3,k,_,__:Array [Array [Array [Array [Float ,050],0X5],0b111010],5_5];_:_){} }''','''Class,_,:,D,{,Constructor,(,_,,,_7_,,,_m,:,Array,[,Array,[,String,,,3,],,,0XD1,],;,A3,,,k,,,_,,,__,:,Array,[,Array,[,Array,[,Array,[,Float,,,050,],,,0X5,],,,0b111010,],,,55,],;,_,:,_,),{,},},<EOF>''',101))

    def test_2526(self):
        self.assertTrue(TestLexer.test('''Class _:_71{Var $_u7Eh_8_,j:Array [String ,0B1];Val L:Array [Array [Array [Array [Boolean ,0x53],0B1],29],033];}Class j:_{}Class V:_{}Class _:b__{}''','''Class,_,:,_71,{,Var,$_u7Eh_8_,,,j,:,Array,[,String,,,0B1,],;,Val,L,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x53,],,,0B1,],,,29,],,,033,],;,},Class,j,:,_,{,},Class,V,:,_,{,},Class,_,:,b__,{,},<EOF>''',101))

    def test_2527(self):
        self.assertTrue(TestLexer.test('''Class _{}Class h0:_O{Val $_,J7_:Boolean ;}Class _{}Class f9:_H{Var H:Boolean ;Val $v:Array [String ,0126];Destructor (){}Destructor (){} }''','''Class,_,{,},Class,h0,:,_O,{,Val,$_,,,J7_,:,Boolean,;,},Class,_,{,},Class,f9,:,_H,{,Var,H,:,Boolean,;,Val,$v,:,Array,[,String,,,0126,],;,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_2528(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_:Array [Array [String ,0X6_B_6],45];_,o0:Array [String ,06_6_3_1];R,UX,Y_,I2_,q_im:Int ;_,J:J;_I,_:Int ;c6:Array [Array [Float ,0b1001110],0x33];ME,y__Y:_;_:_3t_3l;_,___:Float ){} }''','''Class,_,{,Constructor,(,_,:,Array,[,Array,[,String,,,0X6B6,],,,45,],;,_,,,o0,:,Array,[,String,,,06631,],;,R,,,UX,,,Y_,,,I2_,,,q_im,:,Int,;,_,,,J,:,J,;,_I,,,_,:,Int,;,c6,:,Array,[,Array,[,Float,,,0b1001110,],,,0x33,],;,ME,,,y__Y,:,_,;,_,:,_3t_3l,;,_,,,___,:,Float,),{,},},<EOF>''',101))

    def test_2529(self):
        self.assertTrue(TestLexer.test('''Class K_9RP{Constructor (){}Val $6,_:Array [Array [String ,6_0],0B11];}Class _58{}Class aw_{Destructor (){}Val $_ZB,L,$p:u_;}Class _{Val _c652:Float ;Constructor (){}Var $4:Array [Array [Float ,0XE57],0b1];}Class K_{}''','''Class,K_9RP,{,Constructor,(,),{,},Val,$6,,,_,:,Array,[,Array,[,String,,,60,],,,0B11,],;,},Class,_58,{,},Class,aw_,{,Destructor,(,),{,},Val,$_ZB,,,L,,,$p,:,u_,;,},Class,_,{,Val,_c652,:,Float,;,Constructor,(,),{,},Var,$4,:,Array,[,Array,[,Float,,,0XE57,],,,0b1,],;,},Class,K_,{,},<EOF>''',101))

    def test_2530(self):
        self.assertTrue(TestLexer.test('''Class m_:_{Destructor (){Val KD,D9,_g7_,jf__:Int ;} }Class _:_b{}Class w{Constructor (_:Boolean ){} }Class E:_{Constructor (EF_:Float ;_,J:Array [Float ,0b1_01_01];e,_5S__l848:Boolean ;_v:Array [Array [Boolean ,0x38],0x38]){}Var $f_8,__:String ;}''','''Class,m_,:,_,{,Destructor,(,),{,Val,KD,,,D9,,,_g7_,,,jf__,:,Int,;,},},Class,_,:,_b,{,},Class,w,{,Constructor,(,_,:,Boolean,),{,},},Class,E,:,_,{,Constructor,(,EF_,:,Float,;,_,,,J,:,Array,[,Float,,,0b10101,],;,e,,,_5S__l848,:,Boolean,;,_v,:,Array,[,Array,[,Boolean,,,0x38,],,,0x38,],),{,},Var,$f_8,,,__,:,String,;,},<EOF>''',101))

    def test_2531(self):
        self.assertTrue(TestLexer.test('''Class q:_{Val c3,__:_G;}Class m:zX00_{Constructor (_sM_,__8:Array [Array [Float ,15_2],05];J_K,_,v,___7:Array [String ,0x25];_A_:Array [Float ,03];a,f:String ;_R:Boolean ;_J_,w:String ){} }''','''Class,q,:,_,{,Val,c3,,,__,:,_G,;,},Class,m,:,zX00_,{,Constructor,(,_sM_,,,__8,:,Array,[,Array,[,Float,,,152,],,,05,],;,J_K,,,_,,,v,,,___7,:,Array,[,String,,,0x25,],;,_A_,:,Array,[,Float,,,03,],;,a,,,f,:,String,;,_R,:,Boolean,;,_J_,,,w,:,String,),{,},},<EOF>''',101))

    def test_2532(self):
        self.assertTrue(TestLexer.test('''Class F3:J{}Class n_:___x{Destructor (){} }Class __6R6:_{}Class _x1x696:_{}Class tK{}Class H:vR{}Class RwpV{d_6j(){} }Class D:_{}''','''Class,F3,:,J,{,},Class,n_,:,___x,{,Destructor,(,),{,},},Class,__6R6,:,_,{,},Class,_x1x696,:,_,{,},Class,tK,{,},Class,H,:,vR,{,},Class,RwpV,{,d_6j,(,),{,},},Class,D,:,_,{,},<EOF>''',101))

    def test_2533(self):
        self.assertTrue(TestLexer.test('''Class C3{}Class _iB:nE{$3t(VnY41_t__4,O4y9:Array [Array [String ,057],1_7_7];_Ii2,b,__:Array [Float ,9_3_7];_X:Boolean ;_:Boolean ;_2:Array [String ,0X4A];p:Boolean ){} }Class _:C2{}''','''Class,C3,{,},Class,_iB,:,nE,{,$3t,(,VnY41_t__4,,,O4y9,:,Array,[,Array,[,String,,,057,],,,177,],;,_Ii2,,,b,,,__,:,Array,[,Float,,,937,],;,_X,:,Boolean,;,_,:,Boolean,;,_2,:,Array,[,String,,,0X4A,],;,p,:,Boolean,),{,},},Class,_,:,C2,{,},<EOF>''',101))

    def test_2534(self):
        self.assertTrue(TestLexer.test('''Class _:_{Var ta:Array [Array [Array [Array [Array [String ,32_8_8_3],1],0B1010101],0x3],0b11];Var k,E:Array [Array [Float ,0X5B],90];Val $C,n,h:Array [Array [Int ,0b110111],0b1];Destructor (){Break ;Break ;}Var __,$9:Array [Array [Array [Array [Array [Boolean ,90],0X3F],90],0b110111],0b110111];}''','''Class,_,:,_,{,Var,ta,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,32883,],,,1,],,,0B1010101,],,,0x3,],,,0b11,],;,Var,k,,,E,:,Array,[,Array,[,Float,,,0X5B,],,,90,],;,Val,$C,,,n,,,h,:,Array,[,Array,[,Int,,,0b110111,],,,0b1,],;,Destructor,(,),{,Break,;,Break,;,},Var,__,,,$9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,90,],,,0X3F,],,,90,],,,0b110111,],,,0b110111,],;,},<EOF>''',101))

    def test_2535(self):
        self.assertTrue(TestLexer.test('''Class _0{Val $k:Array [Array [Array [Array [Array [Array [String ,0137],0B100001],0b1011010],0X2D],0137],53];Constructor (_,t:String ;b,U:Boolean ){} }Class J{}Class _{}''','''Class,_0,{,Val,$k,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0137,],,,0B100001,],,,0b1011010,],,,0X2D,],,,0137,],,,53,],;,Constructor,(,_,,,t,:,String,;,b,,,U,:,Boolean,),{,},},Class,J,{,},Class,_,{,},<EOF>''',101))

    def test_2536(self):
        self.assertTrue(TestLexer.test('''Class _:n{Var Aq5_1:Array [Float ,0b1];}Class _:t{}Class Y{Val $_,w51_:Array [Array [String ,036],38];$g(){} }Class _:_{Var A7,$5,$A02_,$5:Array [Array [String ,0b1],063];}Class Li:___{}''','''Class,_,:,n,{,Var,Aq5_1,:,Array,[,Float,,,0b1,],;,},Class,_,:,t,{,},Class,Y,{,Val,$_,,,w51_,:,Array,[,Array,[,String,,,036,],,,38,],;,$g,(,),{,},},Class,_,:,_,{,Var,A7,,,$5,,,$A02_,,,$5,:,Array,[,Array,[,String,,,0b1,],,,063,],;,},Class,Li,:,___,{,},<EOF>''',101))

    def test_2537(self):
        self.assertTrue(TestLexer.test('''Class AQu{}Class _1{Val $rC_:JK;Val j:Array [Array [Array [Array [Array [Array [Array [String ,91],0x63],4],91],0X5F2C0575_EF],0B1011],0B11];}''','''Class,AQu,{,},Class,_1,{,Val,$rC_,:,JK,;,Val,j,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,91,],,,0x63,],,,4,],,,91,],,,0X5F2C0575EF,],,,0B1011,],,,0B11,],;,},<EOF>''',101))

    def test_2538(self):
        self.assertTrue(TestLexer.test('''Class md{i(_,_,d8I_P_,B,_:String ;CP_,_fZ9,_:Array [Array [Array [Array [String ,0XD22],31],31],035];Z1,_:_;r,D_qo:Array [Array [String ,291],074_5_7];m:Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,035],0B1_0],0B1100100],31],0X26],0x54],0B1100100],0xE],0X26];g:Int ;___f_:Z__;z:String ){} }''','''Class,md,{,i,(,_,,,_,,,d8I_P_,,,B,,,_,:,String,;,CP_,,,_fZ9,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0XD22,],,,31,],,,31,],,,035,],;,Z1,,,_,:,_,;,r,,,D_qo,:,Array,[,Array,[,String,,,291,],,,07457,],;,m,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,035,],,,0B10,],,,0B1100100,],,,31,],,,0X26,],,,0x54,],,,0B1100100,],,,0xE,],,,0X26,],;,g,:,Int,;,___f_,:,Z__,;,z,:,String,),{,},},<EOF>''',101))

    def test_2539(self):
        self.assertTrue(TestLexer.test('''Class _:_66{_e(){}Destructor (){Var Z51D,_,s__:R01;} }Class IZ{Var q,q:_2a;Val $71_2_,$u:String ;Val $8:__F;}Class U:__{}Class _:b{}''','''Class,_,:,_66,{,_e,(,),{,},Destructor,(,),{,Var,Z51D,,,_,,,s__,:,R01,;,},},Class,IZ,{,Var,q,,,q,:,_2a,;,Val,$71_2_,,,$u,:,String,;,Val,$8,:,__F,;,},Class,U,:,__,{,},Class,_,:,b,{,},<EOF>''',101))

    def test_2540(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _4{Var $D2:Array [Array [Array [Array [Float ,0X8_F],0B1_0_1],1],0B1100010];X(_,_,T,_r_:_T){Vg::$w();} }''','''Class,_,{,},Class,_4,{,Var,$D2,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X8F,],,,0B101,],,,1,],,,0B1100010,],;,X,(,_,,,_,,,T,,,_r_,:,_T,),{,Vg,::,$w,(,),;,},},<EOF>''',101))

    def test_2541(self):
        self.assertTrue(TestLexer.test('''Class F_{Destructor (){}Val $8:Array [Array [Array [String ,03_52],045_1],0X2_43_4CA1];Val $4,__4:Array [Array [String ,435],63];Destructor (){} }''','''Class,F_,{,Destructor,(,),{,},Val,$8,:,Array,[,Array,[,Array,[,String,,,0352,],,,0451,],,,0X2434CA1,],;,Val,$4,,,__4,:,Array,[,Array,[,String,,,435,],,,63,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_2542(self):
        self.assertTrue(TestLexer.test('''Class Q:__{$58(e4k,_UV9:String ;_0,_38,_:mq;N_:Array [Array [Array [String ,0B1_1],98],0XF]){Val i,O,_,_W,_:g36;} }''','''Class,Q,:,__,{,$58,(,e4k,,,_UV9,:,String,;,_0,,,_38,,,_,:,mq,;,N_,:,Array,[,Array,[,Array,[,String,,,0B11,],,,98,],,,0XF,],),{,Val,i,,,O,,,_,,,_W,,,_,:,g36,;,},},<EOF>''',101))

    def test_2543(self):
        self.assertTrue(TestLexer.test('''Class _:i{Val E:String ;Constructor (v_,__,_,J,_:sk;L:Int ;_:String ){}Var gO:Array [Boolean ,032];Destructor (){} }''','''Class,_,:,i,{,Val,E,:,String,;,Constructor,(,v_,,,__,,,_,,,J,,,_,:,sk,;,L,:,Int,;,_,:,String,),{,},Var,gO,:,Array,[,Boolean,,,032,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_2544(self):
        self.assertTrue(TestLexer.test('''Class _{}Class Z:l{_(A7T_,V1:Array [Array [Array [Array [Int ,0B1100001],0B11_01_0],0X7D_4_46_CD],034]){} }Class i:_{}''','''Class,_,{,},Class,Z,:,l,{,_,(,A7T_,,,V1,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1100001,],,,0B11010,],,,0X7D446CD,],,,034,],),{,},},Class,i,:,_,{,},<EOF>''',101))

    def test_2545(self):
        self.assertTrue(TestLexer.test('''Class GM9fv:O_2{Constructor (X:Array [Array [Float ,0B111100],0132]){q_R::$0_N.n_.__._3_._.wi__.qih__().e()._();} }''','''Class,GM9fv,:,O_2,{,Constructor,(,X,:,Array,[,Array,[,Float,,,0B111100,],,,0132,],),{,q_R,::,$0_N,.,n_,.,__,.,_3_,.,_,.,wi__,.,qih__,(,),.,e,(,),.,_,(,),;,},},<EOF>''',101))

    def test_2546(self):
        self.assertTrue(TestLexer.test('''Class __37{}Class bo___U:o{}Class _{}Class B:___p{Constructor (_:Array [Array [String ,03],03];_l6,_5C35:_;H8_,nc:Int ;_,__,_,q:__){} }Class _{Var $9T:Array [Array [Array [Array [Float ,3_7],0b1000110],79_0_9_5],07_5]=!-_::$_;}''','''Class,__37,{,},Class,bo___U,:,o,{,},Class,_,{,},Class,B,:,___p,{,Constructor,(,_,:,Array,[,Array,[,String,,,03,],,,03,],;,_l6,,,_5C35,:,_,;,H8_,,,nc,:,Int,;,_,,,__,,,_,,,q,:,__,),{,},},Class,_,{,Var,$9T,:,Array,[,Array,[,Array,[,Array,[,Float,,,37,],,,0b1000110,],,,79095,],,,075,],=,!,-,_,::,$_,;,},<EOF>''',101))

    def test_2547(self):
        self.assertTrue(TestLexer.test('''Class d:E{}Class _1_3_ba29{Constructor (__2587:_;P:Array [Boolean ,04_4_02];_:A;Q,T,z,VwI,_W,_,t,t:_){} }Class f:__{}''','''Class,d,:,E,{,},Class,_1_3_ba29,{,Constructor,(,__2587,:,_,;,P,:,Array,[,Boolean,,,04402,],;,_,:,A,;,Q,,,T,,,z,,,VwI,,,_W,,,_,,,t,,,t,:,_,),{,},},Class,f,:,__,{,},<EOF>''',101))

    def test_2548(self):
        self.assertTrue(TestLexer.test('''Class _R_{Constructor (d,_s_,_,_7,K3,__9_1,_:Array [String ,9_46_9];__1,M39:Float ;I235,d,_,_3:_;F_9_:Array [Int ,0B1001]){} }''','''Class,_R_,{,Constructor,(,d,,,_s_,,,_,,,_7,,,K3,,,__9_1,,,_,:,Array,[,String,,,9469,],;,__1,,,M39,:,Float,;,I235,,,d,,,_,,,_3,:,_,;,F_9_,:,Array,[,Int,,,0B1001,],),{,},},<EOF>''',101))

    def test_2549(self):
        self.assertTrue(TestLexer.test('''Class w:m_{H1(_:Array [Array [Array [Boolean ,0XC],24],0X1]){}Val Q,$8,$aq__3s51:Array [Array [Array [Array [Array [Array [Array [Int ,0B1010010],24],0B1010010],0B1010010],0x5B],0X1],0100];}Class _{}Class _{}''','''Class,w,:,m_,{,H1,(,_,:,Array,[,Array,[,Array,[,Boolean,,,0XC,],,,24,],,,0X1,],),{,},Val,Q,,,$8,,,$aq__3s51,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1010010,],,,24,],,,0B1010010,],,,0B1010010,],,,0x5B,],,,0X1,],,,0100,],;,},Class,_,{,},Class,_,{,},<EOF>''',101))

    def test_2550(self):
        self.assertTrue(TestLexer.test('''Class _6_:j_{$x(){}Constructor (IL_:_;__8s:Boolean ){}_(_:_){Continue ;Val n_K5:Array [Int ,0B1];} }Class _{}Class _:_8__e_9{}Class z:k{Destructor (){} }''','''Class,_6_,:,j_,{,$x,(,),{,},Constructor,(,IL_,:,_,;,__8s,:,Boolean,),{,},_,(,_,:,_,),{,Continue,;,Val,n_K5,:,Array,[,Int,,,0B1,],;,},},Class,_,{,},Class,_,:,_8__e_9,{,},Class,z,:,k,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2551(self):
        self.assertTrue(TestLexer.test('''Class _:M{Destructor (){}Constructor (cP,PH:Float ;_,u,__,o,_q,_:Array [Float ,0xF_4];M49_5:Array [Int ,0b1010000]){} }''','''Class,_,:,M,{,Destructor,(,),{,},Constructor,(,cP,,,PH,:,Float,;,_,,,u,,,__,,,o,,,_q,,,_,:,Array,[,Float,,,0xF4,],;,M49_5,:,Array,[,Int,,,0b1010000,],),{,},},<EOF>''',101))

    def test_2552(self):
        self.assertTrue(TestLexer.test('''Class _U_{}Class _:_5mrX2_{Val $_,__,E8_,_K,g,p,_:_;Z0(_1__,q1,_,d8,_m2o:Boolean ;_:Array [Array [Array [Float ,0x1C],0b100111],06_1_2_3];__8:Array [Array [Boolean ,0X3F],0B1_001];____:Array [Array [Array [Array [Float ,013],0XB],0XE],0B1_0]){ {}Break ;{Continue ;} }}''','''Class,_U_,{,},Class,_,:,_5mrX2_,{,Val,$_,,,__,,,E8_,,,_K,,,g,,,p,,,_,:,_,;,Z0,(,_1__,,,q1,,,_,,,d8,,,_m2o,:,Boolean,;,_,:,Array,[,Array,[,Array,[,Float,,,0x1C,],,,0b100111,],,,06123,],;,__8,:,Array,[,Array,[,Boolean,,,0X3F,],,,0B1001,],;,____,:,Array,[,Array,[,Array,[,Array,[,Float,,,013,],,,0XB,],,,0XE,],,,0B10,],),{,{,},Break,;,{,Continue,;,},},},<EOF>''',101))

    def test_2553(self):
        self.assertTrue(TestLexer.test('''Class _3{Constructor (_Y:Array [Array [Array [Array [Int ,032],04_1],032],0b1]){}Constructor (d:Int ;_,y_,v:String ){} }Class EPB{}''','''Class,_3,{,Constructor,(,_Y,:,Array,[,Array,[,Array,[,Array,[,Int,,,032,],,,041,],,,032,],,,0b1,],),{,},Constructor,(,d,:,Int,;,_,,,y_,,,v,:,String,),{,},},Class,EPB,{,},<EOF>''',101))

    def test_2554(self):
        self.assertTrue(TestLexer.test('''Class r{_(_:Array [String ,0XE_9C];__yz:Boolean ;q,u:_;Y,_4Q7,_:E;C,_,_:Array [Boolean ,0b100111];__,_,u:_L;_,_,L_,Zk1i:_a_;v,_:oI){} }''','''Class,r,{,_,(,_,:,Array,[,String,,,0XE9C,],;,__yz,:,Boolean,;,q,,,u,:,_,;,Y,,,_4Q7,,,_,:,E,;,C,,,_,,,_,:,Array,[,Boolean,,,0b100111,],;,__,,,_,,,u,:,_L,;,_,,,_,,,L_,,,Zk1i,:,_a_,;,v,,,_,:,oI,),{,},},<EOF>''',101))

    def test_2555(self):
        self.assertTrue(TestLexer.test('''Class _w_R____6{Destructor (){} }Class _w4:VE9{Constructor (_l:Array [Array [Array [Int ,03_5],0X46],03];_,__,_:Array [Array [Array [Array [Array [Boolean ,0x3],0x34],26],0XE_A],26]){}Var _:Int ;Constructor (){} }''','''Class,_w_R____6,{,Destructor,(,),{,},},Class,_w4,:,VE9,{,Constructor,(,_l,:,Array,[,Array,[,Array,[,Int,,,035,],,,0X46,],,,03,],;,_,,,__,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x3,],,,0x34,],,,26,],,,0XEA,],,,26,],),{,},Var,_,:,Int,;,Constructor,(,),{,},},<EOF>''',101))

    def test_2556(self):
        self.assertTrue(TestLexer.test('''Class _g_{Constructor (U_,_76:Int ;f,_,_:Array [Array [Array [Array [Int ,0B1_10],0B1100010],07_635_7_565_3],0X41];_,_,R_,_:String ;_,_6,_:r7K;L:String ;_1:Array [Array [Array [Array [Int ,0101],0X41],0b1_0_1_1],0B1100010];W,_,_51n,_9:Array [Array [Array [Int ,0x5],0x4],50]){Break ;} }Class _{}''','''Class,_g_,{,Constructor,(,U_,,,_76,:,Int,;,f,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B110,],,,0B1100010,],,,0763575653,],,,0X41,],;,_,,,_,,,R_,,,_,:,String,;,_,,,_6,,,_,:,r7K,;,L,:,String,;,_1,:,Array,[,Array,[,Array,[,Array,[,Int,,,0101,],,,0X41,],,,0b1011,],,,0B1100010,],;,W,,,_,,,_51n,,,_9,:,Array,[,Array,[,Array,[,Int,,,0x5,],,,0x4,],,,50,],),{,Break,;,},},Class,_,{,},<EOF>''',101))

    def test_2557(self):
        self.assertTrue(TestLexer.test('''Class U:t_{Val $_,_,$d:Array [Float ,062];Val JW,v7g46____2:Array [Float ,37];}Class _lt{}Class ci:c{Val H:Array [String ,0b1000000];}Class C{}''','''Class,U,:,t_,{,Val,$_,,,_,,,$d,:,Array,[,Float,,,062,],;,Val,JW,,,v7g46____2,:,Array,[,Float,,,37,],;,},Class,_lt,{,},Class,ci,:,c,{,Val,H,:,Array,[,String,,,0b1000000,],;,},Class,C,{,},<EOF>''',101))

    def test_2558(self):
        self.assertTrue(TestLexer.test('''Class j5{Val _:Array [Array [Array [Array [Array [Array [Boolean ,0b1100001],0xF],0B1],0XB],1],0b1];Val $5a_,$_:L;}Class Jp_:M{}''','''Class,j5,{,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1100001,],,,0xF,],,,0B1,],,,0XB,],,,1,],,,0b1,],;,Val,$5a_,,,$_,:,L,;,},Class,Jp_,:,M,{,},<EOF>''',101))

    def test_2559(self):
        self.assertTrue(TestLexer.test('''Class V:_{}Class X:CTs{Constructor (m:Array [Array [Array [Float ,06_0],0X60],0b100000];__3,_:Array [Float ,0133];C,_,n__:Int ){}Constructor (_:_;X__:Array [Array [Array [String ,0x5_C],0X5],0X60];E,__3Z,_,z,a_9:W5){} }''','''Class,V,:,_,{,},Class,X,:,CTs,{,Constructor,(,m,:,Array,[,Array,[,Array,[,Float,,,060,],,,0X60,],,,0b100000,],;,__3,,,_,:,Array,[,Float,,,0133,],;,C,,,_,,,n__,:,Int,),{,},Constructor,(,_,:,_,;,X__,:,Array,[,Array,[,Array,[,String,,,0x5C,],,,0X5,],,,0X60,],;,E,,,__3Z,,,_,,,z,,,a_9,:,W5,),{,},},<EOF>''',101))

    def test_2560(self):
        self.assertTrue(TestLexer.test('''Class S:Z{Constructor (_,e:I8;_:Array [Float ,0X24]){}Val $5,$12P:Array [Array [Array [String ,0x2E],01_3_6_46_516],0X24];}Class _l5_s{}''','''Class,S,:,Z,{,Constructor,(,_,,,e,:,I8,;,_,:,Array,[,Float,,,0X24,],),{,},Val,$5,,,$12P,:,Array,[,Array,[,Array,[,String,,,0x2E,],,,013646516,],,,0X24,],;,},Class,_l5_s,{,},<EOF>''',101))

    def test_2561(self):
        self.assertTrue(TestLexer.test('''Class S{Destructor (){Break ;}$r6a(){}xt_l8_(ZM_:_;_:R__90_){}$_(_:Float ;E:Array [Array [Array [String ,074],06_57],38];_7,_:Int ;as,_6Cz8s_,_HS5__5:_5_;e__6,q1,_8:w){} }Class _3{Destructor (){}Var $1q_:_;Var _:Array [Array [Array [Array [Array [Float ,05_3],02],05],074],0b11111];Var $_,j:j;}''','''Class,S,{,Destructor,(,),{,Break,;,},$r6a,(,),{,},xt_l8_,(,ZM_,:,_,;,_,:,R__90_,),{,},$_,(,_,:,Float,;,E,:,Array,[,Array,[,Array,[,String,,,074,],,,0657,],,,38,],;,_7,,,_,:,Int,;,as,,,_6Cz8s_,,,_HS5__5,:,_5_,;,e__6,,,q1,,,_8,:,w,),{,},},Class,_3,{,Destructor,(,),{,},Var,$1q_,:,_,;,Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,053,],,,02,],,,05,],,,074,],,,0b11111,],;,Var,$_,,,j,:,j,;,},<EOF>''',101))

    def test_2562(self):
        self.assertTrue(TestLexer.test('''Class __v{}Class D:_{Var _4,_z_6:Array [Array [Boolean ,0b100_10],0B1000101];}Class F7{}Class _U{$C(___5_:String ){}Constructor (){} }Class _F8{Val $_:Array [Boolean ,0X2_C];}Class _:p{}''','''Class,__v,{,},Class,D,:,_,{,Var,_4,,,_z_6,:,Array,[,Array,[,Boolean,,,0b10010,],,,0B1000101,],;,},Class,F7,{,},Class,_U,{,$C,(,___5_,:,String,),{,},Constructor,(,),{,},},Class,_F8,{,Val,$_,:,Array,[,Boolean,,,0X2C,],;,},Class,_,:,p,{,},<EOF>''',101))

    def test_2563(self):
        self.assertTrue(TestLexer.test('''Class r0Y_j{}Class _{Val _,K_:x;Val $T6278,_2:Array [String ,02];Destructor (){}Var _,_,p_,$M_x,dj_,_,$L:String ;}''','''Class,r0Y_j,{,},Class,_,{,Val,_,,,K_,:,x,;,Val,$T6278,,,_2,:,Array,[,String,,,02,],;,Destructor,(,),{,},Var,_,,,_,,,p_,,,$M_x,,,dj_,,,_,,,$L,:,String,;,},<EOF>''',101))

    def test_2564(self):
        self.assertTrue(TestLexer.test('''Class o{_(d,_,x_a10__,a_,__:_){} }Class x{Constructor (){}Destructor (){}Val $_,$_0,$P__:Boolean ;Val $32,w_P,A:Array [Array [Int ,0X2],01];}''','''Class,o,{,_,(,d,,,_,,,x_a10__,,,a_,,,__,:,_,),{,},},Class,x,{,Constructor,(,),{,},Destructor,(,),{,},Val,$_,,,$_0,,,$P__,:,Boolean,;,Val,$32,,,w_P,,,A,:,Array,[,Array,[,Int,,,0X2,],,,01,],;,},<EOF>''',101))

    def test_2565(self):
        self.assertTrue(TestLexer.test('''Class ___T___99{}Class y{Constructor (_:Array [Int ,06];s63:Boolean ;_l__2_c9__,__:String ){} }Class __91:__{}''','''Class,___T___99,{,},Class,y,{,Constructor,(,_,:,Array,[,Int,,,06,],;,s63,:,Boolean,;,_l__2_c9__,,,__,:,String,),{,},},Class,__91,:,__,{,},<EOF>''',101))

    def test_2566(self):
        self.assertTrue(TestLexer.test('''Class J:_{}Class _{}Class __q{Constructor (j6:_;__,_3:Array [Array [Array [Float ,0b100100],0B10111],0b100100];H8,G_7t_3,M:Float ;n:X_179K3){} }''','''Class,J,:,_,{,},Class,_,{,},Class,__q,{,Constructor,(,j6,:,_,;,__,,,_3,:,Array,[,Array,[,Array,[,Float,,,0b100100,],,,0B10111,],,,0b100100,],;,H8,,,G_7t_3,,,M,:,Float,;,n,:,X_179K3,),{,},},<EOF>''',101))

    def test_2567(self):
        self.assertTrue(TestLexer.test('''Class _{}Class HDS{x(m_J:Array [Array [Array [Array [Array [Float ,0b111],0B100011],0115],0244],0b111]){} }Class ____7__{}Class _{}Class _R:y{}''','''Class,_,{,},Class,HDS,{,x,(,m_J,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b111,],,,0B100011,],,,0115,],,,0244,],,,0b111,],),{,},},Class,____7__,{,},Class,_,{,},Class,_R,:,y,{,},<EOF>''',101))

    def test_2568(self):
        self.assertTrue(TestLexer.test('''Class C5:_{$j(Ya5h:Array [Int ,0113]){}$r(_:Array [Array [Array [Array [String ,0B1000100],0X20C],6],9]){ {} }}Class S{}Class _8x:F{}''','''Class,C5,:,_,{,$j,(,Ya5h,:,Array,[,Int,,,0113,],),{,},$r,(,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0B1000100,],,,0X20C,],,,6,],,,9,],),{,{,},},},Class,S,{,},Class,_8x,:,F,{,},<EOF>''',101))

    def test_2569(self):
        self.assertTrue(TestLexer.test('''Class __{Var Ft5,$_IL,_t_:_;Val $T,$__5d2:Array [Array [Array [String ,0B101010],0X14],0105];Destructor (){Continue ;}$4(_:String ){}Var _,Q:Array [Array [Array [Array [Int ,0X14],0507],0105],2_4];}Class r:iy50_{Constructor (){} }''','''Class,__,{,Var,Ft5,,,$_IL,,,_t_,:,_,;,Val,$T,,,$__5d2,:,Array,[,Array,[,Array,[,String,,,0B101010,],,,0X14,],,,0105,],;,Destructor,(,),{,Continue,;,},$4,(,_,:,String,),{,},Var,_,,,Q,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X14,],,,0507,],,,0105,],,,24,],;,},Class,r,:,iy50_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_2570(self):
        self.assertTrue(TestLexer.test('''Class k{Constructor (_2O,f_:Array [String ,0b11110];o:Array [Int ,0x61];Jn_D,A__,X:String ;X,_au,W0f,f,_,W:Float ){Break ;} }''','''Class,k,{,Constructor,(,_2O,,,f_,:,Array,[,String,,,0b11110,],;,o,:,Array,[,Int,,,0x61,],;,Jn_D,,,A__,,,X,:,String,;,X,,,_au,,,W0f,,,f,,,_,,,W,:,Float,),{,Break,;,},},<EOF>''',101))

    def test_2571(self):
        self.assertTrue(TestLexer.test('''Class _2{Constructor (){}_(p,_:Array [Array [Array [Float ,07],0X23],8];_p,_jk,_,_,J:String ;_:Z_2;g:Array [String ,0b1];_:Array [Float ,07]){} }''','''Class,_2,{,Constructor,(,),{,},_,(,p,,,_,:,Array,[,Array,[,Array,[,Float,,,07,],,,0X23,],,,8,],;,_p,,,_jk,,,_,,,_,,,J,:,String,;,_,:,Z_2,;,g,:,Array,[,String,,,0b1,],;,_,:,Array,[,Float,,,07,],),{,},},<EOF>''',101))

    def test_2572(self):
        self.assertTrue(TestLexer.test('''Class n{Constructor (_,_t1H9,tT:Array [Array [Array [Boolean ,0X12],04_61],97];VK_,K,_,_:Float ;_1,x169:Int ){} }''','''Class,n,{,Constructor,(,_,,,_t1H9,,,tT,:,Array,[,Array,[,Array,[,Boolean,,,0X12,],,,0461,],,,97,],;,VK_,,,K,,,_,,,_,:,Float,;,_1,,,x169,:,Int,),{,},},<EOF>''',101))

    def test_2573(self):
        self.assertTrue(TestLexer.test('''Class ed{_(_:String ){Continue ;Continue ;Val _:Array [Int ,065];} }Class z{}Class sK:___{Destructor (){}Destructor (){}Constructor (f:Int ;_:Boolean ;_2,__:Int ;e,m,_7CTD:String ;Z5,_,_v:Float ;e41a:Float ;Q:qe;_,y8,E:String ){} }Class _{Var $H9,U_:j;}Class __:_{}Class _{}''','''Class,ed,{,_,(,_,:,String,),{,Continue,;,Continue,;,Val,_,:,Array,[,Int,,,065,],;,},},Class,z,{,},Class,sK,:,___,{,Destructor,(,),{,},Destructor,(,),{,},Constructor,(,f,:,Int,;,_,:,Boolean,;,_2,,,__,:,Int,;,e,,,m,,,_7CTD,:,String,;,Z5,,,_,,,_v,:,Float,;,e41a,:,Float,;,Q,:,qe,;,_,,,y8,,,E,:,String,),{,},},Class,_,{,Var,$H9,,,U_,:,j,;,},Class,__,:,_,{,},Class,_,{,},<EOF>''',101))

    def test_2574(self):
        self.assertTrue(TestLexer.test('''Class _0_:j{Val __:X__;Constructor (_,__u,_,_:V_1;_:Array [Array [Boolean ,067],0B11101];D3g,_pc,b,_,l,f,__:Array [Array [Array [Array [Int ,04_0_22_1_013472],0b100110],0b100110],0x1B];u__2ljj:q__;AX,__,_,_4:Float ;_,_06,_:F8_){} }Class j__{}''','''Class,_0_,:,j,{,Val,__,:,X__,;,Constructor,(,_,,,__u,,,_,,,_,:,V_1,;,_,:,Array,[,Array,[,Boolean,,,067,],,,0B11101,],;,D3g,,,_pc,,,b,,,_,,,l,,,f,,,__,:,Array,[,Array,[,Array,[,Array,[,Int,,,040221013472,],,,0b100110,],,,0b100110,],,,0x1B,],;,u__2ljj,:,q__,;,AX,,,__,,,_,,,_4,:,Float,;,_,,,_06,,,_,:,F8_,),{,},},Class,j__,{,},<EOF>''',101))

    def test_2575(self):
        self.assertTrue(TestLexer.test('''Class _6:W66{Val _v:Array [String ,06_4];}Class _8D_ck:s{Var $3,$_,$8:Array [Array [Boolean ,0XF],37];Destructor (){} }''','''Class,_6,:,W66,{,Val,_v,:,Array,[,String,,,064,],;,},Class,_8D_ck,:,s,{,Var,$3,,,$_,,,$8,:,Array,[,Array,[,Boolean,,,0XF,],,,37,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_2576(self):
        self.assertTrue(TestLexer.test('''Class _{}Class h:j{Var $L,_V,$hx_,a,$_,_4:Array [Array [Array [Array [Array [Array [Float ,80],031],06],0110],0B111010],80];}''','''Class,_,{,},Class,h,:,j,{,Var,$L,,,_V,,,$hx_,,,a,,,$_,,,_4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,80,],,,031,],,,06,],,,0110,],,,0B111010,],,,80,],;,},<EOF>''',101))

    def test_2577(self):
        self.assertTrue(TestLexer.test('''Class zb{$87(_,q:V8){} }Class m{}Class _J__4{Constructor (Yj9,hm8:Int ;_2_:Int ;u:Array [Float ,0B100100]){}Var _,$5,_F:Array [Float ,031];$tPm(){} }Class _:_{}''','''Class,zb,{,$87,(,_,,,q,:,V8,),{,},},Class,m,{,},Class,_J__4,{,Constructor,(,Yj9,,,hm8,:,Int,;,_2_,:,Int,;,u,:,Array,[,Float,,,0B100100,],),{,},Var,_,,,$5,,,_F,:,Array,[,Float,,,031,],;,$tPm,(,),{,},},Class,_,:,_,{,},<EOF>''',101))

    def test_2578(self):
        self.assertTrue(TestLexer.test('''Class _:i{Var K_o:D_;Var h_,$7_9:Float ;Var $_L,_5,$__:Array [Array [Array [Array [Array [Boolean ,21],013],0X5],0X5],013];Destructor (){Break ;Val U:Float ;} }Class _:_{}''','''Class,_,:,i,{,Var,K_o,:,D_,;,Var,h_,,,$7_9,:,Float,;,Var,$_L,,,_5,,,$__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,21,],,,013,],,,0X5,],,,0X5,],,,013,],;,Destructor,(,),{,Break,;,Val,U,:,Float,;,},},Class,_,:,_,{,},<EOF>''',101))

    def test_2579(self):
        self.assertTrue(TestLexer.test('''Class f{}Class e:U4{Var $Np,n57A6,$M:Array [Int ,404];$7R(_9,HS6,c,__,e:_9;_2,yqL7pE:_72U){} }Class z{}Class _1{}Class _:q{Destructor (){} }Class _n8Z{}''','''Class,f,{,},Class,e,:,U4,{,Var,$Np,,,n57A6,,,$M,:,Array,[,Int,,,404,],;,$7R,(,_9,,,HS6,,,c,,,__,,,e,:,_9,;,_2,,,yqL7pE,:,_72U,),{,},},Class,z,{,},Class,_1,{,},Class,_,:,q,{,Destructor,(,),{,},},Class,_n8Z,{,},<EOF>''',101))

    def test_2580(self):
        self.assertTrue(TestLexer.test('''Class ya5_:A6{}Class K{Var $_,f:Array [Array [String ,0b1_1],0B11_1_1];}Class _{Val $__:_;Var $zV0:Array [Array [Float ,0xF],06];}Class __:o3Q4_{$A(J3,ORGu54_,_R:Float ){} }''','''Class,ya5_,:,A6,{,},Class,K,{,Var,$_,,,f,:,Array,[,Array,[,String,,,0b11,],,,0B1111,],;,},Class,_,{,Val,$__,:,_,;,Var,$zV0,:,Array,[,Array,[,Float,,,0xF,],,,06,],;,},Class,__,:,o3Q4_,{,$A,(,J3,,,ORGu54_,,,_R,:,Float,),{,},},<EOF>''',101))

    def test_2581(self):
        self.assertTrue(TestLexer.test('''Class Z:k{Constructor (e,l:Float ;W_:Boolean ){Break ;}Constructor (){} }Class I_8_7_{}Class __{}Class O{}Class _{}''','''Class,Z,:,k,{,Constructor,(,e,,,l,:,Float,;,W_,:,Boolean,),{,Break,;,},Constructor,(,),{,},},Class,I_8_7_,{,},Class,__,{,},Class,O,{,},Class,_,{,},<EOF>''',101))

    def test_2582(self):
        self.assertTrue(TestLexer.test('''Class __{$X(p4:Array [Array [String ,8_01],67];_,m,i:Int ;__2,_,_,_wvi7,M_:_;_,IwW,y,_2_:String ){Break ;{} }}Class SD2_:x31{Var f6x_5C:_;}Class _3{Val _:_2;}''','''Class,__,{,$X,(,p4,:,Array,[,Array,[,String,,,801,],,,67,],;,_,,,m,,,i,:,Int,;,__2,,,_,,,_,,,_wvi7,,,M_,:,_,;,_,,,IwW,,,y,,,_2_,:,String,),{,Break,;,{,},},},Class,SD2_,:,x31,{,Var,f6x_5C,:,_,;,},Class,_3,{,Val,_,:,_2,;,},<EOF>''',101))

    def test_2583(self):
        self.assertTrue(TestLexer.test('''Class Ol_{Constructor (__B:Boolean ;r:Array [Array [Boolean ,0B1_1],016];lU92,b7_k,J,__08,_:Y;l:Array [Array [Array [Array [String ,0b1],0b1],0B101],72]){}Constructor (_____:Array [Array [Float ,72],0X3]){} }''','''Class,Ol_,{,Constructor,(,__B,:,Boolean,;,r,:,Array,[,Array,[,Boolean,,,0B11,],,,016,],;,lU92,,,b7_k,,,J,,,__08,,,_,:,Y,;,l,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,0b1,],,,0B101,],,,72,],),{,},Constructor,(,_____,:,Array,[,Array,[,Float,,,72,],,,0X3,],),{,},},<EOF>''',101))

    def test_2584(self):
        self.assertTrue(TestLexer.test('''Class _w:k{}Class _Z{M_K_(_:Array [Array [Array [Boolean ,072],072],0x2_F_0];_4:Boolean ;R:_;_c,__Uf__mA:g86_){}$_(___N:B3_5;xm_6Y9_5h:String ){Continue ;}Destructor (){} }''','''Class,_w,:,k,{,},Class,_Z,{,M_K_,(,_,:,Array,[,Array,[,Array,[,Boolean,,,072,],,,072,],,,0x2F0,],;,_4,:,Boolean,;,R,:,_,;,_c,,,__Uf__mA,:,g86_,),{,},$_,(,___N,:,B3_5,;,xm_6Y9_5h,:,String,),{,Continue,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_2585(self):
        self.assertTrue(TestLexer.test('''Class __f{}Class I__:R__Rx_lvuo5o{Var _,_,A,$o:String ;Val _,$57,O:P;}Class _:K{}Class J4{Val u:String ;}Class _3_:X{Destructor (){}Destructor (){Break ;{} }}''','''Class,__f,{,},Class,I__,:,R__Rx_lvuo5o,{,Var,_,,,_,,,A,,,$o,:,String,;,Val,_,,,$57,,,O,:,P,;,},Class,_,:,K,{,},Class,J4,{,Val,u,:,String,;,},Class,_3_,:,X,{,Destructor,(,),{,},Destructor,(,),{,Break,;,{,},},},<EOF>''',101))

    def test_2586(self):
        self.assertTrue(TestLexer.test('''Class __:n{Constructor (){}_U(__11_I6,_l_:Array [Array [Boolean ,20],0x38];__,G6__,w,r:Array [Float ,02]){} }Class _{Var v8,ai_N,_,$0Z:O;Val $c_,_:Nw;}''','''Class,__,:,n,{,Constructor,(,),{,},_U,(,__11_I6,,,_l_,:,Array,[,Array,[,Boolean,,,20,],,,0x38,],;,__,,,G6__,,,w,,,r,:,Array,[,Float,,,02,],),{,},},Class,_,{,Var,v8,,,ai_N,,,_,,,$0Z,:,O,;,Val,$c_,,,_,:,Nw,;,},<EOF>''',101))

    def test_2587(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (c8:___;_z5_,_a:Array [Int ,1];X8:Array [Array [Array [Int ,1],1],0x1];_4,s,p,M_w:T2;_8:Float ){} }''','''Class,_,{,Constructor,(,c8,:,___,;,_z5_,,,_a,:,Array,[,Int,,,1,],;,X8,:,Array,[,Array,[,Array,[,Int,,,1,],,,1,],,,0x1,],;,_4,,,s,,,p,,,M_w,:,T2,;,_8,:,Float,),{,},},<EOF>''',101))

    def test_2588(self):
        self.assertTrue(TestLexer.test('''Class ___9:_ti{}Class _{_p(qsR,_4,y:Array [Float ,0B10000]){} }Class _N4_{_w(Nu:Int ;_72q,G5,_:Array [Array [Array [Array [Array [String ,03_4],0124],0x8],0xE1_D_1_1],02_25_1]){} }''','''Class,___9,:,_ti,{,},Class,_,{,_p,(,qsR,,,_4,,,y,:,Array,[,Float,,,0B10000,],),{,},},Class,_N4_,{,_w,(,Nu,:,Int,;,_72q,,,G5,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,034,],,,0124,],,,0x8,],,,0xE1D11,],,,02251,],),{,},},<EOF>''',101))

    def test_2589(self):
        self.assertTrue(TestLexer.test('''Class _1{Var $38:String ;Var nVE7:String ;Constructor (I3:Boolean ;_0,_21:Array [String ,0b101000]){}Val $Sw4r,$_:Int ;}''','''Class,_1,{,Var,$38,:,String,;,Var,nVE7,:,String,;,Constructor,(,I3,:,Boolean,;,_0,,,_21,:,Array,[,String,,,0b101000,],),{,},Val,$Sw4r,,,$_,:,Int,;,},<EOF>''',101))

    def test_2590(self):
        self.assertTrue(TestLexer.test('''Class _V:_85{Constructor (H_:Array [String ,0X8B];__:Array [Array [Array [Boolean ,035],01],0137]){}Var cv,$_,$t,u,$z_:Boolean ;}Class _{}''','''Class,_V,:,_85,{,Constructor,(,H_,:,Array,[,String,,,0X8B,],;,__,:,Array,[,Array,[,Array,[,Boolean,,,035,],,,01,],,,0137,],),{,},Var,cv,,,$_,,,$t,,,u,,,$z_,:,Boolean,;,},Class,_,{,},<EOF>''',101))

    def test_2591(self):
        self.assertTrue(TestLexer.test('''Class _:_{Val r_,$E:Array [Array [Array [Float ,7_41],0B1_1],0x4_D_4_F_D_3_9];Val _7_,$_,$n:Array [Array [Array [Array [Array [String ,0b11],0B1_1],0b10],5],060];}Class i__{Val $7Q:Boolean ;}Class _{}Class _{}Class Pj_u:_{Var $_:_66;Destructor (){Continue ;} }Class M:b_5Zk4{}''','''Class,_,:,_,{,Val,r_,,,$E,:,Array,[,Array,[,Array,[,Float,,,741,],,,0B11,],,,0x4D4FD39,],;,Val,_7_,,,$_,,,$n,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b11,],,,0B11,],,,0b10,],,,5,],,,060,],;,},Class,i__,{,Val,$7Q,:,Boolean,;,},Class,_,{,},Class,_,{,},Class,Pj_u,:,_,{,Var,$_,:,_66,;,Destructor,(,),{,Continue,;,},},Class,M,:,b_5Zk4,{,},<EOF>''',101))

    def test_2592(self):
        self.assertTrue(TestLexer.test('''Class _2:_N{}Class M:n008{Constructor (_:_l3_9;_GJ4_,Zj6vS_7_i,_W0_A,G0:_8;_:String ){} }Class __7W:U{Destructor (){Continue ;Break ;{Var t7:String ;} }}''','''Class,_2,:,_N,{,},Class,M,:,n008,{,Constructor,(,_,:,_l3_9,;,_GJ4_,,,Zj6vS_7_i,,,_W0_A,,,G0,:,_8,;,_,:,String,),{,},},Class,__7W,:,U,{,Destructor,(,),{,Continue,;,Break,;,{,Var,t7,:,String,;,},},},<EOF>''',101))

    def test_2593(self):
        self.assertTrue(TestLexer.test('''Class h:_8o{}Class _3{Constructor (r:Float ){Continue ;uL_3oVz_G::$5();Return ;}Constructor (){} }Class _7S{_(G:K){} }''','''Class,h,:,_8o,{,},Class,_3,{,Constructor,(,r,:,Float,),{,Continue,;,uL_3oVz_G,::,$5,(,),;,Return,;,},Constructor,(,),{,},},Class,_7S,{,_,(,G,:,K,),{,},},<EOF>''',101))

    def test_2594(self):
        self.assertTrue(TestLexer.test('''Class f{Constructor (uz,_:S;_,_:String ;_,_:Boolean ;_:Array [Array [Array [Array [Float ,0X39],073],0x8],073]){} }Class x_V_:__{Constructor (_,_1,F6:Array [Float ,0B1]){} }''','''Class,f,{,Constructor,(,uz,,,_,:,S,;,_,,,_,:,String,;,_,,,_,:,Boolean,;,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X39,],,,073,],,,0x8,],,,073,],),{,},},Class,x_V_,:,__,{,Constructor,(,_,,,_1,,,F6,:,Array,[,Float,,,0B1,],),{,},},<EOF>''',101))

    def test_2595(self):
        self.assertTrue(TestLexer.test('''Class __:__D{}Class _:a{Var $_o__:Array [Array [Array [Array [Array [Array [Float ,0X91],054],054],03_4_3],02],0X39];$_Z_(){} }''','''Class,__,:,__D,{,},Class,_,:,a,{,Var,$_o__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X91,],,,054,],,,054,],,,0343,],,,02,],,,0X39,],;,$_Z_,(,),{,},},<EOF>''',101))

    def test_2596(self):
        self.assertTrue(TestLexer.test('''Class _j70:e{Constructor (MP,T,__9vD,_,k_sV:e;U:Float ;m:Int ;_:_2){}Constructor (){Break ;Var _66__,x18,__:ksJ;}Destructor (){}Q(){} }''','''Class,_j70,:,e,{,Constructor,(,MP,,,T,,,__9vD,,,_,,,k_sV,:,e,;,U,:,Float,;,m,:,Int,;,_,:,_2,),{,},Constructor,(,),{,Break,;,Var,_66__,,,x18,,,__,:,ksJ,;,},Destructor,(,),{,},Q,(,),{,},},<EOF>''',101))

    def test_2597(self):
        self.assertTrue(TestLexer.test('''Class _{Val q,R_,$C:Boolean ;Constructor (M,_:Array [Array [Int ,06_7],01];__,E_,_,L6N:Array [Array [Int ,0b1_1_1],0B1]){} }''','''Class,_,{,Val,q,,,R_,,,$C,:,Boolean,;,Constructor,(,M,,,_,:,Array,[,Array,[,Int,,,067,],,,01,],;,__,,,E_,,,_,,,L6N,:,Array,[,Array,[,Int,,,0b111,],,,0B1,],),{,},},<EOF>''',101))

    def test_2598(self):
        self.assertTrue(TestLexer.test('''Class _:_{Val $225:h8;}Class P{Val __D,$l,_,F_:Array [Array [Array [Array [Array [Array [Array [String ,0X18],3_7],0x5A],063],0B1_1],063],0x5A];}''','''Class,_,:,_,{,Val,$225,:,h8,;,},Class,P,{,Val,__D,,,$l,,,_,,,F_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X18,],,,37,],,,0x5A,],,,063,],,,0B11,],,,063,],,,0x5A,],;,},<EOF>''',101))

    def test_2599(self):
        self.assertTrue(TestLexer.test('''Class _i:U{Destructor (){} }Class _Y:_{$Y(__,Wno,e:Boolean ;t,_e7,_:_;u3P_,e_,W,k94_:Float ;Hv,_0,Ag:Int ;A:Array [String ,02]){} }Class S_:_{}Class __DU:_{}''','''Class,_i,:,U,{,Destructor,(,),{,},},Class,_Y,:,_,{,$Y,(,__,,,Wno,,,e,:,Boolean,;,t,,,_e7,,,_,:,_,;,u3P_,,,e_,,,W,,,k94_,:,Float,;,Hv,,,_0,,,Ag,:,Int,;,A,:,Array,[,String,,,02,],),{,},},Class,S_,:,_,{,},Class,__DU,:,_,{,},<EOF>''',101))

    def test_2600(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _4{}Class __:UD{Constructor (B,__,_,_:U2xN;__,_:Array [Array [String ,0XB],0B1]){Break ;}$B(W_x:__5){} }''','''Class,_,{,},Class,_4,{,},Class,__,:,UD,{,Constructor,(,B,,,__,,,_,,,_,:,U2xN,;,__,,,_,:,Array,[,Array,[,String,,,0XB,],,,0B1,],),{,Break,;,},$B,(,W_x,:,__5,),{,},},<EOF>''',101))

    def test_2601(self):
        self.assertTrue(TestLexer.test('''Class F{Var _,B,_3g,$_,$y,$w,_t,___:Float ;$x(){Break ;Var i4:Array [Array [Boolean ,05_15],83];{Break ;} }}Class _{}''','''Class,F,{,Var,_,,,B,,,_3g,,,$_,,,$y,,,$w,,,_t,,,___,:,Float,;,$x,(,),{,Break,;,Var,i4,:,Array,[,Array,[,Boolean,,,0515,],,,83,],;,{,Break,;,},},},Class,_,{,},<EOF>''',101))

    def test_2602(self):
        self.assertTrue(TestLexer.test('''Class _:NLf{Destructor (){}Destructor (){}Destructor (){} }Class ___{}Class __2T:_{}Class _s:L_D{}Class c:Y{$qKV2(_:s;_:Array [Array [Array [Array [Array [Array [Float ,0x22],0B1],0b1011111],9721],23],0xE]){ {}{} }Var _4___621:String ;}''','''Class,_,:,NLf,{,Destructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,},},Class,___,{,},Class,__2T,:,_,{,},Class,_s,:,L_D,{,},Class,c,:,Y,{,$qKV2,(,_,:,s,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x22,],,,0B1,],,,0b1011111,],,,9721,],,,23,],,,0xE,],),{,{,},{,},},Var,_4___621,:,String,;,},<EOF>''',101))

    def test_2603(self):
        self.assertTrue(TestLexer.test('''Class v4{Var _:Int ;}Class rY{Destructor (){}Val R6:Array [Float ,0143];}Class v:_0{Var $e,__:String ;Var $_:Array [Int ,0b101];}''','''Class,v4,{,Var,_,:,Int,;,},Class,rY,{,Destructor,(,),{,},Val,R6,:,Array,[,Float,,,0143,],;,},Class,v,:,_0,{,Var,$e,,,__,:,String,;,Var,$_,:,Array,[,Int,,,0b101,],;,},<EOF>''',101))

    def test_2604(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class C_3{Destructor (){Continue ;}s5(){}Destructor (){}$f(___R3,_6:___e4G_j;_:String ){ {Break ;} }Constructor (mm0:_;CKy_,_8,_,__:Boolean ){} }''','''Class,_,:,_,{,},Class,C_3,{,Destructor,(,),{,Continue,;,},s5,(,),{,},Destructor,(,),{,},$f,(,___R3,,,_6,:,___e4G_j,;,_,:,String,),{,{,Break,;,},},Constructor,(,mm0,:,_,;,CKy_,,,_8,,,_,,,__,:,Boolean,),{,},},<EOF>''',101))

    def test_2605(self):
        self.assertTrue(TestLexer.test('''Class J:LO{}Class u{}Class x:v{Var $_:Array [Array [Array [Array [String ,54],03],021],0B1];}Class n{_(_:String ;Jh:Float ){}p(_V:_){}Constructor (a_:G;_,v:Array [String ,0B1];__:Boolean ){}Destructor (){} }Class _n093{}Class _3D{Constructor (){Continue ;} }''','''Class,J,:,LO,{,},Class,u,{,},Class,x,:,v,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,String,,,54,],,,03,],,,021,],,,0B1,],;,},Class,n,{,_,(,_,:,String,;,Jh,:,Float,),{,},p,(,_V,:,_,),{,},Constructor,(,a_,:,G,;,_,,,v,:,Array,[,String,,,0B1,],;,__,:,Boolean,),{,},Destructor,(,),{,},},Class,_n093,{,},Class,_3D,{,Constructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_2606(self):
        self.assertTrue(TestLexer.test('''Class L:J{}Class _{}Class _v8{Val T:u;bN(l5:String ;i_,r6t_:Array [Boolean ,0B1011101];_4f51:Array [Array [String ,047],0x5E];_:Int ){}Constructor (D,R:Array [Array [Float ,04],0x8_B]){} }''','''Class,L,:,J,{,},Class,_,{,},Class,_v8,{,Val,T,:,u,;,bN,(,l5,:,String,;,i_,,,r6t_,:,Array,[,Boolean,,,0B1011101,],;,_4f51,:,Array,[,Array,[,String,,,047,],,,0x5E,],;,_,:,Int,),{,},Constructor,(,D,,,R,:,Array,[,Array,[,Float,,,04,],,,0x8B,],),{,},},<EOF>''',101))

    def test_2607(self):
        self.assertTrue(TestLexer.test('''Class _:V_{}Class _{$3(_,_,g_K,_:l;Y,_,_,k_4K_8,k:Array [Array [Array [Array [Float ,0X25],0B1],0b100100],01];Fuk,___1d:t9_;KA4,_9:Array [String ,0x5]){} }''','''Class,_,:,V_,{,},Class,_,{,$3,(,_,,,_,,,g_K,,,_,:,l,;,Y,,,_,,,_,,,k_4K_8,,,k,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X25,],,,0B1,],,,0b100100,],,,01,],;,Fuk,,,___1d,:,t9_,;,KA4,,,_9,:,Array,[,String,,,0x5,],),{,},},<EOF>''',101))

    def test_2608(self):
        self.assertTrue(TestLexer.test('''Class Q{Constructor (z,_:u0;x,_,_,A__M_,r,p6,__H4:Float ;_6_8,__5,A3,_K,_w,_,T2:String ;c,_:Array [Array [Boolean ,4],0b1011];__,_Hb6:Array [Boolean ,6_2];J__:v;F,k:Array [Array [Array [String ,0X3],0x5],072]){} }Class a_{Var $2_,_,$7,$a_:x42eF__;Val j5:___4;$6(_,tw:_0;r,n:String ;Y,_4,_:_u;_:Array [Array [Array [Boolean ,7],0X14],0XB_9]){ {} }}''','''Class,Q,{,Constructor,(,z,,,_,:,u0,;,x,,,_,,,_,,,A__M_,,,r,,,p6,,,__H4,:,Float,;,_6_8,,,__5,,,A3,,,_K,,,_w,,,_,,,T2,:,String,;,c,,,_,:,Array,[,Array,[,Boolean,,,4,],,,0b1011,],;,__,,,_Hb6,:,Array,[,Boolean,,,62,],;,J__,:,v,;,F,,,k,:,Array,[,Array,[,Array,[,String,,,0X3,],,,0x5,],,,072,],),{,},},Class,a_,{,Var,$2_,,,_,,,$7,,,$a_,:,x42eF__,;,Val,j5,:,___4,;,$6,(,_,,,tw,:,_0,;,r,,,n,:,String,;,Y,,,_4,,,_,:,_u,;,_,:,Array,[,Array,[,Array,[,Boolean,,,7,],,,0X14,],,,0XB9,],),{,{,},},},<EOF>''',101))

    def test_2609(self):
        self.assertTrue(TestLexer.test('''Class _j:_{Constructor (_,A:String ){}Constructor (h:Float ;wa,__8:Int ;p__:Array [Array [Boolean ,0x3B],56]){} }''','''Class,_j,:,_,{,Constructor,(,_,,,A,:,String,),{,},Constructor,(,h,:,Float,;,wa,,,__8,:,Int,;,p__,:,Array,[,Array,[,Boolean,,,0x3B,],,,56,],),{,},},<EOF>''',101))

    def test_2610(self):
        self.assertTrue(TestLexer.test('''Class D:o2{Var Jb8,$_J59_:Array [Array [Boolean ,0x9_443],0b1];}Class L83_:R268{Destructor (){}Destructor (){} }Class M{Destructor (){} }''','''Class,D,:,o2,{,Var,Jb8,,,$_J59_,:,Array,[,Array,[,Boolean,,,0x9443,],,,0b1,],;,},Class,L83_,:,R268,{,Destructor,(,),{,},Destructor,(,),{,},},Class,M,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2611(self):
        self.assertTrue(TestLexer.test('''Class _:_y{}Class _:_h___{Destructor (){f::$3_();Break ;}Val $0,$6,QE:__;Var $6:Array [Array [Float ,25],25];}Class Z{}''','''Class,_,:,_y,{,},Class,_,:,_h___,{,Destructor,(,),{,f,::,$3_,(,),;,Break,;,},Val,$0,,,$6,,,QE,:,__,;,Var,$6,:,Array,[,Array,[,Float,,,25,],,,25,],;,},Class,Z,{,},<EOF>''',101))

    def test_2612(self):
        self.assertTrue(TestLexer.test('''Class a{}Class m7_0{Val L_j:Boolean ;}Class s{__(yf_27:Array [Boolean ,2];_,S,_d,n:Array [Array [Array [Boolean ,67],7],0X17]){}$MO22(B:Array [Array [Array [Array [Array [Float ,0xB],0X17],04],0X17],7];_,a_8q:_;e5g:Array [Float ,8_96]){}Destructor (){} }Class FC{}''','''Class,a,{,},Class,m7_0,{,Val,L_j,:,Boolean,;,},Class,s,{,__,(,yf_27,:,Array,[,Boolean,,,2,],;,_,,,S,,,_d,,,n,:,Array,[,Array,[,Array,[,Boolean,,,67,],,,7,],,,0X17,],),{,},$MO22,(,B,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0xB,],,,0X17,],,,04,],,,0X17,],,,7,],;,_,,,a_8q,:,_,;,e5g,:,Array,[,Float,,,896,],),{,},Destructor,(,),{,},},Class,FC,{,},<EOF>''',101))

    def test_2613(self):
        self.assertTrue(TestLexer.test('''Class _{Var P:String ;}Class _Q{Val LH:Array [Array [Array [Array [Array [Array [Array [Int ,0X9],0B11010],77],07],0X17],0104],0104];Constructor (_3_l___:Int ){} }Class H0{Constructor (_:__K){}Destructor (){Continue ;Continue ;}Destructor (){} }''','''Class,_,{,Var,P,:,String,;,},Class,_Q,{,Val,LH,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X9,],,,0B11010,],,,77,],,,07,],,,0X17,],,,0104,],,,0104,],;,Constructor,(,_3_l___,:,Int,),{,},},Class,H0,{,Constructor,(,_,:,__K,),{,},Destructor,(,),{,Continue,;,Continue,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_2614(self):
        self.assertTrue(TestLexer.test('''Class _:_2_3{}Class vP6{}Class w:__j{Var $97:Array [Array [Array [Array [Array [Int ,0b110110],0XB],0x15],072_3],0124];}''','''Class,_,:,_2_3,{,},Class,vP6,{,},Class,w,:,__j,{,Var,$97,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b110110,],,,0XB,],,,0x15,],,,0723,],,,0124,],;,},<EOF>''',101))

    def test_2615(self):
        self.assertTrue(TestLexer.test('''Class __{$NC2(){} }Class _:_8{}Class H:_{}Class z:tM3L{z_(n,c6_J9,U:Array [Array [Float ,0B10],0XD];_:P5_Z;_:Array [Array [Array [Array [Array [String ,0x5],053],04],3_44_296],05];r__y,__,E,g:_;x:Array [Array [String ,061_3],0b1];_,u:Array [Int ,053]){} }''','''Class,__,{,$NC2,(,),{,},},Class,_,:,_8,{,},Class,H,:,_,{,},Class,z,:,tM3L,{,z_,(,n,,,c6_J9,,,U,:,Array,[,Array,[,Float,,,0B10,],,,0XD,],;,_,:,P5_Z,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x5,],,,053,],,,04,],,,344296,],,,05,],;,r__y,,,__,,,E,,,g,:,_,;,x,:,Array,[,Array,[,String,,,0613,],,,0b1,],;,_,,,u,:,Array,[,Int,,,053,],),{,},},<EOF>''',101))

    def test_2616(self):
        self.assertTrue(TestLexer.test('''Class O{_g__7_(__pO0:oO_3_;_:Array [Float ,0b111011];__:Array [Array [Array [Float ,0X3],066],0B1011010]){}Val _,w:Int ;}Class _29:b_{}''','''Class,O,{,_g__7_,(,__pO0,:,oO_3_,;,_,:,Array,[,Float,,,0b111011,],;,__,:,Array,[,Array,[,Array,[,Float,,,0X3,],,,066,],,,0B1011010,],),{,},Val,_,,,w,:,Int,;,},Class,_29,:,b_,{,},<EOF>''',101))

    def test_2617(self):
        self.assertTrue(TestLexer.test('''Class a{}Class Z{_(h:Array [Array [Array [Int ,0B1],71],0X22];__:_){Return ;__::$wb_._();} }Class G{Var $55u:Boolean ;}Class _:___jt{}Class g_:aV_{}Class z:_{Constructor (){}Val f,_:Array [String ,067];Destructor (){}Val __,$0,Qw,$2E:U4_r;}''','''Class,a,{,},Class,Z,{,_,(,h,:,Array,[,Array,[,Array,[,Int,,,0B1,],,,71,],,,0X22,],;,__,:,_,),{,Return,;,__,::,$wb_,.,_,(,),;,},},Class,G,{,Var,$55u,:,Boolean,;,},Class,_,:,___jt,{,},Class,g_,:,aV_,{,},Class,z,:,_,{,Constructor,(,),{,},Val,f,,,_,:,Array,[,String,,,067,],;,Destructor,(,),{,},Val,__,,,$0,,,Qw,,,$2E,:,U4_r,;,},<EOF>''',101))

    def test_2618(self):
        self.assertTrue(TestLexer.test('''Class agY{_(c,_2,_,_1:Array [Array [Array [Array [Int ,023_7_5],0x3F],05],0xE9];P,_:_){}Var _:Array [String ,0XD];}Class w:_{}''','''Class,agY,{,_,(,c,,,_2,,,_,,,_1,:,Array,[,Array,[,Array,[,Array,[,Int,,,02375,],,,0x3F,],,,05,],,,0xE9,],;,P,,,_,:,_,),{,},Var,_,:,Array,[,String,,,0XD,],;,},Class,w,:,_,{,},<EOF>''',101))

    def test_2619(self):
        self.assertTrue(TestLexer.test('''Class _{}Class m1{}Class __3w{Destructor (){Return ;} }Class _:_{Val B,a,$__W,$_m_,$___5,$_9_,N7_,_:Float ;}Class _i:J{}''','''Class,_,{,},Class,m1,{,},Class,__3w,{,Destructor,(,),{,Return,;,},},Class,_,:,_,{,Val,B,,,a,,,$__W,,,$_m_,,,$___5,,,$_9_,,,N7_,,,_,:,Float,;,},Class,_i,:,J,{,},<EOF>''',101))

    def test_2620(self):
        self.assertTrue(TestLexer.test('''Class _:z_N6{$_(j:Array [Boolean ,0x52];___,_,E,XF7:Array [Boolean ,0b11_0_00];C,_:_){Continue ;}Constructor (_x,_4,_:Array [Array [Boolean ,36],07_7];Y:Array [Array [Array [Array [Boolean ,30],0X2E],0113],0B11_01]){} }Class D3_{Destructor (){} }Class __5{Var _:Array [Float ,0b1001];}Class p:R52{}''','''Class,_,:,z_N6,{,$_,(,j,:,Array,[,Boolean,,,0x52,],;,___,,,_,,,E,,,XF7,:,Array,[,Boolean,,,0b11000,],;,C,,,_,:,_,),{,Continue,;,},Constructor,(,_x,,,_4,,,_,:,Array,[,Array,[,Boolean,,,36,],,,077,],;,Y,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,30,],,,0X2E,],,,0113,],,,0B1101,],),{,},},Class,D3_,{,Destructor,(,),{,},},Class,__5,{,Var,_,:,Array,[,Float,,,0b1001,],;,},Class,p,:,R52,{,},<EOF>''',101))

    def test_2621(self):
        self.assertTrue(TestLexer.test('''Class _:_{_(N:String ;k:Array [Array [Array [Float ,0x2_2],0XF],0x10];__9,o1,_:Array [Int ,0b1000]){}$_X(_H:Array [Array [Array [Boolean ,0x60],90],84]){}Var Z,$w:Array [Array [Int ,84],7];Var h:_;}''','''Class,_,:,_,{,_,(,N,:,String,;,k,:,Array,[,Array,[,Array,[,Float,,,0x22,],,,0XF,],,,0x10,],;,__9,,,o1,,,_,:,Array,[,Int,,,0b1000,],),{,},$_X,(,_H,:,Array,[,Array,[,Array,[,Boolean,,,0x60,],,,90,],,,84,],),{,},Var,Z,,,$w,:,Array,[,Array,[,Int,,,84,],,,7,],;,Var,h,:,_,;,},<EOF>''',101))

    def test_2622(self):
        self.assertTrue(TestLexer.test('''Class _Y{}Class R:m{Val F,p,P,$_:String ;Constructor (_:Array [Array [Array [String ,0127],01],0x5]){}Destructor (){} }Class KN_7:_J{}Class _:_W__8{Var N,m:Array [Array [Int ,6],80];}''','''Class,_Y,{,},Class,R,:,m,{,Val,F,,,p,,,P,,,$_,:,String,;,Constructor,(,_,:,Array,[,Array,[,Array,[,String,,,0127,],,,01,],,,0x5,],),{,},Destructor,(,),{,},},Class,KN_7,:,_J,{,},Class,_,:,_W__8,{,Var,N,,,m,:,Array,[,Array,[,Int,,,6,],,,80,],;,},<EOF>''',101))

    def test_2623(self):
        self.assertTrue(TestLexer.test('''Class X9q_{Val T9:Array [Array [Int ,0xB],027_6];}Class n:B{Var $_,$_3j:_;}Class __5{}Class _:S{Val _2S:_;}Class w:_{Var $0a,$J,$3:I5r;}''','''Class,X9q_,{,Val,T9,:,Array,[,Array,[,Int,,,0xB,],,,0276,],;,},Class,n,:,B,{,Var,$_,,,$_3j,:,_,;,},Class,__5,{,},Class,_,:,S,{,Val,_2S,:,_,;,},Class,w,:,_,{,Var,$0a,,,$J,,,$3,:,I5r,;,},<EOF>''',101))

    def test_2624(self):
        self.assertTrue(TestLexer.test('''Class _3__e:_d{Constructor (){}$_(H:Array [Array [Array [Array [Array [Float ,0B1],0x3E],3],0X5C],0B1010];_0,sE1,WM6,r,P_,g_h5_Zx,U2_F:Array [Boolean ,0x3E];_,_8446c2:Array [Boolean ,0B111011]){} }''','''Class,_3__e,:,_d,{,Constructor,(,),{,},$_,(,H,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1,],,,0x3E,],,,3,],,,0X5C,],,,0B1010,],;,_0,,,sE1,,,WM6,,,r,,,P_,,,g_h5_Zx,,,U2_F,:,Array,[,Boolean,,,0x3E,],;,_,,,_8446c2,:,Array,[,Boolean,,,0B111011,],),{,},},<EOF>''',101))

    def test_2625(self):
        self.assertTrue(TestLexer.test('''Class C_:h_{Constructor (_,x_0:Array [Array [Float ,0B1_11],0132];_5_,e4c:e){} }Class y{Destructor (){}$7__(){}Destructor (){}$Q_(){} }''','''Class,C_,:,h_,{,Constructor,(,_,,,x_0,:,Array,[,Array,[,Float,,,0B111,],,,0132,],;,_5_,,,e4c,:,e,),{,},},Class,y,{,Destructor,(,),{,},$7__,(,),{,},Destructor,(,),{,},$Q_,(,),{,},},<EOF>''',101))

    def test_2626(self):
        self.assertTrue(TestLexer.test('''Class k{$_(_2,_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0x505],0x5F],05_6],0X5C],4],015],75],0b1],07],0b1111],75]){Continue ;} }''','''Class,k,{,$_,(,_2,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x505,],,,0x5F,],,,056,],,,0X5C,],,,4,],,,015,],,,75,],,,0b1,],,,07,],,,0b1111,],,,75,],),{,Continue,;,},},<EOF>''',101))

    def test_2627(self):
        self.assertTrue(TestLexer.test('''Class b5{Var $o:Array [Array [Array [Array [String ,0x59],040],0b1_001],0B1_11];Destructor (){ {}{Break ;} }}Class __:M{Constructor (){} }''','''Class,b5,{,Var,$o,:,Array,[,Array,[,Array,[,Array,[,String,,,0x59,],,,040,],,,0b1001,],,,0B111,],;,Destructor,(,),{,{,},{,Break,;,},},},Class,__,:,M,{,Constructor,(,),{,},},<EOF>''',101))

    def test_2628(self):
        self.assertTrue(TestLexer.test('''Class __x_:A{Constructor (_,_:Array [Array [Array [Array [Array [Array [String ,7_2],05_0],0663_05],0b1000111],0B1001100],7]){} }Class _:_{}''','''Class,__x_,:,A,{,Constructor,(,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,72,],,,050,],,,066305,],,,0b1000111,],,,0B1001100,],,,7,],),{,},},Class,_,:,_,{,},<EOF>''',101))

    def test_2629(self):
        self.assertTrue(TestLexer.test('''Class _z{$D(x___,_,b9b7,_:Array [Boolean ,33];T:Int ;A,_n:FX2;_6:String ){_::$M();} }Class C:_{Var $_,$_,Q:Boolean ;Val t:_;}Class Ha:_{}Class H:_{}Class _8:e{}''','''Class,_z,{,$D,(,x___,,,_,,,b9b7,,,_,:,Array,[,Boolean,,,33,],;,T,:,Int,;,A,,,_n,:,FX2,;,_6,:,String,),{,_,::,$M,(,),;,},},Class,C,:,_,{,Var,$_,,,$_,,,Q,:,Boolean,;,Val,t,:,_,;,},Class,Ha,:,_,{,},Class,H,:,_,{,},Class,_8,:,e,{,},<EOF>''',101))

    def test_2630(self):
        self.assertTrue(TestLexer.test('''Class q{}Class _2_:_{Constructor (){} }Class K{}Class _:__u{Val N,$R:Array [Array [Float ,7],0X1E];Destructor (){} }''','''Class,q,{,},Class,_2_,:,_,{,Constructor,(,),{,},},Class,K,{,},Class,_,:,__u,{,Val,N,,,$R,:,Array,[,Array,[,Float,,,7,],,,0X1E,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_2631(self):
        self.assertTrue(TestLexer.test('''Class _Z6_{}Class s_:__a{__(){}Destructor (){} }Class _7:_{$J__(m_,_,__,L_2:Array [Array [Float ,0X4F],06];V:Array [Boolean ,0X81]){} }''','''Class,_Z6_,{,},Class,s_,:,__a,{,__,(,),{,},Destructor,(,),{,},},Class,_7,:,_,{,$J__,(,m_,,,_,,,__,,,L_2,:,Array,[,Array,[,Float,,,0X4F,],,,06,],;,V,:,Array,[,Boolean,,,0X81,],),{,},},<EOF>''',101))

    def test_2632(self):
        self.assertTrue(TestLexer.test('''Class c{Var $ouV_,$V:S;_(_3d:W){True .F();}Destructor (){}Var $d0_69P:L;}Class _{}Class _:Doy_T7{Destructor (){} }''','''Class,c,{,Var,$ouV_,,,$V,:,S,;,_,(,_3d,:,W,),{,True,.,F,(,),;,},Destructor,(,),{,},Var,$d0_69P,:,L,;,},Class,_,{,},Class,_,:,Doy_T7,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2633(self):
        self.assertTrue(TestLexer.test('''Class _05:PDi_____{}Class T{Val _6,_5:Array [String ,0X7_4];Var _:Array [Array [Boolean ,0X50],06_2];$iLZ0(__:Array [Array [Array [Array [Float ,0X3A],0x54],0B1],0X50]){} }''','''Class,_05,:,PDi_____,{,},Class,T,{,Val,_6,,,_5,:,Array,[,String,,,0X74,],;,Var,_,:,Array,[,Array,[,Boolean,,,0X50,],,,062,],;,$iLZ0,(,__,:,Array,[,Array,[,Array,[,Array,[,Float,,,0X3A,],,,0x54,],,,0B1,],,,0X50,],),{,},},<EOF>''',101))

    def test_2634(self):
        self.assertTrue(TestLexer.test('''Class B_h_{Val $6,$684_M:Array [Array [Array [Int ,0x1],0b100100],0B1000010];Val $2,$_,g_,$_,T:Float ;}Class N:k{}Class _{}''','''Class,B_h_,{,Val,$6,,,$684_M,:,Array,[,Array,[,Array,[,Int,,,0x1,],,,0b100100,],,,0B1000010,],;,Val,$2,,,$_,,,g_,,,$_,,,T,:,Float,;,},Class,N,:,k,{,},Class,_,{,},<EOF>''',101))

    def test_2635(self):
        self.assertTrue(TestLexer.test('''Class W{$_Q(HX,oFo,_q,J:Array [Array [Array [Int ,0xA],19],98];PJ6i_I,R,r9c:Boolean ){}Constructor (_B_,Q:Array [Array [Array [Array [Array [Float ,0X26],8],98],062],067];_:n;G6_:b5_qv;L:Array [Int ,0x61];_:Array [Boolean ,0x61];__a:_c6;_,_:_l;_6:Array [Array [Array [Array [Array [Array [Array [String ,98],0b1_011],6],0x5_3],062],04_2],0x61]){e6::$8xn_();} }''','''Class,W,{,$_Q,(,HX,,,oFo,,,_q,,,J,:,Array,[,Array,[,Array,[,Int,,,0xA,],,,19,],,,98,],;,PJ6i_I,,,R,,,r9c,:,Boolean,),{,},Constructor,(,_B_,,,Q,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X26,],,,8,],,,98,],,,062,],,,067,],;,_,:,n,;,G6_,:,b5_qv,;,L,:,Array,[,Int,,,0x61,],;,_,:,Array,[,Boolean,,,0x61,],;,__a,:,_c6,;,_,,,_,:,_l,;,_6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,98,],,,0b1011,],,,6,],,,0x53,],,,062,],,,042,],,,0x61,],),{,e6,::,$8xn_,(,),;,},},<EOF>''',101))

    def test_2636(self):
        self.assertTrue(TestLexer.test('''Class eB:I5{a(_,r,N:Array [Array [Array [Array [Array [Array [Array [Float ,0b1],0b101101],0X9],0b101101],0X7_E],0X5],01]){}Constructor (_,_,w2,_,Vf:Array [Int ,0x37];__:gP){Break ;} }''','''Class,eB,:,I5,{,a,(,_,,,r,,,N,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,0b101101,],,,0X9,],,,0b101101,],,,0X7E,],,,0X5,],,,01,],),{,},Constructor,(,_,,,_,,,w2,,,_,,,Vf,:,Array,[,Int,,,0x37,],;,__,:,gP,),{,Break,;,},},<EOF>''',101))

    def test_2637(self):
        self.assertTrue(TestLexer.test('''Class AjZ467{Var $4Q,___:Array [Array [Array [Array [Array [Array [Boolean ,0x3B],0B1011110],6],6],9_3],020];}Class _q:_8{}''','''Class,AjZ467,{,Var,$4Q,,,___,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x3B,],,,0B1011110,],,,6,],,,6,],,,93,],,,020,],;,},Class,_q,:,_8,{,},<EOF>''',101))

    def test_2638(self):
        self.assertTrue(TestLexer.test('''Class ___:_{_e(){_::$8._.EH.l_();}Constructor (_,_9:Array [Array [Int ,0x27],0X5F];_,_1_Py,__:Array [Array [Array [Boolean ,0XF_A5_3],0X8_A],0x27];__N,b,Z49_:Array [Float ,6_7_63_1];Q_:I9_w;p:k){Break ;{} }}Class _{}''','''Class,___,:,_,{,_e,(,),{,_,::,$8,.,_,.,EH,.,l_,(,),;,},Constructor,(,_,,,_9,:,Array,[,Array,[,Int,,,0x27,],,,0X5F,],;,_,,,_1_Py,,,__,:,Array,[,Array,[,Array,[,Boolean,,,0XFA53,],,,0X8A,],,,0x27,],;,__N,,,b,,,Z49_,:,Array,[,Float,,,67631,],;,Q_,:,I9_w,;,p,:,k,),{,Break,;,{,},},},Class,_,{,},<EOF>''',101))

    def test_2639(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_,H,LM,M53:n;c,_:Boolean ;_5N,_,_91:_a;_,_,_S,_:Array [Boolean ,7];Ha_U,_:Array [Array [Array [Array [Float ,4],054],0x2_1_8],054];_,y:Array [Array [Boolean ,054],0B1]){} }''','''Class,_,{,Constructor,(,_,,,H,,,LM,,,M53,:,n,;,c,,,_,:,Boolean,;,_5N,,,_,,,_91,:,_a,;,_,,,_,,,_S,,,_,:,Array,[,Boolean,,,7,],;,Ha_U,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,4,],,,054,],,,0x218,],,,054,],;,_,,,y,:,Array,[,Array,[,Boolean,,,054,],,,0B1,],),{,},},<EOF>''',101))

    def test_2640(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (___:S;_,QS:Array [Float ,0XE];f2:Array [Array [Array [Int ,0B1_0_0],0x1D],0B1_0];Ijy6,g,si_:Array [Int ,0x9];V2_t_:Int ){Break ;}$D(_2_,n,_R3,c:Int ;t_:Float ;A:Array [Array [Array [Int ,0XE],0XE],02_2_4];tq,_:Array [Boolean ,3];V5,w5706,_,_:_;VX:_){} }''','''Class,_,:,_,{,Constructor,(,___,:,S,;,_,,,QS,:,Array,[,Float,,,0XE,],;,f2,:,Array,[,Array,[,Array,[,Int,,,0B100,],,,0x1D,],,,0B10,],;,Ijy6,,,g,,,si_,:,Array,[,Int,,,0x9,],;,V2_t_,:,Int,),{,Break,;,},$D,(,_2_,,,n,,,_R3,,,c,:,Int,;,t_,:,Float,;,A,:,Array,[,Array,[,Array,[,Int,,,0XE,],,,0XE,],,,0224,],;,tq,,,_,:,Array,[,Boolean,,,3,],;,V5,,,w5706,,,_,,,_,:,_,;,VX,:,_,),{,},},<EOF>''',101))

    def test_2641(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){_::$_4.k._.F_6_y__8_M();Var n13vS:Array [Array [Boolean ,38],05];} }Class _:j{Xv(_7_0l,o:V9_721;g,TG,_8_:Float ){} }''','''Class,_,{,Constructor,(,),{,_,::,$_4,.,k,.,_,.,F_6_y__8_M,(,),;,Var,n13vS,:,Array,[,Array,[,Boolean,,,38,],,,05,],;,},},Class,_,:,j,{,Xv,(,_7_0l,,,o,:,V9_721,;,g,,,TG,,,_8_,:,Float,),{,},},<EOF>''',101))

    def test_2642(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_,_w,k_U,_x,__37:Float ){} }Class _{}Class _:L{Var $P,$2,$0_,$QIiKf:U_;}Class _y3:Pp{}Class _:_{}''','''Class,_,{,Constructor,(,_,,,_w,,,k_U,,,_x,,,__37,:,Float,),{,},},Class,_,{,},Class,_,:,L,{,Var,$P,,,$2,,,$0_,,,$QIiKf,:,U_,;,},Class,_y3,:,Pp,{,},Class,_,:,_,{,},<EOF>''',101))

    def test_2643(self):
        self.assertTrue(TestLexer.test('''Class ll_:__6{Destructor (){Break ;}Var F2_,p_,$5:Array [Array [Array [Int ,95_4],03],0X2E];Var $2,t:Array [Array [Int ,052],052];Val $_:Array [Array [Array [Float ,17],0x2C],052];}Class _9{}''','''Class,ll_,:,__6,{,Destructor,(,),{,Break,;,},Var,F2_,,,p_,,,$5,:,Array,[,Array,[,Array,[,Int,,,954,],,,03,],,,0X2E,],;,Var,$2,,,t,:,Array,[,Array,[,Int,,,052,],,,052,],;,Val,$_,:,Array,[,Array,[,Array,[,Float,,,17,],,,0x2C,],,,052,],;,},Class,_9,{,},<EOF>''',101))

    def test_2644(self):
        self.assertTrue(TestLexer.test('''Class rkb26n6{_(__,i06:_z){}Constructor (K1:Array [Array [String ,52],0B1];_,_,Ng:M;_:Array [Array [Array [Boolean ,013],0xD],921];t1_,q,_,X:Array [Array [Array [Array [Array [Array [Array [String ,52],0XA],9_6],013],52],0XA],02];u:g98_;_0__,q,t4c_Q:Int ;u,__6:Float ){} }Class _{Val t:f_O;}Class Y_{_h(_,_,p:Int ){ {}Continue ;Return ;} }Class i{}''','''Class,rkb26n6,{,_,(,__,,,i06,:,_z,),{,},Constructor,(,K1,:,Array,[,Array,[,String,,,52,],,,0B1,],;,_,,,_,,,Ng,:,M,;,_,:,Array,[,Array,[,Array,[,Boolean,,,013,],,,0xD,],,,921,],;,t1_,,,q,,,_,,,X,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,52,],,,0XA,],,,96,],,,013,],,,52,],,,0XA,],,,02,],;,u,:,g98_,;,_0__,,,q,,,t4c_Q,:,Int,;,u,,,__6,:,Float,),{,},},Class,_,{,Val,t,:,f_O,;,},Class,Y_,{,_h,(,_,,,_,,,p,:,Int,),{,{,},Continue,;,Return,;,},},Class,i,{,},<EOF>''',101))

    def test_2645(self):
        self.assertTrue(TestLexer.test('''Class _7{}Class W9{$_(_,A_5:p;__:Boolean ){}$_2(M1_,t,h,D:Int ;_,_:Array [Array [Array [Int ,0B1001110],03],0b1_1];j8,s_,_2_A1z:Array [Boolean ,0b100101];M,c_,_,_:Array [Array [Int ,15],0B1];Y_Dq:Array [Int ,15]){} }Class __Y9o:__U{Val $_,$1_G,c,_:String ;Val $_,$4:Array [Float ,6];}''','''Class,_7,{,},Class,W9,{,$_,(,_,,,A_5,:,p,;,__,:,Boolean,),{,},$_2,(,M1_,,,t,,,h,,,D,:,Int,;,_,,,_,:,Array,[,Array,[,Array,[,Int,,,0B1001110,],,,03,],,,0b11,],;,j8,,,s_,,,_2_A1z,:,Array,[,Boolean,,,0b100101,],;,M,,,c_,,,_,,,_,:,Array,[,Array,[,Int,,,15,],,,0B1,],;,Y_Dq,:,Array,[,Int,,,15,],),{,},},Class,__Y9o,:,__U,{,Val,$_,,,$1_G,,,c,,,_,:,String,;,Val,$_,,,$4,:,Array,[,Float,,,6,],;,},<EOF>''',101))

    def test_2646(self):
        self.assertTrue(TestLexer.test('''Class _8:h9{$8(k4428,g:Int ;z,O:Array [Array [Array [Float ,0B1011100],0X14],0b1_1]){ {} }}Class Hj62{}Class _{}Class _{Var $_,$__,$81A,_:Array [Boolean ,0x63];}''','''Class,_8,:,h9,{,$8,(,k4428,,,g,:,Int,;,z,,,O,:,Array,[,Array,[,Array,[,Float,,,0B1011100,],,,0X14,],,,0b11,],),{,{,},},},Class,Hj62,{,},Class,_,{,},Class,_,{,Var,$_,,,$__,,,$81A,,,_,:,Array,[,Boolean,,,0x63,],;,},<EOF>''',101))

    def test_2647(self):
        self.assertTrue(TestLexer.test('''Class _:q{$C2_(bu,l__d_:Float ){Val D_,__:Boolean ;}_(){}Destructor (){}Destructor (){}Destructor (){}Constructor (){}Constructor (){} }''','''Class,_,:,q,{,$C2_,(,bu,,,l__d_,:,Float,),{,Val,D_,,,__,:,Boolean,;,},_,(,),{,},Destructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,},Constructor,(,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_2648(self):
        self.assertTrue(TestLexer.test('''Class _q_:_{_dY(Q:Int ;Yn:Z;_4_,s,j:Array [Array [Array [Array [String ,0b10000],0b10000],0B1000000],05_6_1];_6,_,_H9,C799,m:Int ){}_5_q(){} }''','''Class,_q_,:,_,{,_dY,(,Q,:,Int,;,Yn,:,Z,;,_4_,,,s,,,j,:,Array,[,Array,[,Array,[,Array,[,String,,,0b10000,],,,0b10000,],,,0B1000000,],,,0561,],;,_6,,,_,,,_H9,,,C799,,,m,:,Int,),{,},_5_q,(,),{,},},<EOF>''',101))

    def test_2649(self):
        self.assertTrue(TestLexer.test('''Class fI02{Var $_:Array [Array [Array [Array [Float ,8],0b1],055],04_013];$b(){_8::$uLf();}Destructor (){}Var k_J:___;}''','''Class,fI02,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Float,,,8,],,,0b1,],,,055,],,,04013,],;,$b,(,),{,_8,::,$uLf,(,),;,},Destructor,(,),{,},Var,k_J,:,___,;,},<EOF>''',101))

    def test_2650(self):
        self.assertTrue(TestLexer.test('''Class _8_:m_{$_(){}Constructor (h:s_;_,V,U7L,_:Array [Boolean ,0XC04]){Continue ;}Constructor (_:Boolean ;M1:x){}Destructor (){} }Class eW:J_88{}''','''Class,_8_,:,m_,{,$_,(,),{,},Constructor,(,h,:,s_,;,_,,,V,,,U7L,,,_,:,Array,[,Boolean,,,0XC04,],),{,Continue,;,},Constructor,(,_,:,Boolean,;,M1,:,x,),{,},Destructor,(,),{,},},Class,eW,:,J_88,{,},<EOF>''',101))

    def test_2651(self):
        self.assertTrue(TestLexer.test('''Class _:v{Constructor (_gPe,__r,fP_3_l_46CF3,R:Boolean ){}Constructor (){} }Class _04:X{Destructor (){New T()._();}Val _:__;}''','''Class,_,:,v,{,Constructor,(,_gPe,,,__r,,,fP_3_l_46CF3,,,R,:,Boolean,),{,},Constructor,(,),{,},},Class,_04,:,X,{,Destructor,(,),{,New,T,(,),.,_,(,),;,},Val,_,:,__,;,},<EOF>''',101))

    def test_2652(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{Destructor (){}k86(_,n:Array [Int ,0X53];__,W:__;_,M3,O,f_,_,_:Boolean ;L:Array [Boolean ,07];__,B:Array [Array [Array [Array [Array [String ,0xD8],26],9],02],02]){Break ;Break ;} }Class _{}''','''Class,_,{,},Class,_,{,Destructor,(,),{,},k86,(,_,,,n,:,Array,[,Int,,,0X53,],;,__,,,W,:,__,;,_,,,M3,,,O,,,f_,,,_,,,_,:,Boolean,;,L,:,Array,[,Boolean,,,07,],;,__,,,B,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0xD8,],,,26,],,,9,],,,02,],,,02,],),{,Break,;,Break,;,},},Class,_,{,},<EOF>''',101))

    def test_2653(self):
        self.assertTrue(TestLexer.test('''Class _c_{Constructor (_:Array [Boolean ,2];C,F:_s_;I1_0,u,__27,__:Array [Array [Array [Float ,0XD],0X32F],43]){} }Class R:j{}''','''Class,_c_,{,Constructor,(,_,:,Array,[,Boolean,,,2,],;,C,,,F,:,_s_,;,I1_0,,,u,,,__27,,,__,:,Array,[,Array,[,Array,[,Float,,,0XD,],,,0X32F,],,,43,],),{,},},Class,R,:,j,{,},<EOF>''',101))

    def test_2654(self):
        self.assertTrue(TestLexer.test('''Class c_{Constructor (_,t,i8,Z2,_g,_4,R_87p:Float ;T:d){}Var $s:Array [Int ,044];Val $_:Array [String ,05];T(){}Destructor (){} }''','''Class,c_,{,Constructor,(,_,,,t,,,i8,,,Z2,,,_g,,,_4,,,R_87p,:,Float,;,T,:,d,),{,},Var,$s,:,Array,[,Int,,,044,],;,Val,$_,:,Array,[,String,,,05,],;,T,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_2655(self):
        self.assertTrue(TestLexer.test('''Class q:_{Val __:Float ;}Class __{}Class _:_{$59(_:Float ;_9_0,_,_32sn:b_;g,__,Y,_:String ){} }Class K__9Y{Val X:Array [Array [Array [Array [Array [Float ,219],051],076_4_15],0XF],73];}''','''Class,q,:,_,{,Val,__,:,Float,;,},Class,__,{,},Class,_,:,_,{,$59,(,_,:,Float,;,_9_0,,,_,,,_32sn,:,b_,;,g,,,__,,,Y,,,_,:,String,),{,},},Class,K__9Y,{,Val,X,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,219,],,,051,],,,076415,],,,0XF,],,,73,],;,},<EOF>''',101))

    def test_2656(self):
        self.assertTrue(TestLexer.test('''Class _51{}Class __:_{Var $3:Array [Array [Array [Int ,0116],0XC_6D2A2],27];Constructor (__,_:Array [Float ,0116];_u1:Array [Array [Array [Array [Array [Array [String ,0X59],0X59],0116],0b111101],6_4],7];__:Int ){Break ;} }''','''Class,_51,{,},Class,__,:,_,{,Var,$3,:,Array,[,Array,[,Array,[,Int,,,0116,],,,0XC6D2A2,],,,27,],;,Constructor,(,__,,,_,:,Array,[,Float,,,0116,],;,_u1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X59,],,,0X59,],,,0116,],,,0b111101,],,,64,],,,7,],;,__,:,Int,),{,Break,;,},},<EOF>''',101))

    def test_2657(self):
        self.assertTrue(TestLexer.test('''Class o:__{Val K1:Float ;Constructor (F9_4:Int ;_9:__;_6:Int ;_4:Array [Array [Boolean ,19],03]){ {Continue ;} }Val $_H:F;}''','''Class,o,:,__,{,Val,K1,:,Float,;,Constructor,(,F9_4,:,Int,;,_9,:,__,;,_6,:,Int,;,_4,:,Array,[,Array,[,Boolean,,,19,],,,03,],),{,{,Continue,;,},},Val,$_H,:,F,;,},<EOF>''',101))

    def test_2658(self):
        self.assertTrue(TestLexer.test('''Class X:_8{$2Y(Nv5:Array [Int ,0b1];I,wj_,_c1S0_:Boolean ;_:Array [Array [Array [Array [Array [Boolean ,453],0xD_6E],031],031],1];D_,_7,_,__,v3_,_,_,_0:Array [Float ,0B1_00_1]){} }''','''Class,X,:,_8,{,$2Y,(,Nv5,:,Array,[,Int,,,0b1,],;,I,,,wj_,,,_c1S0_,:,Boolean,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,453,],,,0xD6E,],,,031,],,,031,],,,1,],;,D_,,,_7,,,_,,,__,,,v3_,,,_,,,_,,,_0,:,Array,[,Float,,,0B1001,],),{,},},<EOF>''',101))

    def test_2659(self):
        self.assertTrue(TestLexer.test('''Class o{}Class _v_4:_{Constructor (_a,_W9j_8,_4_,fG,EbI:Array [Array [Array [Int ,0115],0xB2],0x26];_d,p,t_O63:I_;_0x,_t0_V7,C,_:Array [Boolean ,0x26];P_,R,_,_BK7,_:Array [Array [Array [Array [Array [Array [Float ,9],0x26],63],05_7],0x26],0x26];n3:Float ){} }Class _75{}''','''Class,o,{,},Class,_v_4,:,_,{,Constructor,(,_a,,,_W9j_8,,,_4_,,,fG,,,EbI,:,Array,[,Array,[,Array,[,Int,,,0115,],,,0xB2,],,,0x26,],;,_d,,,p,,,t_O63,:,I_,;,_0x,,,_t0_V7,,,C,,,_,:,Array,[,Boolean,,,0x26,],;,P_,,,R,,,_,,,_BK7,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,9,],,,0x26,],,,63,],,,057,],,,0x26,],,,0x26,],;,n3,:,Float,),{,},},Class,_75,{,},<EOF>''',101))

    def test_2660(self):
        self.assertTrue(TestLexer.test('''Class K{Constructor (v_,E7sX:Float ;F_:q;_:E_9;b:Boolean ;y:Boolean ){Break ;} }Class K:Q{}Class _:apl{Val $Hf:String ;$_N4(_:String ;j,_,RL3:Array [Array [Float ,0X8],0b1]){}$_(_:Array [Array [Array [Array [Boolean ,02],067],03],30]){} }''','''Class,K,{,Constructor,(,v_,,,E7sX,:,Float,;,F_,:,q,;,_,:,E_9,;,b,:,Boolean,;,y,:,Boolean,),{,Break,;,},},Class,K,:,Q,{,},Class,_,:,apl,{,Val,$Hf,:,String,;,$_N4,(,_,:,String,;,j,,,_,,,RL3,:,Array,[,Array,[,Float,,,0X8,],,,0b1,],),{,},$_,(,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,02,],,,067,],,,03,],,,30,],),{,},},<EOF>''',101))

    def test_2661(self):
        self.assertTrue(TestLexer.test('''Class _{}Class F_{Val $24:nMg;$L6(u:Boolean ;_,_H:Float ;_,n,M:Array [Array [Array [Boolean ,0B11101],1],0x5_A];D,_,h,_,_:Array [Array [Array [Array [Array [Float ,02],0b1011001],0140],76],0B11101]){}$3X0_4(__,_:Lp_;_,s,_7_,R,_12:Array [Int ,0x5E];_,__:Array [Float ,8];jT:Float ){Continue ;Val C:_;__::$9_o();Var _,r,e2,P,_:Array [Array [Int ,0X3],0b1011001];} }Class __{}Class _5:_{}Class _4_T_:C1{}Class _:_{Destructor (){} }Class _8{}''','''Class,_,{,},Class,F_,{,Val,$24,:,nMg,;,$L6,(,u,:,Boolean,;,_,,,_H,:,Float,;,_,,,n,,,M,:,Array,[,Array,[,Array,[,Boolean,,,0B11101,],,,1,],,,0x5A,],;,D,,,_,,,h,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,02,],,,0b1011001,],,,0140,],,,76,],,,0B11101,],),{,},$3X0_4,(,__,,,_,:,Lp_,;,_,,,s,,,_7_,,,R,,,_12,:,Array,[,Int,,,0x5E,],;,_,,,__,:,Array,[,Float,,,8,],;,jT,:,Float,),{,Continue,;,Val,C,:,_,;,__,::,$9_o,(,),;,Var,_,,,r,,,e2,,,P,,,_,:,Array,[,Array,[,Int,,,0X3,],,,0b1011001,],;,},},Class,__,{,},Class,_5,:,_,{,},Class,_4_T_,:,C1,{,},Class,_,:,_,{,Destructor,(,),{,},},Class,_8,{,},<EOF>''',101))

    def test_2662(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){}Destructor (){} }Class i:y{Val $7_s_l,__,$4_s_:Te;Val _:Int ;Val $p_3MB:Float ;}Class b4_:_Oi{Val $_a:Int ;}''','''Class,_,{,Constructor,(,),{,},Destructor,(,),{,},},Class,i,:,y,{,Val,$7_s_l,,,__,,,$4_s_,:,Te,;,Val,_,:,Int,;,Val,$p_3MB,:,Float,;,},Class,b4_,:,_Oi,{,Val,$_a,:,Int,;,},<EOF>''',101))

    def test_2663(self):
        self.assertTrue(TestLexer.test('''Class __:_q{Destructor (){}Constructor (J:Array [Array [String ,0X4D],5_44];a,S_W,__:__9_;_:Int ;_:Array [Float ,0xEF8_1]){} }''','''Class,__,:,_q,{,Destructor,(,),{,},Constructor,(,J,:,Array,[,Array,[,String,,,0X4D,],,,544,],;,a,,,S_W,,,__,:,__9_,;,_,:,Int,;,_,:,Array,[,Float,,,0xEF81,],),{,},},<EOF>''',101))

    def test_2664(self):
        self.assertTrue(TestLexer.test('''Class F:__{Var $_9:Array [Array [Array [Array [String ,04],53],357_2_1],0B11011];$9_(KGK,F_,__:Array [Array [Array [String ,0b1010001],0b10],02]){} }Class j:h___8{Destructor (){} }''','''Class,F,:,__,{,Var,$_9,:,Array,[,Array,[,Array,[,Array,[,String,,,04,],,,53,],,,35721,],,,0B11011,],;,$9_,(,KGK,,,F_,,,__,:,Array,[,Array,[,Array,[,String,,,0b1010001,],,,0b10,],,,02,],),{,},},Class,j,:,h___8,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2665(self):
        self.assertTrue(TestLexer.test('''Class K{Constructor (_:Array [Array [Int ,0X3C],63];_:_){}Destructor (){Return ;}Var $_,$2:Array [Array [Array [Array [Array [Boolean ,0XC],0XD],63],05],030];Var $8,_v:_;}''','''Class,K,{,Constructor,(,_,:,Array,[,Array,[,Int,,,0X3C,],,,63,],;,_,:,_,),{,},Destructor,(,),{,Return,;,},Var,$_,,,$2,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0XC,],,,0XD,],,,63,],,,05,],,,030,],;,Var,$8,,,_v,:,_,;,},<EOF>''',101))

    def test_2666(self):
        self.assertTrue(TestLexer.test('''Class _{b_(){}Constructor (f,RE_3,C,_e,l,_xh,Y,_9Q_,_:Array [Array [Array [String ,0x47],0X24],0X33];pJ,O,__S_xi:Float ){} }''','''Class,_,{,b_,(,),{,},Constructor,(,f,,,RE_3,,,C,,,_e,,,l,,,_xh,,,Y,,,_9Q_,,,_,:,Array,[,Array,[,Array,[,String,,,0x47,],,,0X24,],,,0X33,],;,pJ,,,O,,,__S_xi,:,Float,),{,},},<EOF>''',101))

    def test_2667(self):
        self.assertTrue(TestLexer.test('''Class _:J{}Class A:_F{Constructor (_:Array [Float ,0x1_3_C8];G2Y_P,_:_1;hy,_:Array [Float ,0X44_1];y3,_,_X:Array [Array [Array [Float ,057],0b1_0_0],0xC];J,p_i,__,_:Array [Float ,13]){} }''','''Class,_,:,J,{,},Class,A,:,_F,{,Constructor,(,_,:,Array,[,Float,,,0x13C8,],;,G2Y_P,,,_,:,_1,;,hy,,,_,:,Array,[,Float,,,0X441,],;,y3,,,_,,,_X,:,Array,[,Array,[,Array,[,Float,,,057,],,,0b100,],,,0xC,],;,J,,,p_i,,,__,,,_,:,Array,[,Float,,,13,],),{,},},<EOF>''',101))

    def test_2668(self):
        self.assertTrue(TestLexer.test('''Class y_{}Class w1{Constructor (){}Val w,$H:Array [Array [Array [String ,036],5_70],0B1];$__(){_D_f::$fx._();} }''','''Class,y_,{,},Class,w1,{,Constructor,(,),{,},Val,w,,,$H,:,Array,[,Array,[,Array,[,String,,,036,],,,570,],,,0B1,],;,$__,(,),{,_D_f,::,$fx,.,_,(,),;,},},<EOF>''',101))

    def test_2669(self):
        self.assertTrue(TestLexer.test('''Class UW{Var y,_9_,$qB_w5,$1TZR,_,zq:Array [Array [Array [Boolean ,5],0X2D],0B11001];}Class _f4:__{}Class _{Val ____OO6:Float ;}''','''Class,UW,{,Var,y,,,_9_,,,$qB_w5,,,$1TZR,,,_,,,zq,:,Array,[,Array,[,Array,[,Boolean,,,5,],,,0X2D,],,,0B11001,],;,},Class,_f4,:,__,{,},Class,_,{,Val,____OO6,:,Float,;,},<EOF>''',101))

    def test_2670(self):
        self.assertTrue(TestLexer.test('''Class _y{Constructor (_,hh,_5:Float ){}Constructor (_:bb3Q;g_,g,_,o,_r_:Array [String ,16];M73__:Boolean ;_:Array [Float ,0b1001011];_:Array [Boolean ,02]){}Var Z:G;__(){} }''','''Class,_y,{,Constructor,(,_,,,hh,,,_5,:,Float,),{,},Constructor,(,_,:,bb3Q,;,g_,,,g,,,_,,,o,,,_r_,:,Array,[,String,,,16,],;,M73__,:,Boolean,;,_,:,Array,[,Float,,,0b1001011,],;,_,:,Array,[,Boolean,,,02,],),{,},Var,Z,:,G,;,__,(,),{,},},<EOF>''',101))

    def test_2671(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_:String ){}Val $W,$1_,H:_Fg___;}Class g{Var $N,$2:Int ;}Class _:_a{}Class v{Destructor (){} }''','''Class,_,{,Constructor,(,_,:,String,),{,},Val,$W,,,$1_,,,H,:,_Fg___,;,},Class,g,{,Var,$N,,,$2,:,Int,;,},Class,_,:,_a,{,},Class,v,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2672(self):
        self.assertTrue(TestLexer.test('''Class __{}Class q__8_20:_{Constructor (){}Constructor (E_,B:Float ;_a_f_n:Array [Float ,0xA];F:Boolean ){} }Class _9{}Class _W2{Val _:Array [Boolean ,01];}''','''Class,__,{,},Class,q__8_20,:,_,{,Constructor,(,),{,},Constructor,(,E_,,,B,:,Float,;,_a_f_n,:,Array,[,Float,,,0xA,],;,F,:,Boolean,),{,},},Class,_9,{,},Class,_W2,{,Val,_,:,Array,[,Boolean,,,01,],;,},<EOF>''',101))

    def test_2673(self):
        self.assertTrue(TestLexer.test('''Class e1L:__{Constructor (M,P0,k335_8,D:Array [Int ,0x34];d_6:_Z__U8;U27,_,z__05,_2p:Int ;__8_:Array [Float ,0X1F]){} }''','''Class,e1L,:,__,{,Constructor,(,M,,,P0,,,k335_8,,,D,:,Array,[,Int,,,0x34,],;,d_6,:,_Z__U8,;,U27,,,_,,,z__05,,,_2p,:,Int,;,__8_,:,Array,[,Float,,,0X1F,],),{,},},<EOF>''',101))

    def test_2674(self):
        self.assertTrue(TestLexer.test('''Class __1_V056:M{}Class _48{}Class _{}Class Zu_4__:_{}Class _7O__{Var $W:V7_;Constructor (_:Array [Boolean ,016]){} }Class H{}Class __{__(p4bH,p__:Array [Array [Boolean ,97],0B110100];_,f_,KN,__H__,fP:Array [Int ,0X3_28];C_:R){} }Class i:Z{}''','''Class,__1_V056,:,M,{,},Class,_48,{,},Class,_,{,},Class,Zu_4__,:,_,{,},Class,_7O__,{,Var,$W,:,V7_,;,Constructor,(,_,:,Array,[,Boolean,,,016,],),{,},},Class,H,{,},Class,__,{,__,(,p4bH,,,p__,:,Array,[,Array,[,Boolean,,,97,],,,0B110100,],;,_,,,f_,,,KN,,,__H__,,,fP,:,Array,[,Int,,,0X328,],;,C_,:,R,),{,},},Class,i,:,Z,{,},<EOF>''',101))

    def test_2675(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _4{}Class __IZ{Var $n9,$9,zk_e,$371:String ;}Class K_q_:H_{Destructor (){Var _c,_,B:Array [Array [Int ,053],0b11];}Constructor (){Continue ;} }''','''Class,_,{,},Class,_4,{,},Class,__IZ,{,Var,$n9,,,$9,,,zk_e,,,$371,:,String,;,},Class,K_q_,:,H_,{,Destructor,(,),{,Var,_c,,,_,,,B,:,Array,[,Array,[,Int,,,053,],,,0b11,],;,},Constructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_2676(self):
        self.assertTrue(TestLexer.test('''Class _:_M_vG{}Class T{r(){} }Class _{Var _,$r:__;Constructor (){Val U0__:Array [String ,0b1];} }Class _{Constructor (){Break ;} }''','''Class,_,:,_M_vG,{,},Class,T,{,r,(,),{,},},Class,_,{,Var,_,,,$r,:,__,;,Constructor,(,),{,Val,U0__,:,Array,[,String,,,0b1,],;,},},Class,_,{,Constructor,(,),{,Break,;,},},<EOF>''',101))

    def test_2677(self):
        self.assertTrue(TestLexer.test('''Class __q:_{Constructor (F:Array [Array [Array [Array [Array [Boolean ,0B110010],0xF_0],015],15],01]){} }Class _:_C3{}''','''Class,__q,:,_,{,Constructor,(,F,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B110010,],,,0xF0,],,,015,],,,15,],,,01,],),{,},},Class,_,:,_C3,{,},<EOF>''',101))

    def test_2678(self):
        self.assertTrue(TestLexer.test('''Class I_:Y_{Constructor (p:Float ){Continue ;{Continue ;Continue ;}Var _,s3,O:Array [Int ,0x16];Break ;} }Class __:O{}''','''Class,I_,:,Y_,{,Constructor,(,p,:,Float,),{,Continue,;,{,Continue,;,Continue,;,},Var,_,,,s3,,,O,:,Array,[,Int,,,0x16,],;,Break,;,},},Class,__,:,O,{,},<EOF>''',101))

    def test_2679(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _{$E___(X,_:_5X13){Var _G6:Float ;}Constructor (){Continue ;Break ;}Var z3Y,_:Float ;Var $6l,$J:M;}''','''Class,_,:,_,{,},Class,_,{,$E___,(,X,,,_,:,_5X13,),{,Var,_G6,:,Float,;,},Constructor,(,),{,Continue,;,Break,;,},Var,z3Y,,,_,:,Float,;,Var,$6l,,,$J,:,M,;,},<EOF>''',101))

    def test_2680(self):
        self.assertTrue(TestLexer.test('''Class _:p{Constructor (s,a,_6E9:Z;__:Array [Array [Array [String ,047],03],0B10]){ {Break ;{Var w_,_:Array [Array [Array [Array [Array [String ,0b1],04_6_4_6],0xBC],48],2];} }Continue ;Break ;Continue ;} }Class V{}Class h5_:_{w22(bD,er_0R8:Int ){}Var P:v_q;}''','''Class,_,:,p,{,Constructor,(,s,,,a,,,_6E9,:,Z,;,__,:,Array,[,Array,[,Array,[,String,,,047,],,,03,],,,0B10,],),{,{,Break,;,{,Var,w_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,04646,],,,0xBC,],,,48,],,,2,],;,},},Continue,;,Break,;,Continue,;,},},Class,V,{,},Class,h5_,:,_,{,w22,(,bD,,,er_0R8,:,Int,),{,},Var,P,:,v_q,;,},<EOF>''',101))

    def test_2681(self):
        self.assertTrue(TestLexer.test('''Class c:_yl{$5_(___9__,_0,A_1_1_:Array [Int ,0x2F]){} }Class e:_{}Class An{}Class _l:M{Var $T:Boolean ;}Class W1{Val $2B5,$0,$_:Array [Array [Array [Int ,0B10110],0X9A_D3F11_BBA],78];}Class _:D{}''','''Class,c,:,_yl,{,$5_,(,___9__,,,_0,,,A_1_1_,:,Array,[,Int,,,0x2F,],),{,},},Class,e,:,_,{,},Class,An,{,},Class,_l,:,M,{,Var,$T,:,Boolean,;,},Class,W1,{,Val,$2B5,,,$0,,,$_,:,Array,[,Array,[,Array,[,Int,,,0B10110,],,,0X9AD3F11BBA,],,,78,],;,},Class,_,:,D,{,},<EOF>''',101))

    def test_2682(self):
        self.assertTrue(TestLexer.test('''Class _9_3__:_V893_q{}Class k{Var $4m,_F9,$_:_;Destructor (){}Val _38_7X:Array [Array [Array [String ,70],02_3],06];Constructor (){} }''','''Class,_9_3__,:,_V893_q,{,},Class,k,{,Var,$4m,,,_F9,,,$_,:,_,;,Destructor,(,),{,},Val,_38_7X,:,Array,[,Array,[,Array,[,String,,,70,],,,023,],,,06,],;,Constructor,(,),{,},},<EOF>''',101))

    def test_2683(self):
        self.assertTrue(TestLexer.test('''Class n:_5{Var x:c;Constructor (___:Int ;Q:Array [Array [String ,0B111110],0X3_5EA_0];c:Boolean ){}Var s,$4_,$L:H;}Class O_p:k{}Class M_:_{}''','''Class,n,:,_5,{,Var,x,:,c,;,Constructor,(,___,:,Int,;,Q,:,Array,[,Array,[,String,,,0B111110,],,,0X35EA0,],;,c,:,Boolean,),{,},Var,s,,,$4_,,,$L,:,H,;,},Class,O_p,:,k,{,},Class,M_,:,_,{,},<EOF>''',101))

    def test_2684(self):
        self.assertTrue(TestLexer.test('''Class _2S:_u{Destructor (){}$_2g(){} }Class K:_{I(_:Boolean ){Break ;Continue ;}G_(H__0,__9:c){} }Class e3{Destructor (){Continue ;} }''','''Class,_2S,:,_u,{,Destructor,(,),{,},$_2g,(,),{,},},Class,K,:,_,{,I,(,_,:,Boolean,),{,Break,;,Continue,;,},G_,(,H__0,,,__9,:,c,),{,},},Class,e3,{,Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_2685(self):
        self.assertTrue(TestLexer.test('''Class _:_6{}Class _4x{Constructor (E_,__,__,__:Boolean ;_3,_____:Int ;P0_,_,_51:Boolean ;_d:Boolean ;Y,__:Float ){} }''','''Class,_,:,_6,{,},Class,_4x,{,Constructor,(,E_,,,__,,,__,,,__,:,Boolean,;,_3,,,_____,:,Int,;,P0_,,,_,,,_51,:,Boolean,;,_d,:,Boolean,;,Y,,,__,:,Float,),{,},},<EOF>''',101))

    def test_2686(self):
        self.assertTrue(TestLexer.test('''Class _{Val $_,$t2dp,f_:Array [Array [Array [String ,07],8_4],8_1633_9];}Class C{}Class __{Val o10_,$l:Boolean ;}''','''Class,_,{,Val,$_,,,$t2dp,,,f_,:,Array,[,Array,[,Array,[,String,,,07,],,,84,],,,816339,],;,},Class,C,{,},Class,__,{,Val,o10_,,,$l,:,Boolean,;,},<EOF>''',101))

    def test_2687(self):
        self.assertTrue(TestLexer.test('''Class _1{Val $9r,r2q,$_,$_6Wm:Array [Array [Array [Array [Array [String ,3],0130],0B111101],43],0x29];Var $6,$8_3,F_,$_6,a:Array [Boolean ,0130];}''','''Class,_1,{,Val,$9r,,,r2q,,,$_,,,$_6Wm,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,3,],,,0130,],,,0B111101,],,,43,],,,0x29,],;,Var,$6,,,$8_3,,,F_,,,$_6,,,a,:,Array,[,Boolean,,,0130,],;,},<EOF>''',101))

    def test_2688(self):
        self.assertTrue(TestLexer.test('''Class _:O8{}Class E_T3w_1b:Ge8{X(F:Array [String ,0X1D];e1_,_:Array [Int ,25];Cr90__4W:Float ){}Val $g,$c,$_,$5,$_g,Lq5_p2,w93_,$_c,$47:Array [Array [Array [Array [Array [Array [Array [Boolean ,0b1],0b1],0b1],0x6],0b110001],0b110001],25];}Class __{}''','''Class,_,:,O8,{,},Class,E_T3w_1b,:,Ge8,{,X,(,F,:,Array,[,String,,,0X1D,],;,e1_,,,_,:,Array,[,Int,,,25,],;,Cr90__4W,:,Float,),{,},Val,$g,,,$c,,,$_,,,$5,,,$_g,,,Lq5_p2,,,w93_,,,$_c,,,$47,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,0b1,],,,0b1,],,,0x6,],,,0b110001,],,,0b110001,],,,25,],;,},Class,__,{,},<EOF>''',101))

    def test_2689(self):
        self.assertTrue(TestLexer.test('''Class _t:X{Constructor (eO_5K:_G;_,tw3N9,_3:_;u7:Array [Array [Array [Array [Array [Boolean ,0b1000001],27],0xE1],0b10_0],0137]){} }''','''Class,_t,:,X,{,Constructor,(,eO_5K,:,_G,;,_,,,tw3N9,,,_3,:,_,;,u7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1000001,],,,27,],,,0xE1,],,,0b100,],,,0137,],),{,},},<EOF>''',101))

    def test_2690(self):
        self.assertTrue(TestLexer.test('''Class _ki_{Val $x_:Array [Array [Array [Boolean ,6],74],0b110011];Constructor (){Break ;}_(){} }Class _:G4{}Class _{}Class P:_c_{}''','''Class,_ki_,{,Val,$x_,:,Array,[,Array,[,Array,[,Boolean,,,6,],,,74,],,,0b110011,],;,Constructor,(,),{,Break,;,},_,(,),{,},},Class,_,:,G4,{,},Class,_,{,},Class,P,:,_c_,{,},<EOF>''',101))

    def test_2691(self):
        self.assertTrue(TestLexer.test('''Class Z:V{}Class __:_{Var $v,$1,_O:Float ;Destructor (){}Constructor (){Return ;}Var $4x_,$p,F,$RC7,$2,$t:_91_;}''','''Class,Z,:,V,{,},Class,__,:,_,{,Var,$v,,,$1,,,_O,:,Float,;,Destructor,(,),{,},Constructor,(,),{,Return,;,},Var,$4x_,,,$p,,,F,,,$RC7,,,$2,,,$t,:,_91_,;,},<EOF>''',101))

    def test_2692(self):
        self.assertTrue(TestLexer.test('''Class tSI{Destructor (){}P(_:__54;PF,Rj,N:Int ){}$7(_,_4_:_;dhO,X5:Boolean ;_,w4,I:Boolean ){Continue ;Break ;} }''','''Class,tSI,{,Destructor,(,),{,},P,(,_,:,__54,;,PF,,,Rj,,,N,:,Int,),{,},$7,(,_,,,_4_,:,_,;,dhO,,,X5,:,Boolean,;,_,,,w4,,,I,:,Boolean,),{,Continue,;,Break,;,},},<EOF>''',101))

    def test_2693(self):
        self.assertTrue(TestLexer.test('''Class _{Var _,_PPe63,__0,$n4:Array [Array [Array [Array [Array [Int ,0123],0X2C_C5],51],51],0b1];Destructor (){} }Class _{}Class w{}''','''Class,_,{,Var,_,,,_PPe63,,,__0,,,$n4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0123,],,,0X2CC5,],,,51,],,,51,],,,0b1,],;,Destructor,(,),{,},},Class,_,{,},Class,w,{,},<EOF>''',101))

    def test_2694(self):
        self.assertTrue(TestLexer.test('''Class _Ql_{Val __:String ;Constructor (){Break ;} }Class _E5:n{Var _Wkm5,_:d;$_5_R_(P__5:Array [Boolean ,0105]){}Constructor (_G,B_,k,_B_:_){} }Class _:r{}''','''Class,_Ql_,{,Val,__,:,String,;,Constructor,(,),{,Break,;,},},Class,_E5,:,n,{,Var,_Wkm5,,,_,:,d,;,$_5_R_,(,P__5,:,Array,[,Boolean,,,0105,],),{,},Constructor,(,_G,,,B_,,,k,,,_B_,:,_,),{,},},Class,_,:,r,{,},<EOF>''',101))

    def test_2695(self):
        self.assertTrue(TestLexer.test('''Class __1_k{$f(_:_;_g6_u_:String ;_4:_3d3;__8,A,_e,Z__W,_:Int ;_,_8_:Array [Array [Array [String ,0b1000110],02_1_6],62];nK2:Array [Int ,0b1000110];G1:_7a1;__g,_:Array [Boolean ,026];f,wV_,z,wD,h,_,_VZ:__){}Var K,W:Array [Array [Array [Array [Array [Array [String ,0xE],29],04],26_6_52],03],0X96_E];}''','''Class,__1_k,{,$f,(,_,:,_,;,_g6_u_,:,String,;,_4,:,_3d3,;,__8,,,A,,,_e,,,Z__W,,,_,:,Int,;,_,,,_8_,:,Array,[,Array,[,Array,[,String,,,0b1000110,],,,0216,],,,62,],;,nK2,:,Array,[,Int,,,0b1000110,],;,G1,:,_7a1,;,__g,,,_,:,Array,[,Boolean,,,026,],;,f,,,wV_,,,z,,,wD,,,h,,,_,,,_VZ,:,__,),{,},Var,K,,,W,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0xE,],,,29,],,,04,],,,26652,],,,03,],,,0X96E,],;,},<EOF>''',101))

    def test_2696(self):
        self.assertTrue(TestLexer.test('''Class _1_:_9_{$_(Kk,_:Array [Int ,0X9]){}Val _:Array [Array [Array [Array [Array [Array [Array [Array [String ,5],050],1_4_7],0X5C],0x34],01_1],0x34],0B111000];$e(){} }''','''Class,_1_,:,_9_,{,$_,(,Kk,,,_,:,Array,[,Int,,,0X9,],),{,},Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,5,],,,050,],,,147,],,,0X5C,],,,0x34,],,,011,],,,0x34,],,,0B111000,],;,$e,(,),{,},},<EOF>''',101))

    def test_2697(self):
        self.assertTrue(TestLexer.test('''Class sl{D(_:Bf;U_I,_,_101:Array [Int ,0x62]){}_(){}Var $72,$E,_3,$l_,_,__,$_P:Array [Array [Int ,0b1000],0B10];}Class B:O2{}''','''Class,sl,{,D,(,_,:,Bf,;,U_I,,,_,,,_101,:,Array,[,Int,,,0x62,],),{,},_,(,),{,},Var,$72,,,$E,,,_3,,,$l_,,,_,,,__,,,$_P,:,Array,[,Array,[,Int,,,0b1000,],,,0B10,],;,},Class,B,:,O2,{,},<EOF>''',101))

    def test_2698(self):
        self.assertTrue(TestLexer.test('''Class F:_{Constructor (){Val G__,JB,Q4_y,__:String ;}Val k1__:Array [Int ,1_0_1_83];Destructor (){} }Class G{}Class r{}Class _U:W__846_{Val _2:Array [Float ,0X35];}Class S_02{}Class n:N{}Class Q__:_{}Class E0{Destructor (){} }''','''Class,F,:,_,{,Constructor,(,),{,Val,G__,,,JB,,,Q4_y,,,__,:,String,;,},Val,k1__,:,Array,[,Int,,,10183,],;,Destructor,(,),{,},},Class,G,{,},Class,r,{,},Class,_U,:,W__846_,{,Val,_2,:,Array,[,Float,,,0X35,],;,},Class,S_02,{,},Class,n,:,N,{,},Class,Q__,:,_,{,},Class,E0,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2699(self):
        self.assertTrue(TestLexer.test('''Class V72:x_7{}Class v{Constructor (_,m:Int ;_:Array [Array [Array [Array [Array [Array [String ,0xC],0b1001],7],57],0B1_0],0X2]){} }Class _:o{}Class _{Val $Y:Array [Array [Boolean ,0B1],02];}Class _j{}''','''Class,V72,:,x_7,{,},Class,v,{,Constructor,(,_,,,m,:,Int,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0xC,],,,0b1001,],,,7,],,,57,],,,0B10,],,,0X2,],),{,},},Class,_,:,o,{,},Class,_,{,Val,$Y,:,Array,[,Array,[,Boolean,,,0B1,],,,02,],;,},Class,_j,{,},<EOF>''',101))

    def test_2700(self):
        self.assertTrue(TestLexer.test('''Class _:I__5__{}Class oi_:_5D{}Class J:E{Constructor (pe,_:_X__;JJO:Float ){}Constructor (){} }Class _{P(n:String ){} }''','''Class,_,:,I__5__,{,},Class,oi_,:,_5D,{,},Class,J,:,E,{,Constructor,(,pe,,,_,:,_X__,;,JJO,:,Float,),{,},Constructor,(,),{,},},Class,_,{,P,(,n,:,String,),{,},},<EOF>''',101))

    def test_2701(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){Break ;}Val $1E:_;}Class _00:_N_{Constructor (){}Var $1,_,l:Boolean ;Destructor (){} }Class M:_{}Class __{Var h5_:Array [Array [Array [Array [String ,0X36],0x33],0XC_F8_F_3_0],0XD_9];}Class _:q{Constructor (){}Destructor (){}Val _,$f,__3_,__0,$DZy6,_:Float ;}''','''Class,_,{,Destructor,(,),{,Break,;,},Val,$1E,:,_,;,},Class,_00,:,_N_,{,Constructor,(,),{,},Var,$1,,,_,,,l,:,Boolean,;,Destructor,(,),{,},},Class,M,:,_,{,},Class,__,{,Var,h5_,:,Array,[,Array,[,Array,[,Array,[,String,,,0X36,],,,0x33,],,,0XCF8F30,],,,0XD9,],;,},Class,_,:,q,{,Constructor,(,),{,},Destructor,(,),{,},Val,_,,,$f,,,__3_,,,__0,,,$DZy6,,,_,:,Float,;,},<EOF>''',101))

    def test_2702(self):
        self.assertTrue(TestLexer.test('''Class a{Destructor (){Return ;}Val n,J1:Array [Array [String ,0B1],04];}Class u3_:_{}Class p{}Class _2:__9KY{Var $n_HNU:Boolean ;}Class _18_6uC{}''','''Class,a,{,Destructor,(,),{,Return,;,},Val,n,,,J1,:,Array,[,Array,[,String,,,0B1,],,,04,],;,},Class,u3_,:,_,{,},Class,p,{,},Class,_2,:,__9KY,{,Var,$n_HNU,:,Boolean,;,},Class,_18_6uC,{,},<EOF>''',101))

    def test_2703(self):
        self.assertTrue(TestLexer.test('''Class _i_:wdZ{}Class b_r{Val _0_,$_8:Array [Boolean ,040];Var __,$_,$Ai:Int ;__(_7:Boolean ){Continue ;} }Class _{}''','''Class,_i_,:,wdZ,{,},Class,b_r,{,Val,_0_,,,$_8,:,Array,[,Boolean,,,040,],;,Var,__,,,$_,,,$Ai,:,Int,;,__,(,_7,:,Boolean,),{,Continue,;,},},Class,_,{,},<EOF>''',101))

    def test_2704(self):
        self.assertTrue(TestLexer.test('''Class _{$0(s,_,__:E_ZO;WJb0Y,R_U,t,u:___;_4:i){Continue ;}Constructor (_:Array [Array [Float ,0x71],0104];_,___:__t__;__:Int ){Val _:B_;Break ;Return ;} }Class _{}''','''Class,_,{,$0,(,s,,,_,,,__,:,E_ZO,;,WJb0Y,,,R_U,,,t,,,u,:,___,;,_4,:,i,),{,Continue,;,},Constructor,(,_,:,Array,[,Array,[,Float,,,0x71,],,,0104,],;,_,,,___,:,__t__,;,__,:,Int,),{,Val,_,:,B_,;,Break,;,Return,;,},},Class,_,{,},<EOF>''',101))

    def test_2705(self):
        self.assertTrue(TestLexer.test('''Class z:_{Var $i:Array [Array [Array [Array [Array [Boolean ,0B1_1_1_0],34],0x42],03_4_6],62_9_09];T7_r9(){} }Class f0:_{}''','''Class,z,:,_,{,Var,$i,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1110,],,,34,],,,0x42,],,,0346,],,,62909,],;,T7_r9,(,),{,},},Class,f0,:,_,{,},<EOF>''',101))

    def test_2706(self):
        self.assertTrue(TestLexer.test('''Class T:__7h{Constructor (m8__4,G,_:j;j_,r:VL;_1,oh:Float ;_:Array [Array [Array [Float ,044],0xA],92];_5_:_;vi:_31_3w_;_,k:Boolean ;_8,_:Int ;_,n,_:Array [Float ,0X3E]){}$3(){}Val Ugm_5e97_,L5_,$2_,$__:_;}''','''Class,T,:,__7h,{,Constructor,(,m8__4,,,G,,,_,:,j,;,j_,,,r,:,VL,;,_1,,,oh,:,Float,;,_,:,Array,[,Array,[,Array,[,Float,,,044,],,,0xA,],,,92,],;,_5_,:,_,;,vi,:,_31_3w_,;,_,,,k,:,Boolean,;,_8,,,_,:,Int,;,_,,,n,,,_,:,Array,[,Float,,,0X3E,],),{,},$3,(,),{,},Val,Ugm_5e97_,,,L5_,,,$2_,,,$__,:,_,;,},<EOF>''',101))

    def test_2707(self):
        self.assertTrue(TestLexer.test('''Class _U_{Constructor (_:Array [Array [Array [Array [Array [String ,54],072],54],0B10000],0X537];_,_D6,_5_:Int ;_,Y,m,T:Int ;vB4_,g,y9,_2:String ;_0r5i:Array [Array [Array [Array [Float ,0134],0x35],0X6_4_F_D2],071_5];X3,___:P){} }''','''Class,_U_,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,54,],,,072,],,,54,],,,0B10000,],,,0X537,],;,_,,,_D6,,,_5_,:,Int,;,_,,,Y,,,m,,,T,:,Int,;,vB4_,,,g,,,y9,,,_2,:,String,;,_0r5i,:,Array,[,Array,[,Array,[,Array,[,Float,,,0134,],,,0x35,],,,0X64FD2,],,,0715,],;,X3,,,___,:,P,),{,},},<EOF>''',101))

    def test_2708(self):
        self.assertTrue(TestLexer.test('''Class hLM:u_{}Class G:_{Val $_w:__;g(L:Array [Float ,0100];_O:z_;MR:Array [Array [Float ,0x10],054]){}Constructor (){Break ;} }Class __{$_M_(){}Constructor (){x::$L();}Constructor (_,_As:_){} }Class _:_C{}''','''Class,hLM,:,u_,{,},Class,G,:,_,{,Val,$_w,:,__,;,g,(,L,:,Array,[,Float,,,0100,],;,_O,:,z_,;,MR,:,Array,[,Array,[,Float,,,0x10,],,,054,],),{,},Constructor,(,),{,Break,;,},},Class,__,{,$_M_,(,),{,},Constructor,(,),{,x,::,$L,(,),;,},Constructor,(,_,,,_As,:,_,),{,},},Class,_,:,_C,{,},<EOF>''',101))

    def test_2709(self):
        self.assertTrue(TestLexer.test('''Class z:o{Val E,$7,__,_,_5_4,$58,b:Array [String ,0B11_0];Destructor (){}Destructor (){} }Class _7{}Class l{}Class __P{}''','''Class,z,:,o,{,Val,E,,,$7,,,__,,,_,,,_5_4,,,$58,,,b,:,Array,[,String,,,0B110,],;,Destructor,(,),{,},Destructor,(,),{,},},Class,_7,{,},Class,l,{,},Class,__P,{,},<EOF>''',101))

    def test_2710(self):
        self.assertTrue(TestLexer.test('''Class g:_F{$_(o_,_6__O:Array [Array [Array [Array [Array [String ,01],04],0X42],04],05];_,__,_,U__:Array [Array [String ,0b1011111],95];_:Array [Boolean ,95];Q6:_6_;U,z:Float ;Tm_:String ;__e,n,_:Boolean ;_:__;D_,_9:Array [Float ,0xB];_pY11,E56,_b_:Array [String ,0b11]){} }''','''Class,g,:,_F,{,$_,(,o_,,,_6__O,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,01,],,,04,],,,0X42,],,,04,],,,05,],;,_,,,__,,,_,,,U__,:,Array,[,Array,[,String,,,0b1011111,],,,95,],;,_,:,Array,[,Boolean,,,95,],;,Q6,:,_6_,;,U,,,z,:,Float,;,Tm_,:,String,;,__e,,,n,,,_,:,Boolean,;,_,:,__,;,D_,,,_9,:,Array,[,Float,,,0xB,],;,_pY11,,,E56,,,_b_,:,Array,[,String,,,0b11,],),{,},},<EOF>''',101))

    def test_2711(self):
        self.assertTrue(TestLexer.test('''Class C{}Class j:S{}Class _:_{Constructor (__A,j6j,d,_3_,_4,H5:Array [Int ,01_6];_:_;_:String ){} }Class _:L{k(){}Var _3,$RT_,$_4z,$N:Array [Array [Boolean ,0x50],53];Var Q,$_,GYVs__,$D:Boolean ;_e__(w,T6:Boolean ){} }''','''Class,C,{,},Class,j,:,S,{,},Class,_,:,_,{,Constructor,(,__A,,,j6j,,,d,,,_3_,,,_4,,,H5,:,Array,[,Int,,,016,],;,_,:,_,;,_,:,String,),{,},},Class,_,:,L,{,k,(,),{,},Var,_3,,,$RT_,,,$_4z,,,$N,:,Array,[,Array,[,Boolean,,,0x50,],,,53,],;,Var,Q,,,$_,,,GYVs__,,,$D,:,Boolean,;,_e__,(,w,,,T6,:,Boolean,),{,},},<EOF>''',101))

    def test_2712(self):
        self.assertTrue(TestLexer.test('''Class q{}Class _:P{}Class r{_(_:Array [Array [Array [Array [Array [Boolean ,11],02_5],04],0xF_A],5];D_244,Q5,n,__,__2,_:Float ){} }''','''Class,q,{,},Class,_,:,P,{,},Class,r,{,_,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,11,],,,025,],,,04,],,,0xFA,],,,5,],;,D_244,,,Q5,,,n,,,__,,,__2,,,_,:,Float,),{,},},<EOF>''',101))

    def test_2713(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (k_:_;_:Boolean ){Continue ;}Constructor (_e:Array [Int ,0x2];_,p,___x:To4___;_w:Array [Int ,7];_:Boolean ;_,__:_;GM:QM){} }''','''Class,_,{,Constructor,(,k_,:,_,;,_,:,Boolean,),{,Continue,;,},Constructor,(,_e,:,Array,[,Int,,,0x2,],;,_,,,p,,,___x,:,To4___,;,_w,:,Array,[,Int,,,7,],;,_,:,Boolean,;,_,,,__,:,_,;,GM,:,QM,),{,},},<EOF>''',101))

    def test_2714(self):
        self.assertTrue(TestLexer.test('''Class _:_4{}Class M:_3d{$8(_:_;_,XP,_,V_2,_4,_vv,P,_:Int ;_,h7_v9:Array [String ,12];_,_,__3d:Array [Array [String ,0142],12]){} }''','''Class,_,:,_4,{,},Class,M,:,_3d,{,$8,(,_,:,_,;,_,,,XP,,,_,,,V_2,,,_4,,,_vv,,,P,,,_,:,Int,;,_,,,h7_v9,:,Array,[,String,,,12,],;,_,,,_,,,__3d,:,Array,[,Array,[,String,,,0142,],,,12,],),{,},},<EOF>''',101))

    def test_2715(self):
        self.assertTrue(TestLexer.test('''Class IU65_a{Constructor (_0,zs__7_9H,n_:Array [Array [Array [Array [Array [Boolean ,0B1001110],0x3D],070],0B1001110],0x98];q___F95,__4,P,__,k_t,_:String ){Break ;} }''','''Class,IU65_a,{,Constructor,(,_0,,,zs__7_9H,,,n_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1001110,],,,0x3D,],,,070,],,,0B1001110,],,,0x98,],;,q___F95,,,__4,,,P,,,__,,,k_t,,,_,:,String,),{,Break,;,},},<EOF>''',101))

    def test_2716(self):
        self.assertTrue(TestLexer.test('''Class __:_{Destructor (){}Destructor (){Break ;}Constructor (_:Array [Array [Array [Array [Array [Array [Array [Boolean ,054],78],054],0x3E],0x3E],78],06_355_6_1];U_j:_){} }Class _6Iv{}''','''Class,__,:,_,{,Destructor,(,),{,},Destructor,(,),{,Break,;,},Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,054,],,,78,],,,054,],,,0x3E,],,,0x3E,],,,78,],,,0635561,],;,U_j,:,_,),{,},},Class,_6Iv,{,},<EOF>''',101))

    def test_2717(self):
        self.assertTrue(TestLexer.test('''Class p:u_4{_(){}Constructor (c,_,_:Array [Array [Array [Int ,8],0B1010000],03];b1v_:Array [Array [Array [Array [Array [Float ,0b1011110],021],0b1011110],0B1],0B1010000]){}Destructor (){} }Class _M:_42m{Constructor (X,y:Float ;_,_,ZA,ixC,_4:V){} }''','''Class,p,:,u_4,{,_,(,),{,},Constructor,(,c,,,_,,,_,:,Array,[,Array,[,Array,[,Int,,,8,],,,0B1010000,],,,03,],;,b1v_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1011110,],,,021,],,,0b1011110,],,,0B1,],,,0B1010000,],),{,},Destructor,(,),{,},},Class,_M,:,_42m,{,Constructor,(,X,,,y,:,Float,;,_,,,_,,,ZA,,,ixC,,,_4,:,V,),{,},},<EOF>''',101))

    def test_2718(self):
        self.assertTrue(TestLexer.test('''Class c_66P:_W{}Class __Hfh{Var $5,$9__:Float ;}Class BCa:X_{}Class G{}Class g_{$_(_:String ){Val u:Array [Float ,0X9E_ED];} }''','''Class,c_66P,:,_W,{,},Class,__Hfh,{,Var,$5,,,$9__,:,Float,;,},Class,BCa,:,X_,{,},Class,G,{,},Class,g_,{,$_,(,_,:,String,),{,Val,u,:,Array,[,Float,,,0X9EED,],;,},},<EOF>''',101))

    def test_2719(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){} }Class _:h{Constructor (U,Mn_:Y;u5,____:Array [Array [Int ,0110],0b1101]){Break ;} }Class _F__{Var __b_:O;}''','''Class,_,{,Destructor,(,),{,},},Class,_,:,h,{,Constructor,(,U,,,Mn_,:,Y,;,u5,,,____,:,Array,[,Array,[,Int,,,0110,],,,0b1101,],),{,Break,;,},},Class,_F__,{,Var,__b_,:,O,;,},<EOF>''',101))

    def test_2720(self):
        self.assertTrue(TestLexer.test('''Class d{$_0(U:Array [Float ,02];_t:String ;_7:__;_MPA,_32,_,_:Array [Array [Array [Boolean ,0123],0x54],0xC];P:Array [Array [Float ,0x54],671]){} }''','''Class,d,{,$_0,(,U,:,Array,[,Float,,,02,],;,_t,:,String,;,_7,:,__,;,_MPA,,,_32,,,_,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0123,],,,0x54,],,,0xC,],;,P,:,Array,[,Array,[,Float,,,0x54,],,,671,],),{,},},<EOF>''',101))

    def test_2721(self):
        self.assertTrue(TestLexer.test('''Class S{Constructor (__,g:_){}r(_,X,_,_,z:Int ;__8r:_;_n_:Q){} }Class S_M_{Constructor (_3N:Fj_R4;_I36:String ){}Val _3:Array [Array [Array [Int ,0x18],0x18],0b111100]=-_::$I.___8()._fm.e_iE.H._();}''','''Class,S,{,Constructor,(,__,,,g,:,_,),{,},r,(,_,,,X,,,_,,,_,,,z,:,Int,;,__8r,:,_,;,_n_,:,Q,),{,},},Class,S_M_,{,Constructor,(,_3N,:,Fj_R4,;,_I36,:,String,),{,},Val,_3,:,Array,[,Array,[,Array,[,Int,,,0x18,],,,0x18,],,,0b111100,],=,-,_,::,$I,.,___8,(,),.,_fm,.,e_iE,.,H,.,_,(,),;,},<EOF>''',101))

    def test_2722(self):
        self.assertTrue(TestLexer.test('''Class U_A:Y{}Class _5:_{Constructor (){Val A1f_v:Array [Float ,0B10100];Return ;}Constructor (){} }Class ZvsT:_5_{}''','''Class,U_A,:,Y,{,},Class,_5,:,_,{,Constructor,(,),{,Val,A1f_v,:,Array,[,Float,,,0B10100,],;,Return,;,},Constructor,(,),{,},},Class,ZvsT,:,_5_,{,},<EOF>''',101))

    def test_2723(self):
        self.assertTrue(TestLexer.test('''Class a:v_C{}Class _{Constructor (__:Int ;_Z5_46:Int ;L_M:Int ;__:Float ;_d:Array [Int ,0140]){} }Class __:a___8_{}''','''Class,a,:,v_C,{,},Class,_,{,Constructor,(,__,:,Int,;,_Z5_46,:,Int,;,L_M,:,Int,;,__,:,Float,;,_d,:,Array,[,Int,,,0140,],),{,},},Class,__,:,a___8_,{,},<EOF>''',101))

    def test_2724(self):
        self.assertTrue(TestLexer.test('''Class Sgc_:_d{Var e_m:Array [Array [Boolean ,0134],26];}Class A7_{Var $14:Array [Array [Float ,26],9];}Class J:__I_{}''','''Class,Sgc_,:,_d,{,Var,e_m,:,Array,[,Array,[,Boolean,,,0134,],,,26,],;,},Class,A7_,{,Var,$14,:,Array,[,Array,[,Float,,,26,],,,9,],;,},Class,J,:,__I_,{,},<EOF>''',101))

    def test_2725(self):
        self.assertTrue(TestLexer.test('''Class _{_i6Y(F:_3;b9,x_s,_:Boolean ){}Val _,_:Boolean ;Constructor (_,j,z,S,Q,a,_,OoH,e:a){Return ;}Constructor (_,Pu___,_38E32,_,_,vK,_:T_){} }''','''Class,_,{,_i6Y,(,F,:,_3,;,b9,,,x_s,,,_,:,Boolean,),{,},Val,_,,,_,:,Boolean,;,Constructor,(,_,,,j,,,z,,,S,,,Q,,,a,,,_,,,OoH,,,e,:,a,),{,Return,;,},Constructor,(,_,,,Pu___,,,_38E32,,,_,,,_,,,vK,,,_,:,T_,),{,},},<EOF>''',101))

    def test_2726(self):
        self.assertTrue(TestLexer.test('''Class _d{Constructor (Xt_:_6;Y1,Y7i_,_2_P_:Array [Array [Int ,6],0X44];_:_;P:Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,05],03_5],0XAE0],0B111100],0X44],06],0B111100],0b111010],7];__:Int ){} }Class q{_(_:Array [Int ,0X44];d,qe:Array [Array [Boolean ,03],06]){} }''','''Class,_d,{,Constructor,(,Xt_,:,_6,;,Y1,,,Y7i_,,,_2_P_,:,Array,[,Array,[,Int,,,6,],,,0X44,],;,_,:,_,;,P,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,05,],,,035,],,,0XAE0,],,,0B111100,],,,0X44,],,,06,],,,0B111100,],,,0b111010,],,,7,],;,__,:,Int,),{,},},Class,q,{,_,(,_,:,Array,[,Int,,,0X44,],;,d,,,qe,:,Array,[,Array,[,Boolean,,,03,],,,06,],),{,},},<EOF>''',101))

    def test_2727(self):
        self.assertTrue(TestLexer.test('''Class Ye53n:_{}Class Qb:_18{Var _:x2;V(_:A;r:Float ){}Var _:Array [Boolean ,0B1];Constructor (){Var D_,w11_4_s:Array [Array [Boolean ,89],0X13];}Constructor (){Continue ;} }Class p8:F{}''','''Class,Ye53n,:,_,{,},Class,Qb,:,_18,{,Var,_,:,x2,;,V,(,_,:,A,;,r,:,Float,),{,},Var,_,:,Array,[,Boolean,,,0B1,],;,Constructor,(,),{,Var,D_,,,w11_4_s,:,Array,[,Array,[,Boolean,,,89,],,,0X13,],;,},Constructor,(,),{,Continue,;,},},Class,p8,:,F,{,},<EOF>''',101))

    def test_2728(self):
        self.assertTrue(TestLexer.test('''Class _g{Var $_:Array [Boolean ,0X18];_(z:String ;W,s_6:Array [String ,0x63]){}Constructor (){} }Class __z{Var f:String ;}''','''Class,_g,{,Var,$_,:,Array,[,Boolean,,,0X18,],;,_,(,z,:,String,;,W,,,s_6,:,Array,[,String,,,0x63,],),{,},Constructor,(,),{,},},Class,__z,{,Var,f,:,String,;,},<EOF>''',101))

    def test_2729(self):
        self.assertTrue(TestLexer.test('''Class m:Z{Constructor (){}_oMC7__a8_3(U:Array [Boolean ,0x62];_eY,_,_8,_,w0_,o___:Array [Array [String ,0B1011001],07_225]){Continue ;} }''','''Class,m,:,Z,{,Constructor,(,),{,},_oMC7__a8_3,(,U,:,Array,[,Boolean,,,0x62,],;,_eY,,,_,,,_8,,,_,,,w0_,,,o___,:,Array,[,Array,[,String,,,0B1011001,],,,07225,],),{,Continue,;,},},<EOF>''',101))

    def test_2730(self):
        self.assertTrue(TestLexer.test('''Class __:_{}Class Wt{_(){Continue ;} }Class _:_{$P(_g,H9aPZ:String ;a,_P__U_,_:Array [Array [Array [Array [Float ,1_4],05],05],3_05_3];r,j:_;v75,_f_1C4_:v){} }''','''Class,__,:,_,{,},Class,Wt,{,_,(,),{,Continue,;,},},Class,_,:,_,{,$P,(,_g,,,H9aPZ,:,String,;,a,,,_P__U_,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,14,],,,05,],,,05,],,,3053,],;,r,,,j,:,_,;,v75,,,_f_1C4_,:,v,),{,},},<EOF>''',101))

    def test_2731(self):
        self.assertTrue(TestLexer.test('''Class _Z{}Class m:___6__{_(){}Var g:Boolean ;jU(){}$l_8__(_d_:___;M_:Int ;_B,xc:Float ;_:CZ){}_g(){}Constructor (){Break ;Var k,T,YH:Array [Array [Array [Float ,2],67],0x7];} }''','''Class,_Z,{,},Class,m,:,___6__,{,_,(,),{,},Var,g,:,Boolean,;,jU,(,),{,},$l_8__,(,_d_,:,___,;,M_,:,Int,;,_B,,,xc,:,Float,;,_,:,CZ,),{,},_g,(,),{,},Constructor,(,),{,Break,;,Var,k,,,T,,,YH,:,Array,[,Array,[,Array,[,Float,,,2,],,,67,],,,0x7,],;,},},<EOF>''',101))

    def test_2732(self):
        self.assertTrue(TestLexer.test('''Class i{Var Hg1,$8_,$_,$_Ee:Array [Array [Array [Array [Array [Array [Array [Array [String ,52],0b1],9_5],0B1001],1],0b1],155],1];Constructor (vL,_,_:Array [Int ,0x26]){} }''','''Class,i,{,Var,Hg1,,,$8_,,,$_,,,$_Ee,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,52,],,,0b1,],,,95,],,,0B1001,],,,1,],,,0b1,],,,155,],,,1,],;,Constructor,(,vL,,,_,,,_,:,Array,[,Int,,,0x26,],),{,},},<EOF>''',101))

    def test_2733(self):
        self.assertTrue(TestLexer.test('''Class J{_(l8,e,P64,U,_,_8,__q,_:Array [Array [Array [Array [Boolean ,040],0xE2],0B1000011],0xC78];FY:_A){ {} }Val $3,$_,_:Int ;}Class __3{}''','''Class,J,{,_,(,l8,,,e,,,P64,,,U,,,_,,,_8,,,__q,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,040,],,,0xE2,],,,0B1000011,],,,0xC78,],;,FY,:,_A,),{,{,},},Val,$3,,,$_,,,_,:,Int,;,},Class,__3,{,},<EOF>''',101))

    def test_2734(self):
        self.assertTrue(TestLexer.test('''Class J{Constructor (d:Boolean ;_,o__,_,S:String ){} }Class g{Val $J:String ;Constructor (__:String ;w,_7,__,Isep:Float ){} }Class i__2:z{Destructor (){}Var $2V:Array [Boolean ,0XC_4];}''','''Class,J,{,Constructor,(,d,:,Boolean,;,_,,,o__,,,_,,,S,:,String,),{,},},Class,g,{,Val,$J,:,String,;,Constructor,(,__,:,String,;,w,,,_7,,,__,,,Isep,:,Float,),{,},},Class,i__2,:,z,{,Destructor,(,),{,},Var,$2V,:,Array,[,Boolean,,,0XC4,],;,},<EOF>''',101))

    def test_2735(self):
        self.assertTrue(TestLexer.test('''Class t9C_4:k9{}Class L{}Class fu{Val $__,_,J:G4q;Val H,_GO_j,$RAl:S5;Constructor (){}Destructor (){}Val _:Array [Array [Array [Float ,0B1_0],20],0b10];}''','''Class,t9C_4,:,k9,{,},Class,L,{,},Class,fu,{,Val,$__,,,_,,,J,:,G4q,;,Val,H,,,_GO_j,,,$RAl,:,S5,;,Constructor,(,),{,},Destructor,(,),{,},Val,_,:,Array,[,Array,[,Array,[,Float,,,0B10,],,,20,],,,0b10,],;,},<EOF>''',101))

    def test_2736(self):
        self.assertTrue(TestLexer.test('''Class M_9:_{_(___,_6j,A82,_gi:_5I;_:Int ;_:String ;_,_:Array [Array [Array [Array [Int ,0x1E],0x1E],0B11100],0x1E]){} }Class _{Destructor (){Break ;}w(){}a(){}Constructor (){Continue ;} }''','''Class,M_9,:,_,{,_,(,___,,,_6j,,,A82,,,_gi,:,_5I,;,_,:,Int,;,_,:,String,;,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x1E,],,,0x1E,],,,0B11100,],,,0x1E,],),{,},},Class,_,{,Destructor,(,),{,Break,;,},w,(,),{,},a,(,),{,},Constructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_2737(self):
        self.assertTrue(TestLexer.test('''Class b:J_5T{_(uc:Float ){}_(_,W,_:String ){}s(_1:Array [Array [Array [String ,043],0b1],0x64];Pw:Boolean ){Break ;} }''','''Class,b,:,J_5T,{,_,(,uc,:,Float,),{,},_,(,_,,,W,,,_,:,String,),{,},s,(,_1,:,Array,[,Array,[,Array,[,String,,,043,],,,0b1,],,,0x64,],;,Pw,:,Boolean,),{,Break,;,},},<EOF>''',101))

    def test_2738(self):
        self.assertTrue(TestLexer.test('''Class _{$3Q(){}$___k(t:uZ_;__2:Array [Int ,1_8]){s9w::$m();}$5(_,__,__9:Int ){}Val B:Boolean ;Var g,M_:jt;Var $X,_:Boolean ;__(){}Destructor (){} }Class _{}Class E{Destructor (){}Destructor (){} }Class _:__{}Class __P:E94_49{}''','''Class,_,{,$3Q,(,),{,},$___k,(,t,:,uZ_,;,__2,:,Array,[,Int,,,18,],),{,s9w,::,$m,(,),;,},$5,(,_,,,__,,,__9,:,Int,),{,},Val,B,:,Boolean,;,Var,g,,,M_,:,jt,;,Var,$X,,,_,:,Boolean,;,__,(,),{,},Destructor,(,),{,},},Class,_,{,},Class,E,{,Destructor,(,),{,},Destructor,(,),{,},},Class,_,:,__,{,},Class,__P,:,E94_49,{,},<EOF>''',101))

    def test_2739(self):
        self.assertTrue(TestLexer.test('''Class A:_3g8{Var _6_:E;}Class _:__{Constructor (_:_;_7_L_7:J){}P(Rck9R,eHDK6,_g1,__,_:Array [String ,6_6];h,__,Z9:Array [Array [Array [String ,0X13],0X13],0b1]){Continue ;{Break ;} }}Class __{}''','''Class,A,:,_3g8,{,Var,_6_,:,E,;,},Class,_,:,__,{,Constructor,(,_,:,_,;,_7_L_7,:,J,),{,},P,(,Rck9R,,,eHDK6,,,_g1,,,__,,,_,:,Array,[,String,,,66,],;,h,,,__,,,Z9,:,Array,[,Array,[,Array,[,String,,,0X13,],,,0X13,],,,0b1,],),{,Continue,;,{,Break,;,},},},Class,__,{,},<EOF>''',101))

    def test_2740(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){Continue ;{}Continue ;} }Class L:w{}Class d:C___{Var $T99:j_;_(od__:Array [Boolean ,0x24];D,L,_:v;_9:Array [Array [String ,2],9];n4,ne:Array [Array [Array [Int ,0x24],3],0x24];y:A;Y:Int ;__:_){__::$t();}$5_L1(){}Val _:String =------_W_1_220;}''','''Class,_,{,Destructor,(,),{,Continue,;,{,},Continue,;,},},Class,L,:,w,{,},Class,d,:,C___,{,Var,$T99,:,j_,;,_,(,od__,:,Array,[,Boolean,,,0x24,],;,D,,,L,,,_,:,v,;,_9,:,Array,[,Array,[,String,,,2,],,,9,],;,n4,,,ne,:,Array,[,Array,[,Array,[,Int,,,0x24,],,,3,],,,0x24,],;,y,:,A,;,Y,:,Int,;,__,:,_,),{,__,::,$t,(,),;,},$5_L1,(,),{,},Val,_,:,String,=,-,-,-,-,-,-,_W_1_220,;,},<EOF>''',101))

    def test_2741(self):
        self.assertTrue(TestLexer.test('''Class _7_:v_{Var $0__8_1_,E_,_3,$8wZ,m:_;Constructor (V:Boolean ;i_9iS,_8__p:Boolean ){} }Class o:F{Val $_7:Float ;Constructor (){Break ;Continue ;} }''','''Class,_7_,:,v_,{,Var,$0__8_1_,,,E_,,,_3,,,$8wZ,,,m,:,_,;,Constructor,(,V,:,Boolean,;,i_9iS,,,_8__p,:,Boolean,),{,},},Class,o,:,F,{,Val,$_7,:,Float,;,Constructor,(,),{,Break,;,Continue,;,},},<EOF>''',101))

    def test_2742(self):
        self.assertTrue(TestLexer.test('''Class H_{$__B(_,F:Array [Int ,3_7];D:Array [Boolean ,01_26_331_52];_,_k:_5US_){}Destructor (){} }Class C:_{}Class _M{}''','''Class,H_,{,$__B,(,_,,,F,:,Array,[,Int,,,37,],;,D,:,Array,[,Boolean,,,012633152,],;,_,,,_k,:,_5US_,),{,},Destructor,(,),{,},},Class,C,:,_,{,},Class,_M,{,},<EOF>''',101))

    def test_2743(self):
        self.assertTrue(TestLexer.test('''Class IS_3_{Destructor (){}Val $PE,$_,$8,f7_:Array [Array [Array [Array [String ,72],0X3],0b101100],0b1];}Class h:b{_(E1S_:Int ){Val p4:__;}_(){}Constructor (OD,_8,__E,_,G07_:i;nL:Int ;H:Float ){} }Class zxR{Var $_,__W:Array [Array [String ,0X4],8];Z_5X(){} }''','''Class,IS_3_,{,Destructor,(,),{,},Val,$PE,,,$_,,,$8,,,f7_,:,Array,[,Array,[,Array,[,Array,[,String,,,72,],,,0X3,],,,0b101100,],,,0b1,],;,},Class,h,:,b,{,_,(,E1S_,:,Int,),{,Val,p4,:,__,;,},_,(,),{,},Constructor,(,OD,,,_8,,,__E,,,_,,,G07_,:,i,;,nL,:,Int,;,H,:,Float,),{,},},Class,zxR,{,Var,$_,,,__W,:,Array,[,Array,[,String,,,0X4,],,,8,],;,Z_5X,(,),{,},},<EOF>''',101))

    def test_2744(self):
        self.assertTrue(TestLexer.test('''Class j_L_8:_l{Val _178:Array [String ,01];Val ____,$h:Array [Boolean ,10];Val _,$e,l:T2;Var $8,$3,$2_,$_,T_01i,_,_n__U:O5T;}''','''Class,j_L_8,:,_l,{,Val,_178,:,Array,[,String,,,01,],;,Val,____,,,$h,:,Array,[,Boolean,,,10,],;,Val,_,,,$e,,,l,:,T2,;,Var,$8,,,$3,,,$2_,,,$_,,,T_01i,,,_,,,_n__U,:,O5T,;,},<EOF>''',101))

    def test_2745(self):
        self.assertTrue(TestLexer.test('''Class _Z{}Class G:__ofB_{Destructor (){} }Class __:___{}Class _0_5g13__{Destructor (){ {} }}Class _{Val $U1730_:Array [Array [Boolean ,6],011];}''','''Class,_Z,{,},Class,G,:,__ofB_,{,Destructor,(,),{,},},Class,__,:,___,{,},Class,_0_5g13__,{,Destructor,(,),{,{,},},},Class,_,{,Val,$U1730_,:,Array,[,Array,[,Boolean,,,6,],,,011,],;,},<EOF>''',101))

    def test_2746(self):
        self.assertTrue(TestLexer.test('''Class i:_{}Class _:_{k(_:Array [Array [Array [Array [Array [Array [String ,02_7],0b1_11],0x5B],0X58],1],4];CG,__50,W7a1_5,_:Array [Array [Array [Array [String ,03],0137],04],0137]){ {} }}''','''Class,i,:,_,{,},Class,_,:,_,{,k,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,027,],,,0b111,],,,0x5B,],,,0X58,],,,1,],,,4,],;,CG,,,__50,,,W7a1_5,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,03,],,,0137,],,,04,],,,0137,],),{,{,},},},<EOF>''',101))

    def test_2747(self):
        self.assertTrue(TestLexer.test('''Class _8{$_7r(_,v,b84:_;F4:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,63],1],1],0b10_1_1],0117],0117],0x9_6_5D],0B1_0_0];_Q,L:Array [Array [Boolean ,0X2_0],0117];_,p:Array [Array [Array [Array [Boolean ,0b1001000],8],0117],0367_2_2_2];__1l8:x;n5_,_,j,_,__:Float ;_s:Boolean ){} }''','''Class,_8,{,$_7r,(,_,,,v,,,b84,:,_,;,F4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,63,],,,1,],,,1,],,,0b1011,],,,0117,],,,0117,],,,0x965D,],,,0B100,],;,_Q,,,L,:,Array,[,Array,[,Boolean,,,0X20,],,,0117,],;,_,,,p,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1001000,],,,8,],,,0117,],,,0367222,],;,__1l8,:,x,;,n5_,,,_,,,j,,,_,,,__,:,Float,;,_s,:,Boolean,),{,},},<EOF>''',101))

    def test_2748(self):
        self.assertTrue(TestLexer.test('''Class O{Constructor (l0,t_,I,__Q_8_:Int ;_Vl,QT94:Array [Array [Int ,0B110],0B1]){}Destructor (){}Constructor (i_:Float ){} }''','''Class,O,{,Constructor,(,l0,,,t_,,,I,,,__Q_8_,:,Int,;,_Vl,,,QT94,:,Array,[,Array,[,Int,,,0B110,],,,0B1,],),{,},Destructor,(,),{,},Constructor,(,i_,:,Float,),{,},},<EOF>''',101))

    def test_2749(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _{Constructor (){}Constructor (g:Array [Array [Array [Array [Int ,05],011],0X5],0x2_F_A];k:String ;_4,M_:Boolean ;u_S:Array [Array [Array [Array [Array [Boolean ,011],0B1001010],0X5D],0b1],0X5D];o,_2,_,_:Int ){} }''','''Class,_,:,_,{,},Class,_,{,Constructor,(,),{,},Constructor,(,g,:,Array,[,Array,[,Array,[,Array,[,Int,,,05,],,,011,],,,0X5,],,,0x2FA,],;,k,:,String,;,_4,,,M_,:,Boolean,;,u_S,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,011,],,,0B1001010,],,,0X5D,],,,0b1,],,,0X5D,],;,o,,,_2,,,_,,,_,:,Int,),{,},},<EOF>''',101))

    def test_2750(self):
        self.assertTrue(TestLexer.test('''Class y_{Constructor (Bj7_,SJz:Y){ {} }_W(_,j:Array [Array [Array [Array [Boolean ,19],056],7],0B1];_:t;A,C:String ;_,s:Array [Boolean ,0b1_0_0];_,_2,_:_;_:Array [Array [Array [Array [String ,057],0B1101],0XE],02_7];_7,AM,_,css,Tut:Array [Array [Array [Boolean ,056],19],0x3F];__:Array [Array [Array [String ,056],0X3A_7],19]){} }''','''Class,y_,{,Constructor,(,Bj7_,,,SJz,:,Y,),{,{,},},_W,(,_,,,j,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,19,],,,056,],,,7,],,,0B1,],;,_,:,t,;,A,,,C,:,String,;,_,,,s,:,Array,[,Boolean,,,0b100,],;,_,,,_2,,,_,:,_,;,_,:,Array,[,Array,[,Array,[,Array,[,String,,,057,],,,0B1101,],,,0XE,],,,027,],;,_7,,,AM,,,_,,,css,,,Tut,:,Array,[,Array,[,Array,[,Boolean,,,056,],,,19,],,,0x3F,],;,__,:,Array,[,Array,[,Array,[,String,,,056,],,,0X3A7,],,,19,],),{,},},<EOF>''',101))

    def test_2751(self):
        self.assertTrue(TestLexer.test('''Class Lm{Constructor (_2_,_97_:Boolean ){}Constructor (){Continue ;Return ;}Var M:W7W;Constructor (){} }Class p{}''','''Class,Lm,{,Constructor,(,_2_,,,_97_,:,Boolean,),{,},Constructor,(,),{,Continue,;,Return,;,},Var,M,:,W7W,;,Constructor,(,),{,},},Class,p,{,},<EOF>''',101))

    def test_2752(self):
        self.assertTrue(TestLexer.test('''Class _:g_{Var Y,$Tag:_l5;Var $J,$3_:Array [String ,035];Var _9_1,$Q,$1U097:Float ;Var O,_:Array [Boolean ,0B1];}Class icQ:_{}''','''Class,_,:,g_,{,Var,Y,,,$Tag,:,_l5,;,Var,$J,,,$3_,:,Array,[,String,,,035,],;,Var,_9_1,,,$Q,,,$1U097,:,Float,;,Var,O,,,_,:,Array,[,Boolean,,,0B1,],;,},Class,icQ,:,_,{,},<EOF>''',101))

    def test_2753(self):
        self.assertTrue(TestLexer.test('''Class R{}Class l0_{}Class n1:F1{Constructor (Wv_:Boolean ;_:String ;oZQ,_:Int ;W2x:Array [String ,100]){}Val mG:_;}''','''Class,R,{,},Class,l0_,{,},Class,n1,:,F1,{,Constructor,(,Wv_,:,Boolean,;,_,:,String,;,oZQ,,,_,:,Int,;,W2x,:,Array,[,String,,,100,],),{,},Val,mG,:,_,;,},<EOF>''',101))

    def test_2754(self):
        self.assertTrue(TestLexer.test('''Class _{Val $a_:Array [Array [Array [Array [Float ,072],0X34],0b1011100],59_84_6];}Class _4:_{}Class _7_{}Class f4:_{Var _:Float ;}''','''Class,_,{,Val,$a_,:,Array,[,Array,[,Array,[,Array,[,Float,,,072,],,,0X34,],,,0b1011100,],,,59846,],;,},Class,_4,:,_,{,},Class,_7_,{,},Class,f4,:,_,{,Var,_,:,Float,;,},<EOF>''',101))

    def test_2755(self):
        self.assertTrue(TestLexer.test('''Class R4_e_:D___{Destructor (){}Var $w9O_J3:Array [Array [Boolean ,63],0x3];n21c(d,U,___:Array [Int ,0b101110];j:Array [Array [Int ,0b11_010],0133]){} }''','''Class,R4_e_,:,D___,{,Destructor,(,),{,},Var,$w9O_J3,:,Array,[,Array,[,Boolean,,,63,],,,0x3,],;,n21c,(,d,,,U,,,___,:,Array,[,Int,,,0b101110,],;,j,:,Array,[,Array,[,Int,,,0b11010,],,,0133,],),{,},},<EOF>''',101))

    def test_2756(self):
        self.assertTrue(TestLexer.test('''Class F_{}Class D5{Constructor (c:Array [Array [Array [Array [Array [Array [Array [Array [String ,38],07],0x3],0x3],033],2_7],3],0b11101];__0____7___jmq,_,_:Int ){} }Class _0{}''','''Class,F_,{,},Class,D5,{,Constructor,(,c,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,38,],,,07,],,,0x3,],,,0x3,],,,033,],,,27,],,,3,],,,0b11101,],;,__0____7___jmq,,,_,,,_,:,Int,),{,},},Class,_0,{,},<EOF>''',101))

    def test_2757(self):
        self.assertTrue(TestLexer.test('''Class _:Y{}Class P_A{Constructor (U_,____,w:Float ;_:String ){} }Class O___:WQK{}Class I:z{Val G:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0x4],0b111011],33],0x4],33],33],33],0x4];Constructor (){} }Class y_:M{}''','''Class,_,:,Y,{,},Class,P_A,{,Constructor,(,U_,,,____,,,w,:,Float,;,_,:,String,),{,},},Class,O___,:,WQK,{,},Class,I,:,z,{,Val,G,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x4,],,,0b111011,],,,33,],,,0x4,],,,33,],,,33,],,,33,],,,0x4,],;,Constructor,(,),{,},},Class,y_,:,M,{,},<EOF>''',101))

    def test_2758(self):
        self.assertTrue(TestLexer.test('''Class cC_:y6{Constructor (_,s9,_,U_:u){Continue ;}Constructor (){}$u03o_(A:__;q7_:H79;_r:Array [String ,0b1000]){Continue ;Break ;Break ;} }''','''Class,cC_,:,y6,{,Constructor,(,_,,,s9,,,_,,,U_,:,u,),{,Continue,;,},Constructor,(,),{,},$u03o_,(,A,:,__,;,q7_,:,H79,;,_r,:,Array,[,String,,,0b1000,],),{,Continue,;,Break,;,Break,;,},},<EOF>''',101))

    def test_2759(self):
        self.assertTrue(TestLexer.test('''Class H:_R316{h(f,M_,__:Array [String ,0x50];ZC7t,_7_,w:Boolean ;l:Float ){_6::$4__();Continue ;} }Class _H_:z{}Class j:__O{G_(){Val __,_:i;} }''','''Class,H,:,_R316,{,h,(,f,,,M_,,,__,:,Array,[,String,,,0x50,],;,ZC7t,,,_7_,,,w,:,Boolean,;,l,:,Float,),{,_6,::,$4__,(,),;,Continue,;,},},Class,_H_,:,z,{,},Class,j,:,__O,{,G_,(,),{,Val,__,,,_,:,i,;,},},<EOF>''',101))

    def test_2760(self):
        self.assertTrue(TestLexer.test('''Class _8_t{t(C__,ci_d,_,N:z__;O:Array [Int ,0B1];O_,N,Y_,r_h,_,m,B:Float ;_2o:Array [String ,0X6_7_30];_,e_,_:String ){Break ;} }''','''Class,_8_t,{,t,(,C__,,,ci_d,,,_,,,N,:,z__,;,O,:,Array,[,Int,,,0B1,],;,O_,,,N,,,Y_,,,r_h,,,_,,,m,,,B,:,Float,;,_2o,:,Array,[,String,,,0X6730,],;,_,,,e_,,,_,:,String,),{,Break,;,},},<EOF>''',101))

    def test_2761(self):
        self.assertTrue(TestLexer.test('''Class __Aw:_J_A{Destructor (){} }Class _{Val $a8:Boolean ;Constructor (_,_,e,m,E:Int ;_,_3:Boolean ;_:Int ){w::$_0_().__.oB._();} }''','''Class,__Aw,:,_J_A,{,Destructor,(,),{,},},Class,_,{,Val,$a8,:,Boolean,;,Constructor,(,_,,,_,,,e,,,m,,,E,:,Int,;,_,,,_3,:,Boolean,;,_,:,Int,),{,w,::,$_0_,(,),.,__,.,oB,.,_,(,),;,},},<EOF>''',101))

    def test_2762(self):
        self.assertTrue(TestLexer.test('''Class e:R47{Destructor (){} }Class iM_89:_8_6{}Class r_:__R{}Class __e_{Constructor (){}Constructor (J,ee,_:__;bk:Array [Float ,3_2_6_2];y5w_,_,_,_,w3,_n:Array [Boolean ,99];Pt:Float ;_0__W_,O3,___,_:String ;G20:Boolean ){Val h,__,_RD:Boolean ;Return ;} }''','''Class,e,:,R47,{,Destructor,(,),{,},},Class,iM_89,:,_8_6,{,},Class,r_,:,__R,{,},Class,__e_,{,Constructor,(,),{,},Constructor,(,J,,,ee,,,_,:,__,;,bk,:,Array,[,Float,,,3262,],;,y5w_,,,_,,,_,,,_,,,w3,,,_n,:,Array,[,Boolean,,,99,],;,Pt,:,Float,;,_0__W_,,,O3,,,___,,,_,:,String,;,G20,:,Boolean,),{,Val,h,,,__,,,_RD,:,Boolean,;,Return,;,},},<EOF>''',101))

    def test_2763(self):
        self.assertTrue(TestLexer.test('''Class _:Gj{}Class __Eb__YcM_6:M_{$__(_6JS01hM:p_6;z__:Boolean ;M_2_Mi:Boolean ;np25U,_:String ){ {} }}Class _9{Destructor (){} }Class zQ{Val X:_;}''','''Class,_,:,Gj,{,},Class,__Eb__YcM_6,:,M_,{,$__,(,_6JS01hM,:,p_6,;,z__,:,Boolean,;,M_2_Mi,:,Boolean,;,np25U,,,_,:,String,),{,{,},},},Class,_9,{,Destructor,(,),{,},},Class,zQ,{,Val,X,:,_,;,},<EOF>''',101))

    def test_2764(self):
        self.assertTrue(TestLexer.test('''Class _v_:_{}Class _:y{Var $_P,$2,$__Q,$4_9q_,$_:__;Var $__:String ;}Class P{}Class b_{Var $_ZfV_,Jh:Array [Boolean ,0xD];}Class Y0{}''','''Class,_v_,:,_,{,},Class,_,:,y,{,Var,$_P,,,$2,,,$__Q,,,$4_9q_,,,$_,:,__,;,Var,$__,:,String,;,},Class,P,{,},Class,b_,{,Var,$_ZfV_,,,Jh,:,Array,[,Boolean,,,0xD,],;,},Class,Y0,{,},<EOF>''',101))

    def test_2765(self):
        self.assertTrue(TestLexer.test('''Class _:_{$25_(_h,_:Array [Boolean ,0b1100010];_T,__:Array [Array [Array [Array [Array [Array [Array [String ,0x3_7],0xDA_A_85_D],0B1],0b1],0x10],4],0B1];Ni:_){}Var $H7Z5:B__;Val q:u;}Class _:__ts{}''','''Class,_,:,_,{,$25_,(,_h,,,_,:,Array,[,Boolean,,,0b1100010,],;,_T,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x37,],,,0xDAA85D,],,,0B1,],,,0b1,],,,0x10,],,,4,],,,0B1,],;,Ni,:,_,),{,},Var,$H7Z5,:,B__,;,Val,q,:,u,;,},Class,_,:,__ts,{,},<EOF>''',101))

    def test_2766(self):
        self.assertTrue(TestLexer.test('''Class I:_{_(){} }Class D{}Class w_U:_{}Class t{Constructor (N:Array [Int ,67]){}Val $_:String ;Constructor (_:Float ;W:Eo4;_,_:String ){Break ;Break ;}Var g:__;}''','''Class,I,:,_,{,_,(,),{,},},Class,D,{,},Class,w_U,:,_,{,},Class,t,{,Constructor,(,N,:,Array,[,Int,,,67,],),{,},Val,$_,:,String,;,Constructor,(,_,:,Float,;,W,:,Eo4,;,_,,,_,:,String,),{,Break,;,Break,;,},Var,g,:,__,;,},<EOF>''',101))

    def test_2767(self):
        self.assertTrue(TestLexer.test('''Class nrT:_h7{$_(BAn:Array [Array [Array [Boolean ,03_4],0B100110],0xB_B]){Val o_B,_n:Array [Float ,28];}Val $M:Y966_;Val $p1_,$l:String ;}Class _:_j{}Class __m{}''','''Class,nrT,:,_h7,{,$_,(,BAn,:,Array,[,Array,[,Array,[,Boolean,,,034,],,,0B100110,],,,0xBB,],),{,Val,o_B,,,_n,:,Array,[,Float,,,28,],;,},Val,$M,:,Y966_,;,Val,$p1_,,,$l,:,String,;,},Class,_,:,_j,{,},Class,__m,{,},<EOF>''',101))

    def test_2768(self):
        self.assertTrue(TestLexer.test('''Class h:Y8{Var cZI_,__2,_E__,$e,$T,$97_:Array [Array [Array [String ,0B1_0],071],8];Var s____,_,_:Int ;}Class F{}''','''Class,h,:,Y8,{,Var,cZI_,,,__2,,,_E__,,,$e,,,$T,,,$97_,:,Array,[,Array,[,Array,[,String,,,0B10,],,,071,],,,8,],;,Var,s____,,,_,,,_,:,Int,;,},Class,F,{,},<EOF>''',101))

    def test_2769(self):
        self.assertTrue(TestLexer.test('''Class P:w{Val F,D,$018,$_i,_83,_:Boolean ;P_Y(M,G_,_:Array [Array [Float ,0xC_2],0x50]){} }Class _{Destructor (){Continue ;} }''','''Class,P,:,w,{,Val,F,,,D,,,$018,,,$_i,,,_83,,,_,:,Boolean,;,P_Y,(,M,,,G_,,,_,:,Array,[,Array,[,Float,,,0xC2,],,,0x50,],),{,},},Class,_,{,Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_2770(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (MXua2S:Array [String ,2];__01o:Array [Array [Boolean ,0115],54];Sj,K:Array [Boolean ,0115];t_k:Boolean ;__,__7:Array [String ,06_7];C_C67:c_y6;_:Array [String ,0115];y__h,_,_43,_,y7,w58:Array [Int ,0x11];r__,_p,_:Float ;_9A:Float ;i:Array [Array [Array [Array [Float ,0b1],0b1],0x11],0x11];P,_,J:___Lr){}_3(_:t){Continue ;}Var $8_,$_,_7:u;}''','''Class,_,{,Constructor,(,MXua2S,:,Array,[,String,,,2,],;,__01o,:,Array,[,Array,[,Boolean,,,0115,],,,54,],;,Sj,,,K,:,Array,[,Boolean,,,0115,],;,t_k,:,Boolean,;,__,,,__7,:,Array,[,String,,,067,],;,C_C67,:,c_y6,;,_,:,Array,[,String,,,0115,],;,y__h,,,_,,,_43,,,_,,,y7,,,w58,:,Array,[,Int,,,0x11,],;,r__,,,_p,,,_,:,Float,;,_9A,:,Float,;,i,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,0b1,],,,0x11,],,,0x11,],;,P,,,_,,,J,:,___Lr,),{,},_3,(,_,:,t,),{,Continue,;,},Var,$8_,,,$_,,,_7,:,u,;,},<EOF>''',101))

    def test_2771(self):
        self.assertTrue(TestLexer.test('''Class _{Var $_z6:l9;}Class T_{Val $_9:String ;}Class __:P{x(u_,_,__:Array [Int ,3_5_3]){}Val b,Q6,V:_1;Val k__,$_:Int ;Constructor (){Break ;} }''','''Class,_,{,Var,$_z6,:,l9,;,},Class,T_,{,Val,$_9,:,String,;,},Class,__,:,P,{,x,(,u_,,,_,,,__,:,Array,[,Int,,,353,],),{,},Val,b,,,Q6,,,V,:,_1,;,Val,k__,,,$_,:,Int,;,Constructor,(,),{,Break,;,},},<EOF>''',101))

    def test_2772(self):
        self.assertTrue(TestLexer.test('''Class U:_4{}Class H{Val i_D_,$W:String ;Constructor (_B,n,_4_g,_,J:Array [Boolean ,7];_0:Array [String ,0X39]){} }Class c:_{}''','''Class,U,:,_4,{,},Class,H,{,Val,i_D_,,,$W,:,String,;,Constructor,(,_B,,,n,,,_4_g,,,_,,,J,:,Array,[,Boolean,,,7,],;,_0,:,Array,[,String,,,0X39,],),{,},},Class,c,:,_,{,},<EOF>''',101))

    def test_2773(self):
        self.assertTrue(TestLexer.test('''Class w{Constructor (){}u6(__,_:Array [Array [Float ,021],0x72];o:Array [Array [Int ,06],65];_:Boolean ){}Val _i:Array [Int ,021];}Class NF:_{}Class _:S{$_(__:Int ){}Var $2:_;Constructor (_59e:MI){Return ;} }Class _b:_{}Class _:R_v{}''','''Class,w,{,Constructor,(,),{,},u6,(,__,,,_,:,Array,[,Array,[,Float,,,021,],,,0x72,],;,o,:,Array,[,Array,[,Int,,,06,],,,65,],;,_,:,Boolean,),{,},Val,_i,:,Array,[,Int,,,021,],;,},Class,NF,:,_,{,},Class,_,:,S,{,$_,(,__,:,Int,),{,},Var,$2,:,_,;,Constructor,(,_59e,:,MI,),{,Return,;,},},Class,_b,:,_,{,},Class,_,:,R_v,{,},<EOF>''',101))

    def test_2774(self):
        self.assertTrue(TestLexer.test('''Class g:F1{Constructor (){}Val v0_:Int ;Constructor (t8:Boolean ;_:_;s,_E,W___y:Array [Array [Array [Int ,0x7_C],0140],0X3E];_e,_,_1B,L,__,_L,Nb_,v:___;Je3_:Array [Array [Array [Float ,01_7],0b11101],01]){} }Class Y31_:m{}''','''Class,g,:,F1,{,Constructor,(,),{,},Val,v0_,:,Int,;,Constructor,(,t8,:,Boolean,;,_,:,_,;,s,,,_E,,,W___y,:,Array,[,Array,[,Array,[,Int,,,0x7C,],,,0140,],,,0X3E,],;,_e,,,_,,,_1B,,,L,,,__,,,_L,,,Nb_,,,v,:,___,;,Je3_,:,Array,[,Array,[,Array,[,Float,,,017,],,,0b11101,],,,01,],),{,},},Class,Y31_,:,m,{,},<EOF>''',101))

    def test_2775(self):
        self.assertTrue(TestLexer.test('''Class D_:_{}Class W:_{p__3(O,C47,G_:Array [Float ,040];__,N2E,_:_;_:Array [Array [Array [String ,0xA],0B11],0B10111]){} }''','''Class,D_,:,_,{,},Class,W,:,_,{,p__3,(,O,,,C47,,,G_,:,Array,[,Float,,,040,],;,__,,,N2E,,,_,:,_,;,_,:,Array,[,Array,[,Array,[,String,,,0xA,],,,0B11,],,,0B10111,],),{,},},<EOF>''',101))

    def test_2776(self):
        self.assertTrue(TestLexer.test('''Class k{}Class _TY:__{}Class _:_{}Class _:____p2{}Class F{Constructor (JO:Array [String ,0X5];N9:Array [Int ,02];_:Float ;W:String ){Break ;} }''','''Class,k,{,},Class,_TY,:,__,{,},Class,_,:,_,{,},Class,_,:,____p2,{,},Class,F,{,Constructor,(,JO,:,Array,[,String,,,0X5,],;,N9,:,Array,[,Int,,,02,],;,_,:,Float,;,W,:,String,),{,Break,;,},},<EOF>''',101))

    def test_2777(self):
        self.assertTrue(TestLexer.test('''Class E{Constructor (T_,Q,d__:Array [Array [String ,0b10],46]){} }Class u5:p{}Class J6:f{}Class ep:g{Constructor (H,_,zH:Float ){} }Class _o:_{}''','''Class,E,{,Constructor,(,T_,,,Q,,,d__,:,Array,[,Array,[,String,,,0b10,],,,46,],),{,},},Class,u5,:,p,{,},Class,J6,:,f,{,},Class,ep,:,g,{,Constructor,(,H,,,_,,,zH,:,Float,),{,},},Class,_o,:,_,{,},<EOF>''',101))

    def test_2778(self):
        self.assertTrue(TestLexer.test('''Class _J_5H{Constructor (_,_k:Array [Int ,0XC];E_328YG_17:String ){Val M,U__,_,f4,r_,N,_,_9,_,tZ0_rds25,_:We;Val _:Boolean ;} }''','''Class,_J_5H,{,Constructor,(,_,,,_k,:,Array,[,Int,,,0XC,],;,E_328YG_17,:,String,),{,Val,M,,,U__,,,_,,,f4,,,r_,,,N,,,_,,,_9,,,_,,,tZ0_rds25,,,_,:,We,;,Val,_,:,Boolean,;,},},<EOF>''',101))

    def test_2779(self):
        self.assertTrue(TestLexer.test('''Class _:_R7{}Class b:e8{Val $_8___,$z0c,$1:_7;}Class m0{Var $b:Boolean ;}Class _:__{Val $1,b_6_,$6v,GE2,W,$z_0,$4_3__,_:Boolean ;}''','''Class,_,:,_R7,{,},Class,b,:,e8,{,Val,$_8___,,,$z0c,,,$1,:,_7,;,},Class,m0,{,Var,$b,:,Boolean,;,},Class,_,:,__,{,Val,$1,,,b_6_,,,$6v,,,GE2,,,W,,,$z_0,,,$4_3__,,,_,:,Boolean,;,},<EOF>''',101))

    def test_2780(self):
        self.assertTrue(TestLexer.test('''Class V_:_{Var Vg4Y52,$6,$_:Array [Array [Array [Boolean ,0X4E],023],0xB90];}Class j:_39{Var a___,_:Int ;}Class C_{}''','''Class,V_,:,_,{,Var,Vg4Y52,,,$6,,,$_,:,Array,[,Array,[,Array,[,Boolean,,,0X4E,],,,023,],,,0xB90,],;,},Class,j,:,_39,{,Var,a___,,,_,:,Int,;,},Class,C_,{,},<EOF>''',101))

    def test_2781(self):
        self.assertTrue(TestLexer.test('''Class l9:WG{S15_(Oc5_:Array [Array [Array [Array [Float ,07],0xB],94],94]){} }Class _:la_{Constructor (){}_c(J:_38){} }Class F:O_{Destructor (){}Destructor (){} }''','''Class,l9,:,WG,{,S15_,(,Oc5_,:,Array,[,Array,[,Array,[,Array,[,Float,,,07,],,,0xB,],,,94,],,,94,],),{,},},Class,_,:,la_,{,Constructor,(,),{,},_c,(,J,:,_38,),{,},},Class,F,:,O_,{,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_2782(self):
        self.assertTrue(TestLexer.test('''Class _875{}Class _:_{Constructor (Lj:___;q:Array [Array [Boolean ,56],0b1_1]){Continue ;}Var $_:Array [Array [Array [Array [Array [Array [Float ,0b1000100],02],0B1],56],0x13],56];}Class C_4:_N{}Class _01:_{}''','''Class,_875,{,},Class,_,:,_,{,Constructor,(,Lj,:,___,;,q,:,Array,[,Array,[,Boolean,,,56,],,,0b11,],),{,Continue,;,},Var,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1000100,],,,02,],,,0B1,],,,56,],,,0x13,],,,56,],;,},Class,C_4,:,_N,{,},Class,_01,:,_,{,},<EOF>''',101))

    def test_2783(self):
        self.assertTrue(TestLexer.test('''Class L19:_{Var _,$r__5,n4f3fKs2:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0B1],0x2_0_5_6],0x2_C],05],0XD],57],04],57],0b111000],57],040],57],57],0b1],0XD],0b11],57],040],0X63];}Class _:B{}''','''Class,L19,:,_,{,Var,_,,,$r__5,,,n4f3fKs2,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,0x2056,],,,0x2C,],,,05,],,,0XD,],,,57,],,,04,],,,57,],,,0b111000,],,,57,],,,040,],,,57,],,,57,],,,0b1,],,,0XD,],,,0b11,],,,57,],,,040,],,,0X63,],;,},Class,_,:,B,{,},<EOF>''',101))

    def test_2784(self):
        self.assertTrue(TestLexer.test('''Class _Q:V{}Class _3:_{}Class s:c{}Class _{}Class n6{Var $4B,e,$a75tK,uw7_:Int ;Var _:Array [Array [Array [Array [String ,0B1],0b111010],5],0X6];}''','''Class,_Q,:,V,{,},Class,_3,:,_,{,},Class,s,:,c,{,},Class,_,{,},Class,n6,{,Var,$4B,,,e,,,$a75tK,,,uw7_,:,Int,;,Var,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,0b111010,],,,5,],,,0X6,],;,},<EOF>''',101))

    def test_2785(self):
        self.assertTrue(TestLexer.test('''Class _:mD{$7N(){}Var $PZ,$9:Array [Boolean ,0x50];$7V2(_N7:Array [Float ,0B100110];_,_:Int ){Var W,w2:_;}Constructor (i:Array [Boolean ,060]){} }Class s:_{Val z:Int ;}''','''Class,_,:,mD,{,$7N,(,),{,},Var,$PZ,,,$9,:,Array,[,Boolean,,,0x50,],;,$7V2,(,_N7,:,Array,[,Float,,,0B100110,],;,_,,,_,:,Int,),{,Var,W,,,w2,:,_,;,},Constructor,(,i,:,Array,[,Boolean,,,060,],),{,},},Class,s,:,_,{,Val,z,:,Int,;,},<EOF>''',101))

    def test_2786(self):
        self.assertTrue(TestLexer.test('''Class _u{$3_3(s:Boolean ;_,_,_:Array [Boolean ,0x5B]){}Constructor (){}Val r0:_;}Class W{Var _:Array [Float ,2];}Class K76G:_{}''','''Class,_u,{,$3_3,(,s,:,Boolean,;,_,,,_,,,_,:,Array,[,Boolean,,,0x5B,],),{,},Constructor,(,),{,},Val,r0,:,_,;,},Class,W,{,Var,_,:,Array,[,Float,,,2,],;,},Class,K76G,:,_,{,},<EOF>''',101))

    def test_2787(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _1Rj4__4j{Constructor (Y____,zZ9:Float ;C,xB_,_p1b__,_,q7,Z4,Dd:_v5_){}Var _:Array [Array [Array [String ,013],0X24],013];_5_(W__:_){Val ____:Array [Array [String ,045_0],0b110001];}Constructor (){} }''','''Class,_,{,},Class,_1Rj4__4j,{,Constructor,(,Y____,,,zZ9,:,Float,;,C,,,xB_,,,_p1b__,,,_,,,q7,,,Z4,,,Dd,:,_v5_,),{,},Var,_,:,Array,[,Array,[,Array,[,String,,,013,],,,0X24,],,,013,],;,_5_,(,W__,:,_,),{,Val,____,:,Array,[,Array,[,String,,,0450,],,,0b110001,],;,},Constructor,(,),{,},},<EOF>''',101))

    def test_2788(self):
        self.assertTrue(TestLexer.test('''Class __:g{}Class _:c{Constructor (){Val u6b:Array [Array [Boolean ,0b1_1_10],0B100011]=-Array ().y.v.__9/!!!!v9::$5g__().H_.W()._();}Val $95_7u:Array [Array [Boolean ,0112],3];Val _,_,$_8_:Int ;}''','''Class,__,:,g,{,},Class,_,:,c,{,Constructor,(,),{,Val,u6b,:,Array,[,Array,[,Boolean,,,0b1110,],,,0B100011,],=,-,Array,(,),.,y,.,v,.,__9,/,!,!,!,!,v9,::,$5g__,(,),.,H_,.,W,(,),.,_,(,),;,},Val,$95_7u,:,Array,[,Array,[,Boolean,,,0112,],,,3,],;,Val,_,,,_,,,$_8_,:,Int,;,},<EOF>''',101))

    def test_2789(self):
        self.assertTrue(TestLexer.test('''Class M:kc_8{Val $7:_r_C;$4(){Var __W:_;Continue ;} }Class _:_{}Class p:I{Val $_:Float =---_3b_::$I;Constructor (_,S,_7e,_0_,D,_:Array [Boolean ,8];JD:b3){} }''','''Class,M,:,kc_8,{,Val,$7,:,_r_C,;,$4,(,),{,Var,__W,:,_,;,Continue,;,},},Class,_,:,_,{,},Class,p,:,I,{,Val,$_,:,Float,=,-,-,-,_3b_,::,$I,;,Constructor,(,_,,,S,,,_7e,,,_0_,,,D,,,_,:,Array,[,Boolean,,,8,],;,JD,:,b3,),{,},},<EOF>''',101))

    def test_2790(self):
        self.assertTrue(TestLexer.test('''Class o_{Constructor (_,_W,c_,A:Int ;_:Array [Array [Array [Array [Array [Float ,0x2B],0B1_0],50],0705],0b110011];___w,_,lP:t;N,N,___,S:S){} }Class m{}''','''Class,o_,{,Constructor,(,_,,,_W,,,c_,,,A,:,Int,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x2B,],,,0B10,],,,50,],,,0705,],,,0b110011,],;,___w,,,_,,,lP,:,t,;,N,,,N,,,___,,,S,:,S,),{,},},Class,m,{,},<EOF>''',101))

    def test_2791(self):
        self.assertTrue(TestLexer.test('''Class C66_:_{Val C,$2_,_89_:Array [Array [String ,0x41],0x41];Constructor (_:u0){}Val _z_EZ,t_n,$_,sW:Float ;}Class _8__:_38_Q_{}''','''Class,C66_,:,_,{,Val,C,,,$2_,,,_89_,:,Array,[,Array,[,String,,,0x41,],,,0x41,],;,Constructor,(,_,:,u0,),{,},Val,_z_EZ,,,t_n,,,$_,,,sW,:,Float,;,},Class,_8__,:,_38_Q_,{,},<EOF>''',101))

    def test_2792(self):
        self.assertTrue(TestLexer.test('''Class _028:c_{}Class _1ZL{}Class _9_:k{Var $7,$208,$_,$6,$z_,$65xF:Boolean ;}Class p_2:Ko{Var $W:Array [Array [Array [Array [Array [Int ,20],0XE],16],0XC],0141];}Class _{}''','''Class,_028,:,c_,{,},Class,_1ZL,{,},Class,_9_,:,k,{,Var,$7,,,$208,,,$_,,,$6,,,$z_,,,$65xF,:,Boolean,;,},Class,p_2,:,Ko,{,Var,$W,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,20,],,,0XE,],,,16,],,,0XC,],,,0141,],;,},Class,_,{,},<EOF>''',101))

    def test_2793(self):
        self.assertTrue(TestLexer.test('''Class zf0__x5zk{}Class f_{Var _4,$___b_,$V5,$K_:Array [Array [Array [Int ,0B11],0b1000],31];Destructor (){Return ;}Constructor (){ {Break ;} }Val $5:Float ;}''','''Class,zf0__x5zk,{,},Class,f_,{,Var,_4,,,$___b_,,,$V5,,,$K_,:,Array,[,Array,[,Array,[,Int,,,0B11,],,,0b1000,],,,31,],;,Destructor,(,),{,Return,;,},Constructor,(,),{,{,Break,;,},},Val,$5,:,Float,;,},<EOF>''',101))

    def test_2794(self):
        self.assertTrue(TestLexer.test('''Class _{$_T_(_,c,Y_WF:_8;_6,_,r:b){}Var _,$7,_:Int ;Var $7:Array [Int ,3];E(d,__:Array [Float ,0X7C]){Continue ;} }''','''Class,_,{,$_T_,(,_,,,c,,,Y_WF,:,_8,;,_6,,,_,,,r,:,b,),{,},Var,_,,,$7,,,_,:,Int,;,Var,$7,:,Array,[,Int,,,3,],;,E,(,d,,,__,:,Array,[,Float,,,0X7C,],),{,Continue,;,},},<EOF>''',101))

    def test_2795(self):
        self.assertTrue(TestLexer.test('''Class Y{Var $_5:Array [Array [Array [Boolean ,73],0XA_7],5];Constructor (){Return ;} }Class J{Destructor (){Continue ;} }''','''Class,Y,{,Var,$_5,:,Array,[,Array,[,Array,[,Boolean,,,73,],,,0XA7,],,,5,],;,Constructor,(,),{,Return,;,},},Class,J,{,Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_2796(self):
        self.assertTrue(TestLexer.test('''Class _6:_8{Destructor (){Continue ;}Constructor (){_::$_x();{_::$C7a_();} }$_w(_,_,M,_821,___F:Array [Array [String ,0XA],04_7_266];o:Boolean ;__:__t;M,_n8uS_:_6Q_;_,_:Boolean ;_:String ){} }''','''Class,_6,:,_8,{,Destructor,(,),{,Continue,;,},Constructor,(,),{,_,::,$_x,(,),;,{,_,::,$C7a_,(,),;,},},$_w,(,_,,,_,,,M,,,_821,,,___F,:,Array,[,Array,[,String,,,0XA,],,,047266,],;,o,:,Boolean,;,__,:,__t,;,M,,,_n8uS_,:,_6Q_,;,_,,,_,:,Boolean,;,_,:,String,),{,},},<EOF>''',101))

    def test_2797(self):
        self.assertTrue(TestLexer.test('''Class _{}Class pd_1_{}Class uA_1e_00H{Destructor (){Var __,_:String ;}Constructor (){} }Class i1{Destructor (){} }''','''Class,_,{,},Class,pd_1_,{,},Class,uA_1e_00H,{,Destructor,(,),{,Var,__,,,_,:,String,;,},Constructor,(,),{,},},Class,i1,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2798(self):
        self.assertTrue(TestLexer.test('''Class __{Constructor (t__,Xz,z__In :Array [Int ,0B1100010];b__:Array [Array [Boolean ,05],3_8_9];Q:Float ;h:Array [Int ,0B1]){}$C(){} }''','''Class,__,{,Constructor,(,t__,,,Xz,,,z__In,:,Array,[,Int,,,0B1100010,],;,b__,:,Array,[,Array,[,Boolean,,,05,],,,389,],;,Q,:,Float,;,h,:,Array,[,Int,,,0B1,],),{,},$C,(,),{,},},<EOF>''',101))

    def test_2799(self):
        self.assertTrue(TestLexer.test('''Class _:_4{Destructor (){ {Continue ;Continue ;}{} }Val _:Array [String ,030];}Class DZ{}Class W:c7{}Class _{$_J(_:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0X2E],4],7],01],030],030],4],9],4]){}Constructor (){} }''','''Class,_,:,_4,{,Destructor,(,),{,{,Continue,;,Continue,;,},{,},},Val,_,:,Array,[,String,,,030,],;,},Class,DZ,{,},Class,W,:,c7,{,},Class,_,{,$_J,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X2E,],,,4,],,,7,],,,01,],,,030,],,,030,],,,4,],,,9,],,,4,],),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_2800(self):
        self.assertTrue(TestLexer.test('''Class _{}Class ___:_{Var $_,$_:Array [Int ,6];Val $x:Array [Array [Array [String ,7_63],01],3_230];Constructor (){} }Class M___:i4{}''','''Class,_,{,},Class,___,:,_,{,Var,$_,,,$_,:,Array,[,Int,,,6,],;,Val,$x,:,Array,[,Array,[,Array,[,String,,,763,],,,01,],,,3230,],;,Constructor,(,),{,},},Class,M___,:,i4,{,},<EOF>''',101))

    def test_2801(self):
        self.assertTrue(TestLexer.test('''Class _6:b937{Var $7,$_:Array [Array [Array [String ,0X42],0xF],95];Var v_:Array [String ,7_3_1];Val __,$_Cyj77__3_H:Int ;}Class _:U{Val fH:Boolean ;}''','''Class,_6,:,b937,{,Var,$7,,,$_,:,Array,[,Array,[,Array,[,String,,,0X42,],,,0xF,],,,95,],;,Var,v_,:,Array,[,String,,,731,],;,Val,__,,,$_Cyj77__3_H,:,Int,;,},Class,_,:,U,{,Val,fH,:,Boolean,;,},<EOF>''',101))

    def test_2802(self):
        self.assertTrue(TestLexer.test('''Class _:_6{Constructor (S78:Array [Int ,0x60];t_,_:Boolean ;Y__m:Array [Array [Array [Array [Array [Array [Float ,05],0121],0121],34],0b1000000],90];u0I_,__:p5I;_7,_3_:Array [Array [Array [Array [Boolean ,0121],02],0b1000000],01]){} }''','''Class,_,:,_6,{,Constructor,(,S78,:,Array,[,Int,,,0x60,],;,t_,,,_,:,Boolean,;,Y__m,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,05,],,,0121,],,,0121,],,,34,],,,0b1000000,],,,90,],;,u0I_,,,__,:,p5I,;,_7,,,_3_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0121,],,,02,],,,0b1000000,],,,01,],),{,},},<EOF>''',101))

    def test_2803(self):
        self.assertTrue(TestLexer.test('''Class N:_93{}Class K{Destructor (){} }Class ___{}Class Hj:__{}Class _0:_9{}Class _:_b{}Class _{}Class o{}Class _:_d{}Class g6:a{Constructor (y,_,I,_:_){} }''','''Class,N,:,_93,{,},Class,K,{,Destructor,(,),{,},},Class,___,{,},Class,Hj,:,__,{,},Class,_0,:,_9,{,},Class,_,:,_b,{,},Class,_,{,},Class,o,{,},Class,_,:,_d,{,},Class,g6,:,a,{,Constructor,(,y,,,_,,,I,,,_,:,_,),{,},},<EOF>''',101))

    def test_2804(self):
        self.assertTrue(TestLexer.test('''Class _7{Destructor (){} }Class _{Val __,a7h89,U:Array [Array [Array [Float ,0B100010],0B100010],067];}Class _:p7{}Class AFV:_F{}''','''Class,_7,{,Destructor,(,),{,},},Class,_,{,Val,__,,,a7h89,,,U,:,Array,[,Array,[,Array,[,Float,,,0B100010,],,,0B100010,],,,067,],;,},Class,_,:,p7,{,},Class,AFV,:,_F,{,},<EOF>''',101))

    def test_2805(self):
        self.assertTrue(TestLexer.test('''Class T0__{}Class T_:f{_(_,_,rfn:_;Hc:Array [Boolean ,0b1011101];w_,_,s,_:Array [String ,0X15]){Var _J,V,_,_,_:String ;Continue ;} }Class _{}''','''Class,T0__,{,},Class,T_,:,f,{,_,(,_,,,_,,,rfn,:,_,;,Hc,:,Array,[,Boolean,,,0b1011101,],;,w_,,,_,,,s,,,_,:,Array,[,String,,,0X15,],),{,Var,_J,,,V,,,_,,,_,,,_,:,String,;,Continue,;,},},Class,_,{,},<EOF>''',101))

    def test_2806(self):
        self.assertTrue(TestLexer.test('''Class X_:r{Constructor (L:_6;_O,_:Array [Array [Boolean ,95],0x9B];__3:__7){} }Class _:_{}Class B{}Class u___:______{}''','''Class,X_,:,r,{,Constructor,(,L,:,_6,;,_O,,,_,:,Array,[,Array,[,Boolean,,,95,],,,0x9B,],;,__3,:,__7,),{,},},Class,_,:,_,{,},Class,B,{,},Class,u___,:,______,{,},<EOF>''',101))

    def test_2807(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){}_(x9,_,o:b4;W5,p:L){}_(u1,R_,_:Boolean ;XI_ck:Array [Array [Boolean ,0X5F],0B111101];m:Z;_h:Array [Int ,0X5F];Z,G,_520t_b_,_,_h,_,Z6U,K,zTB,RF,Y8,Oy,w:Boolean ;_0:Array [Array [Array [Int ,014],4],0b1000];_:Boolean ){} }Class _8{}''','''Class,_,{,Destructor,(,),{,},_,(,x9,,,_,,,o,:,b4,;,W5,,,p,:,L,),{,},_,(,u1,,,R_,,,_,:,Boolean,;,XI_ck,:,Array,[,Array,[,Boolean,,,0X5F,],,,0B111101,],;,m,:,Z,;,_h,:,Array,[,Int,,,0X5F,],;,Z,,,G,,,_520t_b_,,,_,,,_h,,,_,,,Z6U,,,K,,,zTB,,,RF,,,Y8,,,Oy,,,w,:,Boolean,;,_0,:,Array,[,Array,[,Array,[,Int,,,014,],,,4,],,,0b1000,],;,_,:,Boolean,),{,},},Class,_8,{,},<EOF>''',101))

    def test_2808(self):
        self.assertTrue(TestLexer.test('''Class q{Constructor (_8,j_,T,j_,_5__,E1d,_:Array [Array [Array [String ,05],0B111100],03];_,R_2,r:b_1Y){}Val $5,$c,$_y_:Array [Float ,0b1];}''','''Class,q,{,Constructor,(,_8,,,j_,,,T,,,j_,,,_5__,,,E1d,,,_,:,Array,[,Array,[,Array,[,String,,,05,],,,0B111100,],,,03,],;,_,,,R_2,,,r,:,b_1Y,),{,},Val,$5,,,$c,,,$_y_,:,Array,[,Float,,,0b1,],;,},<EOF>''',101))

    def test_2809(self):
        self.assertTrue(TestLexer.test('''Class _26U:_v54P_{Constructor (_:_){}Destructor (){} }Class _4X_1O:K{Constructor (_,_b,__4,_,P_,C9,____0,k:_S){}Var _:Int ;}Class _:I{$6wl9(){}Q(){}Val $_P:PF;Destructor (){}Val v,E:String ;}''','''Class,_26U,:,_v54P_,{,Constructor,(,_,:,_,),{,},Destructor,(,),{,},},Class,_4X_1O,:,K,{,Constructor,(,_,,,_b,,,__4,,,_,,,P_,,,C9,,,____0,,,k,:,_S,),{,},Var,_,:,Int,;,},Class,_,:,I,{,$6wl9,(,),{,},Q,(,),{,},Val,$_P,:,PF,;,Destructor,(,),{,},Val,v,,,E,:,String,;,},<EOF>''',101))

    def test_2810(self):
        self.assertTrue(TestLexer.test('''Class _{}Class AF_:_{}Class _:V0{$8(___R,_O__:Array [Float ,5];_:Float ;_Odv__4,_50:_06XF){}Val $n:String ;m(_:___8){} }''','''Class,_,{,},Class,AF_,:,_,{,},Class,_,:,V0,{,$8,(,___R,,,_O__,:,Array,[,Float,,,5,],;,_,:,Float,;,_Odv__4,,,_50,:,_06XF,),{,},Val,$n,:,String,;,m,(,_,:,___8,),{,},},<EOF>''',101))

    def test_2811(self):
        self.assertTrue(TestLexer.test('''Class d___:_6{}Class j8:f{Constructor (Ncj_Z,r,_,_:_8_;_w4__9,V__:Array [Float ,6];_,a:Boolean ){}Var _19_:Array [Array [Array [Boolean ,7_2],0XD],05_4];Val _S_:String ;Destructor (){}Var _,D,C,q9rB_,$fb:E8;Destructor (){Return ;} }''','''Class,d___,:,_6,{,},Class,j8,:,f,{,Constructor,(,Ncj_Z,,,r,,,_,,,_,:,_8_,;,_w4__9,,,V__,:,Array,[,Float,,,6,],;,_,,,a,:,Boolean,),{,},Var,_19_,:,Array,[,Array,[,Array,[,Boolean,,,72,],,,0XD,],,,054,],;,Val,_S_,:,String,;,Destructor,(,),{,},Var,_,,,D,,,C,,,q9rB_,,,$fb,:,E8,;,Destructor,(,),{,Return,;,},},<EOF>''',101))

    def test_2812(self):
        self.assertTrue(TestLexer.test('''Class ct:_{Val $_0__,$8MI:Int ;}Class C:s{r2W(_,c:Array [Array [Array [Array [Boolean ,89],0X46],011],0X46];_,e6:Int ){} }Class w{}''','''Class,ct,:,_,{,Val,$_0__,,,$8MI,:,Int,;,},Class,C,:,s,{,r2W,(,_,,,c,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,89,],,,0X46,],,,011,],,,0X46,],;,_,,,e6,:,Int,),{,},},Class,w,{,},<EOF>''',101))

    def test_2813(self):
        self.assertTrue(TestLexer.test('''Class _:__{}Class j{Constructor (){}_(_8D:Array [Array [Array [Float ,0172],0xC],0X4A];_v_,_4,_8NAa,_qU,_01,_3:x;__:Float ;S:m7h;n,i_G4_,_5_,e3:Array [Array [Array [String ,0B1],84],0b111000];A:Z__;z7_:m__){Break ;{} }}''','''Class,_,:,__,{,},Class,j,{,Constructor,(,),{,},_,(,_8D,:,Array,[,Array,[,Array,[,Float,,,0172,],,,0xC,],,,0X4A,],;,_v_,,,_4,,,_8NAa,,,_qU,,,_01,,,_3,:,x,;,__,:,Float,;,S,:,m7h,;,n,,,i_G4_,,,_5_,,,e3,:,Array,[,Array,[,Array,[,String,,,0B1,],,,84,],,,0b111000,],;,A,:,Z__,;,z7_,:,m__,),{,Break,;,{,},},},<EOF>''',101))

    def test_2814(self):
        self.assertTrue(TestLexer.test('''Class _15_N:Y{Val V:Array [Array [Boolean ,01],0B100000];}Class _:F{Val $2,$1:h;}Class _y{Var $_5,_,_:Array [String ,0b1011111];}Class K{}''','''Class,_15_N,:,Y,{,Val,V,:,Array,[,Array,[,Boolean,,,01,],,,0B100000,],;,},Class,_,:,F,{,Val,$2,,,$1,:,h,;,},Class,_y,{,Var,$_5,,,_,,,_,:,Array,[,String,,,0b1011111,],;,},Class,K,{,},<EOF>''',101))

    def test_2815(self):
        self.assertTrue(TestLexer.test('''Class _{Val k__:String ;}Class e_Zw:A{Destructor (){Continue ;} }Class J1:_3S{}Class __{}Class bVJ1_:_{}Class g__:_{}''','''Class,_,{,Val,k__,:,String,;,},Class,e_Zw,:,A,{,Destructor,(,),{,Continue,;,},},Class,J1,:,_3S,{,},Class,__,{,},Class,bVJ1_,:,_,{,},Class,g__,:,_,{,},<EOF>''',101))

    def test_2816(self):
        self.assertTrue(TestLexer.test('''Class _:_7{Var OCN:Array [Boolean ,0x59];}Class I__4:H{}Class _:A{Destructor (){Return ;O64::$8J();Return ;Continue ;} }''','''Class,_,:,_7,{,Var,OCN,:,Array,[,Boolean,,,0x59,],;,},Class,I__4,:,H,{,},Class,_,:,A,{,Destructor,(,),{,Return,;,O64,::,$8J,(,),;,Return,;,Continue,;,},},<EOF>''',101))

    def test_2817(self):
        self.assertTrue(TestLexer.test('''Class U:Qy7_{Destructor (){} }Class _{Var $3,$_3_,$0,$7:Array [Array [Array [Array [Array [Array [Boolean ,0XF_13],0B10],0b1_1],016],016],0B110000];}''','''Class,U,:,Qy7_,{,Destructor,(,),{,},},Class,_,{,Var,$3,,,$_3_,,,$0,,,$7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0XF13,],,,0B10,],,,0b11,],,,016,],,,016,],,,0B110000,],;,},<EOF>''',101))

    def test_2818(self):
        self.assertTrue(TestLexer.test('''Class __:_{Var $5,B:N;Var w:Array [Array [Array [Int ,0704_4],0124],0X4_E];}Class q_z{Destructor (){}_(_:Array [Float ,0x45];_:dV){} }Class a7:S{}''','''Class,__,:,_,{,Var,$5,,,B,:,N,;,Var,w,:,Array,[,Array,[,Array,[,Int,,,07044,],,,0124,],,,0X4E,],;,},Class,q_z,{,Destructor,(,),{,},_,(,_,:,Array,[,Float,,,0x45,],;,_,:,dV,),{,},},Class,a7,:,S,{,},<EOF>''',101))

    def test_2819(self):
        self.assertTrue(TestLexer.test('''Class _:__m{}Class Q7:z{$4(___Ll,K_i_v_56_,d,W_a5,d:Boolean ;_n,y_,__:Array [Array [Float ,4],0B100_1]){Continue ;}Destructor (){} }''','''Class,_,:,__m,{,},Class,Q7,:,z,{,$4,(,___Ll,,,K_i_v_56_,,,d,,,W_a5,,,d,:,Boolean,;,_n,,,y_,,,__,:,Array,[,Array,[,Float,,,4,],,,0B1001,],),{,Continue,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_2820(self):
        self.assertTrue(TestLexer.test('''Class _{Val $Y,$_:Array [Array [String ,0X5_C09],1];Var $_:_g_;}Class KF:_{Constructor (_,_:Int ;X:Array [String ,0X5A];_:E;y,_,__6,_,u:Int ){Return ;} }''','''Class,_,{,Val,$Y,,,$_,:,Array,[,Array,[,String,,,0X5C09,],,,1,],;,Var,$_,:,_g_,;,},Class,KF,:,_,{,Constructor,(,_,,,_,:,Int,;,X,:,Array,[,String,,,0X5A,],;,_,:,E,;,y,,,_,,,__6,,,_,,,u,:,Int,),{,Return,;,},},<EOF>''',101))

    def test_2821(self):
        self.assertTrue(TestLexer.test('''Class X:_{Constructor (_q:Array [Array [Array [Array [Array [Array [Array [String ,0X18],0b11_1_0],0b11100],04_2],0X18],0X18],05]){} }''','''Class,X,:,_,{,Constructor,(,_q,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X18,],,,0b1110,],,,0b11100,],,,042,],,,0X18,],,,0X18,],,,05,],),{,},},<EOF>''',101))

    def test_2822(self):
        self.assertTrue(TestLexer.test('''Class __:_{Constructor (_0:Array [Array [Float ,0b110011],58];_di,_976__,_:z;Q_,a2,Vg,_25,_,y_:Array [String ,9_8];_7X:Array [Array [Int ,0B1],0B1]){} }Class Pj{Val $o3Zx2D9k:Int ;Constructor (_:Z_;s,z,__o,EN7,_o4_,q_,OE7x7,_,b,_3,_,i2,G_5,e4:Array [Array [Array [Array [Array [Array [Int ,04],58],83_7],0b110011],0xB],0b110011]){} }''','''Class,__,:,_,{,Constructor,(,_0,:,Array,[,Array,[,Float,,,0b110011,],,,58,],;,_di,,,_976__,,,_,:,z,;,Q_,,,a2,,,Vg,,,_25,,,_,,,y_,:,Array,[,String,,,98,],;,_7X,:,Array,[,Array,[,Int,,,0B1,],,,0B1,],),{,},},Class,Pj,{,Val,$o3Zx2D9k,:,Int,;,Constructor,(,_,:,Z_,;,s,,,z,,,__o,,,EN7,,,_o4_,,,q_,,,OE7x7,,,_,,,b,,,_3,,,_,,,i2,,,G_5,,,e4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,04,],,,58,],,,837,],,,0b110011,],,,0xB,],,,0b110011,],),{,},},<EOF>''',101))

    def test_2823(self):
        self.assertTrue(TestLexer.test('''Class _v{Val __:i;}Class tMp__F_{Constructor (_:Float ;_9P:_;_:J;___,_:String ;__:Float ){Continue ;} }Class __P{}''','''Class,_v,{,Val,__,:,i,;,},Class,tMp__F_,{,Constructor,(,_,:,Float,;,_9P,:,_,;,_,:,J,;,___,,,_,:,String,;,__,:,Float,),{,Continue,;,},},Class,__P,{,},<EOF>''',101))

    def test_2824(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{Var $5Y,T5b4_:Array [Array [Array [Float ,0b11111],33],01_4];}Class r0c:_a0{Val $N5Eu,D9H_:Boolean ;}''','''Class,_,{,},Class,_,{,Var,$5Y,,,T5b4_,:,Array,[,Array,[,Array,[,Float,,,0b11111,],,,33,],,,014,],;,},Class,r0c,:,_a0,{,Val,$N5Eu,,,D9H_,:,Boolean,;,},<EOF>''',101))

    def test_2825(self):
        self.assertTrue(TestLexer.test('''Class hg_{Var $_:Array [Array [Array [Float ,0X61],04],0B11];Constructor (H:Array [Array [Array [String ,0b111001],0x30],0110];V:Int ){ {} }}''','''Class,hg_,{,Var,$_,:,Array,[,Array,[,Array,[,Float,,,0X61,],,,04,],,,0B11,],;,Constructor,(,H,:,Array,[,Array,[,Array,[,String,,,0b111001,],,,0x30,],,,0110,],;,V,:,Int,),{,{,},},},<EOF>''',101))

    def test_2826(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class x_:_{}Class _:M{Var _Q:Boolean ;Val $Se5,x,_K_3,_3_9,$__6_:Array [Boolean ,0B1011100];}Class G8_6:_3{}Class B{}Class J_m{}''','''Class,_,:,_,{,},Class,x_,:,_,{,},Class,_,:,M,{,Var,_Q,:,Boolean,;,Val,$Se5,,,x,,,_K_3,,,_3_9,,,$__6_,:,Array,[,Boolean,,,0B1011100,],;,},Class,G8_6,:,_3,{,},Class,B,{,},Class,J_m,{,},<EOF>''',101))

    def test_2827(self):
        self.assertTrue(TestLexer.test('''Class U:_I{Constructor (R_:Int ){Break ;}Destructor (){} }Class a{Val u1SG,H,_7,G6:Array [Float ,0B1_0_111_0];}Class _3:l{}''','''Class,U,:,_I,{,Constructor,(,R_,:,Int,),{,Break,;,},Destructor,(,),{,},},Class,a,{,Val,u1SG,,,H,,,_7,,,G6,:,Array,[,Float,,,0B101110,],;,},Class,_3,:,l,{,},<EOF>''',101))

    def test_2828(self):
        self.assertTrue(TestLexer.test('''Class _7:_2{}Class _:_{}Class _{}Class Uz_:_{$__(__781:Boolean ;_p,Q,_,__f__ic_w:Array [Array [String ,59],0B1011100]){Var __,_Q:Boolean ;} }''','''Class,_7,:,_2,{,},Class,_,:,_,{,},Class,_,{,},Class,Uz_,:,_,{,$__,(,__781,:,Boolean,;,_p,,,Q,,,_,,,__f__ic_w,:,Array,[,Array,[,String,,,59,],,,0B1011100,],),{,Var,__,,,_Q,:,Boolean,;,},},<EOF>''',101))

    def test_2829(self):
        self.assertTrue(TestLexer.test('''Class W_:_{Constructor (P,nN_,_8,_:Array [Array [Boolean ,0141],0B1000];pd,_,v_:Array [Int ,0141];__9o,_12_:Int ){} }''','''Class,W_,:,_,{,Constructor,(,P,,,nN_,,,_8,,,_,:,Array,[,Array,[,Boolean,,,0141,],,,0B1000,],;,pd,,,_,,,v_,:,Array,[,Int,,,0141,],;,__9o,,,_12_,:,Int,),{,},},<EOF>''',101))

    def test_2830(self):
        self.assertTrue(TestLexer.test('''Class W:O{Val d__1_,c,_,_0j,$7S,__,$b,$A_,$K,$k,$4iA0_iM:Array [Array [Array [Array [Array [Float ,0b1010000],0b1],0B1],3],9];Var $e,_:_See;}''','''Class,W,:,O,{,Val,d__1_,,,c,,,_,,,_0j,,,$7S,,,__,,,$b,,,$A_,,,$K,,,$k,,,$4iA0_iM,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1010000,],,,0b1,],,,0B1,],,,3,],,,9,],;,Var,$e,,,_,:,_See,;,},<EOF>''',101))

    def test_2831(self):
        self.assertTrue(TestLexer.test('''Class _se_{$m3Y(){}Val _82_I_,_:String ;Val $t_e,_:_z;Var $Z:Array [Array [Array [Array [Boolean ,06],0B11],2],6];Var $T__1_x_:__;}Class d:V{}''','''Class,_se_,{,$m3Y,(,),{,},Val,_82_I_,,,_,:,String,;,Val,$t_e,,,_,:,_z,;,Var,$Z,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,06,],,,0B11,],,,2,],,,6,],;,Var,$T__1_x_,:,__,;,},Class,d,:,V,{,},<EOF>''',101))

    def test_2832(self):
        self.assertTrue(TestLexer.test('''Class _{i_(_I85_:Array [Array [Array [String ,056],052],5];u:Array [Array [Float ,97],052];_7,R,_:d9){}Val $_,_,$F:Array [Array [Array [Int ,041],052],0B110001];}Class __m:_{}''','''Class,_,{,i_,(,_I85_,:,Array,[,Array,[,Array,[,String,,,056,],,,052,],,,5,],;,u,:,Array,[,Array,[,Float,,,97,],,,052,],;,_7,,,R,,,_,:,d9,),{,},Val,$_,,,_,,,$F,:,Array,[,Array,[,Array,[,Int,,,041,],,,052,],,,0B110001,],;,},Class,__m,:,_,{,},<EOF>''',101))

    def test_2833(self):
        self.assertTrue(TestLexer.test('''Class p_:_{s_4756(a:R;__:Array [Float ,0b1];o__:_;TO___,_v,__Y_zQ,_M:J_;_:Float ;m:Int ;_d6,_:Array [String ,74]){Continue ;Continue ;Return ;} }Class _Tv:I952{}''','''Class,p_,:,_,{,s_4756,(,a,:,R,;,__,:,Array,[,Float,,,0b1,],;,o__,:,_,;,TO___,,,_v,,,__Y_zQ,,,_M,:,J_,;,_,:,Float,;,m,:,Int,;,_d6,,,_,:,Array,[,String,,,74,],),{,Continue,;,Continue,;,Return,;,},},Class,_Tv,:,I952,{,},<EOF>''',101))

    def test_2834(self):
        self.assertTrue(TestLexer.test('''Class _{$0_(_V:Array [Array [Array [Boolean ,067],03_2],0xCE]){}Destructor (){}$s88_(){}Destructor (){}__(){} }''','''Class,_,{,$0_,(,_V,:,Array,[,Array,[,Array,[,Boolean,,,067,],,,032,],,,0xCE,],),{,},Destructor,(,),{,},$s88_,(,),{,},Destructor,(,),{,},__,(,),{,},},<EOF>''',101))

    def test_2835(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){}_6(_:Array [String ,658685]){}Val __:Array [Array [Boolean ,47],01];}Class _:_{}Class _Z_3_:_{Constructor (){} }''','''Class,_,{,Destructor,(,),{,},_6,(,_,:,Array,[,String,,,658685,],),{,},Val,__,:,Array,[,Array,[,Boolean,,,47,],,,01,],;,},Class,_,:,_,{,},Class,_Z_3_,:,_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_2836(self):
        self.assertTrue(TestLexer.test('''Class bT_:_2{Constructor (_,_:Int ;YN_,_:Float ;_87,A2tx,_6:_;_,b4,_:Array [Array [Boolean ,025],025];W,_,Q_,F_,_0:n_;_:e_t_F){} }''','''Class,bT_,:,_2,{,Constructor,(,_,,,_,:,Int,;,YN_,,,_,:,Float,;,_87,,,A2tx,,,_6,:,_,;,_,,,b4,,,_,:,Array,[,Array,[,Boolean,,,025,],,,025,],;,W,,,_,,,Q_,,,F_,,,_0,:,n_,;,_,:,e_t_F,),{,},},<EOF>''',101))

    def test_2837(self):
        self.assertTrue(TestLexer.test('''Class RH{}Class _7:_{Destructor (){}Constructor (_,_U4:Array [Array [Int ,0B1000110],76];U:j0){}Destructor (){Return ;}Constructor (_,j_,hR_:Boolean ;X,l,y,__:Float ;y:D511){} }Class ww:_Q{}''','''Class,RH,{,},Class,_7,:,_,{,Destructor,(,),{,},Constructor,(,_,,,_U4,:,Array,[,Array,[,Int,,,0B1000110,],,,76,],;,U,:,j0,),{,},Destructor,(,),{,Return,;,},Constructor,(,_,,,j_,,,hR_,:,Boolean,;,X,,,l,,,y,,,__,:,Float,;,y,:,D511,),{,},},Class,ww,:,_Q,{,},<EOF>''',101))

    def test_2838(self):
        self.assertTrue(TestLexer.test('''Class _:_S{$_(_,__:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,62],0x4A],62],9],62],4],0x4A],62],62],7_1],0b1001110];Go4:S;_:Array [Array [Boolean ,0x4A],1_9_15]){} }''','''Class,_,:,_S,{,$_,(,_,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,62,],,,0x4A,],,,62,],,,9,],,,62,],,,4,],,,0x4A,],,,62,],,,62,],,,71,],,,0b1001110,],;,Go4,:,S,;,_,:,Array,[,Array,[,Boolean,,,0x4A,],,,1915,],),{,},},<EOF>''',101))

    def test_2839(self):
        self.assertTrue(TestLexer.test('''Class d5_:__{Constructor (){} }Class _{}Class f:_{Var ___Ua__,$__U_3_:Array [Array [Array [Boolean ,0x54],045],045];}Class _{}''','''Class,d5_,:,__,{,Constructor,(,),{,},},Class,_,{,},Class,f,:,_,{,Var,___Ua__,,,$__U_3_,:,Array,[,Array,[,Array,[,Boolean,,,0x54,],,,045,],,,045,],;,},Class,_,{,},<EOF>''',101))

    def test_2840(self):
        self.assertTrue(TestLexer.test('''Class W{Val $__9,O:Boolean ;}Class _{Constructor (M__QZ,bK:Float ;D,_:_){Break ;}B(_4,o5_:Int ;t:Boolean ;D7_,___,d,PL__,G_7_,_,y:String ;_,tx__Mas_p_v,s,_23_,_7:Boolean ;_,_19,_4U:Boolean ;_66d:String ;S_7n:Array [Array [Boolean ,0X5A],0B10_1_1_0];SYp1_:_;__,_I_,Z_,_L:Array [Array [Array [Array [Int ,0xC],050],03],052]){} }''','''Class,W,{,Val,$__9,,,O,:,Boolean,;,},Class,_,{,Constructor,(,M__QZ,,,bK,:,Float,;,D,,,_,:,_,),{,Break,;,},B,(,_4,,,o5_,:,Int,;,t,:,Boolean,;,D7_,,,___,,,d,,,PL__,,,G_7_,,,_,,,y,:,String,;,_,,,tx__Mas_p_v,,,s,,,_23_,,,_7,:,Boolean,;,_,,,_19,,,_4U,:,Boolean,;,_66d,:,String,;,S_7n,:,Array,[,Array,[,Boolean,,,0X5A,],,,0B10110,],;,SYp1_,:,_,;,__,,,_I_,,,Z_,,,_L,:,Array,[,Array,[,Array,[,Array,[,Int,,,0xC,],,,050,],,,03,],,,052,],),{,},},<EOF>''',101))

    def test_2841(self):
        self.assertTrue(TestLexer.test('''Class j3F{Val SX,$_,m_F,$84,$F_,$1:Float ;$L(){} }Class _:G6m{Val $3z,$4Q:Boolean ;Val E,_:Array [Int ,0b1];Destructor (){} }''','''Class,j3F,{,Val,SX,,,$_,,,m_F,,,$84,,,$F_,,,$1,:,Float,;,$L,(,),{,},},Class,_,:,G6m,{,Val,$3z,,,$4Q,:,Boolean,;,Val,E,,,_,:,Array,[,Int,,,0b1,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_2842(self):
        self.assertTrue(TestLexer.test('''Class __{}Class x{}Class _:_{Constructor (l21:Boolean ;K6,b5x_,p7:Float ;_u:Int ;s2G727:_){}Val $3:Array [Array [Float ,0XA0],0x46];}''','''Class,__,{,},Class,x,{,},Class,_,:,_,{,Constructor,(,l21,:,Boolean,;,K6,,,b5x_,,,p7,:,Float,;,_u,:,Int,;,s2G727,:,_,),{,},Val,$3,:,Array,[,Array,[,Float,,,0XA0,],,,0x46,],;,},<EOF>''',101))

    def test_2843(self):
        self.assertTrue(TestLexer.test('''Class _:r{}Class _{}Class N:_{$D(_,_,__,BAV:Array [Int ,0b111010]){}Constructor (_2s,k,f:_){}Val $64,_:String ;Var $X:String ;}Class G98y{}''','''Class,_,:,r,{,},Class,_,{,},Class,N,:,_,{,$D,(,_,,,_,,,__,,,BAV,:,Array,[,Int,,,0b111010,],),{,},Constructor,(,_2s,,,k,,,f,:,_,),{,},Val,$64,,,_,:,String,;,Var,$X,:,String,;,},Class,G98y,{,},<EOF>''',101))

    def test_2844(self):
        self.assertTrue(TestLexer.test('''Class Z:G{}Class _{Var $Mp0e:Int ;Val $40:Array [Array [Array [Array [Array [Array [Array [Float ,0b11100],91],91],067],0xACB],0x63],01];}''','''Class,Z,:,G,{,},Class,_,{,Var,$Mp0e,:,Int,;,Val,$40,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b11100,],,,91,],,,91,],,,067,],,,0xACB,],,,0x63,],,,01,],;,},<EOF>''',101))

    def test_2845(self):
        self.assertTrue(TestLexer.test('''Class _:_{$_3(__,_,E_:_9p;_b___,_LJ,_:Array [String ,032_7]){}Constructor (_:X9aK;w:String ;_,NI:Array [Array [Array [Float ,047],0b1],0x18]){} }Class pO:_XrI0Y{}''','''Class,_,:,_,{,$_3,(,__,,,_,,,E_,:,_9p,;,_b___,,,_LJ,,,_,:,Array,[,String,,,0327,],),{,},Constructor,(,_,:,X9aK,;,w,:,String,;,_,,,NI,:,Array,[,Array,[,Array,[,Float,,,047,],,,0b1,],,,0x18,],),{,},},Class,pO,:,_XrI0Y,{,},<EOF>''',101))

    def test_2846(self):
        self.assertTrue(TestLexer.test('''Class _:_4{Val $_:String ;Var w,___,_,Q_,$_,_:Array [Int ,0B1];}Class s9:O{Val D_,$__,$0:Array [Float ,0XC];Var $6,Ne,o7:_;}''','''Class,_,:,_4,{,Val,$_,:,String,;,Var,w,,,___,,,_,,,Q_,,,$_,,,_,:,Array,[,Int,,,0B1,],;,},Class,s9,:,O,{,Val,D_,,,$__,,,$0,:,Array,[,Float,,,0XC,],;,Var,$6,,,Ne,,,o7,:,_,;,},<EOF>''',101))

    def test_2847(self):
        self.assertTrue(TestLexer.test('''Class c_o8{Constructor (Lp,j_9_:_u;L,_:_A;_,y_p1,_:gS;_QN_:Array [Array [Array [Float ,0x23],24],9];_0__:Float ;_,_,ix:Array [Float ,0xB];Q:Array [Boolean ,0b1001011]){} }Class h3_:_C{}''','''Class,c_o8,{,Constructor,(,Lp,,,j_9_,:,_u,;,L,,,_,:,_A,;,_,,,y_p1,,,_,:,gS,;,_QN_,:,Array,[,Array,[,Array,[,Float,,,0x23,],,,24,],,,9,],;,_0__,:,Float,;,_,,,_,,,ix,:,Array,[,Float,,,0xB,],;,Q,:,Array,[,Boolean,,,0b1001011,],),{,},},Class,h3_,:,_C,{,},<EOF>''',101))

    def test_2848(self):
        self.assertTrue(TestLexer.test('''Class K{Destructor (){}Val $_14,p:_;_(H,___Mp6i_1,h38:Array [Int ,0b110100];_:Float ;_,a,r1,_,t:Float ;r_I:_1){ {} }Constructor (j_F,c0J,D6EG,U_U9:Float ;_,_,k_,_:_F;k,F_:Array [String ,0B1];_1,_,_,c:_z;_41:_60_;j:Array [Array [Int ,0X676_6],0xC]){} }Class I:_{Destructor (){Continue ;Var H__,N_3,_51D:_;Continue ;{} }X(){}Destructor (){} }''','''Class,K,{,Destructor,(,),{,},Val,$_14,,,p,:,_,;,_,(,H,,,___Mp6i_1,,,h38,:,Array,[,Int,,,0b110100,],;,_,:,Float,;,_,,,a,,,r1,,,_,,,t,:,Float,;,r_I,:,_1,),{,{,},},Constructor,(,j_F,,,c0J,,,D6EG,,,U_U9,:,Float,;,_,,,_,,,k_,,,_,:,_F,;,k,,,F_,:,Array,[,String,,,0B1,],;,_1,,,_,,,_,,,c,:,_z,;,_41,:,_60_,;,j,:,Array,[,Array,[,Int,,,0X6766,],,,0xC,],),{,},},Class,I,:,_,{,Destructor,(,),{,Continue,;,Var,H__,,,N_3,,,_51D,:,_,;,Continue,;,{,},},X,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_2849(self):
        self.assertTrue(TestLexer.test('''Class _:Rc948{Constructor (_,_:Boolean ;D:Boolean ;j,__z9,_v,EX3,_:_){}Destructor (){}Var _1Ym,$E:Array [Array [Array [Boolean ,06_1_4],0b110111],3];}Class iq{}Class _X:f{Constructor (_,i:u;_L:Array [String ,0b110111];U,B,G__:Array [Int ,0770_31];Mjwj:_;_:Array [Array [Array [Float ,05],06],9_3_7_2]){} }''','''Class,_,:,Rc948,{,Constructor,(,_,,,_,:,Boolean,;,D,:,Boolean,;,j,,,__z9,,,_v,,,EX3,,,_,:,_,),{,},Destructor,(,),{,},Var,_1Ym,,,$E,:,Array,[,Array,[,Array,[,Boolean,,,0614,],,,0b110111,],,,3,],;,},Class,iq,{,},Class,_X,:,f,{,Constructor,(,_,,,i,:,u,;,_L,:,Array,[,String,,,0b110111,],;,U,,,B,,,G__,:,Array,[,Int,,,077031,],;,Mjwj,:,_,;,_,:,Array,[,Array,[,Array,[,Float,,,05,],,,06,],,,9372,],),{,},},<EOF>''',101))

    def test_2850(self):
        self.assertTrue(TestLexer.test('''Class Ot{$352(uv7_3:Array [String ,0X5];__,o:Array [Array [Int ,0x2],0B1];_:Array [Array [Array [Int ,071_3_50],0b111010],0x10];_:EO_;S,_,K,oS_:Array [Float ,04]){} }Class _{Var $r,$_,_e5,_,_:d8;Destructor (){} }''','''Class,Ot,{,$352,(,uv7_3,:,Array,[,String,,,0X5,],;,__,,,o,:,Array,[,Array,[,Int,,,0x2,],,,0B1,],;,_,:,Array,[,Array,[,Array,[,Int,,,071350,],,,0b111010,],,,0x10,],;,_,:,EO_,;,S,,,_,,,K,,,oS_,:,Array,[,Float,,,04,],),{,},},Class,_,{,Var,$r,,,$_,,,_e5,,,_,,,_,:,d8,;,Destructor,(,),{,},},<EOF>''',101))

    def test_2851(self):
        self.assertTrue(TestLexer.test('''Class __d:_{Constructor (_,_:String ;W_,E,_,__,k54k8:Array [Boolean ,0B11_1];W_9K:Int ;_:Boolean ;_t,_,t,Y:Array [Array [Array [Boolean ,70],70],0X4_2]){} }''','''Class,__d,:,_,{,Constructor,(,_,,,_,:,String,;,W_,,,E,,,_,,,__,,,k54k8,:,Array,[,Boolean,,,0B111,],;,W_9K,:,Int,;,_,:,Boolean,;,_t,,,_,,,t,,,Y,:,Array,[,Array,[,Array,[,Boolean,,,70,],,,70,],,,0X42,],),{,},},<EOF>''',101))

    def test_2852(self):
        self.assertTrue(TestLexer.test('''Class UB_:c{Constructor (){}Var _,_I:K;Destructor (){} }Class Tup{}Class M{}Class b:R_{Constructor (R,_5:k_;_,__S:Int ){} }''','''Class,UB_,:,c,{,Constructor,(,),{,},Var,_,,,_I,:,K,;,Destructor,(,),{,},},Class,Tup,{,},Class,M,{,},Class,b,:,R_,{,Constructor,(,R,,,_5,:,k_,;,_,,,__S,:,Int,),{,},},<EOF>''',101))

    def test_2853(self):
        self.assertTrue(TestLexer.test('''Class _:L{}Class _T:_{}Class M:OPbU{Constructor (B_:Float ;_,R,Z9:Array [String ,0B10_0];b,_:String ){} }Class F:jJ_{}''','''Class,_,:,L,{,},Class,_T,:,_,{,},Class,M,:,OPbU,{,Constructor,(,B_,:,Float,;,_,,,R,,,Z9,:,Array,[,String,,,0B100,],;,b,,,_,:,String,),{,},},Class,F,:,jJ_,{,},<EOF>''',101))

    def test_2854(self):
        self.assertTrue(TestLexer.test('''Class _:_{sx(){Return ;{} }Val $_aE,f9,$_:Array [Float ,0115];Val ___:Array [Array [Array [Boolean ,0b1_0_0_1],0115],0115];}Class K{}''','''Class,_,:,_,{,sx,(,),{,Return,;,{,},},Val,$_aE,,,f9,,,$_,:,Array,[,Float,,,0115,],;,Val,___,:,Array,[,Array,[,Array,[,Boolean,,,0b1001,],,,0115,],,,0115,],;,},Class,K,{,},<EOF>''',101))

    def test_2855(self):
        self.assertTrue(TestLexer.test('''Class j{Val $8:Array [Array [Array [Array [Float ,05_7_5],8],0X4],0B1100000];Var $I_,$L9h,$5:Array [Array [Array [Float ,0b1000011],0B1],0x41];}''','''Class,j,{,Val,$8,:,Array,[,Array,[,Array,[,Array,[,Float,,,0575,],,,8,],,,0X4,],,,0B1100000,],;,Var,$I_,,,$L9h,,,$5,:,Array,[,Array,[,Array,[,Float,,,0b1000011,],,,0B1,],,,0x41,],;,},<EOF>''',101))

    def test_2856(self):
        self.assertTrue(TestLexer.test('''Class G67{__(){ {} }$d(C_F__:Array [Array [Array [Float ,40],0b1],63];k,_w:String ){}Constructor (b_:Float ){Val _:Float ;} }Class m{}''','''Class,G67,{,__,(,),{,{,},},$d,(,C_F__,:,Array,[,Array,[,Array,[,Float,,,40,],,,0b1,],,,63,],;,k,,,_w,:,String,),{,},Constructor,(,b_,:,Float,),{,Val,_,:,Float,;,},},Class,m,{,},<EOF>''',101))

    def test_2857(self):
        self.assertTrue(TestLexer.test('''Class _{Var $E,$7,__:Array [Array [Boolean ,0144],0b100];$3_rk7_8O(_,_,u:Float ){Val U0__:Boolean ;} }Class wh:K86_{Var ae,$47:Array [Int ,60];}''','''Class,_,{,Var,$E,,,$7,,,__,:,Array,[,Array,[,Boolean,,,0144,],,,0b100,],;,$3_rk7_8O,(,_,,,_,,,u,:,Float,),{,Val,U0__,:,Boolean,;,},},Class,wh,:,K86_,{,Var,ae,,,$47,:,Array,[,Int,,,60,],;,},<EOF>''',101))

    def test_2858(self):
        self.assertTrue(TestLexer.test('''Class _2{_(_:Array [Array [Array [Array [Array [Array [String ,02],88],07],88],0b111_11_0],0xF4_2];J_,_,C__,_,_8,_:B_;_n:Array [Array [Float ,3_324],0b1]){}sH(u:V4){Continue ;}Constructor (_:Int ){}Val _t:Array [Array [Boolean ,88],01];}''','''Class,_2,{,_,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,02,],,,88,],,,07,],,,88,],,,0b111110,],,,0xF42,],;,J_,,,_,,,C__,,,_,,,_8,,,_,:,B_,;,_n,:,Array,[,Array,[,Float,,,3324,],,,0b1,],),{,},sH,(,u,:,V4,),{,Continue,;,},Constructor,(,_,:,Int,),{,},Val,_t,:,Array,[,Array,[,Boolean,,,88,],,,01,],;,},<EOF>''',101))

    def test_2859(self):
        self.assertTrue(TestLexer.test('''Class _n_Z{Val y:Array [Array [Boolean ,0x42],31];Constructor (S57,Y_,kr,_,b,J1:Array [Boolean ,021];_:String ;H3:Int ){} }Class __:_66{_(h:Array [Boolean ,021]){} }''','''Class,_n_Z,{,Val,y,:,Array,[,Array,[,Boolean,,,0x42,],,,31,],;,Constructor,(,S57,,,Y_,,,kr,,,_,,,b,,,J1,:,Array,[,Boolean,,,021,],;,_,:,String,;,H3,:,Int,),{,},},Class,__,:,_66,{,_,(,h,:,Array,[,Boolean,,,021,],),{,},},<EOF>''',101))

    def test_2860(self):
        self.assertTrue(TestLexer.test('''Class _rd{}Class x_0:_{Constructor (){}$6Z(){}i(M,B,_:Array [Array [Array [String ,23],0b1],23];K4F11,__24,L:_E){} }''','''Class,_rd,{,},Class,x_0,:,_,{,Constructor,(,),{,},$6Z,(,),{,},i,(,M,,,B,,,_,:,Array,[,Array,[,Array,[,String,,,23,],,,0b1,],,,23,],;,K4F11,,,__24,,,L,:,_E,),{,},},<EOF>''',101))

    def test_2861(self):
        self.assertTrue(TestLexer.test('''Class _:___{Constructor (M_,_11p6,b8,B,L____7:Array [Array [Array [Int ,90],075],0x39];_y:Boolean ;i_,_5T4,_2:Array [Array [String ,0B111001],0B1]){} }''','''Class,_,:,___,{,Constructor,(,M_,,,_11p6,,,b8,,,B,,,L____7,:,Array,[,Array,[,Array,[,Int,,,90,],,,075,],,,0x39,],;,_y,:,Boolean,;,i_,,,_5T4,,,_2,:,Array,[,Array,[,String,,,0B111001,],,,0B1,],),{,},},<EOF>''',101))

    def test_2862(self):
        self.assertTrue(TestLexer.test('''Class X5_m4:__1_97z{Constructor (u:Array [Float ,6]){}Val $1:Array [Array [Array [String ,1],0b1],04];Val j:String ;}Class _9G:_{}Class C0__{}''','''Class,X5_m4,:,__1_97z,{,Constructor,(,u,:,Array,[,Float,,,6,],),{,},Val,$1,:,Array,[,Array,[,Array,[,String,,,1,],,,0b1,],,,04,],;,Val,j,:,String,;,},Class,_9G,:,_,{,},Class,C0__,{,},<EOF>''',101))

    def test_2863(self):
        self.assertTrue(TestLexer.test('''Class J3{Constructor (J,_,xO_,_,__6p9_D5:String ;iJXb5_,d9,R,t:String ){}Val _1V_7,$bn_,pR7,_u6:Int ;Constructor (){} }Class A{}''','''Class,J3,{,Constructor,(,J,,,_,,,xO_,,,_,,,__6p9_D5,:,String,;,iJXb5_,,,d9,,,R,,,t,:,String,),{,},Val,_1V_7,,,$bn_,,,pR7,,,_u6,:,Int,;,Constructor,(,),{,},},Class,A,{,},<EOF>''',101))

    def test_2864(self):
        self.assertTrue(TestLexer.test('''Class g8_:_1tj{Var $4:Array [Array [Array [Float ,0X1],0XE],0xB_6_EA];Constructor (w_,J:Array [String ,0115]){} }''','''Class,g8_,:,_1tj,{,Var,$4,:,Array,[,Array,[,Array,[,Float,,,0X1,],,,0XE,],,,0xB6EA,],;,Constructor,(,w_,,,J,:,Array,[,String,,,0115,],),{,},},<EOF>''',101))

    def test_2865(self):
        self.assertTrue(TestLexer.test('''Class _{_W__9(r:__;_,_,I:Array [Boolean ,4_1];XJ_,Zh,__:_;_I:Float ;_,__,_,Y,A:_k){} }Class _014:_{}Class B:I{}''','''Class,_,{,_W__9,(,r,:,__,;,_,,,_,,,I,:,Array,[,Boolean,,,41,],;,XJ_,,,Zh,,,__,:,_,;,_I,:,Float,;,_,,,__,,,_,,,Y,,,A,:,_k,),{,},},Class,_014,:,_,{,},Class,B,:,I,{,},<EOF>''',101))

    def test_2866(self):
        self.assertTrue(TestLexer.test('''Class B_7:NV{$_4F_(r_C:J1;B_N_E,Ee,W_,__Q1:Boolean ;M,__:Float ;L,__,D1,__:Array [Float ,0b1_0];_,l:_;_D,q_,aC:Array [Array [Array [String ,060],0x2],037];x5:C;__:Int ){} }Class _:m_{}Class v:g{}''','''Class,B_7,:,NV,{,$_4F_,(,r_C,:,J1,;,B_N_E,,,Ee,,,W_,,,__Q1,:,Boolean,;,M,,,__,:,Float,;,L,,,__,,,D1,,,__,:,Array,[,Float,,,0b10,],;,_,,,l,:,_,;,_D,,,q_,,,aC,:,Array,[,Array,[,Array,[,String,,,060,],,,0x2,],,,037,],;,x5,:,C,;,__,:,Int,),{,},},Class,_,:,m_,{,},Class,v,:,g,{,},<EOF>''',101))

    def test_2867(self):
        self.assertTrue(TestLexer.test('''Class Ix{Constructor (_c9,F5,J:Boolean ;_u7_n,_t0_,V_K6m:Float ;w:Int ){Continue ;}Destructor (){}Val $24__:Int ;Val _19,$o,$9G,$53c:Array [Array [Array [Int ,82],0X5_8_8],0B111111];}''','''Class,Ix,{,Constructor,(,_c9,,,F5,,,J,:,Boolean,;,_u7_n,,,_t0_,,,V_K6m,:,Float,;,w,:,Int,),{,Continue,;,},Destructor,(,),{,},Val,$24__,:,Int,;,Val,_19,,,$o,,,$9G,,,$53c,:,Array,[,Array,[,Array,[,Int,,,82,],,,0X588,],,,0B111111,],;,},<EOF>''',101))

    def test_2868(self):
        self.assertTrue(TestLexer.test('''Class A__g_:Aud_{Var f,J,rV:Array [Array [Array [Float ,0X37],0B1],8];}Class Ps5{Destructor (){Break ;}Q_(p,_j:Array [Int ,0b1];j,___:String ){}$l(){} }Class _3{Constructor (N3:Array [Array [Array [Array [Int ,0B1],100],7],0X4]){}_(){} }''','''Class,A__g_,:,Aud_,{,Var,f,,,J,,,rV,:,Array,[,Array,[,Array,[,Float,,,0X37,],,,0B1,],,,8,],;,},Class,Ps5,{,Destructor,(,),{,Break,;,},Q_,(,p,,,_j,:,Array,[,Int,,,0b1,],;,j,,,___,:,String,),{,},$l,(,),{,},},Class,_3,{,Constructor,(,N3,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,100,],,,7,],,,0X4,],),{,},_,(,),{,},},<EOF>''',101))

    def test_2869(self):
        self.assertTrue(TestLexer.test('''Class f:_s7_{Constructor (_81J55u:_){}Constructor (__,_C_P6,g_0,f:Array [String ,0b1];Vg3,_,_i,_:_4f){} }Class _{}''','''Class,f,:,_s7_,{,Constructor,(,_81J55u,:,_,),{,},Constructor,(,__,,,_C_P6,,,g_0,,,f,:,Array,[,String,,,0b1,],;,Vg3,,,_,,,_i,,,_,:,_4f,),{,},},Class,_,{,},<EOF>''',101))

    def test_2870(self):
        self.assertTrue(TestLexer.test('''Class o5c{}Class C_0:_0F{Var $U2_611:Array [Array [Array [String ,0X4F],03],0X4F];}Class ___{Val _1V,f:Array [Array [Array [Float ,79],024],0xF_AE_F];}Class y2:_{Val $_1,l_:Array [Array [Float ,0X4F],0126];Var _Y:Float ;}Class g{}''','''Class,o5c,{,},Class,C_0,:,_0F,{,Var,$U2_611,:,Array,[,Array,[,Array,[,String,,,0X4F,],,,03,],,,0X4F,],;,},Class,___,{,Val,_1V,,,f,:,Array,[,Array,[,Array,[,Float,,,79,],,,024,],,,0xFAEF,],;,},Class,y2,:,_,{,Val,$_1,,,l_,:,Array,[,Array,[,Float,,,0X4F,],,,0126,],;,Var,_Y,:,Float,;,},Class,g,{,},<EOF>''',101))

    def test_2871(self):
        self.assertTrue(TestLexer.test('''Class _B_:V{}Class _:_f{Constructor (_:String ){}Destructor (){} }Class V{}Class _:Ay{}Class W:z{Constructor (_,Hh:String ){} }Class T:_Q{Destructor (){} }''','''Class,_B_,:,V,{,},Class,_,:,_f,{,Constructor,(,_,:,String,),{,},Destructor,(,),{,},},Class,V,{,},Class,_,:,Ay,{,},Class,W,:,z,{,Constructor,(,_,,,Hh,:,String,),{,},},Class,T,:,_Q,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2872(self):
        self.assertTrue(TestLexer.test('''Class _:B{Val $C28L4,h,__fG,__:Int ;Var gP9,$_,_:Array [Array [Array [Int ,01_7_4_4_1],0B1011011],02];Var $o:Boolean ;}Class _X9:m7t{}Class U2{}Class _{Destructor (){} }''','''Class,_,:,B,{,Val,$C28L4,,,h,,,__fG,,,__,:,Int,;,Var,gP9,,,$_,,,_,:,Array,[,Array,[,Array,[,Int,,,017441,],,,0B1011011,],,,02,],;,Var,$o,:,Boolean,;,},Class,_X9,:,m7t,{,},Class,U2,{,},Class,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2873(self):
        self.assertTrue(TestLexer.test('''Class m:_{}Class I5dc{Var ____,$6,_:Array [Int ,04];Var _0:String ;Constructor (__,w,Kr,_:M83Z;_:Array [String ,0B110110]){Break ;} }''','''Class,m,:,_,{,},Class,I5dc,{,Var,____,,,$6,,,_,:,Array,[,Int,,,04,],;,Var,_0,:,String,;,Constructor,(,__,,,w,,,Kr,,,_,:,M83Z,;,_,:,Array,[,String,,,0B110110,],),{,Break,;,},},<EOF>''',101))

    def test_2874(self):
        self.assertTrue(TestLexer.test('''Class _:_D{Constructor (S:Boolean ;Q,_4_0:Array [Int ,2]){Break ;Break ;} }Class K_7bH_:_{Destructor (){} }Class __3{}Class __y:U{}Class _:__{}''','''Class,_,:,_D,{,Constructor,(,S,:,Boolean,;,Q,,,_4_0,:,Array,[,Int,,,2,],),{,Break,;,Break,;,},},Class,K_7bH_,:,_,{,Destructor,(,),{,},},Class,__3,{,},Class,__y,:,U,{,},Class,_,:,__,{,},<EOF>''',101))

    def test_2875(self):
        self.assertTrue(TestLexer.test('''Class K7_:_{_0(_O,I7,l,ks,t8fa5q:Int ){Var h,_8_7,F,_ta2I59:Array [Boolean ,044];}Constructor (p_:Nqc;f4u,_:Int ;y_,_x9X,Q8,w_:Array [Float ,02]){} }Class q{$_L(_:_3;__0V_:_;Yz__j6R,O:Float ){}Var $5_Q:Array [String ,0x8];}Class _S:_{_9(){} }''','''Class,K7_,:,_,{,_0,(,_O,,,I7,,,l,,,ks,,,t8fa5q,:,Int,),{,Var,h,,,_8_7,,,F,,,_ta2I59,:,Array,[,Boolean,,,044,],;,},Constructor,(,p_,:,Nqc,;,f4u,,,_,:,Int,;,y_,,,_x9X,,,Q8,,,w_,:,Array,[,Float,,,02,],),{,},},Class,q,{,$_L,(,_,:,_3,;,__0V_,:,_,;,Yz__j6R,,,O,:,Float,),{,},Var,$5_Q,:,Array,[,String,,,0x8,],;,},Class,_S,:,_,{,_9,(,),{,},},<EOF>''',101))

    def test_2876(self):
        self.assertTrue(TestLexer.test('''Class _p0:avX{}Class J{}Class T:B{Destructor (){}$A(D:Array [Float ,0x21];_2,ao4,_,_N:Array [Array [Int ,06_7],0b101100];_9T_9:Float ;q_:Array [Float ,7];q,S,__2,Mo:_){} }Class _{Destructor (){ {Continue ;} }}''','''Class,_p0,:,avX,{,},Class,J,{,},Class,T,:,B,{,Destructor,(,),{,},$A,(,D,:,Array,[,Float,,,0x21,],;,_2,,,ao4,,,_,,,_N,:,Array,[,Array,[,Int,,,067,],,,0b101100,],;,_9T_9,:,Float,;,q_,:,Array,[,Float,,,7,],;,q,,,S,,,__2,,,Mo,:,_,),{,},},Class,_,{,Destructor,(,),{,{,Continue,;,},},},<EOF>''',101))

    def test_2877(self):
        self.assertTrue(TestLexer.test('''Class f__:n{}Class _{Val D_:_;}Class __:_{Constructor (){}Val $3:Array [Array [Array [Array [Array [Float ,0140],0140],8],0xE],0X81_4_06_0A];}Class a:H{}''','''Class,f__,:,n,{,},Class,_,{,Val,D_,:,_,;,},Class,__,:,_,{,Constructor,(,),{,},Val,$3,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0140,],,,0140,],,,8,],,,0xE,],,,0X814060A,],;,},Class,a,:,H,{,},<EOF>''',101))

    def test_2878(self):
        self.assertTrue(TestLexer.test('''Class _:I{Constructor (g,_:Int ;_r,_:Array [Float ,0x47];z4:Array [Array [Array [Float ,031],0B1_1_01],031]){} }Class _9:_{Var $A,___,_1_2t:j_;}''','''Class,_,:,I,{,Constructor,(,g,,,_,:,Int,;,_r,,,_,:,Array,[,Float,,,0x47,],;,z4,:,Array,[,Array,[,Array,[,Float,,,031,],,,0B1101,],,,031,],),{,},},Class,_9,:,_,{,Var,$A,,,___,,,_1_2t,:,j_,;,},<EOF>''',101))

    def test_2879(self):
        self.assertTrue(TestLexer.test('''Class a:t{Destructor (){Val oW,Q:Array [String ,0B110011];}Constructor (){}Destructor (){}Destructor (){ {}Continue ;} }Class __Yie_{}''','''Class,a,:,t,{,Destructor,(,),{,Val,oW,,,Q,:,Array,[,String,,,0B110011,],;,},Constructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,{,},Continue,;,},},Class,__Yie_,{,},<EOF>''',101))

    def test_2880(self):
        self.assertTrue(TestLexer.test('''Class p2:_{Val $3_:_;}Class _:f{Val $sL_,$_Z_:t7l;Var $p:Array [Int ,051];Destructor (){}Val N:Array [Array [Array [String ,0X3_38],0B1_11_0],0X2D];}''','''Class,p2,:,_,{,Val,$3_,:,_,;,},Class,_,:,f,{,Val,$sL_,,,$_Z_,:,t7l,;,Var,$p,:,Array,[,Int,,,051,],;,Destructor,(,),{,},Val,N,:,Array,[,Array,[,Array,[,String,,,0X338,],,,0B1110,],,,0X2D,],;,},<EOF>''',101))

    def test_2881(self):
        self.assertTrue(TestLexer.test('''Class R74{}Class _97_7{Constructor (_1q:_E;_aZn:Array [Boolean ,0x3];F:Float ;_:_;_:Array [Float ,9];i:Float ;GeB:Float ){} }''','''Class,R74,{,},Class,_97_7,{,Constructor,(,_1q,:,_E,;,_aZn,:,Array,[,Boolean,,,0x3,],;,F,:,Float,;,_,:,_,;,_,:,Array,[,Float,,,9,],;,i,:,Float,;,GeB,:,Float,),{,},},<EOF>''',101))

    def test_2882(self):
        self.assertTrue(TestLexer.test('''Class C{Constructor (p,_,__,F3:r_7Q_;L:Array [Array [Array [Array [Float ,0x43],0b1],06_4],0106];__:_;___:Boolean ;B_1:Array [Int ,0106]){}Var q:Array [Boolean ,0106];Constructor (__:u;f,_,y,__,__,H1:Int ){}W0h(){_::$_();}Val $85_,T,$_:Int ;}Class _{}''','''Class,C,{,Constructor,(,p,,,_,,,__,,,F3,:,r_7Q_,;,L,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x43,],,,0b1,],,,064,],,,0106,],;,__,:,_,;,___,:,Boolean,;,B_1,:,Array,[,Int,,,0106,],),{,},Var,q,:,Array,[,Boolean,,,0106,],;,Constructor,(,__,:,u,;,f,,,_,,,y,,,__,,,__,,,H1,:,Int,),{,},W0h,(,),{,_,::,$_,(,),;,},Val,$85_,,,T,,,$_,:,Int,;,},Class,_,{,},<EOF>''',101))

    def test_2883(self):
        self.assertTrue(TestLexer.test('''Class O{Var _:Array [Array [Array [Array [Float ,69],0X20],0B1],052];Val $X,X:q22g78;Constructor (r1,K:Array [Boolean ,36];I:Array [Float ,0x5B]){} }''','''Class,O,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,69,],,,0X20,],,,0B1,],,,052,],;,Val,$X,,,X,:,q22g78,;,Constructor,(,r1,,,K,:,Array,[,Boolean,,,36,],;,I,:,Array,[,Float,,,0x5B,],),{,},},<EOF>''',101))

    def test_2884(self):
        self.assertTrue(TestLexer.test('''Class E{Val h,$n,$_,$_,$3:Array [Array [Array [Array [Array [Array [Boolean ,022],0x1],042_1],0b1_1_0_11_1_0],022],0b1001000];}''','''Class,E,{,Val,h,,,$n,,,$_,,,$_,,,$3,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,022,],,,0x1,],,,0421,],,,0b1101110,],,,022,],,,0b1001000,],;,},<EOF>''',101))

    def test_2885(self):
        self.assertTrue(TestLexer.test('''Class _1z:Co{$_(z4:Array [Array [Array [Array [Array [Array [Array [String ,41],75],0b1000101],75],06],07],0b111]){}Constructor (){}Val $4_,$6:String ;}Class Iw:_cM{Constructor (){Return ;} }''','''Class,_1z,:,Co,{,$_,(,z4,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,41,],,,75,],,,0b1000101,],,,75,],,,06,],,,07,],,,0b111,],),{,},Constructor,(,),{,},Val,$4_,,,$6,:,String,;,},Class,Iw,:,_cM,{,Constructor,(,),{,Return,;,},},<EOF>''',101))

    def test_2886(self):
        self.assertTrue(TestLexer.test('''Class A0:H2{Var _,_96,$_:Array [Array [String ,0XFB1],3];}Class _:ZQ{}Class W:_{Constructor (){} }Class y7:_x{}''','''Class,A0,:,H2,{,Var,_,,,_96,,,$_,:,Array,[,Array,[,String,,,0XFB1,],,,3,],;,},Class,_,:,ZQ,{,},Class,W,:,_,{,Constructor,(,),{,},},Class,y7,:,_x,{,},<EOF>''',101))

    def test_2887(self):
        self.assertTrue(TestLexer.test('''Class x_{}Class _:_{Destructor (){} }Class S{_(Ug:Int ;w:Boolean ;u,__:Boolean ;q,d6_,P2:Int ;_w:Float ){Break ;} }''','''Class,x_,{,},Class,_,:,_,{,Destructor,(,),{,},},Class,S,{,_,(,Ug,:,Int,;,w,:,Boolean,;,u,,,__,:,Boolean,;,q,,,d6_,,,P2,:,Int,;,_w,:,Float,),{,Break,;,},},<EOF>''',101))

    def test_2888(self):
        self.assertTrue(TestLexer.test('''Class P:__{__(L_,__,I:_;u,w,_7,m__:Array [Boolean ,0XDF6];g2j:Array [Array [Array [Array [Array [String ,0b11000],0X3A],0X3A],0x9F_0_86_7],0xF]){Var y:Array [Float ,036444];Continue ;} }''','''Class,P,:,__,{,__,(,L_,,,__,,,I,:,_,;,u,,,w,,,_7,,,m__,:,Array,[,Boolean,,,0XDF6,],;,g2j,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b11000,],,,0X3A,],,,0X3A,],,,0x9F0867,],,,0xF,],),{,Var,y,:,Array,[,Float,,,036444,],;,Continue,;,},},<EOF>''',101))

    def test_2889(self):
        self.assertTrue(TestLexer.test('''Class _K__:tg_{Val q_:Array [Float ,0B1011011];}Class __:_{Val _Y,$3I,$_:Jf;Constructor (x,H_,_,_:String ;__,l_,__,h,j,b2z_,_6,_:Array [Array [Array [Array [Array [Array [Array [String ,39],0XD],0101],0x9],39],0b10],0XD];__,_,_v:String ;_e,__j,h:Array [Array [Array [Array [Int ,0b1100],0101],39],0x41];e,_,_:Int ;_QF,_:_;_,Q:Array [Array [Float ,39],0101]){} }Class _1Um_:_{Constructor (K:Boolean ){Break ;}Destructor (){} }''','''Class,_K__,:,tg_,{,Val,q_,:,Array,[,Float,,,0B1011011,],;,},Class,__,:,_,{,Val,_Y,,,$3I,,,$_,:,Jf,;,Constructor,(,x,,,H_,,,_,,,_,:,String,;,__,,,l_,,,__,,,h,,,j,,,b2z_,,,_6,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,39,],,,0XD,],,,0101,],,,0x9,],,,39,],,,0b10,],,,0XD,],;,__,,,_,,,_v,:,String,;,_e,,,__j,,,h,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1100,],,,0101,],,,39,],,,0x41,],;,e,,,_,,,_,:,Int,;,_QF,,,_,:,_,;,_,,,Q,:,Array,[,Array,[,Float,,,39,],,,0101,],),{,},},Class,_1Um_,:,_,{,Constructor,(,K,:,Boolean,),{,Break,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_2890(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (_,_wx:Array [String ,0105];_u07H_,p_,f_:__7){} }Class _:_u0{Constructor (_,QS:A_m8__){ {} }}Class gO:E{}''','''Class,_,:,_,{,Constructor,(,_,,,_wx,:,Array,[,String,,,0105,],;,_u07H_,,,p_,,,f_,:,__7,),{,},},Class,_,:,_u0,{,Constructor,(,_,,,QS,:,A_m8__,),{,{,},},},Class,gO,:,E,{,},<EOF>''',101))

    def test_2891(self):
        self.assertTrue(TestLexer.test('''Class Y:_9{Constructor (b:Array [String ,7_1];s:Int ){Break ;}Y_s(_,___,_4:s;W,B,__:Int ;W1:Float ){Break ;}Var _:Array [Array [Int ,0x16],8_058];}''','''Class,Y,:,_9,{,Constructor,(,b,:,Array,[,String,,,71,],;,s,:,Int,),{,Break,;,},Y_s,(,_,,,___,,,_4,:,s,;,W,,,B,,,__,:,Int,;,W1,:,Float,),{,Break,;,},Var,_,:,Array,[,Array,[,Int,,,0x16,],,,8058,],;,},<EOF>''',101))

    def test_2892(self):
        self.assertTrue(TestLexer.test('''Class __:_{}Class Z:T{}Class _{_(Gv,qJ:Int ){}Val $_:Array [Int ,0B1];Var $___S_,_:Array [Array [Float ,0xA],0xF1];}Class ____{}''','''Class,__,:,_,{,},Class,Z,:,T,{,},Class,_,{,_,(,Gv,,,qJ,:,Int,),{,},Val,$_,:,Array,[,Int,,,0B1,],;,Var,$___S_,,,_,:,Array,[,Array,[,Float,,,0xA,],,,0xF1,],;,},Class,____,{,},<EOF>''',101))

    def test_2893(self):
        self.assertTrue(TestLexer.test('''Class Tx:s3b{}Class _2:__{}Class _2M:__{Constructor (_:Int ;y_,_I0,_Y__,ZX:_;_S:Int ;o,_:_f;_V_,_,v:String ;X:f){Continue ;} }Class _6:_{}''','''Class,Tx,:,s3b,{,},Class,_2,:,__,{,},Class,_2M,:,__,{,Constructor,(,_,:,Int,;,y_,,,_I0,,,_Y__,,,ZX,:,_,;,_S,:,Int,;,o,,,_,:,_f,;,_V_,,,_,,,v,:,String,;,X,:,f,),{,Continue,;,},},Class,_6,:,_,{,},<EOF>''',101))

    def test_2894(self):
        self.assertTrue(TestLexer.test('''Class B4{Destructor (){}Val $c_,__C0_52,t39:Array [Array [Int ,0X5],0X5];Var _:Array [Array [Array [Int ,01],85],01_4];Var _,$Rk_,$09:_;}Class u{}''','''Class,B4,{,Destructor,(,),{,},Val,$c_,,,__C0_52,,,t39,:,Array,[,Array,[,Int,,,0X5,],,,0X5,],;,Var,_,:,Array,[,Array,[,Array,[,Int,,,01,],,,85,],,,014,],;,Var,_,,,$Rk_,,,$09,:,_,;,},Class,u,{,},<EOF>''',101))

    def test_2895(self):
        self.assertTrue(TestLexer.test('''Class N_:T{Val V:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,0B100001],0XA5],0b1],1_073],0137],0XF_8],0b1011100],0x2],0B100001];$C(){} }''','''Class,N_,:,T,{,Val,V,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B100001,],,,0XA5,],,,0b1,],,,1073,],,,0137,],,,0XF8,],,,0b1011100,],,,0x2,],,,0B100001,],;,$C,(,),{,},},<EOF>''',101))

    def test_2896(self):
        self.assertTrue(TestLexer.test('''Class _:__{}Class _d:e_e_{Constructor (_,_,S_,v:Int ){} }Class _:r{J(jkq:__;D,u:p5_;__:Array [Float ,1_051]){Continue ;} }Class __4:_2_9{}Class _{}''','''Class,_,:,__,{,},Class,_d,:,e_e_,{,Constructor,(,_,,,_,,,S_,,,v,:,Int,),{,},},Class,_,:,r,{,J,(,jkq,:,__,;,D,,,u,:,p5_,;,__,:,Array,[,Float,,,1051,],),{,Continue,;,},},Class,__4,:,_2_9,{,},Class,_,{,},<EOF>''',101))

    def test_2897(self):
        self.assertTrue(TestLexer.test('''Class f{}Class C:r7{Val $L_,v7:Int ;J(_,_,_,_,_,M_,iHm,_:U;_aBC:Array [Float ,03];_:Boolean ;D,j,_,R,__,Q_6a0___,U__:Array [Float ,046];F_9:Array [Int ,0X1A];s1_,V:_U;__3,U:_;x3:Int ;_t,_:aN8U;_,_:Int ){Break ;} }Class o{}''','''Class,f,{,},Class,C,:,r7,{,Val,$L_,,,v7,:,Int,;,J,(,_,,,_,,,_,,,_,,,_,,,M_,,,iHm,,,_,:,U,;,_aBC,:,Array,[,Float,,,03,],;,_,:,Boolean,;,D,,,j,,,_,,,R,,,__,,,Q_6a0___,,,U__,:,Array,[,Float,,,046,],;,F_9,:,Array,[,Int,,,0X1A,],;,s1_,,,V,:,_U,;,__3,,,U,:,_,;,x3,:,Int,;,_t,,,_,:,aN8U,;,_,,,_,:,Int,),{,Break,;,},},Class,o,{,},<EOF>''',101))

    def test_2898(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _2E_:_9O4{Destructor (){S::$n9();}_r7_9B_(){}Constructor (_,_7:Array [Array [Array [Float ,0113],0113],33]){} }''','''Class,_,{,},Class,_2E_,:,_9O4,{,Destructor,(,),{,S,::,$n9,(,),;,},_r7_9B_,(,),{,},Constructor,(,_,,,_7,:,Array,[,Array,[,Array,[,Float,,,0113,],,,0113,],,,33,],),{,},},<EOF>''',101))

    def test_2899(self):
        self.assertTrue(TestLexer.test('''Class T_A:R{Destructor (){}Var $c:Int ;Val $BZ:Array [Array [Array [String ,0107],0B1010100],0107];Var __t8__o__4:Array [Float ,03];}Class _9{}''','''Class,T_A,:,R,{,Destructor,(,),{,},Var,$c,:,Int,;,Val,$BZ,:,Array,[,Array,[,Array,[,String,,,0107,],,,0B1010100,],,,0107,],;,Var,__t8__o__4,:,Array,[,Float,,,03,],;,},Class,_9,{,},<EOF>''',101))

    def test_2900(self):
        self.assertTrue(TestLexer.test('''Class h_{}Class _W:_9{_(_I,_v2_5_:Int ;_2,i,_,_,V7:_;_65:_;_:_;q,_8,v:_){Return ;}Val $_U,D_:String ;Destructor (){} }Class _:V{}''','''Class,h_,{,},Class,_W,:,_9,{,_,(,_I,,,_v2_5_,:,Int,;,_2,,,i,,,_,,,_,,,V7,:,_,;,_65,:,_,;,_,:,_,;,q,,,_8,,,v,:,_,),{,Return,;,},Val,$_U,,,D_,:,String,;,Destructor,(,),{,},},Class,_,:,V,{,},<EOF>''',101))

    def test_2901(self):
        self.assertTrue(TestLexer.test('''Class _I:N_{Val _,$_G7k:String ;}Class e{}Class T:E{Val g:Array [Array [Array [Array [Boolean ,06_4_66],02247],03],0b1001011];}Class _:h{}Class Y72:AJA{}''','''Class,_I,:,N_,{,Val,_,,,$_G7k,:,String,;,},Class,e,{,},Class,T,:,E,{,Val,g,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,06466,],,,02247,],,,03,],,,0b1001011,],;,},Class,_,:,h,{,},Class,Y72,:,AJA,{,},<EOF>''',101))

    def test_2902(self):
        self.assertTrue(TestLexer.test('''Class u{$f(d4,_t_e1_,_:Array [Array [Array [Array [Array [Array [Int ,2],0XA],071],80],2693],065];_:___;N:__;a,_:Array [Array [Array [Array [Boolean ,0B1],0x38],0x4],68]){Return ;} }''','''Class,u,{,$f,(,d4,,,_t_e1_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,2,],,,0XA,],,,071,],,,80,],,,2693,],,,065,],;,_,:,___,;,N,:,__,;,a,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0x38,],,,0x4,],,,68,],),{,Return,;,},},<EOF>''',101))

    def test_2903(self):
        self.assertTrue(TestLexer.test('''Class _S{}Class _p:h{}Class W:k_D{}Class dp{}Class _:_{a_O(_,N:Array [String ,033]){} }Class r:_{Val $_J:Boolean ;}Class v:___{}''','''Class,_S,{,},Class,_p,:,h,{,},Class,W,:,k_D,{,},Class,dp,{,},Class,_,:,_,{,a_O,(,_,,,N,:,Array,[,String,,,033,],),{,},},Class,r,:,_,{,Val,$_J,:,Boolean,;,},Class,v,:,___,{,},<EOF>''',101))

    def test_2904(self):
        self.assertTrue(TestLexer.test('''Class e_{Val j,a7,$5,_,$6:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0b101],4],0130],0B1100011],8],0b101],2],4],4],0x5E];}''','''Class,e_,{,Val,j,,,a7,,,$5,,,_,,,$6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b101,],,,4,],,,0130,],,,0B1100011,],,,8,],,,0b101,],,,2,],,,4,],,,4,],,,0x5E,],;,},<EOF>''',101))

    def test_2905(self):
        self.assertTrue(TestLexer.test('''Class _2a_W:t{$_(_,_:Array [Array [Array [Array [Boolean ,8],0b1],39_10],9];_7,_,__,Q70:Array [Array [Array [Array [Array [Int ,0X61],0XD],0X5_E_E],0B1],0x4];_OY0:h24s){} }Class _:_{Constructor (){} }''','''Class,_2a_W,:,t,{,$_,(,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,8,],,,0b1,],,,3910,],,,9,],;,_7,,,_,,,__,,,Q70,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X61,],,,0XD,],,,0X5EE,],,,0B1,],,,0x4,],;,_OY0,:,h24s,),{,},},Class,_,:,_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_2906(self):
        self.assertTrue(TestLexer.test('''Class _:s{Constructor (zBJv1:_;__,_,_5:Int ;_Q6:Array [Array [Float ,0X9],05];R__,n:_;x,_:n_0N;__:String ;_,V03:Int ;_:Array [Array [Array [Array [Array [String ,02],07],0x2],0X2F],0b1010]){} }''','''Class,_,:,s,{,Constructor,(,zBJv1,:,_,;,__,,,_,,,_5,:,Int,;,_Q6,:,Array,[,Array,[,Float,,,0X9,],,,05,],;,R__,,,n,:,_,;,x,,,_,:,n_0N,;,__,:,String,;,_,,,V03,:,Int,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,02,],,,07,],,,0x2,],,,0X2F,],,,0b1010,],),{,},},<EOF>''',101))

    def test_2907(self):
        self.assertTrue(TestLexer.test('''Class B:G_{Val $8:Array [Array [Boolean ,56],016];Constructor (){} }Class _:W{}Class r{}Class J_{}Class EF:_{}Class K{_9_8_69(y,w,_:Int ){}Var $q6,t2:Int ;Var C,_,___:Array [Boolean ,0x3D];Var $5,$_H,$k:Array [Array [Boolean ,0B110001],0B110001];}''','''Class,B,:,G_,{,Val,$8,:,Array,[,Array,[,Boolean,,,56,],,,016,],;,Constructor,(,),{,},},Class,_,:,W,{,},Class,r,{,},Class,J_,{,},Class,EF,:,_,{,},Class,K,{,_9_8_69,(,y,,,w,,,_,:,Int,),{,},Var,$q6,,,t2,:,Int,;,Var,C,,,_,,,___,:,Array,[,Boolean,,,0x3D,],;,Var,$5,,,$_H,,,$k,:,Array,[,Array,[,Boolean,,,0B110001,],,,0B110001,],;,},<EOF>''',101))

    def test_2908(self):
        self.assertTrue(TestLexer.test('''Class _{Var _o_,_CCJ1,$1Z_3,$N___Q,$1,$91:Array [Array [Array [Array [Array [Array [Array [Array [Int ,0122],0B1],0B1_0],937],0x6_16],0b1],0B1],0x2];}''','''Class,_,{,Var,_o_,,,_CCJ1,,,$1Z_3,,,$N___Q,,,$1,,,$91,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0122,],,,0B1,],,,0B10,],,,937,],,,0x616,],,,0b1,],,,0B1,],,,0x2,],;,},<EOF>''',101))

    def test_2909(self):
        self.assertTrue(TestLexer.test('''Class _{}Class __pg__:e_3{Val $P_:Array [Float ,06];Val _mb,$_:Array [Array [Array [Array [Array [Float ,0xE2],0x56],0135],0x1],051];}''','''Class,_,{,},Class,__pg__,:,e_3,{,Val,$P_,:,Array,[,Float,,,06,],;,Val,_mb,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0xE2,],,,0x56,],,,0135,],,,0x1,],,,051,],;,},<EOF>''',101))

    def test_2910(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class q:_9{Destructor (){}Constructor (){} }Class _:_{$_g_(p,J,__,t1Gr,a,_:Float ){Return ;}$7(){}Val $_HC_,$_D:Array [Boolean ,0B11];}''','''Class,_,:,_,{,},Class,q,:,_9,{,Destructor,(,),{,},Constructor,(,),{,},},Class,_,:,_,{,$_g_,(,p,,,J,,,__,,,t1Gr,,,a,,,_,:,Float,),{,Return,;,},$7,(,),{,},Val,$_HC_,,,$_D,:,Array,[,Boolean,,,0B11,],;,},<EOF>''',101))

    def test_2911(self):
        self.assertTrue(TestLexer.test('''Class W0__:_{Var _9c724,Q6:Array [Array [String ,3],0x7];Val $I:Boolean ;}Class v89{}Class __1m:P7__R{Var $4:Array [Float ,06];}Class _{}''','''Class,W0__,:,_,{,Var,_9c724,,,Q6,:,Array,[,Array,[,String,,,3,],,,0x7,],;,Val,$I,:,Boolean,;,},Class,v89,{,},Class,__1m,:,P7__R,{,Var,$4,:,Array,[,Float,,,06,],;,},Class,_,{,},<EOF>''',101))

    def test_2912(self):
        self.assertTrue(TestLexer.test('''Class __:_4{Val $77V:Array [Array [Array [String ,55],0122],02];Constructor (S:_;p_:Array [Array [Array [Int ,0x6_D_87],0122],0b1000110]){}Constructor (){} }Class O{}''','''Class,__,:,_4,{,Val,$77V,:,Array,[,Array,[,Array,[,String,,,55,],,,0122,],,,02,],;,Constructor,(,S,:,_,;,p_,:,Array,[,Array,[,Array,[,Int,,,0x6D87,],,,0122,],,,0b1000110,],),{,},Constructor,(,),{,},},Class,O,{,},<EOF>''',101))

    def test_2913(self):
        self.assertTrue(TestLexer.test('''Class Q3_:F{Var $_,_,_8:Array [Array [Boolean ,49],49];}Class _{}Class _{Val $Z___:Array [Array [Boolean ,5],0B1];Destructor (){} }''','''Class,Q3_,:,F,{,Var,$_,,,_,,,_8,:,Array,[,Array,[,Boolean,,,49,],,,49,],;,},Class,_,{,},Class,_,{,Val,$Z___,:,Array,[,Array,[,Boolean,,,5,],,,0B1,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_2914(self):
        self.assertTrue(TestLexer.test('''Class a:_{}Class U{}Class _{_(){Return ;Var _,H:String ;} }Class v__{}Class U_{Val $_,$z,_,$1:Boolean ;}Class _{}Class __Y:_{}''','''Class,a,:,_,{,},Class,U,{,},Class,_,{,_,(,),{,Return,;,Var,_,,,H,:,String,;,},},Class,v__,{,},Class,U_,{,Val,$_,,,$z,,,_,,,$1,:,Boolean,;,},Class,_,{,},Class,__Y,:,_,{,},<EOF>''',101))

    def test_2915(self):
        self.assertTrue(TestLexer.test('''Class Z_:_{Destructor (){} }Class s{Constructor (_,D:Array [Array [Array [Array [Int ,4_4],64],0127],0127];F_7,___,j,_:Array [Array [Array [Array [String ,0X2E],7_6],0b110110],6]){Return ;} }''','''Class,Z_,:,_,{,Destructor,(,),{,},},Class,s,{,Constructor,(,_,,,D,:,Array,[,Array,[,Array,[,Array,[,Int,,,44,],,,64,],,,0127,],,,0127,],;,F_7,,,___,,,j,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0X2E,],,,76,],,,0b110110,],,,6,],),{,Return,;,},},<EOF>''',101))

    def test_2916(self):
        self.assertTrue(TestLexer.test('''Class L:_5{}Class _l9_:h{Var f5,$_9_r,G_,_r,_S_6_:Float ;}Class y{}Class x{Var $3,i,u,$g:Array [Array [String ,6],0XC];}Class _:_{Val $T7_,$77y,_5:Array [Array [Int ,0X24],75];}''','''Class,L,:,_5,{,},Class,_l9_,:,h,{,Var,f5,,,$_9_r,,,G_,,,_r,,,_S_6_,:,Float,;,},Class,y,{,},Class,x,{,Var,$3,,,i,,,u,,,$g,:,Array,[,Array,[,String,,,6,],,,0XC,],;,},Class,_,:,_,{,Val,$T7_,,,$77y,,,_5,:,Array,[,Array,[,Int,,,0X24,],,,75,],;,},<EOF>''',101))

    def test_2917(self):
        self.assertTrue(TestLexer.test('''Class U:_{Val _9Ll:Array [String ,0b110000];Var __:Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,0b11],0B1_1],06_5],070],03],0B1001010],0446],56],0b11];}''','''Class,U,:,_,{,Val,_9Ll,:,Array,[,String,,,0b110000,],;,Var,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b11,],,,0B11,],,,065,],,,070,],,,03,],,,0B1001010,],,,0446,],,,56,],,,0b11,],;,},<EOF>''',101))

    def test_2918(self):
        self.assertTrue(TestLexer.test('''Class z:_4382{}Class _{}Class _:w{}Class M73{Constructor (U_,U3,d__08,Z:Array [Float ,0B11];o,N_G,_y56,_,_:jac;H:z){} }Class _{}Class _:K{}''','''Class,z,:,_4382,{,},Class,_,{,},Class,_,:,w,{,},Class,M73,{,Constructor,(,U_,,,U3,,,d__08,,,Z,:,Array,[,Float,,,0B11,],;,o,,,N_G,,,_y56,,,_,,,_,:,jac,;,H,:,z,),{,},},Class,_,{,},Class,_,:,K,{,},<EOF>''',101))

    def test_2919(self):
        self.assertTrue(TestLexer.test('''Class _CA{}Class _9{Constructor (__g_2,h_10:Mh;Q:QG_3;_U7g,_,b,__:i;_,p:Array [Float ,7];_,D,H_:Boolean ;q:Array [Array [Array [Float ,0B1001010],0x14],063];_3__:_6qm_u){Break ;Return ;Val _,_:String ;} }Class _:_78{}''','''Class,_CA,{,},Class,_9,{,Constructor,(,__g_2,,,h_10,:,Mh,;,Q,:,QG_3,;,_U7g,,,_,,,b,,,__,:,i,;,_,,,p,:,Array,[,Float,,,7,],;,_,,,D,,,H_,:,Boolean,;,q,:,Array,[,Array,[,Array,[,Float,,,0B1001010,],,,0x14,],,,063,],;,_3__,:,_6qm_u,),{,Break,;,Return,;,Val,_,,,_,:,String,;,},},Class,_,:,_78,{,},<EOF>''',101))

    def test_2920(self):
        self.assertTrue(TestLexer.test('''Class __:_{}Class _{}Class L:__R692S{Destructor (){ {} }}Class q{}Class W2{Constructor (){Continue ;Break ;}Destructor (){Var _0:i;}Constructor (){} }''','''Class,__,:,_,{,},Class,_,{,},Class,L,:,__R692S,{,Destructor,(,),{,{,},},},Class,q,{,},Class,W2,{,Constructor,(,),{,Continue,;,Break,;,},Destructor,(,),{,Var,_0,:,i,;,},Constructor,(,),{,},},<EOF>''',101))

    def test_2921(self):
        self.assertTrue(TestLexer.test('''Class __{Var _:Array [Array [Array [Array [String ,0b101100],0b101100],6],0x7_5C4];Var $8,$__I__:Array [Array [Int ,0x3D],0X42];}''','''Class,__,{,Var,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b101100,],,,0b101100,],,,6,],,,0x75C4,],;,Var,$8,,,$__I__,:,Array,[,Array,[,Int,,,0x3D,],,,0X42,],;,},<EOF>''',101))

    def test_2922(self):
        self.assertTrue(TestLexer.test('''Class N58:AeX55{I(r:_;eA1_,_k,___:Array [Array [Array [Int ,0b1],32],0X3];y,__:Float ;_,_,_,ND:Array [Float ,4]){}$M(_,g,z,J_,_,a_:Boolean ;_:String ;_,_,L___:Float ;w1r1_n,_e,_5m:String ){} }''','''Class,N58,:,AeX55,{,I,(,r,:,_,;,eA1_,,,_k,,,___,:,Array,[,Array,[,Array,[,Int,,,0b1,],,,32,],,,0X3,],;,y,,,__,:,Float,;,_,,,_,,,_,,,ND,:,Array,[,Float,,,4,],),{,},$M,(,_,,,g,,,z,,,J_,,,_,,,a_,:,Boolean,;,_,:,String,;,_,,,_,,,L___,:,Float,;,w1r1_n,,,_e,,,_5m,:,String,),{,},},<EOF>''',101))

    def test_2923(self):
        self.assertTrue(TestLexer.test('''Class _9_{Constructor (_o,_k:_EA2;_,_Xg2:_y40__;Y___:Array [Array [Array [Array [Array [Int ,066],066],91_9],066],05]){} }''','''Class,_9_,{,Constructor,(,_o,,,_k,:,_EA2,;,_,,,_Xg2,:,_y40__,;,Y___,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,066,],,,066,],,,919,],,,066,],,,05,],),{,},},<EOF>''',101))

    def test_2924(self):
        self.assertTrue(TestLexer.test('''Class __:_z_{}Class _:s{Var __fG:Float ;Destructor (){}Constructor (){}$y(_Kr9,PF_:Boolean ){}Constructor (){} }''','''Class,__,:,_z_,{,},Class,_,:,s,{,Var,__fG,:,Float,;,Destructor,(,),{,},Constructor,(,),{,},$y,(,_Kr9,,,PF_,:,Boolean,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_2925(self):
        self.assertTrue(TestLexer.test('''Class S{Var dE_6,$_:_;}Class __7:Aq{_(UhBP_t:NM){Continue ;} }Class _{Constructor (_,_:Array [String ,01];_m_7d:Float ){} }Class DK{}''','''Class,S,{,Var,dE_6,,,$_,:,_,;,},Class,__7,:,Aq,{,_,(,UhBP_t,:,NM,),{,Continue,;,},},Class,_,{,Constructor,(,_,,,_,:,Array,[,String,,,01,],;,_m_7d,:,Float,),{,},},Class,DK,{,},<EOF>''',101))

    def test_2926(self):
        self.assertTrue(TestLexer.test('''Class w{Constructor (f:Array [Array [Array [Array [Array [Array [Float ,0x1A],051],051],9_8_8_6],051],0b1];T:Array [Array [Float ,8],3];a1,_6468,_4h:_0;k8:Int ){} }''','''Class,w,{,Constructor,(,f,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x1A,],,,051,],,,051,],,,9886,],,,051,],,,0b1,],;,T,:,Array,[,Array,[,Float,,,8,],,,3,],;,a1,,,_6468,,,_4h,:,_0,;,k8,:,Int,),{,},},<EOF>''',101))

    def test_2927(self):
        self.assertTrue(TestLexer.test('''Class _{}Class __{}Class z:_{}Class Q{Constructor (M_43,X,E_:Array [Array [String ,0X52],0B1_0];m9,I8,___xt:z;_y9,_:n5){} }Class _:_{}''','''Class,_,{,},Class,__,{,},Class,z,:,_,{,},Class,Q,{,Constructor,(,M_43,,,X,,,E_,:,Array,[,Array,[,String,,,0X52,],,,0B10,],;,m9,,,I8,,,___xt,:,z,;,_y9,,,_,:,n5,),{,},},Class,_,:,_,{,},<EOF>''',101))

    def test_2928(self):
        self.assertTrue(TestLexer.test('''Class _:F_l{Constructor (_,w0_G_,_,e:l__;L__a,m,i:_){}Val $50:D8;Val $61B,$_x,$_,yF7,O_,$N2__,$9,F_13,$d,s:u;}Class I_{}''','''Class,_,:,F_l,{,Constructor,(,_,,,w0_G_,,,_,,,e,:,l__,;,L__a,,,m,,,i,:,_,),{,},Val,$50,:,D8,;,Val,$61B,,,$_x,,,$_,,,yF7,,,O_,,,$N2__,,,$9,,,F_13,,,$d,,,s,:,u,;,},Class,I_,{,},<EOF>''',101))

    def test_2929(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){}Constructor (_Th,R,_uX,_yf_v,_3_J,SI,nz3:Array [Array [Array [Array [Boolean ,0b11],0X8],0b1],8];F:Array [Array [Array [Array [Int ,0b1011110],42],42],0B1010011];v,_:Array [Int ,42]){} }''','''Class,_,{,Destructor,(,),{,},Constructor,(,_Th,,,R,,,_uX,,,_yf_v,,,_3_J,,,SI,,,nz3,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b11,],,,0X8,],,,0b1,],,,8,],;,F,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1011110,],,,42,],,,42,],,,0B1010011,],;,v,,,_,:,Array,[,Int,,,42,],),{,},},<EOF>''',101))

    def test_2930(self):
        self.assertTrue(TestLexer.test('''Class _YH_53:_{Var qy5_:Array [Int ,0x8];}Class _{}Class Z:y{Var _7L_,_:Array [Array [Int ,0b1],0X17];}Class d:Kn{}''','''Class,_YH_53,:,_,{,Var,qy5_,:,Array,[,Int,,,0x8,],;,},Class,_,{,},Class,Z,:,y,{,Var,_7L_,,,_,:,Array,[,Array,[,Int,,,0b1,],,,0X17,],;,},Class,d,:,Kn,{,},<EOF>''',101))

    def test_2931(self):
        self.assertTrue(TestLexer.test('''Class _:_{$g(_:Array [Float ,0xF_7A_A];Q0:Array [Boolean ,9_1_3_3_9];_:Int ;v,_,_0:Array [Array [Float ,0X5E],0xA]){_::$_();}Constructor (){} }''','''Class,_,:,_,{,$g,(,_,:,Array,[,Float,,,0xF7AA,],;,Q0,:,Array,[,Boolean,,,91339,],;,_,:,Int,;,v,,,_,,,_0,:,Array,[,Array,[,Float,,,0X5E,],,,0xA,],),{,_,::,$_,(,),;,},Constructor,(,),{,},},<EOF>''',101))

    def test_2932(self):
        self.assertTrue(TestLexer.test('''Class _d{_(W,N_dn:iJ;_,____:String ;_0_,T:Array [Array [Array [Array [Float ,986],26],0b1],7];u__,_,_:Array [Float ,0x1];b6V:_){Break ;}Destructor (){}Var $d,R8_:R;}Class _:RA_7_4n9_n_{}''','''Class,_d,{,_,(,W,,,N_dn,:,iJ,;,_,,,____,:,String,;,_0_,,,T,:,Array,[,Array,[,Array,[,Array,[,Float,,,986,],,,26,],,,0b1,],,,7,],;,u__,,,_,,,_,:,Array,[,Float,,,0x1,],;,b6V,:,_,),{,Break,;,},Destructor,(,),{,},Var,$d,,,R8_,:,R,;,},Class,_,:,RA_7_4n9_n_,{,},<EOF>''',101))

    def test_2933(self):
        self.assertTrue(TestLexer.test('''Class wZ:_bJ{Val T,$_,$6x,$_M_,_,_3,w_:oE;Destructor (){ {}Continue ;}Val $i,X:Array [Int ,050_6];}Class u:_{$p_(){Var C:_iQ_;Return ;} }''','''Class,wZ,:,_bJ,{,Val,T,,,$_,,,$6x,,,$_M_,,,_,,,_3,,,w_,:,oE,;,Destructor,(,),{,{,},Continue,;,},Val,$i,,,X,:,Array,[,Int,,,0506,],;,},Class,u,:,_,{,$p_,(,),{,Var,C,:,_iQ_,;,Return,;,},},<EOF>''',101))

    def test_2934(self):
        self.assertTrue(TestLexer.test('''Class _:__{Var $__,$K:String ;}Class __{Val m:Array [Array [Boolean ,0b111],0b111];}Class ep:_{Val O_,$_:Float ;Destructor (){}Val __39f,U__,v5:Int ;Var $iF___:Array [String ,0b1];}''','''Class,_,:,__,{,Var,$__,,,$K,:,String,;,},Class,__,{,Val,m,:,Array,[,Array,[,Boolean,,,0b111,],,,0b111,],;,},Class,ep,:,_,{,Val,O_,,,$_,:,Float,;,Destructor,(,),{,},Val,__39f,,,U__,,,v5,:,Int,;,Var,$iF___,:,Array,[,String,,,0b1,],;,},<EOF>''',101))

    def test_2935(self):
        self.assertTrue(TestLexer.test('''Class B_:_{Var $__X6:Int ;Val _,C:String ;}Class _0{Val $_,$8,$__:g;}Class T7:_{Val q1:Int ;}Class Fm:_{Destructor (){} }''','''Class,B_,:,_,{,Var,$__X6,:,Int,;,Val,_,,,C,:,String,;,},Class,_0,{,Val,$_,,,$8,,,$__,:,g,;,},Class,T7,:,_,{,Val,q1,:,Int,;,},Class,Fm,:,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_2936(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){Return ;}Var _,$O,_,$1,M_6_:Array [Array [Array [Array [Array [Array [Float ,15],064],9],0B1_1_1],0X32],0x47];}''','''Class,_,{,Destructor,(,),{,Return,;,},Var,_,,,$O,,,_,,,$1,,,M_6_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,15,],,,064,],,,9,],,,0B111,],,,0X32,],,,0x47,],;,},<EOF>''',101))

    def test_2937(self):
        self.assertTrue(TestLexer.test('''Class M{$k___(V_,_0s58X:_4_;_:Array [String ,0B10100];_:Array [Float ,5];_:Array [Int ,2];F_,p,_:Array [Array [Array [Array [Boolean ,0B10100],046],0x5E],0XE_B_0_E]){} }''','''Class,M,{,$k___,(,V_,,,_0s58X,:,_4_,;,_,:,Array,[,String,,,0B10100,],;,_,:,Array,[,Float,,,5,],;,_,:,Array,[,Int,,,2,],;,F_,,,p,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B10100,],,,046,],,,0x5E,],,,0XEB0E,],),{,},},<EOF>''',101))

    def test_2938(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (LI:Array [Array [String ,7],0X62];_5:Di;Hz,_:l_A;k:Array [Array [Boolean ,0x6],0x37]){} }Class _K7:_0{}Class z:f{Var $DD:String ;}Class d__v{Constructor (){Var F,e3,__6__l:__;}Var s93,$6,$Oz:Array [Array [String ,02],4];}''','''Class,_,{,Constructor,(,LI,:,Array,[,Array,[,String,,,7,],,,0X62,],;,_5,:,Di,;,Hz,,,_,:,l_A,;,k,:,Array,[,Array,[,Boolean,,,0x6,],,,0x37,],),{,},},Class,_K7,:,_0,{,},Class,z,:,f,{,Var,$DD,:,String,;,},Class,d__v,{,Constructor,(,),{,Var,F,,,e3,,,__6__l,:,__,;,},Var,s93,,,$6,,,$Oz,:,Array,[,Array,[,String,,,02,],,,4,],;,},<EOF>''',101))

    def test_2939(self):
        self.assertTrue(TestLexer.test('''Class v{Val g7_58,$W:Array [Array [Array [String ,5_4],0x41],0b1_1_0_1_011_1];}Class _8:z7{Constructor (){Continue ;} }Class p:b8{Destructor (){Var _:O;}Constructor (N11,L:Array [Int ,07_5_2_3]){ {} }}''','''Class,v,{,Val,g7_58,,,$W,:,Array,[,Array,[,Array,[,String,,,54,],,,0x41,],,,0b11010111,],;,},Class,_8,:,z7,{,Constructor,(,),{,Continue,;,},},Class,p,:,b8,{,Destructor,(,),{,Var,_,:,O,;,},Constructor,(,N11,,,L,:,Array,[,Int,,,07523,],),{,{,},},},<EOF>''',101))

    def test_2940(self):
        self.assertTrue(TestLexer.test('''Class Uf:_Q{Val iL,X,_7_:Array [Array [Array [Array [Int ,0B110111],0xD],0x5C],19];}Class _:l{aX(){Return ;} }Class _:y{}''','''Class,Uf,:,_Q,{,Val,iL,,,X,,,_7_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B110111,],,,0xD,],,,0x5C,],,,19,],;,},Class,_,:,l,{,aX,(,),{,Return,;,},},Class,_,:,y,{,},<EOF>''',101))

    def test_2941(self):
        self.assertTrue(TestLexer.test('''Class y:s{Var $_:Array [Array [Int ,0x4],067];}Class _E91:i9f{Var qhG,$_:Array [Array [Int ,0X59_A],0xD];}Class _H{}''','''Class,y,:,s,{,Var,$_,:,Array,[,Array,[,Int,,,0x4,],,,067,],;,},Class,_E91,:,i9f,{,Var,qhG,,,$_,:,Array,[,Array,[,Int,,,0X59A,],,,0xD,],;,},Class,_H,{,},<EOF>''',101))

    def test_2942(self):
        self.assertTrue(TestLexer.test('''Class w{Var $C:_;}Class O{Constructor (){Continue ;} }Class _{Var v,$0_,$_V__8,G,$H_3:H;}Class __5{Constructor (){ {} }}''','''Class,w,{,Var,$C,:,_,;,},Class,O,{,Constructor,(,),{,Continue,;,},},Class,_,{,Var,v,,,$0_,,,$_V__8,,,G,,,$H_3,:,H,;,},Class,__5,{,Constructor,(,),{,{,},},},<EOF>''',101))

    def test_2943(self):
        self.assertTrue(TestLexer.test('''Class __:__{Val Z_72:Int ;Constructor (){}Constructor (_,_,DA:Array [Array [Array [Float ,0b100110],0x47],0B1000110];f0:RJ;v0,K,A,v,__50:String ;__:m){Var _9:Int ;} }''','''Class,__,:,__,{,Val,Z_72,:,Int,;,Constructor,(,),{,},Constructor,(,_,,,_,,,DA,:,Array,[,Array,[,Array,[,Float,,,0b100110,],,,0x47,],,,0B1000110,],;,f0,:,RJ,;,v0,,,K,,,A,,,v,,,__50,:,String,;,__,:,m,),{,Var,_9,:,Int,;,},},<EOF>''',101))

    def test_2944(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (r_:Array [Boolean ,0b1];m,H:Array [Array [Boolean ,0b1],0b1]){} }Class _{Val m:_;}Class __H{}Class _{Val sVx:String ;Val $0_:Array [Array [Int ,85],0xF];}''','''Class,_,{,Constructor,(,r_,:,Array,[,Boolean,,,0b1,],;,m,,,H,:,Array,[,Array,[,Boolean,,,0b1,],,,0b1,],),{,},},Class,_,{,Val,m,:,_,;,},Class,__H,{,},Class,_,{,Val,sVx,:,String,;,Val,$0_,:,Array,[,Array,[,Int,,,85,],,,0xF,],;,},<EOF>''',101))

    def test_2945(self):
        self.assertTrue(TestLexer.test('''Class _t{}Class _:t{Constructor (_,LA,_:Array [Array [Array [Array [Array [Array [String ,0X11],01],42],06_4],0x1],42]){} }''','''Class,_t,{,},Class,_,:,t,{,Constructor,(,_,,,LA,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X11,],,,01,],,,42,],,,064,],,,0x1,],,,42,],),{,},},<EOF>''',101))

    def test_2946(self):
        self.assertTrue(TestLexer.test('''Class p33{}Class bu{Val _,_,_:Float ;}Class e_{Var ___,G7_:Array [Int ,0B11];}Class _:fQ{}Class S3:v{}Class _:_5{}''','''Class,p33,{,},Class,bu,{,Val,_,,,_,,,_,:,Float,;,},Class,e_,{,Var,___,,,G7_,:,Array,[,Int,,,0B11,],;,},Class,_,:,fQ,{,},Class,S3,:,v,{,},Class,_,:,_5,{,},<EOF>''',101))

    def test_2947(self):
        self.assertTrue(TestLexer.test('''Class _{}Class I:vZ_{_3(_,_U:Array [Array [Int ,0b11001],0B110111];d:Boolean ;_,_,A,y4:L){}Destructor (){}Destructor (){ {}Return ;} }Class J:_{}''','''Class,_,{,},Class,I,:,vZ_,{,_3,(,_,,,_U,:,Array,[,Array,[,Int,,,0b11001,],,,0B110111,],;,d,:,Boolean,;,_,,,_,,,A,,,y4,:,L,),{,},Destructor,(,),{,},Destructor,(,),{,{,},Return,;,},},Class,J,:,_,{,},<EOF>''',101))

    def test_2948(self):
        self.assertTrue(TestLexer.test('''Class t:_{Destructor (){}Var $p:Int ;Constructor (I:b9S__;_,u,_q__:Array [Array [Int ,0X4B],05_5_7_663];_:String ){}Val s49:Array [String ,0x15];}Class t:___0{}''','''Class,t,:,_,{,Destructor,(,),{,},Var,$p,:,Int,;,Constructor,(,I,:,b9S__,;,_,,,u,,,_q__,:,Array,[,Array,[,Int,,,0X4B,],,,0557663,],;,_,:,String,),{,},Val,s49,:,Array,[,String,,,0x15,],;,},Class,t,:,___0,{,},<EOF>''',101))

    def test_2949(self):
        self.assertTrue(TestLexer.test('''Class _:a7_{}Class NA{}Class _:r_{Val $q:Array [Array [Array [Array [Float ,0B1011010],9],0x13],7]=!!-_::$q_%"".s.U_._().B_().P______;}''','''Class,_,:,a7_,{,},Class,NA,{,},Class,_,:,r_,{,Val,$q,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B1011010,],,,9,],,,0x13,],,,7,],=,!,!,-,_,::,$q_,%,,.,s,.,U_,.,_,(,),.,B_,(,),.,P______,;,},<EOF>''',101))

    def test_2950(self):
        self.assertTrue(TestLexer.test('''Class _:__{Destructor (){Null ._.h9();}$_(){} }Class E{}Class mP:r{Var f77:z;Constructor (__:_XM;Y:p0_9__1E;q3,Ob,_:_6){}Val x3D_:o___;Destructor (){} }''','''Class,_,:,__,{,Destructor,(,),{,Null,.,_,.,h9,(,),;,},$_,(,),{,},},Class,E,{,},Class,mP,:,r,{,Var,f77,:,z,;,Constructor,(,__,:,_XM,;,Y,:,p0_9__1E,;,q3,,,Ob,,,_,:,_6,),{,},Val,x3D_,:,o___,;,Destructor,(,),{,},},<EOF>''',101))

    def test_2951(self):
        self.assertTrue(TestLexer.test('''Class _:c{__(_,m_f:_;_,_,y,_,eZ_,__:Array [Array [String ,0B1],0B1100];_:Int ;_:_b_08_;D,_,A_,_:Array [String ,01]){}Destructor (){}Var S,$7,$c:Array [Int ,0B1];}''','''Class,_,:,c,{,__,(,_,,,m_f,:,_,;,_,,,_,,,y,,,_,,,eZ_,,,__,:,Array,[,Array,[,String,,,0B1,],,,0B1100,],;,_,:,Int,;,_,:,_b_08_,;,D,,,_,,,A_,,,_,:,Array,[,String,,,01,],),{,},Destructor,(,),{,},Var,S,,,$7,,,$c,:,Array,[,Int,,,0B1,],;,},<EOF>''',101))

    def test_2952(self):
        self.assertTrue(TestLexer.test('''Class u{Constructor (f:String ;_,Q_2,_J:Boolean ;__b_0:Array [Boolean ,02]){} }Class _:SS{Constructor (_,X,_0,s:Array [Array [Int ,0B1],0B1]){} }Class _0{}''','''Class,u,{,Constructor,(,f,:,String,;,_,,,Q_2,,,_J,:,Boolean,;,__b_0,:,Array,[,Boolean,,,02,],),{,},},Class,_,:,SS,{,Constructor,(,_,,,X,,,_0,,,s,:,Array,[,Array,[,Int,,,0B1,],,,0B1,],),{,},},Class,_0,{,},<EOF>''',101))

    def test_2953(self):
        self.assertTrue(TestLexer.test('''Class X_{Val W_:E;}Class _F016:_{Val $_7E,$u,$73,R0,_v:m_;Destructor (){_::$_J();} }Class V{Constructor (Lg,F_1U,L3:Boolean ){} }''','''Class,X_,{,Val,W_,:,E,;,},Class,_F016,:,_,{,Val,$_7E,,,$u,,,$73,,,R0,,,_v,:,m_,;,Destructor,(,),{,_,::,$_J,(,),;,},},Class,V,{,Constructor,(,Lg,,,F_1U,,,L3,:,Boolean,),{,},},<EOF>''',101))

    def test_2954(self):
        self.assertTrue(TestLexer.test('''Class __A9{}Class N_0:_{Val $__9C:w_9;Var o_:Zo;}Class _5:_{I(D_,W:_W;_,iYJ4:H;r__,P,_9,_:Y;_:Array [Array [Array [Array [String ,0137],39],82],82];_G,_:Array [Int ,01_1];U,v7,V:Array [Int ,0X17]){} }''','''Class,__A9,{,},Class,N_0,:,_,{,Val,$__9C,:,w_9,;,Var,o_,:,Zo,;,},Class,_5,:,_,{,I,(,D_,,,W,:,_W,;,_,,,iYJ4,:,H,;,r__,,,P,,,_9,,,_,:,Y,;,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0137,],,,39,],,,82,],,,82,],;,_G,,,_,:,Array,[,Int,,,011,],;,U,,,v7,,,V,:,Array,[,Int,,,0X17,],),{,},},<EOF>''',101))

    def test_2955(self):
        self.assertTrue(TestLexer.test('''Class _0Q5{Val _,_7,l93:___;}Class vo{}Class C{}Class K{}Class _{$_PbBs_(_6L,_p0,____M,_:____;o,fgV:___5;_d2:Float ;e,HF,_1:Array [Boolean ,0xB]){__867::$y__();} }''','''Class,_0Q5,{,Val,_,,,_7,,,l93,:,___,;,},Class,vo,{,},Class,C,{,},Class,K,{,},Class,_,{,$_PbBs_,(,_6L,,,_p0,,,____M,,,_,:,____,;,o,,,fgV,:,___5,;,_d2,:,Float,;,e,,,HF,,,_1,:,Array,[,Boolean,,,0xB,],),{,__867,::,$y__,(,),;,},},<EOF>''',101))

    def test_2956(self):
        self.assertTrue(TestLexer.test('''Class e17:_{}Class _o:b{Var $C4m,$f09,$w8:u;}Class _rS:lK__{}Class v0{Val _:G;Destructor (){_::$4P0Y2();} }Class _{}Class _4097:_Y{}''','''Class,e17,:,_,{,},Class,_o,:,b,{,Var,$C4m,,,$f09,,,$w8,:,u,;,},Class,_rS,:,lK__,{,},Class,v0,{,Val,_,:,G,;,Destructor,(,),{,_,::,$4P0Y2,(,),;,},},Class,_,{,},Class,_4097,:,_Y,{,},<EOF>''',101))

    def test_2957(self):
        self.assertTrue(TestLexer.test('''Class _5{Destructor (){}Val M_Z,L_,$__N,u,$r__,G:Array [Array [Array [Array [Float ,01_4_345],57],57],0b1_1];}Class M{}''','''Class,_5,{,Destructor,(,),{,},Val,M_Z,,,L_,,,$__N,,,u,,,$r__,,,G,:,Array,[,Array,[,Array,[,Array,[,Float,,,014345,],,,57,],,,57,],,,0b11,],;,},Class,M,{,},<EOF>''',101))

    def test_2958(self):
        self.assertTrue(TestLexer.test('''Class S:_5{Val H:Array [String ,0XD];_(_:__;_,_3H_,X:Array [Array [Float ,0X1B],33];_I___:Array [Array [Array [Array [Array [Array [Array [Boolean ,0x6],33],14_31],0X1B],0x5],492],0xB]){Break ;}Val $4:Int ;b(){} }''','''Class,S,:,_5,{,Val,H,:,Array,[,String,,,0XD,],;,_,(,_,:,__,;,_,,,_3H_,,,X,:,Array,[,Array,[,Float,,,0X1B,],,,33,],;,_I___,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x6,],,,33,],,,1431,],,,0X1B,],,,0x5,],,,492,],,,0xB,],),{,Break,;,},Val,$4,:,Int,;,b,(,),{,},},<EOF>''',101))

    def test_2959(self):
        self.assertTrue(TestLexer.test('''Class _:g6{}Class _:_{Val j:_;Var p,_:Array [String ,5];Constructor (_1_:Array [Boolean ,5]){}Constructor (){} }''','''Class,_,:,g6,{,},Class,_,:,_,{,Val,j,:,_,;,Var,p,,,_,:,Array,[,String,,,5,],;,Constructor,(,_1_,:,Array,[,Boolean,,,5,],),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_2960(self):
        self.assertTrue(TestLexer.test('''Class t:_um{$o8(_:Float ;S_,O,_4,Y,Q_,j_:Array [Float ,34];_:Array [Boolean ,34];_,I,_,_J__,_,F:Int ){Val lc,_:_;Continue ;} }''','''Class,t,:,_um,{,$o8,(,_,:,Float,;,S_,,,O,,,_4,,,Y,,,Q_,,,j_,:,Array,[,Float,,,34,],;,_,:,Array,[,Boolean,,,34,],;,_,,,I,,,_,,,_J__,,,_,,,F,:,Int,),{,Val,lc,,,_,:,_,;,Continue,;,},},<EOF>''',101))

    def test_2961(self):
        self.assertTrue(TestLexer.test('''Class e:__{$_t(_,Q_:Array [Array [Array [Array [Boolean ,42],015],0b1011110],3];b,_,_kY7,g__:Array [Float ,0b1011110]){Break ;}Var $P:__;}''','''Class,e,:,__,{,$_t,(,_,,,Q_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,42,],,,015,],,,0b1011110,],,,3,],;,b,,,_,,,_kY7,,,g__,:,Array,[,Float,,,0b1011110,],),{,Break,;,},Var,$P,:,__,;,},<EOF>''',101))

    def test_2962(self):
        self.assertTrue(TestLexer.test('''Class M:nK59{Constructor (____:_;_:Array [Array [Array [Array [Array [Boolean ,066],067],0B1],04_6_553_1],066]){} }Class _r8b{Var W,$8:Boolean ;}Class H:_{}''','''Class,M,:,nK59,{,Constructor,(,____,:,_,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,066,],,,067,],,,0B1,],,,0465531,],,,066,],),{,},},Class,_r8b,{,Var,W,,,$8,:,Boolean,;,},Class,H,:,_,{,},<EOF>''',101))

    def test_2963(self):
        self.assertTrue(TestLexer.test('''Class L{}Class W_{Var $D:Array [Array [Int ,043],87]=--i::$3M;Constructor (ed:Array [Array [Array [Array [Array [Array [Array [Array [Int ,0112],0112],0112],0B1],0x7_FD],0112],1],1];_:Boolean ;_,__,l_U:R){} }Class D3:_{Val _,$9,d,$_,_,_:Array [Int ,0b101011];}Class g6u{}Class A{Var $1:Array [Float ,55_8];}Class __{Destructor (){}Constructor (_,C:Array [String ,50];_,_,i,_:Array [Array [Array [Array [Array [String ,0X6A],0b11],45_76_0_6],0X7],0b101011]){}Destructor (){} }Class __6:w_{$P_(Zk4,a3,_,_r:Array [Array [Array [Array [Float ,0b1],0B111000],0b101011],01]){e_842::$_();}Destructor (){} }''','''Class,L,{,},Class,W_,{,Var,$D,:,Array,[,Array,[,Int,,,043,],,,87,],=,-,-,i,::,$3M,;,Constructor,(,ed,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0112,],,,0112,],,,0112,],,,0B1,],,,0x7FD,],,,0112,],,,1,],,,1,],;,_,:,Boolean,;,_,,,__,,,l_U,:,R,),{,},},Class,D3,:,_,{,Val,_,,,$9,,,d,,,$_,,,_,,,_,:,Array,[,Int,,,0b101011,],;,},Class,g6u,{,},Class,A,{,Var,$1,:,Array,[,Float,,,558,],;,},Class,__,{,Destructor,(,),{,},Constructor,(,_,,,C,:,Array,[,String,,,50,],;,_,,,_,,,i,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X6A,],,,0b11,],,,457606,],,,0X7,],,,0b101011,],),{,},Destructor,(,),{,},},Class,__6,:,w_,{,$P_,(,Zk4,,,a3,,,_,,,_r,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1,],,,0B111000,],,,0b101011,],,,01,],),{,e_842,::,$_,(,),;,},Destructor,(,),{,},},<EOF>''',101))

    def test_2964(self):
        self.assertTrue(TestLexer.test('''Class _c{Constructor (_:O;m,_,n_:Array [Array [Array [Array [Array [Int ,0B1010010],0B11_1],01],0B1010010],0x3];_,_h:Q){Continue ;} }''','''Class,_c,{,Constructor,(,_,:,O,;,m,,,_,,,n_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1010010,],,,0B111,],,,01,],,,0B1010010,],,,0x3,],;,_,,,_h,:,Q,),{,Continue,;,},},<EOF>''',101))

    def test_2965(self):
        self.assertTrue(TestLexer.test('''Class FM{Destructor (){}Constructor (M,MS,c_,q,__1,_S,__:_13;_I6_:Array [Array [Array [Boolean ,0B1],0X28],0x44]){} }''','''Class,FM,{,Destructor,(,),{,},Constructor,(,M,,,MS,,,c_,,,q,,,__1,,,_S,,,__,:,_13,;,_I6_,:,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0X28,],,,0x44,],),{,},},<EOF>''',101))

    def test_2966(self):
        self.assertTrue(TestLexer.test('''Class W5{Constructor (K__,s,_,_,_,L:_7y;_:Array [String ,06_21_3];_,v,h:Float ;R:Array [Array [Array [Array [Array [Array [Array [String ,0X4D],97],5_430],06],0116],0B1_0],0B1]){ {} }Val v,$v_:Array [Array [String ,0xD],97];}''','''Class,W5,{,Constructor,(,K__,,,s,,,_,,,_,,,_,,,L,:,_7y,;,_,:,Array,[,String,,,06213,],;,_,,,v,,,h,:,Float,;,R,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X4D,],,,97,],,,5430,],,,06,],,,0116,],,,0B10,],,,0B1,],),{,{,},},Val,v,,,$v_,:,Array,[,Array,[,String,,,0xD,],,,97,],;,},<EOF>''',101))

    def test_2967(self):
        self.assertTrue(TestLexer.test('''Class _4{}Class D_ZU:k0o{Val $19__o1:_;}Class _:_Lu{Val $_,$_9:w_;Constructor (_gV_,w:Boolean ;b___,_:Int ;_,H,_,_,Z:_){}Var _t,$_p:Int ;}''','''Class,_4,{,},Class,D_ZU,:,k0o,{,Val,$19__o1,:,_,;,},Class,_,:,_Lu,{,Val,$_,,,$_9,:,w_,;,Constructor,(,_gV_,,,w,:,Boolean,;,b___,,,_,:,Int,;,_,,,H,,,_,,,_,,,Z,:,_,),{,},Var,_t,,,$_p,:,Int,;,},<EOF>''',101))

    def test_2968(self):
        self.assertTrue(TestLexer.test('''Class M:_Y{Constructor (){}_(p,_V,__I,__,P1:Array [Int ,0B1001100];wF,P_3:Array [Float ,062_1]){Continue ;} }Class _6{}''','''Class,M,:,_Y,{,Constructor,(,),{,},_,(,p,,,_V,,,__I,,,__,,,P1,:,Array,[,Int,,,0B1001100,],;,wF,,,P_3,:,Array,[,Float,,,0621,],),{,Continue,;,},},Class,_6,{,},<EOF>''',101))

    def test_2969(self):
        self.assertTrue(TestLexer.test('''Class X:_VM{Constructor (_:_;_6:Array [Float ,6];M_9_,c:M;_:Array [Array [Array [String ,04],0x1],0X7]){} }Class lxw:_{Val __:u3;}Class _7:b{}''','''Class,X,:,_VM,{,Constructor,(,_,:,_,;,_6,:,Array,[,Float,,,6,],;,M_9_,,,c,:,M,;,_,:,Array,[,Array,[,Array,[,String,,,04,],,,0x1,],,,0X7,],),{,},},Class,lxw,:,_,{,Val,__,:,u3,;,},Class,_7,:,b,{,},<EOF>''',101))

    def test_2970(self):
        self.assertTrue(TestLexer.test('''Class __1{Val $i:Array [Array [Array [Array [Array [Boolean ,85],0XE],0x9],85],0x3F];$1(b_:OV6){}Var $r:Float ;}Class _Y6{}Class NP:Y{}''','''Class,__1,{,Val,$i,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,85,],,,0XE,],,,0x9,],,,85,],,,0x3F,],;,$1,(,b_,:,OV6,),{,},Var,$r,:,Float,;,},Class,_Y6,{,},Class,NP,:,Y,{,},<EOF>''',101))

    def test_2971(self):
        self.assertTrue(TestLexer.test('''Class _93:xl{Var $0,$S9:Array [String ,5];}Class T93:_{}Class T{$R_43_(c,O:Boolean ;__,v:s){ {} }Destructor (){} }''','''Class,_93,:,xl,{,Var,$0,,,$S9,:,Array,[,String,,,5,],;,},Class,T93,:,_,{,},Class,T,{,$R_43_,(,c,,,O,:,Boolean,;,__,,,v,:,s,),{,{,},},Destructor,(,),{,},},<EOF>''',101))

    def test_2972(self):
        self.assertTrue(TestLexer.test('''Class _cW{$v70(y:String ;ON,_W4k,LSg_:Array [Float ,64];Y:I5){}Constructor (___R:Array [Array [String ,0X7C_8],0x3D];_,v374T98,f170,x3:__){} }''','''Class,_cW,{,$v70,(,y,:,String,;,ON,,,_W4k,,,LSg_,:,Array,[,Float,,,64,],;,Y,:,I5,),{,},Constructor,(,___R,:,Array,[,Array,[,String,,,0X7C8,],,,0x3D,],;,_,,,v374T98,,,f170,,,x3,:,__,),{,},},<EOF>''',101))

    def test_2973(self):
        self.assertTrue(TestLexer.test('''Class _8_:_{Val k,_:String ;Var A,$2,_y,_T:String ;Constructor (B_:Array [Boolean ,0122];Bs8,_b:Array [Array [Array [Array [Float ,034],0122],0122],0B1100];_0_,_:___;_:String ){} }''','''Class,_8_,:,_,{,Val,k,,,_,:,String,;,Var,A,,,$2,,,_y,,,_T,:,String,;,Constructor,(,B_,:,Array,[,Boolean,,,0122,],;,Bs8,,,_b,:,Array,[,Array,[,Array,[,Array,[,Float,,,034,],,,0122,],,,0122,],,,0B1100,],;,_0_,,,_,:,___,;,_,:,String,),{,},},<EOF>''',101))

    def test_2974(self):
        self.assertTrue(TestLexer.test('''Class M09:_{}Class pc:__{Var $H_,$ZN_,y_4,k,$59:Float ;Val $4:Boolean ;}Class _{Var $_:Array [Float ,4];}Class _:__n2{}Class __:_{Val $9,$5,_B:Array [Boolean ,0X5];}''','''Class,M09,:,_,{,},Class,pc,:,__,{,Var,$H_,,,$ZN_,,,y_4,,,k,,,$59,:,Float,;,Val,$4,:,Boolean,;,},Class,_,{,Var,$_,:,Array,[,Float,,,4,],;,},Class,_,:,__n2,{,},Class,__,:,_,{,Val,$9,,,$5,,,_B,:,Array,[,Boolean,,,0X5,],;,},<EOF>''',101))

    def test_2975(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _J_GV{Constructor (U:Int ;K,_,_1_z,_,_h:__o){}Var $_9,_4_:Boolean ;}Class _:D_{Constructor (){}Val $v,$n:K3;_(){Break ;Continue ;} }''','''Class,_,:,_,{,},Class,_J_GV,{,Constructor,(,U,:,Int,;,K,,,_,,,_1_z,,,_,,,_h,:,__o,),{,},Var,$_9,,,_4_,:,Boolean,;,},Class,_,:,D_,{,Constructor,(,),{,},Val,$v,,,$n,:,K3,;,_,(,),{,Break,;,Continue,;,},},<EOF>''',101))

    def test_2976(self):
        self.assertTrue(TestLexer.test('''Class _:dc{}Class X:Q_{}Class _:iK{}Class c5_:x_319_n5{Constructor (w:l;_ha,_,__,__6:Float ){}Destructor (){}Var r__6,$9:Array [Float ,06];}''','''Class,_,:,dc,{,},Class,X,:,Q_,{,},Class,_,:,iK,{,},Class,c5_,:,x_319_n5,{,Constructor,(,w,:,l,;,_ha,,,_,,,__,,,__6,:,Float,),{,},Destructor,(,),{,},Var,r__6,,,$9,:,Array,[,Float,,,06,],;,},<EOF>''',101))

    def test_2977(self):
        self.assertTrue(TestLexer.test('''Class _2:_3_2{Constructor (ML:Array [Array [Float ,0x3B],0xD];_:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0b110101],72],72],0XF],0b110101],0x39],0b110101],025],0X23]){Break ;}Var _,_,$Z:Boolean ;}''','''Class,_2,:,_3_2,{,Constructor,(,ML,:,Array,[,Array,[,Float,,,0x3B,],,,0xD,],;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b110101,],,,72,],,,72,],,,0XF,],,,0b110101,],,,0x39,],,,0b110101,],,,025,],,,0X23,],),{,Break,;,},Var,_,,,_,,,$Z,:,Boolean,;,},<EOF>''',101))

    def test_2978(self):
        self.assertTrue(TestLexer.test('''Class ib:_{}Class Q3:d1D{Destructor (){}Destructor (){}$o(){Var _,__,q,r:Array [Array [Int ,85],0125];{} }Var $Z_0:Array [Float ,03];}Class yS{}''','''Class,ib,:,_,{,},Class,Q3,:,d1D,{,Destructor,(,),{,},Destructor,(,),{,},$o,(,),{,Var,_,,,__,,,q,,,r,:,Array,[,Array,[,Int,,,85,],,,0125,],;,{,},},Var,$Z_0,:,Array,[,Float,,,03,],;,},Class,yS,{,},<EOF>''',101))

    def test_2979(self):
        self.assertTrue(TestLexer.test('''Class _:m{$R4(_0,o:Int ;l_,Aw,_53_,_:Boolean ;P:Boolean ){}Val $0_,_,$_:j;Var $7_,$9:Boolean ;}Class T:V{}Class v:__9{}''','''Class,_,:,m,{,$R4,(,_0,,,o,:,Int,;,l_,,,Aw,,,_53_,,,_,:,Boolean,;,P,:,Boolean,),{,},Val,$0_,,,_,,,$_,:,j,;,Var,$7_,,,$9,:,Boolean,;,},Class,T,:,V,{,},Class,v,:,__9,{,},<EOF>''',101))

    def test_2980(self):
        self.assertTrue(TestLexer.test('''Class ___{Constructor (C_8H,i,H:Array [Float ,47]){Break ;}Var $e_,$2,$T:Boolean ;}Class K:_m{Constructor (_:Array [String ,0b1];_,_,_:__;T,Dd,_:Array [Array [String ,0b11],0B1_0]){} }''','''Class,___,{,Constructor,(,C_8H,,,i,,,H,:,Array,[,Float,,,47,],),{,Break,;,},Var,$e_,,,$2,,,$T,:,Boolean,;,},Class,K,:,_m,{,Constructor,(,_,:,Array,[,String,,,0b1,],;,_,,,_,,,_,:,__,;,T,,,Dd,,,_,:,Array,[,Array,[,String,,,0b11,],,,0B10,],),{,},},<EOF>''',101))

    def test_2981(self):
        self.assertTrue(TestLexer.test('''Class _O:d{Constructor (__7:Array [String ,16];t,Qh_:Array [Int ,0x3E]){Continue ;Continue ;}$4_(_2_,b42,_2,M60_p:SV4Q;_,_,_,_0:u_ZK){}Constructor (_,_N_,__L:Float ){}Constructor (){} }''','''Class,_O,:,d,{,Constructor,(,__7,:,Array,[,String,,,16,],;,t,,,Qh_,:,Array,[,Int,,,0x3E,],),{,Continue,;,Continue,;,},$4_,(,_2_,,,b42,,,_2,,,M60_p,:,SV4Q,;,_,,,_,,,_,,,_0,:,u_ZK,),{,},Constructor,(,_,,,_N_,,,__L,:,Float,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_2982(self):
        self.assertTrue(TestLexer.test('''Class _4:_r{Var $21:Array [String ,066];Constructor (){Var C,_,_,_,wmf1W:Array [Array [Int ,7],0x4D];}Destructor (){} }Class ___{}Class tj:n{}Class t:E{}Class _G{}''','''Class,_4,:,_r,{,Var,$21,:,Array,[,String,,,066,],;,Constructor,(,),{,Var,C,,,_,,,_,,,_,,,wmf1W,:,Array,[,Array,[,Int,,,7,],,,0x4D,],;,},Destructor,(,),{,},},Class,___,{,},Class,tj,:,n,{,},Class,t,:,E,{,},Class,_G,{,},<EOF>''',101))

    def test_2983(self):
        self.assertTrue(TestLexer.test('''Class _90:_r{}Class jPf_h{k(_:_;__:String ){}Var $J___,I:Float ;Destructor (){} }Class _q_:FXc7{}Class ___6:_9_{_(k4E6v,B,_:Array [String ,0B1];c,_7,_:Array [Array [Array [Array [Array [Int ,0110],0110],015_2],61],0XCD_7];Bd61__:Int ;t,K,C,Z:Array [Array [Boolean ,0b1],0110];j:Boolean ){} }Class Tbt0:y{}''','''Class,_90,:,_r,{,},Class,jPf_h,{,k,(,_,:,_,;,__,:,String,),{,},Var,$J___,,,I,:,Float,;,Destructor,(,),{,},},Class,_q_,:,FXc7,{,},Class,___6,:,_9_,{,_,(,k4E6v,,,B,,,_,:,Array,[,String,,,0B1,],;,c,,,_7,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0110,],,,0110,],,,0152,],,,61,],,,0XCD7,],;,Bd61__,:,Int,;,t,,,K,,,C,,,Z,:,Array,[,Array,[,Boolean,,,0b1,],,,0110,],;,j,:,Boolean,),{,},},Class,Tbt0,:,y,{,},<EOF>''',101))

    def test_2984(self):
        self.assertTrue(TestLexer.test('''Class g9_:FU_{Var Dz,C_y_A,_,vf:Float ;Constructor (_w:_;_08F,_B,_t0:Array [Array [Array [Array [Array [Array [Array [Boolean ,0B100000],066],0B1_01_0],0B100000],0B1],02_2_354],11];v:Array [Array [Array [Array [Float ,0b10111],11],07],0B100000]){} }''','''Class,g9_,:,FU_,{,Var,Dz,,,C_y_A,,,_,,,vf,:,Float,;,Constructor,(,_w,:,_,;,_08F,,,_B,,,_t0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B100000,],,,066,],,,0B1010,],,,0B100000,],,,0B1,],,,022354,],,,11,],;,v,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b10111,],,,11,],,,07,],,,0B100000,],),{,},},<EOF>''',101))

    def test_2985(self):
        self.assertTrue(TestLexer.test('''Class _{Val $r,_,_:Array [Array [Array [Float ,0x4_F_0_7_E_4],53],53];Var l_:String ;__(_:String ;b3__,Jo,O,J:Boolean ){Continue ;} }''','''Class,_,{,Val,$r,,,_,,,_,:,Array,[,Array,[,Array,[,Float,,,0x4F07E4,],,,53,],,,53,],;,Var,l_,:,String,;,__,(,_,:,String,;,b3__,,,Jo,,,O,,,J,:,Boolean,),{,Continue,;,},},<EOF>''',101))

    def test_2986(self):
        self.assertTrue(TestLexer.test('''Class Q1_:C{Constructor (C,EW__k:Array [Array [Int ,05_3_1],86];Z:__5_;j:Int ;_,JN7,E:Int ){__i::$p();}DQ(){}Constructor (){} }''','''Class,Q1_,:,C,{,Constructor,(,C,,,EW__k,:,Array,[,Array,[,Int,,,0531,],,,86,],;,Z,:,__5_,;,j,:,Int,;,_,,,JN7,,,E,:,Int,),{,__i,::,$p,(,),;,},DQ,(,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_2987(self):
        self.assertTrue(TestLexer.test('''Class _V_88{Var $_G:Array [Array [Array [Array [Array [Array [Float ,0XA_6_F6_D_7_E],0B1],0X38],0x22],0B111110],0X38];}''','''Class,_V_88,{,Var,$_G,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0XA6F6D7E,],,,0B1,],,,0X38,],,,0x22,],,,0B111110,],,,0X38,],;,},<EOF>''',101))

    def test_2988(self):
        self.assertTrue(TestLexer.test('''Class _pI:_{Val q_,_,$N,_:Array [Float ,0x95];Constructor (h3,R_t:Array [Array [Boolean ,2],0B1001]){}Constructor (J_,h:QbB;__:Array [Array [String ,0B1001],9];_4:v){}Val _C3,$5,_,$L_:Int ;}''','''Class,_pI,:,_,{,Val,q_,,,_,,,$N,,,_,:,Array,[,Float,,,0x95,],;,Constructor,(,h3,,,R_t,:,Array,[,Array,[,Boolean,,,2,],,,0B1001,],),{,},Constructor,(,J_,,,h,:,QbB,;,__,:,Array,[,Array,[,String,,,0B1001,],,,9,],;,_4,:,v,),{,},Val,_C3,,,$5,,,_,,,$L_,:,Int,;,},<EOF>''',101))

    def test_2989(self):
        self.assertTrue(TestLexer.test('''Class _{$W(i_:_r;O_:Array [Array [Int ,0X64],38];I3:Int ;H,nH1,_:String ;_H:_){}Val $01,a:String ;}Class V:_3n_{}Class n4{}''','''Class,_,{,$W,(,i_,:,_r,;,O_,:,Array,[,Array,[,Int,,,0X64,],,,38,],;,I3,:,Int,;,H,,,nH1,,,_,:,String,;,_H,:,_,),{,},Val,$01,,,a,:,String,;,},Class,V,:,_3n_,{,},Class,n4,{,},<EOF>''',101))

    def test_2990(self):
        self.assertTrue(TestLexer.test('''Class P:T_{}Class z{Var _:_;Var $7,$s_:L7_T_;Val _MX:Array [Boolean ,0b1];}Class _{}Class g1:w6{Constructor (_7,_,m,D,t:Int ){}Var ET:Boolean ;}''','''Class,P,:,T_,{,},Class,z,{,Var,_,:,_,;,Var,$7,,,$s_,:,L7_T_,;,Val,_MX,:,Array,[,Boolean,,,0b1,],;,},Class,_,{,},Class,g1,:,w6,{,Constructor,(,_7,,,_,,,m,,,D,,,t,:,Int,),{,},Var,ET,:,Boolean,;,},<EOF>''',101))

    def test_2991(self):
        self.assertTrue(TestLexer.test('''Class _98_:_ioxsq{Constructor (n,g,t_,_je_,V_,___l,h_,_,N:Array [Array [Array [String ,034],0b10],072_4];h:Array [Array [Boolean ,7],07_2];m_39:Array [Array [String ,0B1_0],0b11];Y1n1:Float ;__0:W){} }''','''Class,_98_,:,_ioxsq,{,Constructor,(,n,,,g,,,t_,,,_je_,,,V_,,,___l,,,h_,,,_,,,N,:,Array,[,Array,[,Array,[,String,,,034,],,,0b10,],,,0724,],;,h,:,Array,[,Array,[,Boolean,,,7,],,,072,],;,m_39,:,Array,[,Array,[,String,,,0B10,],,,0b11,],;,Y1n1,:,Float,;,__0,:,W,),{,},},<EOF>''',101))

    def test_2992(self):
        self.assertTrue(TestLexer.test('''Class A5{Var $3,$_:Array [Array [Float ,0X19],046];}Class _{}Class C{}Class K:rX1{qt(_4O:Array [Boolean ,0b110101];_,__Y874,__,_P_9_,o2:Float ){} }''','''Class,A5,{,Var,$3,,,$_,:,Array,[,Array,[,Float,,,0X19,],,,046,],;,},Class,_,{,},Class,C,{,},Class,K,:,rX1,{,qt,(,_4O,:,Array,[,Boolean,,,0b110101,],;,_,,,__Y874,,,__,,,_P_9_,,,o2,:,Float,),{,},},<EOF>''',101))

    def test_2993(self):
        self.assertTrue(TestLexer.test('''Class I{$5u_8ps_N_(){}Destructor (){}Var $9b:String ;Constructor (i:Array [Array [Array [Array [Array [Array [String ,0xBE],0x5C],2],0b1000000],0106],0x5C];_:Array [Int ,0106];_:n){}Destructor (){} }''','''Class,I,{,$5u_8ps_N_,(,),{,},Destructor,(,),{,},Var,$9b,:,String,;,Constructor,(,i,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0xBE,],,,0x5C,],,,2,],,,0b1000000,],,,0106,],,,0x5C,],;,_,:,Array,[,Int,,,0106,],;,_,:,n,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_2994(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){s___::$6_();Continue ;} }Class _{Val $9,$z,$C_,$7_5_:Boolean ;}Class U:___2y{Destructor (){}Var $_8:Array [Array [String ,0b1],010];}''','''Class,_,{,Destructor,(,),{,s___,::,$6_,(,),;,Continue,;,},},Class,_,{,Val,$9,,,$z,,,$C_,,,$7_5_,:,Boolean,;,},Class,U,:,___2y,{,Destructor,(,),{,},Var,$_8,:,Array,[,Array,[,String,,,0b1,],,,010,],;,},<EOF>''',101))

    def test_2995(self):
        self.assertTrue(TestLexer.test('''Class _3L:_{Var _,_:Array [Array [Boolean ,0b100],0xA3];Val $0:String ;Destructor (){} }Class r_b:b{}Class _{Constructor (_:_4;_1:Array [Boolean ,0X16];_:I_){} }''','''Class,_3L,:,_,{,Var,_,,,_,:,Array,[,Array,[,Boolean,,,0b100,],,,0xA3,],;,Val,$0,:,String,;,Destructor,(,),{,},},Class,r_b,:,b,{,},Class,_,{,Constructor,(,_,:,_4,;,_1,:,Array,[,Boolean,,,0X16,],;,_,:,I_,),{,},},<EOF>''',101))

    def test_2996(self):
        self.assertTrue(TestLexer.test('''Class sH{Destructor (){Break ;Continue ;} }Class _G:kK{Var $e,$3:Array [Int ,055];Var t,$U:Boolean ;Constructor (m,N:m){} }Class _{}Class O:sF{Val $3_,$S:lU_;}''','''Class,sH,{,Destructor,(,),{,Break,;,Continue,;,},},Class,_G,:,kK,{,Var,$e,,,$3,:,Array,[,Int,,,055,],;,Var,t,,,$U,:,Boolean,;,Constructor,(,m,,,N,:,m,),{,},},Class,_,{,},Class,O,:,sF,{,Val,$3_,,,$S,:,lU_,;,},<EOF>''',101))

    def test_2997(self):
        self.assertTrue(TestLexer.test('''Class _8e9r2:ty_{Destructor (){Val Vw_,__,_i_,DxE:String ;}Destructor (){} }Class __{Destructor (){Break ;} }Class V_9_:_{Val $_,$j__:Array [Boolean ,51];}''','''Class,_8e9r2,:,ty_,{,Destructor,(,),{,Val,Vw_,,,__,,,_i_,,,DxE,:,String,;,},Destructor,(,),{,},},Class,__,{,Destructor,(,),{,Break,;,},},Class,V_9_,:,_,{,Val,$_,,,$j__,:,Array,[,Boolean,,,51,],;,},<EOF>''',101))

    def test_2998(self):
        self.assertTrue(TestLexer.test('''Class i5:_t_{}Class _{}Class _{}Class A8:_{}Class R_:_K{Var $Y,$n,_:Array [Array [Array [String ,0121],02_7],06];}''','''Class,i5,:,_t_,{,},Class,_,{,},Class,_,{,},Class,A8,:,_,{,},Class,R_,:,_K,{,Var,$Y,,,$n,,,_,:,Array,[,Array,[,Array,[,String,,,0121,],,,027,],,,06,],;,},<EOF>''',101))

    def test_2999(self):
        self.assertTrue(TestLexer.test('''Class o{}Class _k6:L{$V6(r69_N,_:_;_1lw:Float ;B1y,_9,_:String ;B_2B_:_;E_,N:_5;_,o_o,_0,M:Boolean ;_0:_){} }''','''Class,o,{,},Class,_k6,:,L,{,$V6,(,r69_N,,,_,:,_,;,_1lw,:,Float,;,B1y,,,_9,,,_,:,String,;,B_2B_,:,_,;,E_,,,N,:,_5,;,_,,,o_o,,,_0,,,M,:,Boolean,;,_0,:,_,),{,},},<EOF>''',101))

    def test_3000(self):
        self.assertTrue(TestLexer.test('''Class _:z_{Var $F_:Array [Boolean ,03];}Class __{Val p08_15,$X_,_,$d:Array [Array [Array [Array [Int ,057],015_5_023],0b1_1],13];}''','''Class,_,:,z_,{,Var,$F_,:,Array,[,Boolean,,,03,],;,},Class,__,{,Val,p08_15,,,$X_,,,_,,,$d,:,Array,[,Array,[,Array,[,Array,[,Int,,,057,],,,0155023,],,,0b11,],,,13,],;,},<EOF>''',101))

    def test_3001(self):
        self.assertTrue(TestLexer.test('''Class _{Val l_:Array [Array [Array [Array [Array [Float ,03_5],0136],0b1001110],8],04];}Class _{Constructor (){}Var Z,$p_:String ;}Class __j:S{Val W,_:String ;Constructor (_F0Q,N_B:P2;e,D:Array [Float ,021];__:Int ;_,__,_:Boolean ){Break ;} }''','''Class,_,{,Val,l_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,035,],,,0136,],,,0b1001110,],,,8,],,,04,],;,},Class,_,{,Constructor,(,),{,},Var,Z,,,$p_,:,String,;,},Class,__j,:,S,{,Val,W,,,_,:,String,;,Constructor,(,_F0Q,,,N_B,:,P2,;,e,,,D,:,Array,[,Float,,,021,],;,__,:,Int,;,_,,,__,,,_,:,Boolean,),{,Break,;,},},<EOF>''',101))

    def test_3002(self):
        self.assertTrue(TestLexer.test('''Class c:_{}Class U0{$5(G6u:_;t8:Int ;l,pF:Boolean ;__,_:Boolean ;_:Array [Array [String ,0X62A_3F_3D],0X29]){} }''','''Class,c,:,_,{,},Class,U0,{,$5,(,G6u,:,_,;,t8,:,Int,;,l,,,pF,:,Boolean,;,__,,,_,:,Boolean,;,_,:,Array,[,Array,[,String,,,0X62A3F3D,],,,0X29,],),{,},},<EOF>''',101))

    def test_3003(self):
        self.assertTrue(TestLexer.test('''Class _Q8{Constructor (_:__4;_M2__4,j,_,V__:Int ;_,_,__,_Cd_,_2__39_,B,_:j___;_,__f,_,__:Float ;UM,d,h,_:Array [String ,01]){} }Class Ik:i{}''','''Class,_Q8,{,Constructor,(,_,:,__4,;,_M2__4,,,j,,,_,,,V__,:,Int,;,_,,,_,,,__,,,_Cd_,,,_2__39_,,,B,,,_,:,j___,;,_,,,__f,,,_,,,__,:,Float,;,UM,,,d,,,h,,,_,:,Array,[,String,,,01,],),{,},},Class,Ik,:,i,{,},<EOF>''',101))

    def test_3004(self):
        self.assertTrue(TestLexer.test('''Class _:_06_m{Destructor (){}Constructor (Q6:Y_;N,r7r___y_:String ;_3h_,Z8,Lw:Boolean ;_,_:Int ;l:Boolean ){} }Class __{Var _:Float ;Constructor (_,D72:_){Val _0,m:String ;j::$6_();Continue ;} }Class U:_5X_2{}''','''Class,_,:,_06_m,{,Destructor,(,),{,},Constructor,(,Q6,:,Y_,;,N,,,r7r___y_,:,String,;,_3h_,,,Z8,,,Lw,:,Boolean,;,_,,,_,:,Int,;,l,:,Boolean,),{,},},Class,__,{,Var,_,:,Float,;,Constructor,(,_,,,D72,:,_,),{,Val,_0,,,m,:,String,;,j,::,$6_,(,),;,Continue,;,},},Class,U,:,_5X_2,{,},<EOF>''',101))

    def test_3005(self):
        self.assertTrue(TestLexer.test('''Class _38_{}Class x1ra6:i{}Class u:_{$__(){Val T1:String ;} }Class y6{Val J,$__:Float ;}Class _{}Class _5Oh__:_5{Var $1nN_x,$_,$_r_:Q_l8_9;}''','''Class,_38_,{,},Class,x1ra6,:,i,{,},Class,u,:,_,{,$__,(,),{,Val,T1,:,String,;,},},Class,y6,{,Val,J,,,$__,:,Float,;,},Class,_,{,},Class,_5Oh__,:,_5,{,Var,$1nN_x,,,$_,,,$_r_,:,Q_l8_9,;,},<EOF>''',101))

    def test_3006(self):
        self.assertTrue(TestLexer.test('''Class _7:_{_(_:Array [Array [Array [Float ,0X2],0b1_1],01_4_42_52_7];vep,K:_668B83;_48_,_,v:Boolean ){Break ;} }''','''Class,_7,:,_,{,_,(,_,:,Array,[,Array,[,Array,[,Float,,,0X2,],,,0b11,],,,01442527,],;,vep,,,K,:,_668B83,;,_48_,,,_,,,v,:,Boolean,),{,Break,;,},},<EOF>''',101))

    def test_3007(self):
        self.assertTrue(TestLexer.test('''Class _I_5U:r{}Class P{}Class E__w_m:V{Var $_X_T46v2:Array [Array [Int ,50],0x9];$S(_,w954,p,_,c_:x){} }Class i{}Class _db6{}''','''Class,_I_5U,:,r,{,},Class,P,{,},Class,E__w_m,:,V,{,Var,$_X_T46v2,:,Array,[,Array,[,Int,,,50,],,,0x9,],;,$S,(,_,,,w954,,,p,,,_,,,c_,:,x,),{,},},Class,i,{,},Class,_db6,{,},<EOF>''',101))

    def test_3008(self):
        self.assertTrue(TestLexer.test('''Class h2{jX(_2G_M:_1yj5;P,D8:Array [Int ,414];p,Z:Boolean ;n:Array [Array [Int ,5],0b11]){}Val $_:_f;Destructor (){} }Class _:G0v__v_{}''','''Class,h2,{,jX,(,_2G_M,:,_1yj5,;,P,,,D8,:,Array,[,Int,,,414,],;,p,,,Z,:,Boolean,;,n,:,Array,[,Array,[,Int,,,5,],,,0b11,],),{,},Val,$_,:,_f,;,Destructor,(,),{,},},Class,_,:,G0v__v_,{,},<EOF>''',101))

    def test_3009(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _:S{}Class D{Constructor (){}rP(e,H3,X,_83c:Array [Array [Boolean ,7_5],0XC_A];_L:E;v:w;U,_5,_0,HU6:__){ {} }}''','''Class,_,{,},Class,_,:,S,{,},Class,D,{,Constructor,(,),{,},rP,(,e,,,H3,,,X,,,_83c,:,Array,[,Array,[,Boolean,,,75,],,,0XCA,],;,_L,:,E,;,v,:,w,;,U,,,_5,,,_0,,,HU6,:,__,),{,{,},},},<EOF>''',101))

    def test_3010(self):
        self.assertTrue(TestLexer.test('''Class np:_{}Class __2__{Constructor (_:Array [Array [Array [Array [Int ,0B1],20],0b1100010],0B1010110];a_DA:Int ){} }Class __:_{}Class N__G0p0P:C{Var _,h:Array [String ,0B1_0];}''','''Class,np,:,_,{,},Class,__2__,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,20,],,,0b1100010,],,,0B1010110,],;,a_DA,:,Int,),{,},},Class,__,:,_,{,},Class,N__G0p0P,:,C,{,Var,_,,,h,:,Array,[,String,,,0B10,],;,},<EOF>''',101))

    def test_3011(self):
        self.assertTrue(TestLexer.test('''Class __:__{_(J_:v){Break ;} }Class v_t_5q{$__(_,w,_:Float ;o:Array [Int ,03];kY:Float ;_,_:Array [Int ,0B100001];M,_:Array [Array [Boolean ,01],076];x6P_:Array [Array [Array [Array [Boolean ,055_20_2],0b1010001],07_10],0X2_26]){}Var u:String ;Val $_7:_v4;Val $8JA9:x;}''','''Class,__,:,__,{,_,(,J_,:,v,),{,Break,;,},},Class,v_t_5q,{,$__,(,_,,,w,,,_,:,Float,;,o,:,Array,[,Int,,,03,],;,kY,:,Float,;,_,,,_,:,Array,[,Int,,,0B100001,],;,M,,,_,:,Array,[,Array,[,Boolean,,,01,],,,076,],;,x6P_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,055202,],,,0b1010001,],,,0710,],,,0X226,],),{,},Var,u,:,String,;,Val,$_7,:,_v4,;,Val,$8JA9,:,x,;,},<EOF>''',101))

    def test_3012(self):
        self.assertTrue(TestLexer.test('''Class Q:_{Constructor (_7:Boolean ;_,__Ym:Array [Array [String ,0B1100],0106];__r_:a;_,_,__4x:M2D){} }Class a_X_:wc_{}''','''Class,Q,:,_,{,Constructor,(,_7,:,Boolean,;,_,,,__Ym,:,Array,[,Array,[,String,,,0B1100,],,,0106,],;,__r_,:,a,;,_,,,_,,,__4x,:,M2D,),{,},},Class,a_X_,:,wc_,{,},<EOF>''',101))

    def test_3013(self):
        self.assertTrue(TestLexer.test('''Class A{Constructor (_,m,_:Array [String ,87]){Return ;Break ;Return ;Break ;}Constructor (){Var _,O,_:Int ;}Var $40_3c3w:Array [Array [Array [Int ,0X22],0b1],4];Val Gy,$c:c;}Class _8:_{}Class _3{Constructor (B:Array [Boolean ,34];r92_,_,K7,V,_:H;_72_,__:Array [String ,7];Mv,H,_:_B;_:Array [Array [Float ,023],0x6]){} }''','''Class,A,{,Constructor,(,_,,,m,,,_,:,Array,[,String,,,87,],),{,Return,;,Break,;,Return,;,Break,;,},Constructor,(,),{,Var,_,,,O,,,_,:,Int,;,},Var,$40_3c3w,:,Array,[,Array,[,Array,[,Int,,,0X22,],,,0b1,],,,4,],;,Val,Gy,,,$c,:,c,;,},Class,_8,:,_,{,},Class,_3,{,Constructor,(,B,:,Array,[,Boolean,,,34,],;,r92_,,,_,,,K7,,,V,,,_,:,H,;,_72_,,,__,:,Array,[,String,,,7,],;,Mv,,,H,,,_,:,_B,;,_,:,Array,[,Array,[,Float,,,023,],,,0x6,],),{,},},<EOF>''',101))

    def test_3014(self):
        self.assertTrue(TestLexer.test('''Class _{Var A:Array [Array [String ,021],0x3];Constructor (R5:Float ){}Constructor (_,A:_;_:Array [Boolean ,05];_e:_;__:H3_;_:String ;H,_:_;_,z,_,_:Boolean ){}Var _:Array [Boolean ,021];}''','''Class,_,{,Var,A,:,Array,[,Array,[,String,,,021,],,,0x3,],;,Constructor,(,R5,:,Float,),{,},Constructor,(,_,,,A,:,_,;,_,:,Array,[,Boolean,,,05,],;,_e,:,_,;,__,:,H3_,;,_,:,String,;,H,,,_,:,_,;,_,,,z,,,_,,,_,:,Boolean,),{,},Var,_,:,Array,[,Boolean,,,021,],;,},<EOF>''',101))

    def test_3015(self):
        self.assertTrue(TestLexer.test('''Class _:E{Val _32_:String ;__c(){} }Class t_:X{l_(){}Constructor (t_:Array [Float ,046]){Break ;}Constructor (){} }''','''Class,_,:,E,{,Val,_32_,:,String,;,__c,(,),{,},},Class,t_,:,X,{,l_,(,),{,},Constructor,(,t_,:,Array,[,Float,,,046,],),{,Break,;,},Constructor,(,),{,},},<EOF>''',101))

    def test_3016(self):
        self.assertTrue(TestLexer.test('''Class _:h_0_S{Var xR__d6_,_28:Array [Array [Array [Array [Array [Array [Array [Int ,83],0X23],83],0106],83],36],0106];}''','''Class,_,:,h_0_S,{,Var,xR__d6_,,,_28,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,83,],,,0X23,],,,83,],,,0106,],,,83,],,,36,],,,0106,],;,},<EOF>''',101))

    def test_3017(self):
        self.assertTrue(TestLexer.test('''Class a_{Destructor (){}_(_7:M_;_lPr06sF,_,_,d:Float ){} }Class r13X_3_{Constructor (fr:_;_g__:Int ;_p_,b:String ;Xb_,__,_,J:Int ;_,N,_h,Q,__v:Array [Array [Boolean ,0X62],43];q,_s_v_,_bn:Array [Int ,0B10101]){}Var c,$8_ZiOvq:String ;Destructor (){} }Class _{Var $0:String ;}Class A8:t{$cK(){M::$8_.__();}Destructor (){} }Class ___q3U8K_:_{}Class D:_x8{Constructor (___,i_:Array [Float ,0b1]){} }Class _:_P{}''','''Class,a_,{,Destructor,(,),{,},_,(,_7,:,M_,;,_lPr06sF,,,_,,,_,,,d,:,Float,),{,},},Class,r13X_3_,{,Constructor,(,fr,:,_,;,_g__,:,Int,;,_p_,,,b,:,String,;,Xb_,,,__,,,_,,,J,:,Int,;,_,,,N,,,_h,,,Q,,,__v,:,Array,[,Array,[,Boolean,,,0X62,],,,43,],;,q,,,_s_v_,,,_bn,:,Array,[,Int,,,0B10101,],),{,},Var,c,,,$8_ZiOvq,:,String,;,Destructor,(,),{,},},Class,_,{,Var,$0,:,String,;,},Class,A8,:,t,{,$cK,(,),{,M,::,$8_,.,__,(,),;,},Destructor,(,),{,},},Class,___q3U8K_,:,_,{,},Class,D,:,_x8,{,Constructor,(,___,,,i_,:,Array,[,Float,,,0b1,],),{,},},Class,_,:,_P,{,},<EOF>''',101))

    def test_3018(self):
        self.assertTrue(TestLexer.test('''Class _{}Class n_5_:_{}Class __:is34{Val _,_,$0_,_,W5,$_1_,$_:Array [Array [String ,02_2],0135];Constructor (){ {} }}''','''Class,_,{,},Class,n_5_,:,_,{,},Class,__,:,is34,{,Val,_,,,_,,,$0_,,,_,,,W5,,,$_1_,,,$_,:,Array,[,Array,[,String,,,022,],,,0135,],;,Constructor,(,),{,{,},},},<EOF>''',101))

    def test_3019(self):
        self.assertTrue(TestLexer.test('''Class a8Dl_k:c{}Class m20y{$8(v,n,zI:Array [Float ,3];_,_q,_:Boolean ;_,_5:Boolean ;H,_,_7,_,W:Boolean ;__q:_u_H_9){} }Class _Y{}''','''Class,a8Dl_k,:,c,{,},Class,m20y,{,$8,(,v,,,n,,,zI,:,Array,[,Float,,,3,],;,_,,,_q,,,_,:,Boolean,;,_,,,_5,:,Boolean,;,H,,,_,,,_7,,,_,,,W,:,Boolean,;,__q,:,_u_H_9,),{,},},Class,_Y,{,},<EOF>''',101))

    def test_3020(self):
        self.assertTrue(TestLexer.test('''Class _a:q{$4S5(_Vexw_c,__:Float ;D,C_,_,T_:String ;_,__,__,UL:Boolean ;_:Int ;_:Array [Array [String ,0b1],053_44];_E__,_,j_:Float ;__:g;_:Array [Array [Array [String ,77],0x3_3],066]){} }''','''Class,_a,:,q,{,$4S5,(,_Vexw_c,,,__,:,Float,;,D,,,C_,,,_,,,T_,:,String,;,_,,,__,,,__,,,UL,:,Boolean,;,_,:,Int,;,_,:,Array,[,Array,[,String,,,0b1,],,,05344,],;,_E__,,,_,,,j_,:,Float,;,__,:,g,;,_,:,Array,[,Array,[,Array,[,String,,,77,],,,0x33,],,,066,],),{,},},<EOF>''',101))

    def test_3021(self):
        self.assertTrue(TestLexer.test('''Class _:_89{$_(yR3__,_:T8;C,_1H:Array [Array [Array [Int ,054],0b1_0],0b101010];__:Array [String ,0x13]){} }Class k{}Class U{}Class P__1{}Class Uj_:_{}Class __{}''','''Class,_,:,_89,{,$_,(,yR3__,,,_,:,T8,;,C,,,_1H,:,Array,[,Array,[,Array,[,Int,,,054,],,,0b10,],,,0b101010,],;,__,:,Array,[,String,,,0x13,],),{,},},Class,k,{,},Class,U,{,},Class,P__1,{,},Class,Uj_,:,_,{,},Class,__,{,},<EOF>''',101))

    def test_3022(self):
        self.assertTrue(TestLexer.test('''Class _UP{Destructor (){J::$_.Gec();Return ;{}Break ;Val _:String ;{_::$_9_9=!!!!!--m3::$NI2._K.k35O._.JC;Continue ;Continue ;Break ;}Return ;} }''','''Class,_UP,{,Destructor,(,),{,J,::,$_,.,Gec,(,),;,Return,;,{,},Break,;,Val,_,:,String,;,{,_,::,$_9_9,=,!,!,!,!,!,-,-,m3,::,$NI2,.,_K,.,k35O,.,_,.,JC,;,Continue,;,Continue,;,Break,;,},Return,;,},},<EOF>''',101))

    def test_3023(self):
        self.assertTrue(TestLexer.test('''Class _k:T{Val _:Boolean =J::$_5._();Destructor (){}Constructor (){}Destructor (){} }Class _:_{Val $9,_68:Array [Int ,0x4D];}''','''Class,_k,:,T,{,Val,_,:,Boolean,=,J,::,$_5,.,_,(,),;,Destructor,(,),{,},Constructor,(,),{,},Destructor,(,),{,},},Class,_,:,_,{,Val,$9,,,_68,:,Array,[,Int,,,0x4D,],;,},<EOF>''',101))

    def test_3024(self):
        self.assertTrue(TestLexer.test('''Class u3q3:__{Destructor (){}Constructor (__o:String ;A1C,_7KS:Array [Array [Array [Int ,0131],0b1010101],0b10_1_00]){Break ;} }''','''Class,u3q3,:,__,{,Destructor,(,),{,},Constructor,(,__o,:,String,;,A1C,,,_7KS,:,Array,[,Array,[,Array,[,Int,,,0131,],,,0b1010101,],,,0b10100,],),{,Break,;,},},<EOF>''',101))

    def test_3025(self):
        self.assertTrue(TestLexer.test('''Class b647_93:y{}Class U5:J{Val $5:Array [Array [Boolean ,0b1000000],3];Constructor (kv,__:Array [Array [Array [Array [Array [Array [String ,3],0X2C],7_4_5],07],3],0x42]){} }''','''Class,b647_93,:,y,{,},Class,U5,:,J,{,Val,$5,:,Array,[,Array,[,Boolean,,,0b1000000,],,,3,],;,Constructor,(,kv,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,3,],,,0X2C,],,,745,],,,07,],,,3,],,,0x42,],),{,},},<EOF>''',101))

    def test_3026(self):
        self.assertTrue(TestLexer.test('''Class _7aw:P{}Class _:U{Constructor (){}Val $_,$_,$aK:k6_;Constructor (){} }Class _:q{Val $_n:Boolean ;Destructor (){Break ;}Destructor (){Val _:g_;}Constructor (){Return ;} }''','''Class,_7aw,:,P,{,},Class,_,:,U,{,Constructor,(,),{,},Val,$_,,,$_,,,$aK,:,k6_,;,Constructor,(,),{,},},Class,_,:,q,{,Val,$_n,:,Boolean,;,Destructor,(,),{,Break,;,},Destructor,(,),{,Val,_,:,g_,;,},Constructor,(,),{,Return,;,},},<EOF>''',101))

    def test_3027(self):
        self.assertTrue(TestLexer.test('''Class _:C{Constructor (Z:String ;zk:Array [Float ,7_8];d:Boolean ){} }Class t:K{}Class q{Destructor (){}Val $u,WL:String ;}Class N:_{Val $6Q___b:K3__;}''','''Class,_,:,C,{,Constructor,(,Z,:,String,;,zk,:,Array,[,Float,,,78,],;,d,:,Boolean,),{,},},Class,t,:,K,{,},Class,q,{,Destructor,(,),{,},Val,$u,,,WL,:,String,;,},Class,N,:,_,{,Val,$6Q___b,:,K3__,;,},<EOF>''',101))

    def test_3028(self):
        self.assertTrue(TestLexer.test('''Class t{}Class __9_S4_{}Class wb{Var $2_:Int ;Val r,dk_,$___:Float ;Constructor (_,_4:Array [Array [Array [Array [Array [String ,35],0B11010],07],0xE],0X38]){} }Class _8:__{}''','''Class,t,{,},Class,__9_S4_,{,},Class,wb,{,Var,$2_,:,Int,;,Val,r,,,dk_,,,$___,:,Float,;,Constructor,(,_,,,_4,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,35,],,,0B11010,],,,07,],,,0xE,],,,0X38,],),{,},},Class,_8,:,__,{,},<EOF>''',101))

    def test_3029(self):
        self.assertTrue(TestLexer.test('''Class U8D_{Val _:Array [Array [String ,0131],81];$_h(_:Float ;___,_P6,a:Array [Array [Boolean ,0X71],01_6]){Continue ;Continue ;Return ;Var r_,_P:Array [String ,81];}_B(){ {{} }}Destructor (){} }''','''Class,U8D_,{,Val,_,:,Array,[,Array,[,String,,,0131,],,,81,],;,$_h,(,_,:,Float,;,___,,,_P6,,,a,:,Array,[,Array,[,Boolean,,,0X71,],,,016,],),{,Continue,;,Continue,;,Return,;,Var,r_,,,_P,:,Array,[,String,,,81,],;,},_B,(,),{,{,{,},},},Destructor,(,),{,},},<EOF>''',101))

    def test_3030(self):
        self.assertTrue(TestLexer.test('''Class _A{}Class E:EU{Constructor (_69,_K:Array [Boolean ,57];W,y0,_,_:S){}$_4_(o,G,_:t;_:_;__:Array [Array [String ,57],0x4];p__,_A73_,L,____,_,e7_:Array [Array [Array [Int ,62_1],0b101010],0X8_8F_97_3];M,Y_I:_){}$_(_:Array [Float ,03];Isz5,mmG,_,v:Array [Boolean ,2_5]){} }''','''Class,_A,{,},Class,E,:,EU,{,Constructor,(,_69,,,_K,:,Array,[,Boolean,,,57,],;,W,,,y0,,,_,,,_,:,S,),{,},$_4_,(,o,,,G,,,_,:,t,;,_,:,_,;,__,:,Array,[,Array,[,String,,,57,],,,0x4,],;,p__,,,_A73_,,,L,,,____,,,_,,,e7_,:,Array,[,Array,[,Array,[,Int,,,621,],,,0b101010,],,,0X88F973,],;,M,,,Y_I,:,_,),{,},$_,(,_,:,Array,[,Float,,,03,],;,Isz5,,,mmG,,,_,,,v,:,Array,[,Boolean,,,25,],),{,},},<EOF>''',101))

    def test_3031(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _e:P{Var F,$_,$g__h:Array [Array [Float ,3_7_7],10_14];}Class H:a_3{Val $5_3:Array [Array [String ,0120],0X4C];}''','''Class,_,:,_,{,},Class,_e,:,P,{,Var,F,,,$_,,,$g__h,:,Array,[,Array,[,Float,,,377,],,,1014,],;,},Class,H,:,a_3,{,Val,$5_3,:,Array,[,Array,[,String,,,0120,],,,0X4C,],;,},<EOF>''',101))

    def test_3032(self):
        self.assertTrue(TestLexer.test('''Class _:os_{Var $_cL_,$Bw_:Array [Array [Array [Array [Array [Array [String ,36],051_7_7],0B110111],0x44],0125],7];Var _,J:Array [Float ,0b1];}''','''Class,_,:,os_,{,Var,$_cL_,,,$Bw_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,36,],,,05177,],,,0B110111,],,,0x44,],,,0125,],,,7,],;,Var,_,,,J,:,Array,[,Float,,,0b1,],;,},<EOF>''',101))

    def test_3033(self):
        self.assertTrue(TestLexer.test('''Class zE3_{$__(L:_){}Destructor (){} }Class _jw{Var $5,_:_T;}Class _{Constructor (_,U:Array [Float ,5];e_,d,t:Int ){} }''','''Class,zE3_,{,$__,(,L,:,_,),{,},Destructor,(,),{,},},Class,_jw,{,Var,$5,,,_,:,_T,;,},Class,_,{,Constructor,(,_,,,U,:,Array,[,Float,,,5,],;,e_,,,d,,,t,:,Int,),{,},},<EOF>''',101))

    def test_3034(self):
        self.assertTrue(TestLexer.test('''Class _8v:_64{Val $s,X:___U;}Class _{}Class j_:n_{Val $1,$6y,$6:Array [Float ,0B1];Constructor (){}Destructor (){} }''','''Class,_8v,:,_64,{,Val,$s,,,X,:,___U,;,},Class,_,{,},Class,j_,:,n_,{,Val,$1,,,$6y,,,$6,:,Array,[,Float,,,0B1,],;,Constructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_3035(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){}Var _O_:_;Destructor (){} }Class S:_q{}Class _{Val B,$7,$n5,r:Array [Boolean ,0B1010000];}Class e{}Class _g{}''','''Class,_,{,Destructor,(,),{,},Var,_O_,:,_,;,Destructor,(,),{,},},Class,S,:,_q,{,},Class,_,{,Val,B,,,$7,,,$n5,,,r,:,Array,[,Boolean,,,0B1010000,],;,},Class,e,{,},Class,_g,{,},<EOF>''',101))

    def test_3036(self):
        self.assertTrue(TestLexer.test('''Class _EQ{Val $__5_,$01_6t_A76,vANq,_2,$rB_,$J:G7;}Class E:z_{}Class p8{}Class u{Val _:Array [String ,0X11];}Class _M7:Y{}''','''Class,_EQ,{,Val,$__5_,,,$01_6t_A76,,,vANq,,,_2,,,$rB_,,,$J,:,G7,;,},Class,E,:,z_,{,},Class,p8,{,},Class,u,{,Val,_,:,Array,[,String,,,0X11,],;,},Class,_M7,:,Y,{,},<EOF>''',101))

    def test_3037(self):
        self.assertTrue(TestLexer.test('''Class V_:A_{Val y4,_:Float ;}Class I:I{$2(_3:ft_){}Constructor (__Eg,L_7_:ax;_,_:fo__){}Val $9Ws1,$I:Int ;Val $X:Array [Array [String ,27],076];Val _8:Float ;Constructor (u_:Array [Int ,0b101];_:Boolean ){} }''','''Class,V_,:,A_,{,Val,y4,,,_,:,Float,;,},Class,I,:,I,{,$2,(,_3,:,ft_,),{,},Constructor,(,__Eg,,,L_7_,:,ax,;,_,,,_,:,fo__,),{,},Val,$9Ws1,,,$I,:,Int,;,Val,$X,:,Array,[,Array,[,String,,,27,],,,076,],;,Val,_8,:,Float,;,Constructor,(,u_,:,Array,[,Int,,,0b101,],;,_,:,Boolean,),{,},},<EOF>''',101))

    def test_3038(self):
        self.assertTrue(TestLexer.test('''Class l:_t_V{Val $1,$_76f7:_;Constructor (g:Int ;_7,_:Array [Array [Boolean ,24],0B1_10];_,_,_Fn,AS,_:Float ;___:Array [Int ,0x7_8];U3_,__,_:Array [Array [String ,24],0X63]){}Destructor (){} }Class s:_{}''','''Class,l,:,_t_V,{,Val,$1,,,$_76f7,:,_,;,Constructor,(,g,:,Int,;,_7,,,_,:,Array,[,Array,[,Boolean,,,24,],,,0B110,],;,_,,,_,,,_Fn,,,AS,,,_,:,Float,;,___,:,Array,[,Int,,,0x78,],;,U3_,,,__,,,_,:,Array,[,Array,[,String,,,24,],,,0X63,],),{,},Destructor,(,),{,},},Class,s,:,_,{,},<EOF>''',101))

    def test_3039(self):
        self.assertTrue(TestLexer.test('''Class _{Var $___,$_,Xdp7:Array [Array [Array [Array [Array [Array [Int ,71],0B1],0102],0102],0B1000011],0102];}Class h_:__{}''','''Class,_,{,Var,$___,,,$_,,,Xdp7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,71,],,,0B1,],,,0102,],,,0102,],,,0B1000011,],,,0102,],;,},Class,h_,:,__,{,},<EOF>''',101))

    def test_3040(self):
        self.assertTrue(TestLexer.test('''Class _1_b1:_{Var $8,_2:_;Constructor (_h_b9__,__Oq,_,V:H;G_:Array [Array [Array [Int ,0B10111],21_6_4],0b10011];_,E:Array [Array [Int ,86],0X4B]){}Destructor (){} }Class _{}''','''Class,_1_b1,:,_,{,Var,$8,,,_2,:,_,;,Constructor,(,_h_b9__,,,__Oq,,,_,,,V,:,H,;,G_,:,Array,[,Array,[,Array,[,Int,,,0B10111,],,,2164,],,,0b10011,],;,_,,,E,:,Array,[,Array,[,Int,,,86,],,,0X4B,],),{,},Destructor,(,),{,},},Class,_,{,},<EOF>''',101))

    def test_3041(self):
        self.assertTrue(TestLexer.test('''Class __7__{_Pue__(){Continue ;} }Class k0__:_0v{Var $9:Array [Array [Array [String ,86_0_6],9],0b1_011];$SQ(_7:Array [Array [Int ,100],0b1];M:Array [Boolean ,7]){ {{ {Var __2g,_5_:_;} }} }}''','''Class,__7__,{,_Pue__,(,),{,Continue,;,},},Class,k0__,:,_0v,{,Var,$9,:,Array,[,Array,[,Array,[,String,,,8606,],,,9,],,,0b1011,],;,$SQ,(,_7,:,Array,[,Array,[,Int,,,100,],,,0b1,],;,M,:,Array,[,Boolean,,,7,],),{,{,{,{,Var,__2g,,,_5_,:,_,;,},},},},},<EOF>''',101))

    def test_3042(self):
        self.assertTrue(TestLexer.test('''Class fT__{Destructor (){}Val $_:Float ;Var n9p:Array [Int ,0b1_1];_(_o:_;x:Array [Float ,26];B:String ){q0._2t2.r();Break ;} }''','''Class,fT__,{,Destructor,(,),{,},Val,$_,:,Float,;,Var,n9p,:,Array,[,Int,,,0b11,],;,_,(,_o,:,_,;,x,:,Array,[,Float,,,26,],;,B,:,String,),{,q0,.,_2t2,.,r,(,),;,Break,;,},},<EOF>''',101))

    def test_3043(self):
        self.assertTrue(TestLexer.test('''Class _v{z2(_,n:Z_8;J:Array [Float ,06]){Var i_,Q_5__4:f;} }Class C:__0{$_6(_7,_,_eW:Array [Int ,0x23];qV:_Xw_9;_,nXV,l:Tn){}G07(_:Array [Array [Float ,0b11111],14];YVA2:Array [Float ,14];_Z:_8;N:Array [Int ,14];__:String ){} }''','''Class,_v,{,z2,(,_,,,n,:,Z_8,;,J,:,Array,[,Float,,,06,],),{,Var,i_,,,Q_5__4,:,f,;,},},Class,C,:,__0,{,$_6,(,_7,,,_,,,_eW,:,Array,[,Int,,,0x23,],;,qV,:,_Xw_9,;,_,,,nXV,,,l,:,Tn,),{,},G07,(,_,:,Array,[,Array,[,Float,,,0b11111,],,,14,],;,YVA2,:,Array,[,Float,,,14,],;,_Z,:,_8,;,N,:,Array,[,Int,,,14,],;,__,:,String,),{,},},<EOF>''',101))

    def test_3044(self):
        self.assertTrue(TestLexer.test('''Class R{_G_(L____,_:Array [String ,0B101101];x_jqJ:Array [Boolean ,72];q:Array [Array [String ,032],0X6_9FAF8]){Var _:String ;{} }}Class i:zE9{Var $b,_,q3__:Boolean ;Constructor (T,a:Y;e,___e,m:Array [Array [Array [Array [String ,0b1011100],05],04_5_2_70],013]){Break ;} }Class _M{}Class i5{}''','''Class,R,{,_G_,(,L____,,,_,:,Array,[,String,,,0B101101,],;,x_jqJ,:,Array,[,Boolean,,,72,],;,q,:,Array,[,Array,[,String,,,032,],,,0X69FAF8,],),{,Var,_,:,String,;,{,},},},Class,i,:,zE9,{,Var,$b,,,_,,,q3__,:,Boolean,;,Constructor,(,T,,,a,:,Y,;,e,,,___e,,,m,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1011100,],,,05,],,,045270,],,,013,],),{,Break,;,},},Class,_M,{,},Class,i5,{,},<EOF>''',101))

    def test_3045(self):
        self.assertTrue(TestLexer.test('''Class _{Val $24:_;Constructor (_4_:String ;R,R,uD,_,_:Array [Array [Array [Array [Boolean ,0X3A],83],83],0XE]){} }''','''Class,_,{,Val,$24,:,_,;,Constructor,(,_4_,:,String,;,R,,,R,,,uD,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X3A,],,,83,],,,83,],,,0XE,],),{,},},<EOF>''',101))

    def test_3046(self):
        self.assertTrue(TestLexer.test('''Class __:e{Val _:_;$9(__,g6_,H,_v,j7:_){}Var t,$1,_,r:Boolean ;Constructor (__:_;Hl,_:Array [Array [Float ,0xF9],06];_,f,_:Array [String ,0144]){Return ;} }''','''Class,__,:,e,{,Val,_,:,_,;,$9,(,__,,,g6_,,,H,,,_v,,,j7,:,_,),{,},Var,t,,,$1,,,_,,,r,:,Boolean,;,Constructor,(,__,:,_,;,Hl,,,_,:,Array,[,Array,[,Float,,,0xF9,],,,06,],;,_,,,f,,,_,:,Array,[,String,,,0144,],),{,Return,;,},},<EOF>''',101))

    def test_3047(self):
        self.assertTrue(TestLexer.test('''Class _8_1A_:_vOi{Val $G,_:Array [Array [Array [Array [Float ,06],56],0b1001011],0X39];Var $F0U:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,0X1],0b1001011],8],0B10],0xB_1],0X9_4_D],0B10],0142],0x23],0X5_8];Var $_,$_,$8w,_2:Int ;}''','''Class,_8_1A_,:,_vOi,{,Val,$G,,,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,06,],,,56,],,,0b1001011,],,,0X39,],;,Var,$F0U,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X1,],,,0b1001011,],,,8,],,,0B10,],,,0xB1,],,,0X94D,],,,0B10,],,,0142,],,,0x23,],,,0X58,],;,Var,$_,,,$_,,,$8w,,,_2,:,Int,;,},<EOF>''',101))

    def test_3048(self):
        self.assertTrue(TestLexer.test('''Class jLr5e{}Class _0_:___KwkFus_5{}Class _{}Class t:_{$i(){} }Class u{}Class _{_(){}$m(_,_,_76,o_:R){H::$jf();} }''','''Class,jLr5e,{,},Class,_0_,:,___KwkFus_5,{,},Class,_,{,},Class,t,:,_,{,$i,(,),{,},},Class,u,{,},Class,_,{,_,(,),{,},$m,(,_,,,_,,,_76,,,o_,:,R,),{,H,::,$jf,(,),;,},},<EOF>''',101))

    def test_3049(self):
        self.assertTrue(TestLexer.test('''Class _3:j{Constructor (_0:Float ){Break ;Continue ;}AJ5(){}Constructor (C:Boolean ;__5_,__,_:Array [Array [Boolean ,074_2_1],4];_Z0:Int ;_,F,_:String ){} }''','''Class,_3,:,j,{,Constructor,(,_0,:,Float,),{,Break,;,Continue,;,},AJ5,(,),{,},Constructor,(,C,:,Boolean,;,__5_,,,__,,,_,:,Array,[,Array,[,Boolean,,,07421,],,,4,],;,_Z0,:,Int,;,_,,,F,,,_,:,String,),{,},},<EOF>''',101))

    def test_3050(self):
        self.assertTrue(TestLexer.test('''Class f:d_{Var $8z,$_,_6,$5,$_9F:X_42;}Class Z{Var G9_:Array [Array [Array [Float ,05],07],056];Destructor (){Continue ;} }''','''Class,f,:,d_,{,Var,$8z,,,$_,,,_6,,,$5,,,$_9F,:,X_42,;,},Class,Z,{,Var,G9_,:,Array,[,Array,[,Array,[,Float,,,05,],,,07,],,,056,],;,Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_3051(self):
        self.assertTrue(TestLexer.test('''Class _:a_{}Class s_8{j(P,_:Array [Array [Array [Array [Boolean ,0x37],0136],0136],0X4];_,_,__64_3_G,di43_9,y9,j3_:Array [Array [Array [Int ,0B1000110],0b100],99]){Break ;} }Class K{}''','''Class,_,:,a_,{,},Class,s_8,{,j,(,P,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x37,],,,0136,],,,0136,],,,0X4,],;,_,,,_,,,__64_3_G,,,di43_9,,,y9,,,j3_,:,Array,[,Array,[,Array,[,Int,,,0B1000110,],,,0b100,],,,99,],),{,Break,;,},},Class,K,{,},<EOF>''',101))

    def test_3052(self):
        self.assertTrue(TestLexer.test('''Class f359_:__{Constructor (_,n:Array [Int ,76_53_6];_,_,_033:Boolean ;_N,_,_,E,F,_:Array [Array [Array [Array [Int ,0b111_1],0X4A],9],0B1];Wi_2_:__;_:Array [Boolean ,69]){}Constructor (){ {} }Var v_o,_P,_,$4:_;Destructor (){} }''','''Class,f359_,:,__,{,Constructor,(,_,,,n,:,Array,[,Int,,,76536,],;,_,,,_,,,_033,:,Boolean,;,_N,,,_,,,_,,,E,,,F,,,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1111,],,,0X4A,],,,9,],,,0B1,],;,Wi_2_,:,__,;,_,:,Array,[,Boolean,,,69,],),{,},Constructor,(,),{,{,},},Var,v_o,,,_P,,,_,,,$4,:,_,;,Destructor,(,),{,},},<EOF>''',101))

    def test_3053(self):
        self.assertTrue(TestLexer.test('''Class g{Var $_:String ;Constructor (__,___:Array [Array [Boolean ,8_8],07];f,P7T,K2_,_e:B;__:C;_,_Q:r_2PE_i;P:Array [Float ,24_156_25_7]){Continue ;} }''','''Class,g,{,Var,$_,:,String,;,Constructor,(,__,,,___,:,Array,[,Array,[,Boolean,,,88,],,,07,],;,f,,,P7T,,,K2_,,,_e,:,B,;,__,:,C,;,_,,,_Q,:,r_2PE_i,;,P,:,Array,[,Float,,,24156257,],),{,Continue,;,},},<EOF>''',101))

    def test_3054(self):
        self.assertTrue(TestLexer.test('''Class _t{$8(C__f,_m,____9,_H_,_,u:Int ;_:Z5;B___K,W:Array [Float ,05];S,_:_1;_F:Array [Array [Float ,0B1100000],06];p0o,_:Z){}Var f,$8,$3:s_M1;Val $32:Array [Boolean ,4];}Class __272000w{}''','''Class,_t,{,$8,(,C__f,,,_m,,,____9,,,_H_,,,_,,,u,:,Int,;,_,:,Z5,;,B___K,,,W,:,Array,[,Float,,,05,],;,S,,,_,:,_1,;,_F,:,Array,[,Array,[,Float,,,0B1100000,],,,06,],;,p0o,,,_,:,Z,),{,},Var,f,,,$8,,,$3,:,s_M1,;,Val,$32,:,Array,[,Boolean,,,4,],;,},Class,__272000w,{,},<EOF>''',101))

    def test_3055(self):
        self.assertTrue(TestLexer.test('''Class _81_Bx5E:S{Constructor (v49:Int ;EX:Int ;_f,_:_3;e_,_:Int ;J51P,Ver:b;O4:Int ;_:Float ){Break ;} }Class _4{}''','''Class,_81_Bx5E,:,S,{,Constructor,(,v49,:,Int,;,EX,:,Int,;,_f,,,_,:,_3,;,e_,,,_,:,Int,;,J51P,,,Ver,:,b,;,O4,:,Int,;,_,:,Float,),{,Break,;,},},Class,_4,{,},<EOF>''',101))

    def test_3056(self):
        self.assertTrue(TestLexer.test('''Class __:_c{}Class E_{Constructor (qA66:Array [String ,033];_O:Array [Array [Array [Array [Array [Int ,0B1001100],0B1001100],41],033],033]){} }''','''Class,__,:,_c,{,},Class,E_,{,Constructor,(,qA66,:,Array,[,String,,,033,],;,_O,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1001100,],,,0B1001100,],,,41,],,,033,],,,033,],),{,},},<EOF>''',101))

    def test_3057(self):
        self.assertTrue(TestLexer.test('''Class k_au:S{Val O,$_0,_:Array [Int ,0B1_1_0];}Class _{}Class _:Y{}Class _:_X{Val _5,$_09:Array [String ,51];Destructor (){} }Class J{}''','''Class,k_au,:,S,{,Val,O,,,$_0,,,_,:,Array,[,Int,,,0B110,],;,},Class,_,{,},Class,_,:,Y,{,},Class,_,:,_X,{,Val,_5,,,$_09,:,Array,[,String,,,51,],;,Destructor,(,),{,},},Class,J,{,},<EOF>''',101))

    def test_3058(self):
        self.assertTrue(TestLexer.test('''Class wZ{$qR_T(_:Array [Array [Array [Float ,0X48],41],0x7];_5_:yn){} }Class n7pZ_n:_A6{Constructor (w:String ;_:String ;_3,s_km:Array [Int ,0b1011110];gG_,K_14,_,_:Boolean ){ {} }}''','''Class,wZ,{,$qR_T,(,_,:,Array,[,Array,[,Array,[,Float,,,0X48,],,,41,],,,0x7,],;,_5_,:,yn,),{,},},Class,n7pZ_n,:,_A6,{,Constructor,(,w,:,String,;,_,:,String,;,_3,,,s_km,:,Array,[,Int,,,0b1011110,],;,gG_,,,K_14,,,_,,,_,:,Boolean,),{,{,},},},<EOF>''',101))

    def test_3059(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (){}Constructor (){}P(I2,_t,_qe_9,_cJ,_A:o;_:_){Continue ;Return ;}Constructor (i:Array [Array [Array [Array [Boolean ,0B1_01],30],0b1],1_7_1]){ {}I::$5();} }''','''Class,_,:,_,{,Constructor,(,),{,},Constructor,(,),{,},P,(,I2,,,_t,,,_qe_9,,,_cJ,,,_A,:,o,;,_,:,_,),{,Continue,;,Return,;,},Constructor,(,i,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B101,],,,30,],,,0b1,],,,171,],),{,{,},I,::,$5,(,),;,},},<EOF>''',101))

    def test_3060(self):
        self.assertTrue(TestLexer.test('''Class w:Jr7{Destructor (){}Val q:Array [Array [Array [Boolean ,59],0X5B],53];}Class jP{}Class L{$9O_B(_9c_:Int ;_4,h:Float ){}Destructor (){} }''','''Class,w,:,Jr7,{,Destructor,(,),{,},Val,q,:,Array,[,Array,[,Array,[,Boolean,,,59,],,,0X5B,],,,53,],;,},Class,jP,{,},Class,L,{,$9O_B,(,_9c_,:,Int,;,_4,,,h,:,Float,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_3061(self):
        self.assertTrue(TestLexer.test('''Class x__:_{Constructor (q_G71:__jI){ {}Break ;Var t:Array [Float ,044];} }Class _:__{Destructor (){}__46o_(D:Int ;h_:Boolean ;X:T){}h7(___:Float ;_:g;U:Array [String ,0xC7]){Break ;} }''','''Class,x__,:,_,{,Constructor,(,q_G71,:,__jI,),{,{,},Break,;,Var,t,:,Array,[,Float,,,044,],;,},},Class,_,:,__,{,Destructor,(,),{,},__46o_,(,D,:,Int,;,h_,:,Boolean,;,X,:,T,),{,},h7,(,___,:,Float,;,_,:,g,;,U,:,Array,[,String,,,0xC7,],),{,Break,;,},},<EOF>''',101))

    def test_3062(self):
        self.assertTrue(TestLexer.test('''Class _5{Constructor (){}$7(){}Constructor (PXR:Array [Array [String ,0X1F],0b1011000];Y:Array [Array [Boolean ,0b1011000],17];_:Boolean ;_:_9_3){} }''','''Class,_5,{,Constructor,(,),{,},$7,(,),{,},Constructor,(,PXR,:,Array,[,Array,[,String,,,0X1F,],,,0b1011000,],;,Y,:,Array,[,Array,[,Boolean,,,0b1011000,],,,17,],;,_,:,Boolean,;,_,:,_9_3,),{,},},<EOF>''',101))

    def test_3063(self):
        self.assertTrue(TestLexer.test('''Class A:n{Destructor (){}Val _,p,J2,$__,$__,_,$k_5_:_;}Class f_V:_{Val $__6_,$9:Array [Array [String ,0x13],0X4];}''','''Class,A,:,n,{,Destructor,(,),{,},Val,_,,,p,,,J2,,,$__,,,$__,,,_,,,$k_5_,:,_,;,},Class,f_V,:,_,{,Val,$__6_,,,$9,:,Array,[,Array,[,String,,,0x13,],,,0X4,],;,},<EOF>''',101))

    def test_3064(self):
        self.assertTrue(TestLexer.test('''Class _:_{Var $Q:String ;}Class S:m{Val _u:Array [Array [Array [Int ,3_1_7_419],064],0X15];}Class _{}Class _O2_:_L{}''','''Class,_,:,_,{,Var,$Q,:,String,;,},Class,S,:,m,{,Val,_u,:,Array,[,Array,[,Array,[,Int,,,317419,],,,064,],,,0X15,],;,},Class,_,{,},Class,_O2_,:,_L,{,},<EOF>''',101))

    def test_3065(self):
        self.assertTrue(TestLexer.test('''Class _6:s0{$S(__717cb__4,__,W:_9__IxU){} }Class n:_Tc_{$0_(_:_C1;T0:Array [String ,2_6]){} }Class Me:v7W{c(_E_:_o){}Val $241,h8,_:Array [Int ,0x53];}Class _E:v{}''','''Class,_6,:,s0,{,$S,(,__717cb__4,,,__,,,W,:,_9__IxU,),{,},},Class,n,:,_Tc_,{,$0_,(,_,:,_C1,;,T0,:,Array,[,String,,,26,],),{,},},Class,Me,:,v7W,{,c,(,_E_,:,_o,),{,},Val,$241,,,h8,,,_,:,Array,[,Int,,,0x53,],;,},Class,_E,:,v,{,},<EOF>''',101))

    def test_3066(self):
        self.assertTrue(TestLexer.test('''Class g:dS{}Class _{Var __:Array [Float ,0b11011];}Class _:H{Constructor (){}Constructor (r,_:i;E,F_,a4,_:_){} }Class __:_{}''','''Class,g,:,dS,{,},Class,_,{,Var,__,:,Array,[,Float,,,0b11011,],;,},Class,_,:,H,{,Constructor,(,),{,},Constructor,(,r,,,_,:,i,;,E,,,F_,,,a4,,,_,:,_,),{,},},Class,__,:,_,{,},<EOF>''',101))

    def test_3067(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (B,_,Q:Array [Int ,04];_5:Int ){} }Class _{}Class __7V_:x2{}Class q_i{$9__(__:s_I){} }Class w{Destructor (){} }''','''Class,_,:,_,{,Constructor,(,B,,,_,,,Q,:,Array,[,Int,,,04,],;,_5,:,Int,),{,},},Class,_,{,},Class,__7V_,:,x2,{,},Class,q_i,{,$9__,(,__,:,s_I,),{,},},Class,w,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3068(self):
        self.assertTrue(TestLexer.test('''Class _8_{Val $R,G,$_4_:_7;Constructor (_4,_,p_,_t_,_8,s4l:Array [String ,051]){}L(_,P:_){}Constructor (){}Val J,b:Array [Boolean ,6];}''','''Class,_8_,{,Val,$R,,,G,,,$_4_,:,_7,;,Constructor,(,_4,,,_,,,p_,,,_t_,,,_8,,,s4l,:,Array,[,String,,,051,],),{,},L,(,_,,,P,:,_,),{,},Constructor,(,),{,},Val,J,,,b,:,Array,[,Boolean,,,6,],;,},<EOF>''',101))

    def test_3069(self):
        self.assertTrue(TestLexer.test('''Class M8{$_(B,__95,__:Array [Float ,01];Sz_,_3,_cI__,A_3VM:l;_6,_:Array [String ,0x6B];__:Array [Array [Array [Int ,0B1],0B111],023]){_::$_L();{}Var _:_;} }''','''Class,M8,{,$_,(,B,,,__95,,,__,:,Array,[,Float,,,01,],;,Sz_,,,_3,,,_cI__,,,A_3VM,:,l,;,_6,,,_,:,Array,[,String,,,0x6B,],;,__,:,Array,[,Array,[,Array,[,Int,,,0B1,],,,0B111,],,,023,],),{,_,::,$_L,(,),;,{,},Var,_,:,_,;,},},<EOF>''',101))

    def test_3070(self):
        self.assertTrue(TestLexer.test('''Class x_h:R{K07O(){} }Class G1{Constructor (){Break ;Return ;Break ;} }Class Q0:_{Constructor (){}Val _T,$t,_l,_:Array [Array [Array [String ,0B11],1_30],806];}''','''Class,x_h,:,R,{,K07O,(,),{,},},Class,G1,{,Constructor,(,),{,Break,;,Return,;,Break,;,},},Class,Q0,:,_,{,Constructor,(,),{,},Val,_T,,,$t,,,_l,,,_,:,Array,[,Array,[,Array,[,String,,,0B11,],,,130,],,,806,],;,},<EOF>''',101))

    def test_3071(self):
        self.assertTrue(TestLexer.test('''Class _C{W(){}$_(_,_:Float ;x72,s:Int ;N,G_,_,__i,F:Int ;_Z6:q;_,j___4__:Array [Array [String ,35],0b1]){} }Class __H:T___{}''','''Class,_C,{,W,(,),{,},$_,(,_,,,_,:,Float,;,x72,,,s,:,Int,;,N,,,G_,,,_,,,__i,,,F,:,Int,;,_Z6,:,q,;,_,,,j___4__,:,Array,[,Array,[,String,,,35,],,,0b1,],),{,},},Class,__H,:,T___,{,},<EOF>''',101))

    def test_3072(self):
        self.assertTrue(TestLexer.test('''Class DD:D_{Val b:Array [Array [Array [Int ,0663],0b1],74];Val A:_6u;}Class _6O0s67{Destructor (){Return ;Break ;} }''','''Class,DD,:,D_,{,Val,b,:,Array,[,Array,[,Array,[,Int,,,0663,],,,0b1,],,,74,],;,Val,A,:,_6u,;,},Class,_6O0s67,{,Destructor,(,),{,Return,;,Break,;,},},<EOF>''',101))

    def test_3073(self):
        self.assertTrue(TestLexer.test('''Class _8d{Constructor (){}Constructor (_,ReR,___:Array [Array [String ,2],4]){}Destructor (){} }Class T:__{}Class w:qV_{}Class Et8z54_:_{}Class F{Constructor (T__:Array [Array [Float ,04_6_0],0X79];E,_,_l,q:Int ){} }''','''Class,_8d,{,Constructor,(,),{,},Constructor,(,_,,,ReR,,,___,:,Array,[,Array,[,String,,,2,],,,4,],),{,},Destructor,(,),{,},},Class,T,:,__,{,},Class,w,:,qV_,{,},Class,Et8z54_,:,_,{,},Class,F,{,Constructor,(,T__,:,Array,[,Array,[,Float,,,0460,],,,0X79,],;,E,,,_,,,_l,,,q,:,Int,),{,},},<EOF>''',101))

    def test_3074(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class e{}Class _Q{_(){}Val $_,$__1,S:Array [Array [Array [Array [Array [Array [String ,0b111110],0B11],020],9_2_5],45],5];}''','''Class,_,:,_,{,},Class,e,{,},Class,_Q,{,_,(,),{,},Val,$_,,,$__1,,,S,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b111110,],,,0B11,],,,020,],,,925,],,,45,],,,5,],;,},<EOF>''',101))

    def test_3075(self):
        self.assertTrue(TestLexer.test('''Class ___:J{Val $V,$_:Float ;Var $W3g2:Array [Float ,0B1];}Class V{$3(G818L,_4,x,j,__,S:Int ;__:String ;_,i,q,_y__:Array [Int ,0x2];_:_;Q__H6:Array [Array [Int ,037],06]){} }''','''Class,___,:,J,{,Val,$V,,,$_,:,Float,;,Var,$W3g2,:,Array,[,Float,,,0B1,],;,},Class,V,{,$3,(,G818L,,,_4,,,x,,,j,,,__,,,S,:,Int,;,__,:,String,;,_,,,i,,,q,,,_y__,:,Array,[,Int,,,0x2,],;,_,:,_,;,Q__H6,:,Array,[,Array,[,Int,,,037,],,,06,],),{,},},<EOF>''',101))

    def test_3076(self):
        self.assertTrue(TestLexer.test('''Class n:__{}Class _aL:__4__{}Class j6{Val $k,e3,C:y;Constructor (_:Array [Int ,80]){} }Class __:f{Var q_,$_:Array [Boolean ,80];}Class n{Var _a:Array [Array [Array [Boolean ,0x6],03_6],075];}Class _{Val b:_;}''','''Class,n,:,__,{,},Class,_aL,:,__4__,{,},Class,j6,{,Val,$k,,,e3,,,C,:,y,;,Constructor,(,_,:,Array,[,Int,,,80,],),{,},},Class,__,:,f,{,Var,q_,,,$_,:,Array,[,Boolean,,,80,],;,},Class,n,{,Var,_a,:,Array,[,Array,[,Array,[,Boolean,,,0x6,],,,036,],,,075,],;,},Class,_,{,Val,b,:,_,;,},<EOF>''',101))

    def test_3077(self):
        self.assertTrue(TestLexer.test('''Class _t_:q_{}Class __:W{Destructor (){} }Class c:b{$__(){}Constructor (){}Constructor (_,h,__21T,_,_I:Int ){} }''','''Class,_t_,:,q_,{,},Class,__,:,W,{,Destructor,(,),{,},},Class,c,:,b,{,$__,(,),{,},Constructor,(,),{,},Constructor,(,_,,,h,,,__21T,,,_,,,_I,:,Int,),{,},},<EOF>''',101))

    def test_3078(self):
        self.assertTrue(TestLexer.test('''Class e_7{_(__6:Array [Array [Array [Array [Array [Boolean ,0x5],0B1_11],0b11_0],0x7_5],5];F4,E,M3:String ){} }''','''Class,e_7,{,_,(,__6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x5,],,,0B111,],,,0b110,],,,0x75,],,,5,],;,F4,,,E,,,M3,:,String,),{,},},<EOF>''',101))

    def test_3079(self):
        self.assertTrue(TestLexer.test('''Class P:_k5__{Var $_:String ;Var $99J:Array [String ,055];Destructor (){Return ;}Val $1:Array [Array [Array [Array [String ,055],04],26],6];}''','''Class,P,:,_k5__,{,Var,$_,:,String,;,Var,$99J,:,Array,[,String,,,055,],;,Destructor,(,),{,Return,;,},Val,$1,:,Array,[,Array,[,Array,[,Array,[,String,,,055,],,,04,],,,26,],,,6,],;,},<EOF>''',101))

    def test_3080(self):
        self.assertTrue(TestLexer.test('''Class _{Val $___4p_6:g;}Class _Ss{$2(V_,_:Float ;_:Int ;_,_,_m9:Array [Array [Array [Array [String ,0X1],0B1],0X2],55]){} }''','''Class,_,{,Val,$___4p_6,:,g,;,},Class,_Ss,{,$2,(,V_,,,_,:,Float,;,_,:,Int,;,_,,,_,,,_m9,:,Array,[,Array,[,Array,[,Array,[,String,,,0X1,],,,0B1,],,,0X2,],,,55,],),{,},},<EOF>''',101))

    def test_3081(self):
        self.assertTrue(TestLexer.test('''Class q{Var W_,Q9:Float ;}Class T:z_8{$8(){}Val _O,$_f7I:__8;Val $49_:Int ;Var $U,$WKV,$s3,$r1:Array [Array [Boolean ,0X1],0X1AA];Var _c_:_;}''','''Class,q,{,Var,W_,,,Q9,:,Float,;,},Class,T,:,z_8,{,$8,(,),{,},Val,_O,,,$_f7I,:,__8,;,Val,$49_,:,Int,;,Var,$U,,,$WKV,,,$s3,,,$r1,:,Array,[,Array,[,Boolean,,,0X1,],,,0X1AA,],;,Var,_c_,:,_,;,},<EOF>''',101))

    def test_3082(self):
        self.assertTrue(TestLexer.test('''Class _:_7i{Val _w1,$_Z_:Boolean ;Var $g,$_P,D:Array [Array [Boolean ,0x55],24];}Class _d:U{Val $3_B:String ;Constructor (){} }''','''Class,_,:,_7i,{,Val,_w1,,,$_Z_,:,Boolean,;,Var,$g,,,$_P,,,D,:,Array,[,Array,[,Boolean,,,0x55,],,,24,],;,},Class,_d,:,U,{,Val,$3_B,:,String,;,Constructor,(,),{,},},<EOF>''',101))

    def test_3083(self):
        self.assertTrue(TestLexer.test('''Class I{}Class _:a_{}Class _:__3_4_{y(_5,Xt77_:Array [String ,06];_,G__:u6_5){}Constructor (){}Constructor (_2,_5:Int ;n,_6_,_:Boolean ){}Val _2,O:O;}''','''Class,I,{,},Class,_,:,a_,{,},Class,_,:,__3_4_,{,y,(,_5,,,Xt77_,:,Array,[,String,,,06,],;,_,,,G__,:,u6_5,),{,},Constructor,(,),{,},Constructor,(,_2,,,_5,:,Int,;,n,,,_6_,,,_,:,Boolean,),{,},Val,_2,,,O,:,O,;,},<EOF>''',101))

    def test_3084(self):
        self.assertTrue(TestLexer.test('''Class zz7:_{Constructor (_:Int ;a_:F;_J,_,_:Float ;_3,_:String ){}Var F,Yt:Array [Array [Array [Int ,0XA],54],0B1000010];}Class _1__v:_{}Class G_O:I{}Class _:_{}Class Y:M4n5_{Val $b__,gB,_7:Q0;Val O_:Array [String ,0x5];}''','''Class,zz7,:,_,{,Constructor,(,_,:,Int,;,a_,:,F,;,_J,,,_,,,_,:,Float,;,_3,,,_,:,String,),{,},Var,F,,,Yt,:,Array,[,Array,[,Array,[,Int,,,0XA,],,,54,],,,0B1000010,],;,},Class,_1__v,:,_,{,},Class,G_O,:,I,{,},Class,_,:,_,{,},Class,Y,:,M4n5_,{,Val,$b__,,,gB,,,_7,:,Q0,;,Val,O_,:,Array,[,String,,,0x5,],;,},<EOF>''',101))

    def test_3085(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class Zs__{Val __:h33;Constructor (D_n:Array [Int ,053]){} }Class _:____7{}Class __6{Constructor (){} }''','''Class,_,:,_,{,},Class,Zs__,{,Val,__,:,h33,;,Constructor,(,D_n,:,Array,[,Int,,,053,],),{,},},Class,_,:,____7,{,},Class,__6,{,Constructor,(,),{,},},<EOF>''',101))

    def test_3086(self):
        self.assertTrue(TestLexer.test('''Class l:q{}Class _:E{Constructor (){}Var b8:Array [Array [Array [Boolean ,0B1],0X4E],04_4_1_6_54];Constructor (){} }''','''Class,l,:,q,{,},Class,_,:,E,{,Constructor,(,),{,},Var,b8,:,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,0X4E,],,,0441654,],;,Constructor,(,),{,},},<EOF>''',101))

    def test_3087(self):
        self.assertTrue(TestLexer.test('''Class __k{}Class y:M3{Val $h:Array [Int ,4_2];Constructor (){}_g0(I,p:Float ;__,_:Array [Array [String ,066],0B1_1]){} }Class p_{}''','''Class,__k,{,},Class,y,:,M3,{,Val,$h,:,Array,[,Int,,,42,],;,Constructor,(,),{,},_g0,(,I,,,p,:,Float,;,__,,,_,:,Array,[,Array,[,String,,,066,],,,0B11,],),{,},},Class,p_,{,},<EOF>''',101))

    def test_3088(self):
        self.assertTrue(TestLexer.test('''Class _0{_(__,_49:Array [Array [Boolean ,01_3_7],0114];Sp_R_0l,N,_,_:Q){} }Class _JYv:mE_{}Class W{Constructor (){} }Class __6_{Constructor (){ {} }}Class J:_{}''','''Class,_0,{,_,(,__,,,_49,:,Array,[,Array,[,Boolean,,,0137,],,,0114,],;,Sp_R_0l,,,N,,,_,,,_,:,Q,),{,},},Class,_JYv,:,mE_,{,},Class,W,{,Constructor,(,),{,},},Class,__6_,{,Constructor,(,),{,{,},},},Class,J,:,_,{,},<EOF>''',101))

    def test_3089(self):
        self.assertTrue(TestLexer.test('''Class __74{}Class X_7q:y{Var Z,$3,$p:Array [Boolean ,030];}Class _vS__:v{$4K_64(){Var _,_,L5:Float ;}Constructor (){}Constructor (){Return ;Continue ;} }''','''Class,__74,{,},Class,X_7q,:,y,{,Var,Z,,,$3,,,$p,:,Array,[,Boolean,,,030,],;,},Class,_vS__,:,v,{,$4K_64,(,),{,Var,_,,,_,,,L5,:,Float,;,},Constructor,(,),{,},Constructor,(,),{,Return,;,Continue,;,},},<EOF>''',101))

    def test_3090(self):
        self.assertTrue(TestLexer.test('''Class ea:_1{}Class _:d{}Class C:__{}Class h{$1(_,__T,_979m:String ;Q_6_,R6_,s2,o__2,_:Int ;_5M,_6y_,s5:_;_:Array [Float ,82];_:Array [Array [Int ,4],05_54]){} }''','''Class,ea,:,_1,{,},Class,_,:,d,{,},Class,C,:,__,{,},Class,h,{,$1,(,_,,,__T,,,_979m,:,String,;,Q_6_,,,R6_,,,s2,,,o__2,,,_,:,Int,;,_5M,,,_6y_,,,s5,:,_,;,_,:,Array,[,Float,,,82,],;,_,:,Array,[,Array,[,Int,,,4,],,,0554,],),{,},},<EOF>''',101))

    def test_3091(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_,mr7,TTy,x:Array [Array [Array [Float ,02],0x4A],0X22];_,_,__2:Array [Boolean ,3];_,W16,p8:Array [Array [String ,4],45];X:Array [Float ,046]){}Destructor (){ {{ {} }} }}Class _:_{Destructor (){} }''','''Class,_,{,Constructor,(,_,,,mr7,,,TTy,,,x,:,Array,[,Array,[,Array,[,Float,,,02,],,,0x4A,],,,0X22,],;,_,,,_,,,__2,:,Array,[,Boolean,,,3,],;,_,,,W16,,,p8,:,Array,[,Array,[,String,,,4,],,,45,],;,X,:,Array,[,Float,,,046,],),{,},Destructor,(,),{,{,{,{,},},},},},Class,_,:,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3092(self):
        self.assertTrue(TestLexer.test('''Class x_{___(_405,_:Array [Array [Array [Float ,0B110110],061],0b10_010];P,Bl,__:_d_){ {{} }}g_(){Break ;}Var _,$G68_,$8_:_;}''','''Class,x_,{,___,(,_405,,,_,:,Array,[,Array,[,Array,[,Float,,,0B110110,],,,061,],,,0b10010,],;,P,,,Bl,,,__,:,_d_,),{,{,{,},},},g_,(,),{,Break,;,},Var,_,,,$G68_,,,$8_,:,_,;,},<EOF>''',101))

    def test_3093(self):
        self.assertTrue(TestLexer.test('''Class _2:_{}Class _{}Class _{Destructor (){}Val $p__,D:String ;Constructor (_:Array [Boolean ,03]){Var ___:Array [Float ,3];}Constructor (){} }''','''Class,_2,:,_,{,},Class,_,{,},Class,_,{,Destructor,(,),{,},Val,$p__,,,D,:,String,;,Constructor,(,_,:,Array,[,Boolean,,,03,],),{,Var,___,:,Array,[,Float,,,3,],;,},Constructor,(,),{,},},<EOF>''',101))

    def test_3094(self):
        self.assertTrue(TestLexer.test('''Class u{}Class K_I___44_{Var $93_,$5:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,07],0134],02_1],0x34],01],0B1111],0x34],0XD],0134],0b101101];}''','''Class,u,{,},Class,K_I___44_,{,Var,$93_,,,$5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,07,],,,0134,],,,021,],,,0x34,],,,01,],,,0B1111,],,,0x34,],,,0XD,],,,0134,],,,0b101101,],;,},<EOF>''',101))

    def test_3095(self):
        self.assertTrue(TestLexer.test('''Class T833g7:_{Var $_C_:String ;Constructor (qE:Array [String ,0B1_11];_:v;J7,N:Array [Array [Array [Float ,0X27],0b111001],0137];__:Int ){}Constructor (){}$2(){} }Class C__{Val $_:Array [Array [Boolean ,0X27],8];}Class G9Q_:N{}Class _:___9{}''','''Class,T833g7,:,_,{,Var,$_C_,:,String,;,Constructor,(,qE,:,Array,[,String,,,0B111,],;,_,:,v,;,J7,,,N,:,Array,[,Array,[,Array,[,Float,,,0X27,],,,0b111001,],,,0137,],;,__,:,Int,),{,},Constructor,(,),{,},$2,(,),{,},},Class,C__,{,Val,$_,:,Array,[,Array,[,Boolean,,,0X27,],,,8,],;,},Class,G9Q_,:,N,{,},Class,_,:,___9,{,},<EOF>''',101))

    def test_3096(self):
        self.assertTrue(TestLexer.test('''Class _{Var $W,$_,$t4e,$___k:Array [Array [Float ,0764],82];}Class l_NB{}Class _{Constructor (s_84JD,_:Float ){} }''','''Class,_,{,Var,$W,,,$_,,,$t4e,,,$___k,:,Array,[,Array,[,Float,,,0764,],,,82,],;,},Class,l_NB,{,},Class,_,{,Constructor,(,s_84JD,,,_,:,Float,),{,},},<EOF>''',101))

    def test_3097(self):
        self.assertTrue(TestLexer.test('''Class a5:__g{}Class Ek9{Constructor (_:Array [Int ,38]){} }Class __6:M{Var D:String ;Var _,_7_U,I6_0,k:String ;$5(){Continue ;} }''','''Class,a5,:,__g,{,},Class,Ek9,{,Constructor,(,_,:,Array,[,Int,,,38,],),{,},},Class,__6,:,M,{,Var,D,:,String,;,Var,_,,,_7_U,,,I6_0,,,k,:,String,;,$5,(,),{,Continue,;,},},<EOF>''',101))

    def test_3098(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (){}Constructor (u,D:Int ){}Var $V,$OU,u_12__0_,r,_:_;}Class _:_b{Constructor (){} }Class x{Val $WB:Int ;$X4(n_:_X;F,U:_){Val _8:j_;}Constructor (){Break ;} }Class B{}''','''Class,_,:,_,{,Constructor,(,),{,},Constructor,(,u,,,D,:,Int,),{,},Var,$V,,,$OU,,,u_12__0_,,,r,,,_,:,_,;,},Class,_,:,_b,{,Constructor,(,),{,},},Class,x,{,Val,$WB,:,Int,;,$X4,(,n_,:,_X,;,F,,,U,:,_,),{,Val,_8,:,j_,;,},Constructor,(,),{,Break,;,},},Class,B,{,},<EOF>''',101))

    def test_3099(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (i_,_c,__K3M_9,_4:_s;__:Array [Array [Array [Array [String ,0b1011100],2],17],02]){}Var $s,_r:__;}Class S{}''','''Class,_,{,Constructor,(,i_,,,_c,,,__K3M_9,,,_4,:,_s,;,__,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1011100,],,,2,],,,17,],,,02,],),{,},Var,$s,,,_r,:,__,;,},Class,S,{,},<EOF>''',101))

    def test_3100(self):
        self.assertTrue(TestLexer.test('''Class _K{$R(){}f(MR:__;_,_4,Jn,_:Array [Float ,0x27]){Var _,S,_,Lb:Array [Array [Int ,042],042];} }Class O{$6A_(_i3:k__;m4,_7,__,_P4,U:String ){} }''','''Class,_K,{,$R,(,),{,},f,(,MR,:,__,;,_,,,_4,,,Jn,,,_,:,Array,[,Float,,,0x27,],),{,Var,_,,,S,,,_,,,Lb,:,Array,[,Array,[,Int,,,042,],,,042,],;,},},Class,O,{,$6A_,(,_i3,:,k__,;,m4,,,_7,,,__,,,_P4,,,U,:,String,),{,},},<EOF>''',101))

    def test_3101(self):
        self.assertTrue(TestLexer.test('''Class _{Var G_2_c8,f_,_z17_MOS__6__B_,y9,_:Array [Float ,015];Constructor (){} }Class y_7{}Class n{Val $_6,$_:__P;}''','''Class,_,{,Var,G_2_c8,,,f_,,,_z17_MOS__6__B_,,,y9,,,_,:,Array,[,Float,,,015,],;,Constructor,(,),{,},},Class,y_7,{,},Class,n,{,Val,$_6,,,$_,:,__P,;,},<EOF>''',101))

    def test_3102(self):
        self.assertTrue(TestLexer.test('''Class JD2:_{Constructor (_,R:Float ;_r,_9J5_:Boolean ;_,_:Array [Array [Array [Array [String ,0X51],06],0b11001],0b11001];_,t:_Vf;_5:_;J,E_,_h8,__4t_:___){}Var T_:Y;}''','''Class,JD2,:,_,{,Constructor,(,_,,,R,:,Float,;,_r,,,_9J5_,:,Boolean,;,_,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0X51,],,,06,],,,0b11001,],,,0b11001,],;,_,,,t,:,_Vf,;,_5,:,_,;,J,,,E_,,,_h8,,,__4t_,:,___,),{,},Var,T_,:,Y,;,},<EOF>''',101))

    def test_3103(self):
        self.assertTrue(TestLexer.test('''Class _2_{Constructor (o,B0_:Array [String ,0b11111];B,_,_:String ;z:W_;b:Array [Array [String ,015],0b11111];_W:Array [Float ,35]){ {Continue ;} }}''','''Class,_2_,{,Constructor,(,o,,,B0_,:,Array,[,String,,,0b11111,],;,B,,,_,,,_,:,String,;,z,:,W_,;,b,:,Array,[,Array,[,String,,,015,],,,0b11111,],;,_W,:,Array,[,Float,,,35,],),{,{,Continue,;,},},},<EOF>''',101))

    def test_3104(self):
        self.assertTrue(TestLexer.test('''Class T{Destructor (){}Var v,g_:Int ;Destructor (){Break ;Var _:Array [Array [Boolean ,07],01_4];}Var $z:Float ;}Class c_:A_{$r(){} }''','''Class,T,{,Destructor,(,),{,},Var,v,,,g_,:,Int,;,Destructor,(,),{,Break,;,Var,_,:,Array,[,Array,[,Boolean,,,07,],,,014,],;,},Var,$z,:,Float,;,},Class,c_,:,A_,{,$r,(,),{,},},<EOF>''',101))

    def test_3105(self):
        self.assertTrue(TestLexer.test('''Class _0t_:__2_{__(_j1:Array [Array [Float ,0b11],76];w:Array [Array [Array [Boolean ,159],0x1],17_82_5_1_1]){} }''','''Class,_0t_,:,__2_,{,__,(,_j1,:,Array,[,Array,[,Float,,,0b11,],,,76,],;,w,:,Array,[,Array,[,Array,[,Boolean,,,159,],,,0x1,],,,1782511,],),{,},},<EOF>''',101))

    def test_3106(self):
        self.assertTrue(TestLexer.test('''Class t{}Class _:__S{}Class _{k(f,xJ__,V:String ;_:_;F_G:Array [Boolean ,0x5F];C:_){Break ;} }Class x08{}Class _2f561{}''','''Class,t,{,},Class,_,:,__S,{,},Class,_,{,k,(,f,,,xJ__,,,V,:,String,;,_,:,_,;,F_G,:,Array,[,Boolean,,,0x5F,],;,C,:,_,),{,Break,;,},},Class,x08,{,},Class,_2f561,{,},<EOF>''',101))

    def test_3107(self):
        self.assertTrue(TestLexer.test('''Class U6:L{}Class B:b{}Class _:__{Destructor (){}$4V(){}_(n5,_:_;_:Array [Float ,0B1_11_1_0];oO,_:_3){} }Class _{}''','''Class,U6,:,L,{,},Class,B,:,b,{,},Class,_,:,__,{,Destructor,(,),{,},$4V,(,),{,},_,(,n5,,,_,:,_,;,_,:,Array,[,Float,,,0B11110,],;,oO,,,_,:,_3,),{,},},Class,_,{,},<EOF>''',101))

    def test_3108(self):
        self.assertTrue(TestLexer.test('''Class _7R8:v_{}Class _9:qk1{Constructor (GH:T_B;__,W_:Array [Array [Array [String ,0B100000],0B1],0X5C];_02_X,_,u:Float ;_,__,_mQ,__9,f,_:L____;_:Array [Array [String ,0B100000],5_9]){} }''','''Class,_7R8,:,v_,{,},Class,_9,:,qk1,{,Constructor,(,GH,:,T_B,;,__,,,W_,:,Array,[,Array,[,Array,[,String,,,0B100000,],,,0B1,],,,0X5C,],;,_02_X,,,_,,,u,:,Float,;,_,,,__,,,_mQ,,,__9,,,f,,,_,:,L____,;,_,:,Array,[,Array,[,String,,,0B100000,],,,59,],),{,},},<EOF>''',101))

    def test_3109(self):
        self.assertTrue(TestLexer.test('''Class m9277D{}Class _v__:_{}Class H{}Class _{}Class __0:_{}Class nH:u2_{}Class _{Val _:Boolean ;Destructor (){} }''','''Class,m9277D,{,},Class,_v__,:,_,{,},Class,H,{,},Class,_,{,},Class,__0,:,_,{,},Class,nH,:,u2_,{,},Class,_,{,Val,_,:,Boolean,;,Destructor,(,),{,},},<EOF>''',101))

    def test_3110(self):
        self.assertTrue(TestLexer.test('''Class d{Var u2,$_414:_7r0;Val $Pj:Array [Array [Array [Array [Array [Array [Boolean ,28],0x2],026_42_01],0B1110],28],1];}''','''Class,d,{,Var,u2,,,$_414,:,_7r0,;,Val,$Pj,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,28,],,,0x2,],,,0264201,],,,0B1110,],,,28,],,,1,],;,},<EOF>''',101))

    def test_3111(self):
        self.assertTrue(TestLexer.test('''Class mG:S{Constructor (){Continue ;} }Class _:_q{Constructor (o2_5___,g:String ;FV,_:_;_:Array [Float ,063];_,____9Y,t:String ;P_Y:_4n;__6R3s:Array [Array [Array [Float ,0X3C],06],0B1];_7_:Array [Array [Float ,0B110111],0b10];t:k;E,_3_:_Z){} }''','''Class,mG,:,S,{,Constructor,(,),{,Continue,;,},},Class,_,:,_q,{,Constructor,(,o2_5___,,,g,:,String,;,FV,,,_,:,_,;,_,:,Array,[,Float,,,063,],;,_,,,____9Y,,,t,:,String,;,P_Y,:,_4n,;,__6R3s,:,Array,[,Array,[,Array,[,Float,,,0X3C,],,,06,],,,0B1,],;,_7_,:,Array,[,Array,[,Float,,,0B110111,],,,0b10,],;,t,:,k,;,E,,,_3_,:,_Z,),{,},},<EOF>''',101))

    def test_3112(self):
        self.assertTrue(TestLexer.test('''Class _28_:_41{Val $_,H,_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,0B1100000],0X38],0B1_0],7],8],0b1],21],0b10010],8];Var _O_V:Boolean ;}Class _4m_6{}''','''Class,_28_,:,_41,{,Val,$_,,,H,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1100000,],,,0X38,],,,0B10,],,,7,],,,8,],,,0b1,],,,21,],,,0b10010,],,,8,],;,Var,_O_V,:,Boolean,;,},Class,_4m_6,{,},<EOF>''',101))

    def test_3113(self):
        self.assertTrue(TestLexer.test('''Class W0{}Class _o:_{$0(r,HTh_63f:Array [Int ,7];_,_:Float ;_:String ){}$_x__(j:Array [Float ,0B1];_,_:Float ;kN,_:Boolean ;_S,_45:Array [Array [Array [String ,0B1010010],0b1],0XF];_:Boolean ){} }''','''Class,W0,{,},Class,_o,:,_,{,$0,(,r,,,HTh_63f,:,Array,[,Int,,,7,],;,_,,,_,:,Float,;,_,:,String,),{,},$_x__,(,j,:,Array,[,Float,,,0B1,],;,_,,,_,:,Float,;,kN,,,_,:,Boolean,;,_S,,,_45,:,Array,[,Array,[,Array,[,String,,,0B1010010,],,,0b1,],,,0XF,],;,_,:,Boolean,),{,},},<EOF>''',101))

    def test_3114(self):
        self.assertTrue(TestLexer.test('''Class _J2{Destructor (){}Constructor (_,_:fR_37;A_:_;_5b__,_,A,s_8,_g:Array [Int ,0X63];_:Array [Boolean ,032];_:Array [Boolean ,8972];_,_d,_G4,l:Array [Float ,0X63]){} }''','''Class,_J2,{,Destructor,(,),{,},Constructor,(,_,,,_,:,fR_37,;,A_,:,_,;,_5b__,,,_,,,A,,,s_8,,,_g,:,Array,[,Int,,,0X63,],;,_,:,Array,[,Boolean,,,032,],;,_,:,Array,[,Boolean,,,8972,],;,_,,,_d,,,_G4,,,l,:,Array,[,Float,,,0X63,],),{,},},<EOF>''',101))

    def test_3115(self):
        self.assertTrue(TestLexer.test('''Class Shhea9{Destructor (){Val _,_,__k:Array [Array [Array [Float ,0b1_10_0],0B11],0B1110];Self .i();}Val _:Array [Array [Array [Array [Array [Array [Boolean ,975],06_5],0113],4_4],04],01_6];Var XI,$_:Q0;}''','''Class,Shhea9,{,Destructor,(,),{,Val,_,,,_,,,__k,:,Array,[,Array,[,Array,[,Float,,,0b1100,],,,0B11,],,,0B1110,],;,Self,.,i,(,),;,},Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,975,],,,065,],,,0113,],,,44,],,,04,],,,016,],;,Var,XI,,,$_,:,Q0,;,},<EOF>''',101))

    def test_3116(self):
        self.assertTrue(TestLexer.test('''Class _:__4{}Class Z{Constructor (_9_W_6:r){ {}Continue ;}Var Gh,$U,$1_,$h,$3,$yz5z1,_,B_:Array [Int ,074];Constructor (){}$S(h:Array [Array [Array [Array [Array [Float ,0442],9],58],1],49]){}$31PSR(_q0__:x){ {}Continue ;} }''','''Class,_,:,__4,{,},Class,Z,{,Constructor,(,_9_W_6,:,r,),{,{,},Continue,;,},Var,Gh,,,$U,,,$1_,,,$h,,,$3,,,$yz5z1,,,_,,,B_,:,Array,[,Int,,,074,],;,Constructor,(,),{,},$S,(,h,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0442,],,,9,],,,58,],,,1,],,,49,],),{,},$31PSR,(,_q0__,:,x,),{,{,},Continue,;,},},<EOF>''',101))

    def test_3117(self):
        self.assertTrue(TestLexer.test('''Class zW_{Constructor (){}Constructor (o:_;t,_N:_7;_:Boolean ;Q:String ;C9,R_:E4o;_,q,k,dF,e_,x:Boolean ){} }Class _:H_{}Class W:_{}Class Q{Val $Z,$9B:_;}Class _:Kt_2{Var $_____:_62;_2(m,X:Int ;l,Hz,__Ql,_:Array [Array [Array [Float ,02],0X6],02]){Return ;} }''','''Class,zW_,{,Constructor,(,),{,},Constructor,(,o,:,_,;,t,,,_N,:,_7,;,_,:,Boolean,;,Q,:,String,;,C9,,,R_,:,E4o,;,_,,,q,,,k,,,dF,,,e_,,,x,:,Boolean,),{,},},Class,_,:,H_,{,},Class,W,:,_,{,},Class,Q,{,Val,$Z,,,$9B,:,_,;,},Class,_,:,Kt_2,{,Var,$_____,:,_62,;,_2,(,m,,,X,:,Int,;,l,,,Hz,,,__Ql,,,_,:,Array,[,Array,[,Array,[,Float,,,02,],,,0X6,],,,02,],),{,Return,;,},},<EOF>''',101))

    def test_3118(self):
        self.assertTrue(TestLexer.test('''Class _0_:rS{Constructor (E:Array [String ,022];_,T:Array [Boolean ,0b1];_,C:Array [Array [Array [Float ,0XB9_D],022],0X8_7];_0:Boolean ){} }''','''Class,_0_,:,rS,{,Constructor,(,E,:,Array,[,String,,,022,],;,_,,,T,:,Array,[,Boolean,,,0b1,],;,_,,,C,:,Array,[,Array,[,Array,[,Float,,,0XB9D,],,,022,],,,0X87,],;,_0,:,Boolean,),{,},},<EOF>''',101))

    def test_3119(self):
        self.assertTrue(TestLexer.test('''Class _:C{Var _,Y_Z,_yP:_I_;Constructor (p,rTW8O_:Float ;_nSm3:Array [Array [Array [String ,0x4B],81],015]){} }Class _:MN{}''','''Class,_,:,C,{,Var,_,,,Y_Z,,,_yP,:,_I_,;,Constructor,(,p,,,rTW8O_,:,Float,;,_nSm3,:,Array,[,Array,[,Array,[,String,,,0x4B,],,,81,],,,015,],),{,},},Class,_,:,MN,{,},<EOF>''',101))

    def test_3120(self):
        self.assertTrue(TestLexer.test('''Class _{Val $_6_,N8,_J:Array [Array [Int ,9],066];}Class _{$4_(){} }Class H{}Class _:_{Val $0,Op3____:Array [Float ,92];}''','''Class,_,{,Val,$_6_,,,N8,,,_J,:,Array,[,Array,[,Int,,,9,],,,066,],;,},Class,_,{,$4_,(,),{,},},Class,H,{,},Class,_,:,_,{,Val,$0,,,Op3____,:,Array,[,Float,,,92,],;,},<EOF>''',101))

    def test_3121(self):
        self.assertTrue(TestLexer.test('''Class k{_3(_:_g_){Continue ;Break ;Val kE7,s:__;Continue ;}Val $S_:_104_1;}Class F:_{Constructor (Y__,_R:su){} }''','''Class,k,{,_3,(,_,:,_g_,),{,Continue,;,Break,;,Val,kE7,,,s,:,__,;,Continue,;,},Val,$S_,:,_104_1,;,},Class,F,:,_,{,Constructor,(,Y__,,,_R,:,su,),{,},},<EOF>''',101))

    def test_3122(self):
        self.assertTrue(TestLexer.test('''Class D{Var _,V8_M,$92,$15p,J:Array [Boolean ,0102];}Class H{Val _K_,$_,$_:J;Constructor (_6,S_:Array [Array [Boolean ,42],013_1_65];r:_3;U,R39e:Array [String ,03];_e,_:Array [Int ,0x8]){} }''','''Class,D,{,Var,_,,,V8_M,,,$92,,,$15p,,,J,:,Array,[,Boolean,,,0102,],;,},Class,H,{,Val,_K_,,,$_,,,$_,:,J,;,Constructor,(,_6,,,S_,:,Array,[,Array,[,Boolean,,,42,],,,013165,],;,r,:,_3,;,U,,,R39e,:,Array,[,String,,,03,],;,_e,,,_,:,Array,[,Int,,,0x8,],),{,},},<EOF>''',101))

    def test_3123(self):
        self.assertTrue(TestLexer.test('''Class k_56:A{}Class M__{I(_:Array [Array [Array [String ,100],06],03];_:String ;N:Array [Array [Boolean ,033],0X55]){} }''','''Class,k_56,:,A,{,},Class,M__,{,I,(,_,:,Array,[,Array,[,Array,[,String,,,100,],,,06,],,,03,],;,_,:,String,;,N,:,Array,[,Array,[,Boolean,,,033,],,,0X55,],),{,},},<EOF>''',101))

    def test_3124(self):
        self.assertTrue(TestLexer.test('''Class D:_p0{Val o:Array [Boolean ,5];Constructor (H:Float ){}Constructor (){Break ;Return ;Continue ;} }Class m{}''','''Class,D,:,_p0,{,Val,o,:,Array,[,Boolean,,,5,],;,Constructor,(,H,:,Float,),{,},Constructor,(,),{,Break,;,Return,;,Continue,;,},},Class,m,{,},<EOF>''',101))

    def test_3125(self):
        self.assertTrue(TestLexer.test('''Class _{Var Ob:Array [Array [Array [Float ,05],0X9],0B1_1];}Class _{}Class _{Var $6:Float ;$G(){U_5::$__01();Var Ba8H_:_w_;} }Class S0:g{}''','''Class,_,{,Var,Ob,:,Array,[,Array,[,Array,[,Float,,,05,],,,0X9,],,,0B11,],;,},Class,_,{,},Class,_,{,Var,$6,:,Float,;,$G,(,),{,U_5,::,$__01,(,),;,Var,Ba8H_,:,_w_,;,},},Class,S0,:,g,{,},<EOF>''',101))

    def test_3126(self):
        self.assertTrue(TestLexer.test('''Class _{}Class H{$_(KqN1_,_R65:Array [Array [String ,7],012];m9:V;c,_D:Float ;_T:_;G_C,IaU6,k:Int ;_:_939){} }''','''Class,_,{,},Class,H,{,$_,(,KqN1_,,,_R65,:,Array,[,Array,[,String,,,7,],,,012,],;,m9,:,V,;,c,,,_D,:,Float,;,_T,:,_,;,G_C,,,IaU6,,,k,:,Int,;,_,:,_939,),{,},},<EOF>''',101))

    def test_3127(self):
        self.assertTrue(TestLexer.test('''Class _:V{Val $_:_;Val $6_L,$7A_,_:Array [Array [Array [Array [Boolean ,0B100011],03_2],9_9],5];Destructor (){Var K:Int ;}Val $XO:Q_N;}''','''Class,_,:,V,{,Val,$_,:,_,;,Val,$6_L,,,$7A_,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B100011,],,,032,],,,99,],,,5,],;,Destructor,(,),{,Var,K,:,Int,;,},Val,$XO,:,Q_N,;,},<EOF>''',101))

    def test_3128(self):
        self.assertTrue(TestLexer.test('''Class K:s3_{}Class _:w{Val $_,_:Array [Array [Array [Array [Array [Array [Int ,0x2],0X4A],0B1],6_9],05_7_66],97];}''','''Class,K,:,s3_,{,},Class,_,:,w,{,Val,$_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x2,],,,0X4A,],,,0B1,],,,69,],,,05766,],,,97,],;,},<EOF>''',101))

    def test_3129(self):
        self.assertTrue(TestLexer.test('''Class o:_{}Class mTw1P:A_o{Destructor (){}Destructor (){}Val $I:Array [String ,03_7];Val $7s_:Array [Array [Int ,0x6],01];}''','''Class,o,:,_,{,},Class,mTw1P,:,A_o,{,Destructor,(,),{,},Destructor,(,),{,},Val,$I,:,Array,[,String,,,037,],;,Val,$7s_,:,Array,[,Array,[,Int,,,0x6,],,,01,],;,},<EOF>''',101))

    def test_3130(self):
        self.assertTrue(TestLexer.test('''Class E:_{Val _0,r_,$2:Array [Array [Boolean ,14],14];Val _z,$v8:String ;Var _,_,$_2:Array [Int ,0XC4_D0];}Class H:B{}''','''Class,E,:,_,{,Val,_0,,,r_,,,$2,:,Array,[,Array,[,Boolean,,,14,],,,14,],;,Val,_z,,,$v8,:,String,;,Var,_,,,_,,,$_2,:,Array,[,Int,,,0XC4D0,],;,},Class,H,:,B,{,},<EOF>''',101))

    def test_3131(self):
        self.assertTrue(TestLexer.test('''Class _:_2{}Class W{Val __,_4,_,M,_,$8_3,_7t:Array [Array [Array [Array [Array [Float ,2],0XF7],07],05_1_56],63];}''','''Class,_,:,_2,{,},Class,W,{,Val,__,,,_4,,,_,,,M,,,_,,,$8_3,,,_7t,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,2,],,,0XF7,],,,07,],,,05156,],,,63,],;,},<EOF>''',101))

    def test_3132(self):
        self.assertTrue(TestLexer.test('''Class _{Var v_f:_p;Var $78:Array [Boolean ,0B111011];Destructor (){ {} }Val $_3:Array [Array [Array [Float ,0b1010011],0b1010011],0b1010011];}''','''Class,_,{,Var,v_f,:,_p,;,Var,$78,:,Array,[,Boolean,,,0B111011,],;,Destructor,(,),{,{,},},Val,$_3,:,Array,[,Array,[,Array,[,Float,,,0b1010011,],,,0b1010011,],,,0b1010011,],;,},<EOF>''',101))

    def test_3133(self):
        self.assertTrue(TestLexer.test('''Class _:Z{Constructor (_:Boolean ){}_(__,y3,_:Array [Array [Array [String ,0x1],0x9],0b1001101];P0,z_:Array [Array [Array [Array [Boolean ,0B10001],4],55],0B10001];y:_){} }Class u07{Val $_95:Boolean ;}''','''Class,_,:,Z,{,Constructor,(,_,:,Boolean,),{,},_,(,__,,,y3,,,_,:,Array,[,Array,[,Array,[,String,,,0x1,],,,0x9,],,,0b1001101,],;,P0,,,z_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B10001,],,,4,],,,55,],,,0B10001,],;,y,:,_,),{,},},Class,u07,{,Val,$_95,:,Boolean,;,},<EOF>''',101))

    def test_3134(self):
        self.assertTrue(TestLexer.test('''Class q:hW__L_h7{}Class _6_:YE6_{Constructor (___77:Float ;Hj8_S8,k:Array [Array [Array [String ,0X1],0x2],0b110000];_:_D;T8C_5s:c){}Constructor (_8,_:Array [Int ,3]){Continue ;} }''','''Class,q,:,hW__L_h7,{,},Class,_6_,:,YE6_,{,Constructor,(,___77,:,Float,;,Hj8_S8,,,k,:,Array,[,Array,[,Array,[,String,,,0X1,],,,0x2,],,,0b110000,],;,_,:,_D,;,T8C_5s,:,c,),{,},Constructor,(,_8,,,_,:,Array,[,Int,,,3,],),{,Continue,;,},},<EOF>''',101))

    def test_3135(self):
        self.assertTrue(TestLexer.test('''Class M9H__:v{Constructor (_7P,G:Float ;T,__:Array [Boolean ,01];_6,T,Y,__,__,___:c;_O,rFC,x,_44,v:String ){} }''','''Class,M9H__,:,v,{,Constructor,(,_7P,,,G,:,Float,;,T,,,__,:,Array,[,Boolean,,,01,],;,_6,,,T,,,Y,,,__,,,__,,,___,:,c,;,_O,,,rFC,,,x,,,_44,,,v,:,String,),{,},},<EOF>''',101))

    def test_3136(self):
        self.assertTrue(TestLexer.test('''Class L5_{}Class _1:_{Val t,$D:u;Constructor (_,A_,J_A:x7;A_,_,f_H,p5:A;_40,c_,w2_,_L,_41o:f){}r(){} }Class Z_:_7{}Class Qw:k_{}Class N2w_:a{}''','''Class,L5_,{,},Class,_1,:,_,{,Val,t,,,$D,:,u,;,Constructor,(,_,,,A_,,,J_A,:,x7,;,A_,,,_,,,f_H,,,p5,:,A,;,_40,,,c_,,,w2_,,,_L,,,_41o,:,f,),{,},r,(,),{,},},Class,Z_,:,_7,{,},Class,Qw,:,k_,{,},Class,N2w_,:,a,{,},<EOF>''',101))

    def test_3137(self):
        self.assertTrue(TestLexer.test('''Class T{$N(_7,_:Array [Array [Array [Array [Array [Float ,0X1],41],06],0B1],031];_:Int ){} }Class _{}Class _id:_{}''','''Class,T,{,$N,(,_7,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X1,],,,41,],,,06,],,,0B1,],,,031,],;,_,:,Int,),{,},},Class,_,{,},Class,_id,:,_,{,},<EOF>''',101))

    def test_3138(self):
        self.assertTrue(TestLexer.test('''Class w:___{Destructor (){}Var $u:v;}Class c5_u_:G{}Class w:v2JK{Constructor (m,_,_3H,_,_:String ){} }Class T{}''','''Class,w,:,___,{,Destructor,(,),{,},Var,$u,:,v,;,},Class,c5_u_,:,G,{,},Class,w,:,v2JK,{,Constructor,(,m,,,_,,,_3H,,,_,,,_,:,String,),{,},},Class,T,{,},<EOF>''',101))

    def test_3139(self):
        self.assertTrue(TestLexer.test('''Class P3:r_{Val n,$7,_:_;}Class _:O_{}Class _N__:__8_b{}Class C:_{Var Z,F_r__,_,$I4,w:Array [Array [String ,0X1B],18];}''','''Class,P3,:,r_,{,Val,n,,,$7,,,_,:,_,;,},Class,_,:,O_,{,},Class,_N__,:,__8_b,{,},Class,C,:,_,{,Var,Z,,,F_r__,,,_,,,$I4,,,w,:,Array,[,Array,[,String,,,0X1B,],,,18,],;,},<EOF>''',101))

    def test_3140(self):
        self.assertTrue(TestLexer.test('''Class ___h:_{Destructor (){}Constructor (){}Var $3,__9_9_:Array [String ,0B1010010];}Class j9{Constructor (_O2,oh:n){} }''','''Class,___h,:,_,{,Destructor,(,),{,},Constructor,(,),{,},Var,$3,,,__9_9_,:,Array,[,String,,,0B1010010,],;,},Class,j9,{,Constructor,(,_O2,,,oh,:,n,),{,},},<EOF>''',101))

    def test_3141(self):
        self.assertTrue(TestLexer.test('''Class _{}Class UF:yh_{Constructor (){} }Class k{}Class _9_:Y_{}Class YuL_{__(K55_,l,_p,es,_,Q,_,_O:Y7;_,O65711_:P_8_;F_,n,Y:_9_){} }Class h_:ow6{}''','''Class,_,{,},Class,UF,:,yh_,{,Constructor,(,),{,},},Class,k,{,},Class,_9_,:,Y_,{,},Class,YuL_,{,__,(,K55_,,,l,,,_p,,,es,,,_,,,Q,,,_,,,_O,:,Y7,;,_,,,O65711_,:,P_8_,;,F_,,,n,,,Y,:,_9_,),{,},},Class,h_,:,ow6,{,},<EOF>''',101))

    def test_3142(self):
        self.assertTrue(TestLexer.test('''Class _72l:I{Constructor (_:_;_:Array [Array [Array [Array [Array [Array [Float ,0B1],0b110111],0x7],0B100010],0B100010],0b1]){} }''','''Class,_72l,:,I,{,Constructor,(,_,:,_,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1,],,,0b110111,],,,0x7,],,,0B100010,],,,0B100010,],,,0b1,],),{,},},<EOF>''',101))

    def test_3143(self):
        self.assertTrue(TestLexer.test('''Class JX8{Val _,$_s1__:Float ;}Class H{}Class c{Constructor (_e,_:Array [Array [Array [String ,0B1],0XD],0B1001000]){} }''','''Class,JX8,{,Val,_,,,$_s1__,:,Float,;,},Class,H,{,},Class,c,{,Constructor,(,_e,,,_,:,Array,[,Array,[,Array,[,String,,,0B1,],,,0XD,],,,0B1001000,],),{,},},<EOF>''',101))

    def test_3144(self):
        self.assertTrue(TestLexer.test('''Class f_p{}Class _{}Class q_{Val $7:Array [String ,04_6421];v(_:Int ){}Constructor (V_:Array [String ,03_7_3]){} }''','''Class,f_p,{,},Class,_,{,},Class,q_,{,Val,$7,:,Array,[,String,,,046421,],;,v,(,_,:,Int,),{,},Constructor,(,V_,:,Array,[,String,,,0373,],),{,},},<EOF>''',101))

    def test_3145(self):
        self.assertTrue(TestLexer.test('''Class A:V{Val s,i,_gV,$0:String ;Var $3,Y__,$K,L0:String ;}Class _M:F{}Class o:k__{}Class Bj17:_{Constructor (__7H,_,I__Z,_YA_:P_k){} }Class f3{}Class _{}''','''Class,A,:,V,{,Val,s,,,i,,,_gV,,,$0,:,String,;,Var,$3,,,Y__,,,$K,,,L0,:,String,;,},Class,_M,:,F,{,},Class,o,:,k__,{,},Class,Bj17,:,_,{,Constructor,(,__7H,,,_,,,I__Z,,,_YA_,:,P_k,),{,},},Class,f3,{,},Class,_,{,},<EOF>''',101))

    def test_3146(self):
        self.assertTrue(TestLexer.test('''Class _l9U{}Class _:_{_(I5:Int ;v,_r,_87_,Q16JL,W,j:c__;_9,A:d__){Return ;}h(r:Int ){}Val o24:Boolean ;}Class _8{}''','''Class,_l9U,{,},Class,_,:,_,{,_,(,I5,:,Int,;,v,,,_r,,,_87_,,,Q16JL,,,W,,,j,:,c__,;,_9,,,A,:,d__,),{,Return,;,},h,(,r,:,Int,),{,},Val,o24,:,Boolean,;,},Class,_8,{,},<EOF>''',101))

    def test_3147(self):
        self.assertTrue(TestLexer.test('''Class b:_{Constructor (V15:Boolean ;LD,M:Int ;s_2s_:Array [Array [Array [Array [String ,06],0x7],05],0b1];__4,F:Array [Array [Array [Float ,0X6_D],06_44_2],0X49]){Continue ;Return ;} }''','''Class,b,:,_,{,Constructor,(,V15,:,Boolean,;,LD,,,M,:,Int,;,s_2s_,:,Array,[,Array,[,Array,[,Array,[,String,,,06,],,,0x7,],,,05,],,,0b1,],;,__4,,,F,:,Array,[,Array,[,Array,[,Float,,,0X6D,],,,06442,],,,0X49,],),{,Continue,;,Return,;,},},<EOF>''',101))

    def test_3148(self):
        self.assertTrue(TestLexer.test('''Class _{}Class M8:_{}Class __:P_Y{$_78(dM___k:Array [Array [Float ,0xA_B_032_6C],0xB];RI,S2R:Array [Boolean ,0B1]){} }''','''Class,_,{,},Class,M8,:,_,{,},Class,__,:,P_Y,{,$_78,(,dM___k,:,Array,[,Array,[,Float,,,0xAB0326C,],,,0xB,],;,RI,,,S2R,:,Array,[,Boolean,,,0B1,],),{,},},<EOF>''',101))

    def test_3149(self):
        self.assertTrue(TestLexer.test('''Class _:bv{}Class L_:n__{Constructor (_:Array [Array [Array [Array [Array [Array [Array [Array [Float ,88],2_7],0b101001],0X1],0b101001],0B111010],88],0b1];_:Int ;_:__){Return ;} }''','''Class,_,:,bv,{,},Class,L_,:,n__,{,Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,88,],,,27,],,,0b101001,],,,0X1,],,,0b101001,],,,0B111010,],,,88,],,,0b1,],;,_,:,Int,;,_,:,__,),{,Return,;,},},<EOF>''',101))

    def test_3150(self):
        self.assertTrue(TestLexer.test('''Class w:Q4_C{}Class S:_9{$WD_6(Z,o,d_g_5,__0O,H_,_:Array [Boolean ,50]){}$L(){}Constructor (){ {Continue ;}Val W,_:Boolean ;} }''','''Class,w,:,Q4_C,{,},Class,S,:,_9,{,$WD_6,(,Z,,,o,,,d_g_5,,,__0O,,,H_,,,_,:,Array,[,Boolean,,,50,],),{,},$L,(,),{,},Constructor,(,),{,{,Continue,;,},Val,W,,,_,:,Boolean,;,},},<EOF>''',101))

    def test_3151(self):
        self.assertTrue(TestLexer.test('''Class ak:mA{Val K_xl,$_:Array [Array [Array [Array [Array [Array [Array [Array [String ,0XEF4],9_7],0b1000],2_32_0_6],06_4_476],0b1],8],0B1000];Val __q7:fC;}''','''Class,ak,:,mA,{,Val,K_xl,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0XEF4,],,,97,],,,0b1000,],,,23206,],,,064476,],,,0b1,],,,8,],,,0B1000,],;,Val,__q7,:,fC,;,},<EOF>''',101))

    def test_3152(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (A_:_;t:__O;_68d:B1;z2_,_7f,k5,G,_:Array [String ,0x1E];__,e,___j_:Boolean ;a_:Float ){} }''','''Class,_,{,Constructor,(,A_,:,_,;,t,:,__O,;,_68d,:,B1,;,z2_,,,_7f,,,k5,,,G,,,_,:,Array,[,String,,,0x1E,],;,__,,,e,,,___j_,:,Boolean,;,a_,:,Float,),{,},},<EOF>''',101))

    def test_3153(self):
        self.assertTrue(TestLexer.test('''Class _4_:t{Destructor (){} }Class _l{}Class Q:_05_U_{}Class DX_:kqS{__(mZE_,W9:Int ;D7:Int ;q,k_:Array [Array [String ,0b1011000],0xC]){}Var $1,$Ol9_:Array [Float ,0X2];}''','''Class,_4_,:,t,{,Destructor,(,),{,},},Class,_l,{,},Class,Q,:,_05_U_,{,},Class,DX_,:,kqS,{,__,(,mZE_,,,W9,:,Int,;,D7,:,Int,;,q,,,k_,:,Array,[,Array,[,String,,,0b1011000,],,,0xC,],),{,},Var,$1,,,$Ol9_,:,Array,[,Float,,,0X2,],;,},<EOF>''',101))

    def test_3154(self):
        self.assertTrue(TestLexer.test('''Class sn:EA{}Class _YM2:_1{Val $_g,$c,$__w_,$_0:Array [Int ,0b10_0];Constructor (){Return ;Break ;} }Class _:a{}Class _{D8G_t(z58,P7,_p9g,_0:Array [Float ,46]){} }''','''Class,sn,:,EA,{,},Class,_YM2,:,_1,{,Val,$_g,,,$c,,,$__w_,,,$_0,:,Array,[,Int,,,0b100,],;,Constructor,(,),{,Return,;,Break,;,},},Class,_,:,a,{,},Class,_,{,D8G_t,(,z58,,,P7,,,_p9g,,,_0,:,Array,[,Float,,,46,],),{,},},<EOF>''',101))

    def test_3155(self):
        self.assertTrue(TestLexer.test('''Class O0:r{Var n,_8l_1,_,$0f,$_7,$48w:E;Val $q,$g,Zs,g0_:Array [Boolean ,0b1];}Class y6i8{}Class A_t:G0L{Destructor (){} }''','''Class,O0,:,r,{,Var,n,,,_8l_1,,,_,,,$0f,,,$_7,,,$48w,:,E,;,Val,$q,,,$g,,,Zs,,,g0_,:,Array,[,Boolean,,,0b1,],;,},Class,y6i8,{,},Class,A_t,:,G0L,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3156(self):
        self.assertTrue(TestLexer.test('''Class fj:_{Val $_:Array [Array [Array [Array [Int ,07],0x50],0b1100010],1];Constructor (_:__I9E;_14,_:Array [String ,0X43];_a62h8,Q_shA,_g,_A0X_,__:Array [Boolean ,0X43]){} }''','''Class,fj,:,_,{,Val,$_,:,Array,[,Array,[,Array,[,Array,[,Int,,,07,],,,0x50,],,,0b1100010,],,,1,],;,Constructor,(,_,:,__I9E,;,_14,,,_,:,Array,[,String,,,0X43,],;,_a62h8,,,Q_shA,,,_g,,,_A0X_,,,__,:,Array,[,Boolean,,,0X43,],),{,},},<EOF>''',101))

    def test_3157(self):
        self.assertTrue(TestLexer.test('''Class f4J{}Class _:p{Constructor (Z83k_,b:Array [Boolean ,0137];z7,_4LB7__9My:Array [Int ,0b1]){Val _c833b5L:Array [Array [Array [Array [Array [String ,0137],0b10_1_0_0],0XD_5_B],05],06];} }Class c:_{Val $9,_d,$_:Array [Int ,0B1];}''','''Class,f4J,{,},Class,_,:,p,{,Constructor,(,Z83k_,,,b,:,Array,[,Boolean,,,0137,],;,z7,,,_4LB7__9My,:,Array,[,Int,,,0b1,],),{,Val,_c833b5L,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0137,],,,0b10100,],,,0XD5B,],,,05,],,,06,],;,},},Class,c,:,_,{,Val,$9,,,_d,,,$_,:,Array,[,Int,,,0B1,],;,},<EOF>''',101))

    def test_3158(self):
        self.assertTrue(TestLexer.test('''Class __:__4{Var j,X,$k_62Z:Int ;}Class _i:B{Destructor (){}Val _KV:Array [Array [Array [String ,0b1],2],0X3];}Class B7m:__48t{}''','''Class,__,:,__4,{,Var,j,,,X,,,$k_62Z,:,Int,;,},Class,_i,:,B,{,Destructor,(,),{,},Val,_KV,:,Array,[,Array,[,Array,[,String,,,0b1,],,,2,],,,0X3,],;,},Class,B7m,:,__48t,{,},<EOF>''',101))

    def test_3159(self):
        self.assertTrue(TestLexer.test('''Class D{Var _88,_5z___Z:Int ;Constructor (_l,M4:Array [Boolean ,07_2];_1,p,__,m39:Array [Boolean ,0114]){Continue ;}Constructor (){}Destructor (){} }''','''Class,D,{,Var,_88,,,_5z___Z,:,Int,;,Constructor,(,_l,,,M4,:,Array,[,Boolean,,,072,],;,_1,,,p,,,__,,,m39,:,Array,[,Boolean,,,0114,],),{,Continue,;,},Constructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_3160(self):
        self.assertTrue(TestLexer.test('''Class __{Var s9:_;Val M:Array [Array [Boolean ,0XA_3],0X5A];_1_b(g_22p:Float ;hx:Float ){}Var _,X:Float ;Constructor (__:Float ){} }''','''Class,__,{,Var,s9,:,_,;,Val,M,:,Array,[,Array,[,Boolean,,,0XA3,],,,0X5A,],;,_1_b,(,g_22p,:,Float,;,hx,:,Float,),{,},Var,_,,,X,:,Float,;,Constructor,(,__,:,Float,),{,},},<EOF>''',101))

    def test_3161(self):
        self.assertTrue(TestLexer.test('''Class _2{$_E(_C8,y:_b;_,QV3A,_,A:Array [Array [Array [Array [String ,95],95],0b1],06];v,Oq:__;O:String ;n:Boolean ;__,C:Int ){} }''','''Class,_2,{,$_E,(,_C8,,,y,:,_b,;,_,,,QV3A,,,_,,,A,:,Array,[,Array,[,Array,[,Array,[,String,,,95,],,,95,],,,0b1,],,,06,],;,v,,,Oq,:,__,;,O,:,String,;,n,:,Boolean,;,__,,,C,:,Int,),{,},},<EOF>''',101))

    def test_3162(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (a:Boolean ;_f,f:DH44;_,___q8:Array [Array [Array [String ,7],05],6];C:_){}Constructor (_,J3,N,_3Nfr6:String ;__:Boolean ;of2:Array [Int ,0X18]){} }''','''Class,_,{,Constructor,(,a,:,Boolean,;,_f,,,f,:,DH44,;,_,,,___q8,:,Array,[,Array,[,Array,[,String,,,7,],,,05,],,,6,],;,C,:,_,),{,},Constructor,(,_,,,J3,,,N,,,_3Nfr6,:,String,;,__,:,Boolean,;,of2,:,Array,[,Int,,,0X18,],),{,},},<EOF>''',101))

    def test_3163(self):
        self.assertTrue(TestLexer.test('''Class k_99_:__J{}Class A:Q0{}Class mY{}Class _{}Class _:C{Var $q,w:Boolean ;}Class ___:I{}Class j_9{Destructor (){_7::$I0();Break ;} }Class N:PH{Val _Y:Array [Float ,4];}Class eO:_{Destructor (){Var ___9:String ;{}Break ;__::$U().D._33();} }Class wa{}''','''Class,k_99_,:,__J,{,},Class,A,:,Q0,{,},Class,mY,{,},Class,_,{,},Class,_,:,C,{,Var,$q,,,w,:,Boolean,;,},Class,___,:,I,{,},Class,j_9,{,Destructor,(,),{,_7,::,$I0,(,),;,Break,;,},},Class,N,:,PH,{,Val,_Y,:,Array,[,Float,,,4,],;,},Class,eO,:,_,{,Destructor,(,),{,Var,___9,:,String,;,{,},Break,;,__,::,$U,(,),.,D,.,_33,(,),;,},},Class,wa,{,},<EOF>''',101))

    def test_3164(self):
        self.assertTrue(TestLexer.test('''Class _:d{$__cw(o_,Y7_,_wG,WY:_;pw_:Array [Array [Boolean ,0X6],0X2AB]){} }Class S9:_{Var t_:Array [Array [Boolean ,0b10110],0X6];}Class q:L7p{}Class a{}Class _0:_{Val R:String ;Val $60:Array [Float ,07];}Class __q{}''','''Class,_,:,d,{,$__cw,(,o_,,,Y7_,,,_wG,,,WY,:,_,;,pw_,:,Array,[,Array,[,Boolean,,,0X6,],,,0X2AB,],),{,},},Class,S9,:,_,{,Var,t_,:,Array,[,Array,[,Boolean,,,0b10110,],,,0X6,],;,},Class,q,:,L7p,{,},Class,a,{,},Class,_0,:,_,{,Val,R,:,String,;,Val,$60,:,Array,[,Float,,,07,],;,},Class,__q,{,},<EOF>''',101))

    def test_3165(self):
        self.assertTrue(TestLexer.test('''Class lLO{X(_,g637,R_2,L4,Y__,__,_p,V,z8:Boolean ;Z6,_2:Float ){}Destructor (){Continue ;}Constructor (Y_jT4,Z7,Agz,e_,_,_:Array [Array [String ,0x2A],0127]){_::$_();} }''','''Class,lLO,{,X,(,_,,,g637,,,R_2,,,L4,,,Y__,,,__,,,_p,,,V,,,z8,:,Boolean,;,Z6,,,_2,:,Float,),{,},Destructor,(,),{,Continue,;,},Constructor,(,Y_jT4,,,Z7,,,Agz,,,e_,,,_,,,_,:,Array,[,Array,[,String,,,0x2A,],,,0127,],),{,_,::,$_,(,),;,},},<EOF>''',101))

    def test_3166(self):
        self.assertTrue(TestLexer.test('''Class __{$445(_,Ye,_:_986;f:Array [Int ,12];_,a__M:Float ;KKN:Float ;l,___y_:Array [Array [String ,01_32],0b1001010]){}Destructor (){} }Class _:_28{}''','''Class,__,{,$445,(,_,,,Ye,,,_,:,_986,;,f,:,Array,[,Int,,,12,],;,_,,,a__M,:,Float,;,KKN,:,Float,;,l,,,___y_,:,Array,[,Array,[,String,,,0132,],,,0b1001010,],),{,},Destructor,(,),{,},},Class,_,:,_28,{,},<EOF>''',101))

    def test_3167(self):
        self.assertTrue(TestLexer.test('''Class w6:rN{$O(_,_7,Z,_:Array [Float ,4];x:Array [Array [Array [Array [Array [String ,52],999_1_6_4],0x47],4],0b10110]){} }Class _{}''','''Class,w6,:,rN,{,$O,(,_,,,_7,,,Z,,,_,:,Array,[,Float,,,4,],;,x,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,52,],,,999164,],,,0x47,],,,4,],,,0b10110,],),{,},},Class,_,{,},<EOF>''',101))

    def test_3168(self):
        self.assertTrue(TestLexer.test('''Class _m_:_{Destructor (){s_G6::$b()._2._H4();} }Class f{Constructor (){} }Class f{Var _,$7:Array [String ,075];Constructor (){} }''','''Class,_m_,:,_,{,Destructor,(,),{,s_G6,::,$b,(,),.,_2,.,_H4,(,),;,},},Class,f,{,Constructor,(,),{,},},Class,f,{,Var,_,,,$7,:,Array,[,String,,,075,],;,Constructor,(,),{,},},<EOF>''',101))

    def test_3169(self):
        self.assertTrue(TestLexer.test('''Class b_3_6{Constructor (__K:c4i){}$_(_6_56_15,_2,_:Array [Array [Array [Array [Boolean ,66],66],03],0XD]){} }Class _{}Class _Rp{Var $MZ:Array [Array [Array [Float ,01],66],0B11100];}''','''Class,b_3_6,{,Constructor,(,__K,:,c4i,),{,},$_,(,_6_56_15,,,_2,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,66,],,,66,],,,03,],,,0XD,],),{,},},Class,_,{,},Class,_Rp,{,Var,$MZ,:,Array,[,Array,[,Array,[,Float,,,01,],,,66,],,,0B11100,],;,},<EOF>''',101))

    def test_3170(self):
        self.assertTrue(TestLexer.test('''Class b:R07_{}Class __:l34_{Var $_:Array [String ,03];Var $hZ:Int ;}Class c:ZB{$_o2(_0k_,pQ__tx3_:__;aW4,_:h;gZ,Bvv,_B,_c,_v,_:Boolean ){} }Class k:_G{}''','''Class,b,:,R07_,{,},Class,__,:,l34_,{,Var,$_,:,Array,[,String,,,03,],;,Var,$hZ,:,Int,;,},Class,c,:,ZB,{,$_o2,(,_0k_,,,pQ__tx3_,:,__,;,aW4,,,_,:,h,;,gZ,,,Bvv,,,_B,,,_c,,,_v,,,_,:,Boolean,),{,},},Class,k,:,_G,{,},<EOF>''',101))

    def test_3171(self):
        self.assertTrue(TestLexer.test('''Class X_:_M{Constructor (cd__:Array [Array [Boolean ,0x2C],0B100000];_7,_0:Boolean ){} }Class _:k{}Class V2_{}Class s{$_(){} }Class _7_o:__{}Class _v__Zi:_1{}''','''Class,X_,:,_M,{,Constructor,(,cd__,:,Array,[,Array,[,Boolean,,,0x2C,],,,0B100000,],;,_7,,,_0,:,Boolean,),{,},},Class,_,:,k,{,},Class,V2_,{,},Class,s,{,$_,(,),{,},},Class,_7_o,:,__,{,},Class,_v__Zi,:,_1,{,},<EOF>''',101))

    def test_3172(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){Break ;Var q_3_,F:Array [Array [Boolean ,0b100_1_0],0b1];} }Class _{Var $IY:Int ;}Class R_:_{}''','''Class,_,{,Destructor,(,),{,Break,;,Var,q_3_,,,F,:,Array,[,Array,[,Boolean,,,0b10010,],,,0b1,],;,},},Class,_,{,Var,$IY,:,Int,;,},Class,R_,:,_,{,},<EOF>''',101))

    def test_3173(self):
        self.assertTrue(TestLexer.test('''Class Z{_(){}Var C__E:Array [Array [Array [Array [Int ,8],0x19],0x19],0131];Val $3,$1I,g,$5x5_8:g8058;}Class _R__:u5{}Class _{}''','''Class,Z,{,_,(,),{,},Var,C__E,:,Array,[,Array,[,Array,[,Array,[,Int,,,8,],,,0x19,],,,0x19,],,,0131,],;,Val,$3,,,$1I,,,g,,,$5x5_8,:,g8058,;,},Class,_R__,:,u5,{,},Class,_,{,},<EOF>''',101))

    def test_3174(self):
        self.assertTrue(TestLexer.test('''Class p{Destructor (){Continue ;} }Class N:d{}Class u0:_{Val $sRVP_3,$3Ab7t6_:String ;}Class M:z__{}Class t{Var $_b,_:String ;Destructor (){}Var $6,_:Array [Array [Int ,0B10101],52];Constructor (){Continue ;} }''','''Class,p,{,Destructor,(,),{,Continue,;,},},Class,N,:,d,{,},Class,u0,:,_,{,Val,$sRVP_3,,,$3Ab7t6_,:,String,;,},Class,M,:,z__,{,},Class,t,{,Var,$_b,,,_,:,String,;,Destructor,(,),{,},Var,$6,,,_,:,Array,[,Array,[,Int,,,0B10101,],,,52,],;,Constructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_3175(self):
        self.assertTrue(TestLexer.test('''Class e36{Val _89_,f:Array [Int ,0X4B];ST(_9_:o;ht,G:Array [Boolean ,81]){}Constructor (_:Array [Float ,06]){}Destructor (){Break ;}Constructor (){} }''','''Class,e36,{,Val,_89_,,,f,:,Array,[,Int,,,0X4B,],;,ST,(,_9_,:,o,;,ht,,,G,:,Array,[,Boolean,,,81,],),{,},Constructor,(,_,:,Array,[,Float,,,06,],),{,},Destructor,(,),{,Break,;,},Constructor,(,),{,},},<EOF>''',101))

    def test_3176(self):
        self.assertTrue(TestLexer.test('''Class _V5_p{}Class u{}Class L_oO:_{}Class _{Constructor (P:Int ){}Val $4:Boolean ;Val Z3,$6_:n;}Class P{Constructor (){} }Class u:_{L5(){}$i70_6(){} }''','''Class,_V5_p,{,},Class,u,{,},Class,L_oO,:,_,{,},Class,_,{,Constructor,(,P,:,Int,),{,},Val,$4,:,Boolean,;,Val,Z3,,,$6_,:,n,;,},Class,P,{,Constructor,(,),{,},},Class,u,:,_,{,L5,(,),{,},$i70_6,(,),{,},},<EOF>''',101))

    def test_3177(self):
        self.assertTrue(TestLexer.test('''Class z_:P{}Class _{}Class _:v{}Class f{Q(){}$0(_,e,_4,l,F:Array [Int ,06]){} }Class N2{Val _:Array [Int ,0b101100];Destructor (){Continue ;Break ;}Var _0y,_:Array [String ,0x5F];Val $k,ud__In __:_0;}''','''Class,z_,:,P,{,},Class,_,{,},Class,_,:,v,{,},Class,f,{,Q,(,),{,},$0,(,_,,,e,,,_4,,,l,,,F,:,Array,[,Int,,,06,],),{,},},Class,N2,{,Val,_,:,Array,[,Int,,,0b101100,],;,Destructor,(,),{,Continue,;,Break,;,},Var,_0y,,,_,:,Array,[,String,,,0x5F,],;,Val,$k,,,ud__In,__,:,_0,;,},<EOF>''',101))

    def test_3178(self):
        self.assertTrue(TestLexer.test('''Class xq4:__G{_(_h:Array [Boolean ,0x30];_S,_,_:epF_;uf_7_1:Float ;o,_3_5q4Q_,X___37:Array [Array [Array [Array [String ,0b100000],0b100000],0B101010],12]){} }''','''Class,xq4,:,__G,{,_,(,_h,:,Array,[,Boolean,,,0x30,],;,_S,,,_,,,_,:,epF_,;,uf_7_1,:,Float,;,o,,,_3_5q4Q_,,,X___37,:,Array,[,Array,[,Array,[,Array,[,String,,,0b100000,],,,0b100000,],,,0B101010,],,,12,],),{,},},<EOF>''',101))

    def test_3179(self):
        self.assertTrue(TestLexer.test('''Class c_:a3__{H(kF2,__,E:_){} }Class __{Constructor (j:_N){} }Class F:O_WYp2{}Class F2{}Class Po:E9Z{Var $T,$5J9,$2,__S1,w_:Int ;}''','''Class,c_,:,a3__,{,H,(,kF2,,,__,,,E,:,_,),{,},},Class,__,{,Constructor,(,j,:,_N,),{,},},Class,F,:,O_WYp2,{,},Class,F2,{,},Class,Po,:,E9Z,{,Var,$T,,,$5J9,,,$2,,,__S1,,,w_,:,Int,;,},<EOF>''',101))

    def test_3180(self):
        self.assertTrue(TestLexer.test('''Class _17{Constructor (_,_:_;h,_S7_3G:Array [Int ,0b1000];R,_,_1o1_Az,_1:Array [Array [Array [Boolean ,05],02],01];_8,v:String ;S,H7t_:Boolean ){}Val $34,$u__K:Array [Array [Boolean ,2_4],06];}''','''Class,_17,{,Constructor,(,_,,,_,:,_,;,h,,,_S7_3G,:,Array,[,Int,,,0b1000,],;,R,,,_,,,_1o1_Az,,,_1,:,Array,[,Array,[,Array,[,Boolean,,,05,],,,02,],,,01,],;,_8,,,v,:,String,;,S,,,H7t_,:,Boolean,),{,},Val,$34,,,$u__K,:,Array,[,Array,[,Boolean,,,24,],,,06,],;,},<EOF>''',101))

    def test_3181(self):
        self.assertTrue(TestLexer.test('''Class k_{}Class l{}Class ArW:w_99{}Class h_:F{$__kPr(w6_,e__6,O:_;_:_;r:Array [Array [Array [Float ,0x1_A],0B1011000],0xD0];Y:Array [String ,057];_6,Z:Float ;__:Array [Int ,057]){} }Class Nl_9{Destructor (){Break ;} }''','''Class,k_,{,},Class,l,{,},Class,ArW,:,w_99,{,},Class,h_,:,F,{,$__kPr,(,w6_,,,e__6,,,O,:,_,;,_,:,_,;,r,:,Array,[,Array,[,Array,[,Float,,,0x1A,],,,0B1011000,],,,0xD0,],;,Y,:,Array,[,String,,,057,],;,_6,,,Z,:,Float,;,__,:,Array,[,Int,,,057,],),{,},},Class,Nl_9,{,Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_3182(self):
        self.assertTrue(TestLexer.test('''Class _:_e_{}Class U0:_{Val $_9,$hg,$_I,$A3_,$Gy,_:U;Val $4_,$H1r_,__7m5:Float ;}Class __Tn_E:N{}Class u_:___{}''','''Class,_,:,_e_,{,},Class,U0,:,_,{,Val,$_9,,,$hg,,,$_I,,,$A3_,,,$Gy,,,_,:,U,;,Val,$4_,,,$H1r_,,,__7m5,:,Float,;,},Class,__Tn_E,:,N,{,},Class,u_,:,___,{,},<EOF>''',101))

    def test_3183(self):
        self.assertTrue(TestLexer.test('''Class p:_40{}Class s_{Var $o:Array [Array [Array [String ,0X9],0B101010],0143];Constructor (){} }Class _:_{}Class _:F{____(){} }Class _7YK{}Class p5{}''','''Class,p,:,_40,{,},Class,s_,{,Var,$o,:,Array,[,Array,[,Array,[,String,,,0X9,],,,0B101010,],,,0143,],;,Constructor,(,),{,},},Class,_,:,_,{,},Class,_,:,F,{,____,(,),{,},},Class,_7YK,{,},Class,p5,{,},<EOF>''',101))

    def test_3184(self):
        self.assertTrue(TestLexer.test('''Class y{}Class t:_{}Class _{Destructor (){ {Continue ;}{} }Var $_,$m,J:Int ;Constructor (){}$78_(){} }Class CQ___Na{Destructor (){} }''','''Class,y,{,},Class,t,:,_,{,},Class,_,{,Destructor,(,),{,{,Continue,;,},{,},},Var,$_,,,$m,,,J,:,Int,;,Constructor,(,),{,},$78_,(,),{,},},Class,CQ___Na,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3185(self):
        self.assertTrue(TestLexer.test('''Class _:i{Destructor (){}Constructor (_D:UfQ;_,U0,Z9:_;_,_:Array [Array [Int ,0X6A9],5];_,__d_:Array [Array [Array [Int ,55],02_6],0X20]){Var T,o:Array [Boolean ,0b1];} }Class _3{Val $__,$a4:Array [Array [Int ,0x5D],01];}''','''Class,_,:,i,{,Destructor,(,),{,},Constructor,(,_D,:,UfQ,;,_,,,U0,,,Z9,:,_,;,_,,,_,:,Array,[,Array,[,Int,,,0X6A9,],,,5,],;,_,,,__d_,:,Array,[,Array,[,Array,[,Int,,,55,],,,026,],,,0X20,],),{,Var,T,,,o,:,Array,[,Boolean,,,0b1,],;,},},Class,_3,{,Val,$__,,,$a4,:,Array,[,Array,[,Int,,,0x5D,],,,01,],;,},<EOF>''',101))

    def test_3186(self):
        self.assertTrue(TestLexer.test('''Class _{Val X:Boolean ;Destructor (){} }Class i5f__:i{}Class _{}Class b:p{$_(){} }Class o1:h__{Var _q,bf:Array [Array [Array [String ,0X35],0B1000101],0B1000101];}''','''Class,_,{,Val,X,:,Boolean,;,Destructor,(,),{,},},Class,i5f__,:,i,{,},Class,_,{,},Class,b,:,p,{,$_,(,),{,},},Class,o1,:,h__,{,Var,_q,,,bf,:,Array,[,Array,[,Array,[,String,,,0X35,],,,0B1000101,],,,0B1000101,],;,},<EOF>''',101))

    def test_3187(self):
        self.assertTrue(TestLexer.test('''Class e8yr_:_LDE071{T(_,BN,N_,_m,w:Array [Array [Array [Array [Int ,0x33],0B1],0x9],18]){Continue ;{} }Destructor (){} }Class _dj:f{}''','''Class,e8yr_,:,_LDE071,{,T,(,_,,,BN,,,N_,,,_m,,,w,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x33,],,,0B1,],,,0x9,],,,18,],),{,Continue,;,{,},},Destructor,(,),{,},},Class,_dj,:,f,{,},<EOF>''',101))

    def test_3188(self):
        self.assertTrue(TestLexer.test('''Class _l{Constructor (K,m:Boolean ;e:_6_l){}Val $1,$x:N4;Constructor (n:Array [Boolean ,9];_8:String ;_h:__){} }Class _{}Class m_:Z0{}''','''Class,_l,{,Constructor,(,K,,,m,:,Boolean,;,e,:,_6_l,),{,},Val,$1,,,$x,:,N4,;,Constructor,(,n,:,Array,[,Boolean,,,9,],;,_8,:,String,;,_h,:,__,),{,},},Class,_,{,},Class,m_,:,Z0,{,},<EOF>''',101))

    def test_3189(self):
        self.assertTrue(TestLexer.test('''Class _a:_N_{Var n,_F_3:Array [Boolean ,0133];}Class w_:Y{Destructor (){}Destructor (){} }Class D:_{$T(_,_H:String ){} }''','''Class,_a,:,_N_,{,Var,n,,,_F_3,:,Array,[,Boolean,,,0133,],;,},Class,w_,:,Y,{,Destructor,(,),{,},Destructor,(,),{,},},Class,D,:,_,{,$T,(,_,,,_H,:,String,),{,},},<EOF>''',101))

    def test_3190(self):
        self.assertTrue(TestLexer.test('''Class __:y{}Class r:_6{Var A,_:Boolean ;Var u_:F_;}Class V5__7Sw3{}Class n{Val $1e,$7a_,_,f:_I;Var r7,$__7qW_6:Float ;}''','''Class,__,:,y,{,},Class,r,:,_6,{,Var,A,,,_,:,Boolean,;,Var,u_,:,F_,;,},Class,V5__7Sw3,{,},Class,n,{,Val,$1e,,,$7a_,,,_,,,f,:,_I,;,Var,r7,,,$__7qW_6,:,Float,;,},<EOF>''',101))

    def test_3191(self):
        self.assertTrue(TestLexer.test('''Class i{}Class C:_{Var _:Boolean ;Constructor (P,LI1:Array [Array [Array [Float ,0b10011],0b1],98];_1_j_3,_t912,d3h,_,A_,p:Array [Boolean ,0X7];_,_:_5;r80:k_1___p;D,__e:Array [Array [Array [Boolean ,0b1],98],01_323]){}Destructor (){} }Class P_D:_{}''','''Class,i,{,},Class,C,:,_,{,Var,_,:,Boolean,;,Constructor,(,P,,,LI1,:,Array,[,Array,[,Array,[,Float,,,0b10011,],,,0b1,],,,98,],;,_1_j_3,,,_t912,,,d3h,,,_,,,A_,,,p,:,Array,[,Boolean,,,0X7,],;,_,,,_,:,_5,;,r80,:,k_1___p,;,D,,,__e,:,Array,[,Array,[,Array,[,Boolean,,,0b1,],,,98,],,,01323,],),{,},Destructor,(,),{,},},Class,P_D,:,_,{,},<EOF>''',101))

    def test_3192(self):
        self.assertTrue(TestLexer.test('''Class R:k__{}Class G{}Class _{Val $7V,x,_C,__s:Array [Float ,0B11011];}Class n{Var $D,h,$B5__,$_:Array [Array [Int ,0x8],7];}''','''Class,R,:,k__,{,},Class,G,{,},Class,_,{,Val,$7V,,,x,,,_C,,,__s,:,Array,[,Float,,,0B11011,],;,},Class,n,{,Var,$D,,,h,,,$B5__,,,$_,:,Array,[,Array,[,Int,,,0x8,],,,7,],;,},<EOF>''',101))

    def test_3193(self):
        self.assertTrue(TestLexer.test('''Class v{_2(W,_52_:P){} }Class I:_{Destructor (){}Val $_,$3j,$T:Array [Array [Array [Array [Array [Int ,04],0B10010],0XE],935],9];}Class ___:_W{}''','''Class,v,{,_2,(,W,,,_52_,:,P,),{,},},Class,I,:,_,{,Destructor,(,),{,},Val,$_,,,$3j,,,$T,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,04,],,,0B10010,],,,0XE,],,,935,],,,9,],;,},Class,___,:,_W,{,},<EOF>''',101))

    def test_3194(self):
        self.assertTrue(TestLexer.test('''Class ___:_{Destructor (){}Constructor (_,O:Array [Array [Array [Array [Array [Array [Int ,0B11_100],0b101_11_1],0B1],89],0x1E],9]){Self .h()._.v.M();}Var J1,$704:j;Constructor (){} }''','''Class,___,:,_,{,Destructor,(,),{,},Constructor,(,_,,,O,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B11100,],,,0b101111,],,,0B1,],,,89,],,,0x1E,],,,9,],),{,Self,.,h,(,),.,_,.,v,.,M,(,),;,},Var,J1,,,$704,:,j,;,Constructor,(,),{,},},<EOF>''',101))

    def test_3195(self):
        self.assertTrue(TestLexer.test('''Class _9{Val R_:Array [Float ,0x3D];Val _6,$_HK,$2:Js;Val d3__:Boolean ;Var q,vI:v1;Constructor (__Ag,_32:Array [String ,63_7]){} }Class JH{}''','''Class,_9,{,Val,R_,:,Array,[,Float,,,0x3D,],;,Val,_6,,,$_HK,,,$2,:,Js,;,Val,d3__,:,Boolean,;,Var,q,,,vI,:,v1,;,Constructor,(,__Ag,,,_32,:,Array,[,String,,,637,],),{,},},Class,JH,{,},<EOF>''',101))

    def test_3196(self):
        self.assertTrue(TestLexer.test('''Class E_{Destructor (){ {} }}Class N:_V{Val _:K_;Constructor (I7,M5,D_j,_,w_:Int ;_:Array [Array [Array [Array [String ,2],0b1_1],0X35],013];P_V,C6:o;M:Pq;P0_,_,G_7:Int ){Break ;}Var M,_n8:Float ;}Class N{}''','''Class,E_,{,Destructor,(,),{,{,},},},Class,N,:,_V,{,Val,_,:,K_,;,Constructor,(,I7,,,M5,,,D_j,,,_,,,w_,:,Int,;,_,:,Array,[,Array,[,Array,[,Array,[,String,,,2,],,,0b11,],,,0X35,],,,013,],;,P_V,,,C6,:,o,;,M,:,Pq,;,P0_,,,_,,,G_7,:,Int,),{,Break,;,},Var,M,,,_n8,:,Float,;,},Class,N,{,},<EOF>''',101))

    def test_3197(self):
        self.assertTrue(TestLexer.test('''Class C:y{}Class I:z_{LU(t:Array [Int ,0x13];r2f,uf2_:Boolean ;_,_:_73__;R2,_11:Boolean ){} }Class _a{Val _:q;}Class ___:E4{}''','''Class,C,:,y,{,},Class,I,:,z_,{,LU,(,t,:,Array,[,Int,,,0x13,],;,r2f,,,uf2_,:,Boolean,;,_,,,_,:,_73__,;,R2,,,_11,:,Boolean,),{,},},Class,_a,{,Val,_,:,q,;,},Class,___,:,E4,{,},<EOF>''',101))

    def test_3198(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (X:Array [Boolean ,38];__G:Boolean ;_:Array [Array [Array [Array [Boolean ,0b10010],6],03],0503_2];_,Y,_,k:Array [String ,016];n:String ;_,o7:_y;__,_:String ;y:Array [Float ,07];_:Float ){Continue ;} }Class VU{Val D5:Int ;}Class z3{}''','''Class,_,{,Constructor,(,X,:,Array,[,Boolean,,,38,],;,__G,:,Boolean,;,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b10010,],,,6,],,,03,],,,05032,],;,_,,,Y,,,_,,,k,:,Array,[,String,,,016,],;,n,:,String,;,_,,,o7,:,_y,;,__,,,_,:,String,;,y,:,Array,[,Float,,,07,],;,_,:,Float,),{,Continue,;,},},Class,VU,{,Val,D5,:,Int,;,},Class,z3,{,},<EOF>''',101))

    def test_3199(self):
        self.assertTrue(TestLexer.test('''Class _C:__4{}Class th_{Destructor (){}Val B:Float ;Var $d:Array [Array [Array [Array [String ,0b1],0b1000_1_1],0B1],0b1];}''','''Class,_C,:,__4,{,},Class,th_,{,Destructor,(,),{,},Val,B,:,Float,;,Var,$d,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,0b100011,],,,0B1,],,,0b1,],;,},<EOF>''',101))

    def test_3200(self):
        self.assertTrue(TestLexer.test('''Class _:F2BmE_{Destructor (){}P_(j,_,_,Q,_:Array [Array [Int ,0X8],0b1];___q8,L:Boolean ;_:_;_,j:String ){} }''','''Class,_,:,F2BmE_,{,Destructor,(,),{,},P_,(,j,,,_,,,_,,,Q,,,_,:,Array,[,Array,[,Int,,,0X8,],,,0b1,],;,___q8,,,L,:,Boolean,;,_,:,_,;,_,,,j,:,String,),{,},},<EOF>''',101))

    def test_3201(self):
        self.assertTrue(TestLexer.test('''Class Cq__:_{Var z_w_n,$_1E,__:Array [Array [Array [Array [Array [Boolean ,4],0b11],0b1],27],010];}Class L{Destructor (){} }Class Hu:L_{$_1(q_4:Int ;s__j__,D6:__;_,_:Int ){} }''','''Class,Cq__,:,_,{,Var,z_w_n,,,$_1E,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,4,],,,0b11,],,,0b1,],,,27,],,,010,],;,},Class,L,{,Destructor,(,),{,},},Class,Hu,:,L_,{,$_1,(,q_4,:,Int,;,s__j__,,,D6,:,__,;,_,,,_,:,Int,),{,},},<EOF>''',101))

    def test_3202(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){}Destructor (){Continue ;{Break ;Break ;}_1YO::$1();}Val _:Array [Float ,0b101101];}Class q:_7{}''','''Class,_,{,Constructor,(,),{,},Destructor,(,),{,Continue,;,{,Break,;,Break,;,},_1YO,::,$1,(,),;,},Val,_,:,Array,[,Float,,,0b101101,],;,},Class,q,:,_7,{,},<EOF>''',101))

    def test_3203(self):
        self.assertTrue(TestLexer.test('''Class _1_9g:_{$_r_9(kQ_,j_4gkWB__4,j,__:_0;_____9,_,_:Q){}Val _,$_:Array [Array [Array [Boolean ,0143],0X1E],0x1F];}Class C_y:n{}Class __:_{}Class _:O5Dn___{}''','''Class,_1_9g,:,_,{,$_r_9,(,kQ_,,,j_4gkWB__4,,,j,,,__,:,_0,;,_____9,,,_,,,_,:,Q,),{,},Val,_,,,$_,:,Array,[,Array,[,Array,[,Boolean,,,0143,],,,0X1E,],,,0x1F,],;,},Class,C_y,:,n,{,},Class,__,:,_,{,},Class,_,:,O5Dn___,{,},<EOF>''',101))

    def test_3204(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){} }Class _I:____{}Class H__{}Class _{$_Q(_2,rV:Array [Array [Array [Array [Boolean ,0x48],0X4B],0XF_D],01];f,___,X9:Di;_,_09__3:l_7){Val _:String ;} }''','''Class,_,{,Constructor,(,),{,},},Class,_I,:,____,{,},Class,H__,{,},Class,_,{,$_Q,(,_2,,,rV,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x48,],,,0X4B,],,,0XFD,],,,01,],;,f,,,___,,,X9,:,Di,;,_,,,_09__3,:,l_7,),{,Val,_,:,String,;,},},<EOF>''',101))

    def test_3205(self):
        self.assertTrue(TestLexer.test('''Class _3{N(_:Array [String ,9_5];m70_:Array [Array [Array [Array [String ,060],0X8],0b11],8_34];_5:Int ;__,k:Array [Array [Array [Array [Int ,0B10],060],6_1],0B1000101];G___4_ZH,D:Array [Array [Int ,25],5]){} }Class _{}''','''Class,_3,{,N,(,_,:,Array,[,String,,,95,],;,m70_,:,Array,[,Array,[,Array,[,Array,[,String,,,060,],,,0X8,],,,0b11,],,,834,],;,_5,:,Int,;,__,,,k,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B10,],,,060,],,,61,],,,0B1000101,],;,G___4_ZH,,,D,:,Array,[,Array,[,Int,,,25,],,,5,],),{,},},Class,_,{,},<EOF>''',101))

    def test_3206(self):
        self.assertTrue(TestLexer.test('''Class H_:pO{Val $8_1,q_t:Int ;Destructor (){}Constructor (f_:Float ){}Constructor (__,_,_,J_:_){} }Class j5:js2{Var _2:Array [Array [Int ,012],0B1001101];}''','''Class,H_,:,pO,{,Val,$8_1,,,q_t,:,Int,;,Destructor,(,),{,},Constructor,(,f_,:,Float,),{,},Constructor,(,__,,,_,,,_,,,J_,:,_,),{,},},Class,j5,:,js2,{,Var,_2,:,Array,[,Array,[,Int,,,012,],,,0B1001101,],;,},<EOF>''',101))

    def test_3207(self):
        self.assertTrue(TestLexer.test('''Class I:u_{}Class L_{}Class _{Constructor (){}Val $3_:Boolean ;Var $_WD,$___:Array [Array [Array [Array [Array [Int ,0b10110],0X41],0115],0X41],0b10110];}Class L_4{}''','''Class,I,:,u_,{,},Class,L_,{,},Class,_,{,Constructor,(,),{,},Val,$3_,:,Boolean,;,Var,$_WD,,,$___,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b10110,],,,0X41,],,,0115,],,,0X41,],,,0b10110,],;,},Class,L_4,{,},<EOF>''',101))

    def test_3208(self):
        self.assertTrue(TestLexer.test('''Class oU_lQBV{}Class i_U:_{Val d64,m_,$82_11,$_J3u4:_;Var x:_;Var X:Array [Float ,0242];}Class t2a{Val H:Array [Boolean ,0xF];}Class Z_:f{}''','''Class,oU_lQBV,{,},Class,i_U,:,_,{,Val,d64,,,m_,,,$82_11,,,$_J3u4,:,_,;,Var,x,:,_,;,Var,X,:,Array,[,Float,,,0242,],;,},Class,t2a,{,Val,H,:,Array,[,Boolean,,,0xF,],;,},Class,Z_,:,f,{,},<EOF>''',101))

    def test_3209(self):
        self.assertTrue(TestLexer.test('''Class Hh_qzH15k{Constructor (ZFi6_2,_,zU,_:String ;p:Array [Int ,061];_,F:Array [Array [Float ,061],83]){} }Class q:bx_Y{Var _1_:Array [Int ,06];}''','''Class,Hh_qzH15k,{,Constructor,(,ZFi6_2,,,_,,,zU,,,_,:,String,;,p,:,Array,[,Int,,,061,],;,_,,,F,:,Array,[,Array,[,Float,,,061,],,,83,],),{,},},Class,q,:,bx_Y,{,Var,_1_,:,Array,[,Int,,,06,],;,},<EOF>''',101))

    def test_3210(self):
        self.assertTrue(TestLexer.test('''Class R{}Class V8:przr{Constructor (__,W__C5:O;q:Array [Boolean ,0x5B];w____m,_d:Boolean ;i,a_:P5_;U__O6:_;H,G,a,P:_;_7_:Array [Int ,61];_:Array [Float ,22];B,U_7P,m:Int ;o:R){Continue ;} }Class y:_{}''','''Class,R,{,},Class,V8,:,przr,{,Constructor,(,__,,,W__C5,:,O,;,q,:,Array,[,Boolean,,,0x5B,],;,w____m,,,_d,:,Boolean,;,i,,,a_,:,P5_,;,U__O6,:,_,;,H,,,G,,,a,,,P,:,_,;,_7_,:,Array,[,Int,,,61,],;,_,:,Array,[,Float,,,22,],;,B,,,U_7P,,,m,:,Int,;,o,:,R,),{,Continue,;,},},Class,y,:,_,{,},<EOF>''',101))

    def test_3211(self):
        self.assertTrue(TestLexer.test('''Class sU_f:_{}Class _w:_{Val MX:Array [Array [Array [Float ,073],073],0B1001000];}Class y{}Class y:__{Constructor (_E_,L:Array [Array [Float ,85],1]){X__O::$_();Break ;} }Class oc:X{}''','''Class,sU_f,:,_,{,},Class,_w,:,_,{,Val,MX,:,Array,[,Array,[,Array,[,Float,,,073,],,,073,],,,0B1001000,],;,},Class,y,{,},Class,y,:,__,{,Constructor,(,_E_,,,L,:,Array,[,Array,[,Float,,,85,],,,1,],),{,X__O,::,$_,(,),;,Break,;,},},Class,oc,:,X,{,},<EOF>''',101))

    def test_3212(self):
        self.assertTrue(TestLexer.test('''Class _8{Val $_,$_9,s_:Array [Array [Array [Array [Array [Array [Int ,025],0x5D],0B1_1_1],0B1],0b1011011],73];Destructor (){} }Class U_Q:__Z{Destructor (){} }Class r:di8g_Z{}Class _{}''','''Class,_8,{,Val,$_,,,$_9,,,s_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,025,],,,0x5D,],,,0B111,],,,0B1,],,,0b1011011,],,,73,],;,Destructor,(,),{,},},Class,U_Q,:,__Z,{,Destructor,(,),{,},},Class,r,:,di8g_Z,{,},Class,_,{,},<EOF>''',101))

    def test_3213(self):
        self.assertTrue(TestLexer.test('''Class Z8_t_{Destructor (){}Destructor (){} }Class _{}Class C:CV5{Var _9L5:Array [Array [Array [Boolean ,3],0xD],02];Constructor (){} }''','''Class,Z8_t_,{,Destructor,(,),{,},Destructor,(,),{,},},Class,_,{,},Class,C,:,CV5,{,Var,_9L5,:,Array,[,Array,[,Array,[,Boolean,,,3,],,,0xD,],,,02,],;,Constructor,(,),{,},},<EOF>''',101))

    def test_3214(self):
        self.assertTrue(TestLexer.test('''Class _{Var $_5_2v:_;Var _3:u_8;Constructor (_:Array [Array [String ,0XD],93]){} }Class _{Destructor (){} }Class Z{Constructor (_Oq,R_,z:Array [Array [Array [Array [Array [Float ,0x26],0b1],0144],89],02406_5_37]){Break ;} }''','''Class,_,{,Var,$_5_2v,:,_,;,Var,_3,:,u_8,;,Constructor,(,_,:,Array,[,Array,[,String,,,0XD,],,,93,],),{,},},Class,_,{,Destructor,(,),{,},},Class,Z,{,Constructor,(,_Oq,,,R_,,,z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x26,],,,0b1,],,,0144,],,,89,],,,02406537,],),{,Break,;,},},<EOF>''',101))

    def test_3215(self):
        self.assertTrue(TestLexer.test('''Class OL_1N9:AB0{}Class y:__o{}Class _6_2K{Destructor (){}Var V1o,$0,p_73,x,pL9k,$_J7ut_g:Array [Array [Float ,06],8];}''','''Class,OL_1N9,:,AB0,{,},Class,y,:,__o,{,},Class,_6_2K,{,Destructor,(,),{,},Var,V1o,,,$0,,,p_73,,,x,,,pL9k,,,$_J7ut_g,:,Array,[,Array,[,Float,,,06,],,,8,],;,},<EOF>''',101))

    def test_3216(self):
        self.assertTrue(TestLexer.test('''Class __:Q{}Class _50_2_:__{Var _:____s;Constructor (){Break ;}Val $_5:Array [Array [Array [Array [Array [Array [Array [Boolean ,0B11111],0B1_0_10_1_1_1],0123],0X1],0B1_0_11],0123],8];Constructor (_,_:Float ){} }Class q:_{}''','''Class,__,:,Q,{,},Class,_50_2_,:,__,{,Var,_,:,____s,;,Constructor,(,),{,Break,;,},Val,$_5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B11111,],,,0B1010111,],,,0123,],,,0X1,],,,0B1011,],,,0123,],,,8,],;,Constructor,(,_,,,_,:,Float,),{,},},Class,q,:,_,{,},<EOF>''',101))

    def test_3217(self):
        self.assertTrue(TestLexer.test('''Class o:_{}Class bG7{Constructor (){}_9____5(I_:Array [Array [Float ,7],77];_,_,u_:Array [Int ,0B1_0]){Break ;} }''','''Class,o,:,_,{,},Class,bG7,{,Constructor,(,),{,},_9____5,(,I_,:,Array,[,Array,[,Float,,,7,],,,77,],;,_,,,_,,,u_,:,Array,[,Int,,,0B10,],),{,Break,;,},},<EOF>''',101))

    def test_3218(self):
        self.assertTrue(TestLexer.test('''Class _{$1__(q:_;K,O9,_0:Array [Array [Boolean ,0X2],0b11_0]){}Val _,$5:Boolean ;Var $i,$J:Boolean ;}Class J:z{}Class v_{}Class r{Destructor (){} }Class w{}''','''Class,_,{,$1__,(,q,:,_,;,K,,,O9,,,_0,:,Array,[,Array,[,Boolean,,,0X2,],,,0b110,],),{,},Val,_,,,$5,:,Boolean,;,Var,$i,,,$J,:,Boolean,;,},Class,J,:,z,{,},Class,v_,{,},Class,r,{,Destructor,(,),{,},},Class,w,{,},<EOF>''',101))

    def test_3219(self):
        self.assertTrue(TestLexer.test('''Class _:AC{Var $o,_8U,$7,$3,H5_i:Boolean ;Constructor (sx,_d63_:v_8;_0,_2U_,N__,c:_P;_,E:_){}Destructor (){} }Class _{Destructor (){} }Class i_{}Class C:_u3{}Class y6:__H_{}''','''Class,_,:,AC,{,Var,$o,,,_8U,,,$7,,,$3,,,H5_i,:,Boolean,;,Constructor,(,sx,,,_d63_,:,v_8,;,_0,,,_2U_,,,N__,,,c,:,_P,;,_,,,E,:,_,),{,},Destructor,(,),{,},},Class,_,{,Destructor,(,),{,},},Class,i_,{,},Class,C,:,_u3,{,},Class,y6,:,__H_,{,},<EOF>''',101))

    def test_3220(self):
        self.assertTrue(TestLexer.test('''Class HH_QZZ:__{_(h_:_;b:Array [Array [Array [String ,04_4],3],0125];gD_:_23){Break ;Vq::$0();} }Class a:r{Val $_,W:Float ;}''','''Class,HH_QZZ,:,__,{,_,(,h_,:,_,;,b,:,Array,[,Array,[,Array,[,String,,,044,],,,3,],,,0125,],;,gD_,:,_23,),{,Break,;,Vq,::,$0,(,),;,},},Class,a,:,r,{,Val,$_,,,W,:,Float,;,},<EOF>''',101))

    def test_3221(self):
        self.assertTrue(TestLexer.test('''Class lA8g3{}Class D:_Q3AQ4{Constructor (_,_4L_,__,_3M69:_aSj){}Var $0__4:Array [Array [Int ,020],04];}Class _:_{}Class B_:_7W{Constructor (){} }''','''Class,lA8g3,{,},Class,D,:,_Q3AQ4,{,Constructor,(,_,,,_4L_,,,__,,,_3M69,:,_aSj,),{,},Var,$0__4,:,Array,[,Array,[,Int,,,020,],,,04,],;,},Class,_,:,_,{,},Class,B_,:,_7W,{,Constructor,(,),{,},},<EOF>''',101))

    def test_3222(self):
        self.assertTrue(TestLexer.test('''Class _:F_{_w_(){Break ;}Val $3,_a,$D,$_r,z,_:Int ;Constructor (){Break ;} }Class _:_jS_{}Class __xE{Destructor (){}Constructor (){}Destructor (){}Constructor (){} }Class Og:__{}Class _{Destructor (){}Var $5_O1,t,A:u;}''','''Class,_,:,F_,{,_w_,(,),{,Break,;,},Val,$3,,,_a,,,$D,,,$_r,,,z,,,_,:,Int,;,Constructor,(,),{,Break,;,},},Class,_,:,_jS_,{,},Class,__xE,{,Destructor,(,),{,},Constructor,(,),{,},Destructor,(,),{,},Constructor,(,),{,},},Class,Og,:,__,{,},Class,_,{,Destructor,(,),{,},Var,$5_O1,,,t,,,A,:,u,;,},<EOF>''',101))

    def test_3223(self):
        self.assertTrue(TestLexer.test('''Class ___:__D__{}Class E{$J___Z3I(s:b;_,s:Array [Array [Array [Float ,8],0X8],8];d_y,_,Y:Array [Array [Array [Array [Int ,15],0B11],8],8]){} }Class a_{}Class y_{}Class _:_{Constructor (_:O;E_2,Rk:_;R__:Float ){ {} }}Class _H{}''','''Class,___,:,__D__,{,},Class,E,{,$J___Z3I,(,s,:,b,;,_,,,s,:,Array,[,Array,[,Array,[,Float,,,8,],,,0X8,],,,8,],;,d_y,,,_,,,Y,:,Array,[,Array,[,Array,[,Array,[,Int,,,15,],,,0B11,],,,8,],,,8,],),{,},},Class,a_,{,},Class,y_,{,},Class,_,:,_,{,Constructor,(,_,:,O,;,E_2,,,Rk,:,_,;,R__,:,Float,),{,{,},},},Class,_H,{,},<EOF>''',101))

    def test_3224(self):
        self.assertTrue(TestLexer.test('''Class _{$X(m_:Array [Array [Boolean ,033],61];_,_,_,Z:Array [Int ,0B1111];_6_:Array [Array [Int ,0x5E],61]){ {} }Constructor (){Continue ;}Var $6:Array [Array [Array [Array [Boolean ,8],07],07],1];}''','''Class,_,{,$X,(,m_,:,Array,[,Array,[,Boolean,,,033,],,,61,],;,_,,,_,,,_,,,Z,:,Array,[,Int,,,0B1111,],;,_6_,:,Array,[,Array,[,Int,,,0x5E,],,,61,],),{,{,},},Constructor,(,),{,Continue,;,},Var,$6,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,8,],,,07,],,,07,],,,1,],;,},<EOF>''',101))

    def test_3225(self):
        self.assertTrue(TestLexer.test('''Class __:F{Val U,$_,$6,OF_:_81;}Class __{Var B0,$r_t:Array [Boolean ,0xC];Var $h,$__:Array [String ,0b1011];}Class jD{Var _,G_E:_;}''','''Class,__,:,F,{,Val,U,,,$_,,,$6,,,OF_,:,_81,;,},Class,__,{,Var,B0,,,$r_t,:,Array,[,Boolean,,,0xC,],;,Var,$h,,,$__,:,Array,[,String,,,0b1011,],;,},Class,jD,{,Var,_,,,G_E,:,_,;,},<EOF>''',101))

    def test_3226(self):
        self.assertTrue(TestLexer.test('''Class r5y:__{}Class _:_1{J(M,_Sp_9,_:Float ){Val _:Array [Int ,040];}Constructor (_:Float ;_:Float ;TN:Array [Int ,0xF];u:Boolean ){}Destructor (){} }Class __x:U{}''','''Class,r5y,:,__,{,},Class,_,:,_1,{,J,(,M,,,_Sp_9,,,_,:,Float,),{,Val,_,:,Array,[,Int,,,040,],;,},Constructor,(,_,:,Float,;,_,:,Float,;,TN,:,Array,[,Int,,,0xF,],;,u,:,Boolean,),{,},Destructor,(,),{,},},Class,__x,:,U,{,},<EOF>''',101))

    def test_3227(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){}Constructor (u_:Array [Array [Float ,3],0156_601];____l:Array [Array [String ,0x9],01];_v8,M:Int ;A5U_7:Array [Float ,0b10111];x_:Float ){} }''','''Class,_,{,Destructor,(,),{,},Constructor,(,u_,:,Array,[,Array,[,Float,,,3,],,,0156601,],;,____l,:,Array,[,Array,[,String,,,0x9,],,,01,],;,_v8,,,M,:,Int,;,A5U_7,:,Array,[,Float,,,0b10111,],;,x_,:,Float,),{,},},<EOF>''',101))

    def test_3228(self):
        self.assertTrue(TestLexer.test('''Class _f_2_H15h:_K{Var $8:S4;}Class _1:vB{Var _4_,c,_,P_:Array [Array [Array [Float ,0B110],0B11001],0X45];}Class ir:_P{}''','''Class,_f_2_H15h,:,_K,{,Var,$8,:,S4,;,},Class,_1,:,vB,{,Var,_4_,,,c,,,_,,,P_,:,Array,[,Array,[,Array,[,Float,,,0B110,],,,0B11001,],,,0X45,],;,},Class,ir,:,_P,{,},<EOF>''',101))

    def test_3229(self):
        self.assertTrue(TestLexer.test('''Class zn{Destructor (){}__52(){} }Class j_2:p3_4_{Constructor (){}Constructor (_C,Bnj:Array [Array [Array [Array [String ,0x36],036],6],0X10]){ {} }}Class _:_{}Class __e:__1KM{}''','''Class,zn,{,Destructor,(,),{,},__52,(,),{,},},Class,j_2,:,p3_4_,{,Constructor,(,),{,},Constructor,(,_C,,,Bnj,:,Array,[,Array,[,Array,[,Array,[,String,,,0x36,],,,036,],,,6,],,,0X10,],),{,{,},},},Class,_,:,_,{,},Class,__e,:,__1KM,{,},<EOF>''',101))

    def test_3230(self):
        self.assertTrue(TestLexer.test('''Class O{Val $_,ZA:Array [Array [Int ,63],0X5_06];}Class B{}Class _9_{Var $O:Float ;Val ___,$v7e4,_,$_P,ox,Y,$3:Boolean ;Constructor (_,k:yh){ {} }Destructor (){} }Class _6_:_LY{}''','''Class,O,{,Val,$_,,,ZA,:,Array,[,Array,[,Int,,,63,],,,0X506,],;,},Class,B,{,},Class,_9_,{,Var,$O,:,Float,;,Val,___,,,$v7e4,,,_,,,$_P,,,ox,,,Y,,,$3,:,Boolean,;,Constructor,(,_,,,k,:,yh,),{,{,},},Destructor,(,),{,},},Class,_6_,:,_LY,{,},<EOF>''',101))

    def test_3231(self):
        self.assertTrue(TestLexer.test('''Class i25u:D3_{Constructor (_j6_M,_X_,D8Y:Array [Boolean ,0X5B]){Var g,d4__,_igfu_,_:Int ;}Val $_,$_,BA:Float ;Var j9:_34;Destructor (){Continue ;} }''','''Class,i25u,:,D3_,{,Constructor,(,_j6_M,,,_X_,,,D8Y,:,Array,[,Boolean,,,0X5B,],),{,Var,g,,,d4__,,,_igfu_,,,_,:,Int,;,},Val,$_,,,$_,,,BA,:,Float,;,Var,j9,:,_34,;,Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_3232(self):
        self.assertTrue(TestLexer.test('''Class _l68:_{Destructor (){}Val n8e,$9:_;}Class I{}Class _{Var _T:Int ;Destructor (){Val A_3Y:Array [Array [Array [String ,0X57],0B1011],0xD];} }''','''Class,_l68,:,_,{,Destructor,(,),{,},Val,n8e,,,$9,:,_,;,},Class,I,{,},Class,_,{,Var,_T,:,Int,;,Destructor,(,),{,Val,A_3Y,:,Array,[,Array,[,Array,[,String,,,0X57,],,,0B1011,],,,0xD,],;,},},<EOF>''',101))

    def test_3233(self):
        self.assertTrue(TestLexer.test('''Class L{}Class _:____x{Constructor (___,_,_,w:Array [Array [Array [Array [Array [Array [Boolean ,0x3C],02],02],0x3C],05],64];e:Array [Float ,070_4]){} }''','''Class,L,{,},Class,_,:,____x,{,Constructor,(,___,,,_,,,_,,,w,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x3C,],,,02,],,,02,],,,0x3C,],,,05,],,,64,],;,e,:,Array,[,Float,,,0704,],),{,},},<EOF>''',101))

    def test_3234(self):
        self.assertTrue(TestLexer.test('''Class Ab{}Class a:M{Val $_,_x_1,_3w60:_59;}Class __o_N_0t_:L{Val $h2,_:Array [Array [Boolean ,0B111],042];Val $040_,$0:String ;}''','''Class,Ab,{,},Class,a,:,M,{,Val,$_,,,_x_1,,,_3w60,:,_59,;,},Class,__o_N_0t_,:,L,{,Val,$h2,,,_,:,Array,[,Array,[,Boolean,,,0B111,],,,042,],;,Val,$040_,,,$0,:,String,;,},<EOF>''',101))

    def test_3235(self):
        self.assertTrue(TestLexer.test('''Class x{Val z_3,$s,$X_:Float ;}Class _:q{}Class O{Var E9_C_f:Array [Boolean ,0B111100];_6(W_,__r249:Array [String ,03_2_3]){} }Class _{}''','''Class,x,{,Val,z_3,,,$s,,,$X_,:,Float,;,},Class,_,:,q,{,},Class,O,{,Var,E9_C_f,:,Array,[,Boolean,,,0B111100,],;,_6,(,W_,,,__r249,:,Array,[,String,,,0323,],),{,},},Class,_,{,},<EOF>''',101))

    def test_3236(self):
        self.assertTrue(TestLexer.test('''Class _G6:_{Val $_w_:Array [Array [String ,0x5F],0B1000001];Constructor (G:Array [Boolean ,06];a:Array [Array [String ,023],0x5F];D:Int ){} }''','''Class,_G6,:,_,{,Val,$_w_,:,Array,[,Array,[,String,,,0x5F,],,,0B1000001,],;,Constructor,(,G,:,Array,[,Boolean,,,06,],;,a,:,Array,[,Array,[,String,,,023,],,,0x5F,],;,D,:,Int,),{,},},<EOF>''',101))

    def test_3237(self):
        self.assertTrue(TestLexer.test('''Class __9{Val e_f_:Boolean ;}Class _c:_{}Class p:a{$__U(Y:Array [Int ,0b1];_P,k,_5:Array [Array [String ,02_42_6],073]){} }Class _:h{}''','''Class,__9,{,Val,e_f_,:,Boolean,;,},Class,_c,:,_,{,},Class,p,:,a,{,$__U,(,Y,:,Array,[,Int,,,0b1,],;,_P,,,k,,,_5,:,Array,[,Array,[,String,,,02426,],,,073,],),{,},},Class,_,:,h,{,},<EOF>''',101))

    def test_3238(self):
        self.assertTrue(TestLexer.test('''Class _:_{Destructor (){} }Class m{Constructor (L,_Q,p:Array [Float ,0xE]){ {Return ;} }Var _,__,$_4,$gI,$5,_,r7_,G:_;}''','''Class,_,:,_,{,Destructor,(,),{,},},Class,m,{,Constructor,(,L,,,_Q,,,p,:,Array,[,Float,,,0xE,],),{,{,Return,;,},},Var,_,,,__,,,$_4,,,$gI,,,$5,,,_,,,r7_,,,G,:,_,;,},<EOF>''',101))

    def test_3239(self):
        self.assertTrue(TestLexer.test('''Class __:N_18{}Class I{_(G0,y,U,IJ__h__w,yM:Array [Array [Array [Array [Boolean ,01],4_0],07],0B11_1]){}Destructor (){} }Class _:_{}''','''Class,__,:,N_18,{,},Class,I,{,_,(,G0,,,y,,,U,,,IJ__h__w,,,yM,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,01,],,,40,],,,07,],,,0B111,],),{,},Destructor,(,),{,},},Class,_,:,_,{,},<EOF>''',101))

    def test_3240(self):
        self.assertTrue(TestLexer.test('''Class Q{$__71(_W_n6,__f4F:String ;J7KI,_,_5s,f_:Boolean ;S_7:Y3;Hi,_,_,PT_:Array [Float ,0x44]){}Val _,$a:Array [Float ,0b111011];}''','''Class,Q,{,$__71,(,_W_n6,,,__f4F,:,String,;,J7KI,,,_,,,_5s,,,f_,:,Boolean,;,S_7,:,Y3,;,Hi,,,_,,,_,,,PT_,:,Array,[,Float,,,0x44,],),{,},Val,_,,,$a,:,Array,[,Float,,,0b111011,],;,},<EOF>''',101))

    def test_3241(self):
        self.assertTrue(TestLexer.test('''Class c:PP{}Class QL{F(C1:_Y;H:_A;u,s_9tx:L;Z2:Array [String ,63];i7:Array [Array [Array [Array [Array [Array [Boolean ,073],0B1],0b1_101_0_0_1],0142],0B1001100],0XD]){} }''','''Class,c,:,PP,{,},Class,QL,{,F,(,C1,:,_Y,;,H,:,_A,;,u,,,s_9tx,:,L,;,Z2,:,Array,[,String,,,63,],;,i7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,073,],,,0B1,],,,0b1101001,],,,0142,],,,0B1001100,],,,0XD,],),{,},},<EOF>''',101))

    def test_3242(self):
        self.assertTrue(TestLexer.test('''Class A{Var N,$_c:Boolean ;Var $1__,N:Array [Array [Array [Array [String ,0B1],12],8],0xF];Destructor (){Var x5_6,_v,W9_,hr_:V0c;Break ;} }''','''Class,A,{,Var,N,,,$_c,:,Boolean,;,Var,$1__,,,N,:,Array,[,Array,[,Array,[,Array,[,String,,,0B1,],,,12,],,,8,],,,0xF,],;,Destructor,(,),{,Var,x5_6,,,_v,,,W9_,,,hr_,:,V0c,;,Break,;,},},<EOF>''',101))

    def test_3243(self):
        self.assertTrue(TestLexer.test('''Class _x:W8{__9(c:Array [Array [Int ,38],0B110010];_:u0_;___:_;AW8:p5_30;zSY__Gc8_:Array [Float ,0X3D];_,_,_,_:String ;_:Float ){} }Class w_:L{Val _:_;Var $G,$_,_,_75,y:J;}Class _{}''','''Class,_x,:,W8,{,__9,(,c,:,Array,[,Array,[,Int,,,38,],,,0B110010,],;,_,:,u0_,;,___,:,_,;,AW8,:,p5_30,;,zSY__Gc8_,:,Array,[,Float,,,0X3D,],;,_,,,_,,,_,,,_,:,String,;,_,:,Float,),{,},},Class,w_,:,L,{,Val,_,:,_,;,Var,$G,,,$_,,,_,,,_75,,,y,:,J,;,},Class,_,{,},<EOF>''',101))

    def test_3244(self):
        self.assertTrue(TestLexer.test('''Class B:_{Destructor (){} }Class T5{Var _6:kp;Constructor (_5_:_0;__:Boolean ;__,_:Array [Float ,96];l:q_){} }Class _{}''','''Class,B,:,_,{,Destructor,(,),{,},},Class,T5,{,Var,_6,:,kp,;,Constructor,(,_5_,:,_0,;,__,:,Boolean,;,__,,,_,:,Array,[,Float,,,96,],;,l,:,q_,),{,},},Class,_,{,},<EOF>''',101))

    def test_3245(self):
        self.assertTrue(TestLexer.test('''Class pv_e{}Class WT8_6:_{}Class F__W7o:_x7{Destructor (){} }Class S1{Val x_i__1_:Boolean ;Var _,__,$_,$59:Float ;Var c9:_;}''','''Class,pv_e,{,},Class,WT8_6,:,_,{,},Class,F__W7o,:,_x7,{,Destructor,(,),{,},},Class,S1,{,Val,x_i__1_,:,Boolean,;,Var,_,,,__,,,$_,,,$59,:,Float,;,Var,c9,:,_,;,},<EOF>''',101))

    def test_3246(self):
        self.assertTrue(TestLexer.test('''Class F1:_{g(_,g_,_:Boolean ;LNz3g,_3___:Array [Array [Array [Array [String ,0B1000],024],0X2A],0b1];M:Boolean ){} }''','''Class,F1,:,_,{,g,(,_,,,g_,,,_,:,Boolean,;,LNz3g,,,_3___,:,Array,[,Array,[,Array,[,Array,[,String,,,0B1000,],,,024,],,,0X2A,],,,0b1,],;,M,:,Boolean,),{,},},<EOF>''',101))

    def test_3247(self):
        self.assertTrue(TestLexer.test('''Class R{Destructor (){Return ;}o_w(){Return ;{Continue ;} }}Class q7:_{E0_2(_l:_h){} }Class YbB:__{}Class b:T{}''','''Class,R,{,Destructor,(,),{,Return,;,},o_w,(,),{,Return,;,{,Continue,;,},},},Class,q7,:,_,{,E0_2,(,_l,:,_h,),{,},},Class,YbB,:,__,{,},Class,b,:,T,{,},<EOF>''',101))

    def test_3248(self):
        self.assertTrue(TestLexer.test('''Class P{}Class _e8{Destructor (){} }Class _:P{$yG(){Continue ;}Destructor (){} }Class x{}Class d:_{Var $1V3457:Array [Array [Array [Int ,0X3],0X2],03];}''','''Class,P,{,},Class,_e8,{,Destructor,(,),{,},},Class,_,:,P,{,$yG,(,),{,Continue,;,},Destructor,(,),{,},},Class,x,{,},Class,d,:,_,{,Var,$1V3457,:,Array,[,Array,[,Array,[,Int,,,0X3,],,,0X2,],,,03,],;,},<EOF>''',101))

    def test_3249(self):
        self.assertTrue(TestLexer.test('''Class Q6{}Class _{$4(_,_,z,K:Array [Array [Array [Int ,0B1],02_2],0X18];_,_,v,_:a;_9_2V,bZ_,JX66,V,_:Array [String ,0x79];z:Array [Array [Array [Array [Array [String ,85],0X18],0X18],85],037];___:Float ;___,_s:Array [Boolean ,050_67];__:Array [Boolean ,0x2E4_5_F];j:_J;_2,_YY,v,G,rI31,B__1A_g,p_2Co7O:Array [Array [Int ,0xC],0B1]){} }Class B{Destructor (){} }''','''Class,Q6,{,},Class,_,{,$4,(,_,,,_,,,z,,,K,:,Array,[,Array,[,Array,[,Int,,,0B1,],,,022,],,,0X18,],;,_,,,_,,,v,,,_,:,a,;,_9_2V,,,bZ_,,,JX66,,,V,,,_,:,Array,[,String,,,0x79,],;,z,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,85,],,,0X18,],,,0X18,],,,85,],,,037,],;,___,:,Float,;,___,,,_s,:,Array,[,Boolean,,,05067,],;,__,:,Array,[,Boolean,,,0x2E45F,],;,j,:,_J,;,_2,,,_YY,,,v,,,G,,,rI31,,,B__1A_g,,,p_2Co7O,:,Array,[,Array,[,Int,,,0xC,],,,0B1,],),{,},},Class,B,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3250(self):
        self.assertTrue(TestLexer.test('''Class k{}Class z:_f{Destructor (){Break ;}Constructor (){} }Class _{Constructor (B,_b9,_:Int ){Continue ;}Destructor (){} }''','''Class,k,{,},Class,z,:,_f,{,Destructor,(,),{,Break,;,},Constructor,(,),{,},},Class,_,{,Constructor,(,B,,,_b9,,,_,:,Int,),{,Continue,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_3251(self):
        self.assertTrue(TestLexer.test('''Class _2_82:H{Destructor (){}Var __6:Array [Array [Array [Array [Array [Float ,2],0B1],0X6],0X4_1_C],037];$2(O5,_,_,S:N;_,ZT,_,uei2_i5_,ky,A0:Array [String ,37];___,__:_7D){} }''','''Class,_2_82,:,H,{,Destructor,(,),{,},Var,__6,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,2,],,,0B1,],,,0X6,],,,0X41C,],,,037,],;,$2,(,O5,,,_,,,_,,,S,:,N,;,_,,,ZT,,,_,,,uei2_i5_,,,ky,,,A0,:,Array,[,String,,,37,],;,___,,,__,:,_7D,),{,},},<EOF>''',101))

    def test_3252(self):
        self.assertTrue(TestLexer.test('''Class _105___5__:X{Constructor (_:A){}Destructor (){}$__(A:e;_:y_){Val __1:Array [Array [Array [Array [Array [Array [Int ,0x3E],0x3E],0X3],0105],0x3E],39];}Val _,$c,_,x,$_,$m,w,z:Float ;}''','''Class,_105___5__,:,X,{,Constructor,(,_,:,A,),{,},Destructor,(,),{,},$__,(,A,:,e,;,_,:,y_,),{,Val,__1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x3E,],,,0x3E,],,,0X3,],,,0105,],,,0x3E,],,,39,],;,},Val,_,,,$c,,,_,,,x,,,$_,,,$m,,,w,,,z,:,Float,;,},<EOF>''',101))

    def test_3253(self):
        self.assertTrue(TestLexer.test('''Class V{Constructor (iD:Array [Array [Int ,0b1001001],0117];J,_wO_3,_,F_2:Array [Array [Float ,0b1001001],0x51];t,_:Float ){Return ;} }Class q2{}''','''Class,V,{,Constructor,(,iD,:,Array,[,Array,[,Int,,,0b1001001,],,,0117,],;,J,,,_wO_3,,,_,,,F_2,:,Array,[,Array,[,Float,,,0b1001001,],,,0x51,],;,t,,,_,:,Float,),{,Return,;,},},Class,q2,{,},<EOF>''',101))

    def test_3254(self):
        self.assertTrue(TestLexer.test('''Class ___{Var a,$41,$zsY_o,$_UY2i,$_H:Array [Array [Array [Int ,5],01],0B11_1];Var $L,$Z,_,$H_:Float ;Var $_c_,$_:__2;Destructor (){} }Class _m:Z___7_F{}''','''Class,___,{,Var,a,,,$41,,,$zsY_o,,,$_UY2i,,,$_H,:,Array,[,Array,[,Array,[,Int,,,5,],,,01,],,,0B111,],;,Var,$L,,,$Z,,,_,,,$H_,:,Float,;,Var,$_c_,,,$_,:,__2,;,Destructor,(,),{,},},Class,_m,:,Z___7_F,{,},<EOF>''',101))

    def test_3255(self):
        self.assertTrue(TestLexer.test('''Class _:_W{q_(__y,_,V,_,_7:Array [Array [Boolean ,4],9]){Return ;{} }}Class _:_Sj{$8H(giL,_,__,FZd__a5B:j){} }''','''Class,_,:,_W,{,q_,(,__y,,,_,,,V,,,_,,,_7,:,Array,[,Array,[,Boolean,,,4,],,,9,],),{,Return,;,{,},},},Class,_,:,_Sj,{,$8H,(,giL,,,_,,,__,,,FZd__a5B,:,j,),{,},},<EOF>''',101))

    def test_3256(self):
        self.assertTrue(TestLexer.test('''Class l{}Class M:__I{Val $_,$vp0_3,$_:Array [Array [Array [Array [Boolean ,0B1],014_211],0112],0B1011011];Val f,D,_j:v_;}''','''Class,l,{,},Class,M,:,__I,{,Val,$_,,,$vp0_3,,,$_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,014211,],,,0112,],,,0B1011011,],;,Val,f,,,D,,,_j,:,v_,;,},<EOF>''',101))

    def test_3257(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_,_23_,T0_2,_H7,_:x_;_:String ;V:a1;L__,A_1:Array [Array [Array [String ,0x11],06],0B1]){} }''','''Class,_,{,Constructor,(,_,,,_23_,,,T0_2,,,_H7,,,_,:,x_,;,_,:,String,;,V,:,a1,;,L__,,,A_1,:,Array,[,Array,[,Array,[,String,,,0x11,],,,06,],,,0B1,],),{,},},<EOF>''',101))

    def test_3258(self):
        self.assertTrue(TestLexer.test('''Class S:_{Var $h4__:Array [Array [Float ,0b100010],02];_(___,_E4:_D;E,_:Array [Array [Int ,0704],30];f,_2,_:__){Continue ;} }''','''Class,S,:,_,{,Var,$h4__,:,Array,[,Array,[,Float,,,0b100010,],,,02,],;,_,(,___,,,_E4,:,_D,;,E,,,_,:,Array,[,Array,[,Int,,,0704,],,,30,],;,f,,,_2,,,_,:,__,),{,Continue,;,},},<EOF>''',101))

    def test_3259(self):
        self.assertTrue(TestLexer.test('''Class _O{Var H:Array [Array [Float ,0XD],0b110101];Constructor (F,w,_9,a1_:Boolean ){} }Class Wg{Var ___24aN,R8_,M:Z;}''','''Class,_O,{,Var,H,:,Array,[,Array,[,Float,,,0XD,],,,0b110101,],;,Constructor,(,F,,,w,,,_9,,,a1_,:,Boolean,),{,},},Class,Wg,{,Var,___24aN,,,R8_,,,M,:,Z,;,},<EOF>''',101))

    def test_3260(self):
        self.assertTrue(TestLexer.test('''Class _oM_:R{Constructor (_8,NT5,_wo,_,k:Array [Array [Array [Boolean ,0B10001],0X62],0b100]){Continue ;} }Class L:w__7{Destructor (){Continue ;} }''','''Class,_oM_,:,R,{,Constructor,(,_8,,,NT5,,,_wo,,,_,,,k,:,Array,[,Array,[,Array,[,Boolean,,,0B10001,],,,0X62,],,,0b100,],),{,Continue,;,},},Class,L,:,w__7,{,Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_3261(self):
        self.assertTrue(TestLexer.test('''Class Y{}Class _{Val R7_:Boolean ;Constructor (___7,Q_,_:Array [Float ,69];_9,_,z:Boolean ;_8_0f,_:Array [Boolean ,0b1111];_7,r:W){} }''','''Class,Y,{,},Class,_,{,Val,R7_,:,Boolean,;,Constructor,(,___7,,,Q_,,,_,:,Array,[,Float,,,69,],;,_9,,,_,,,z,:,Boolean,;,_8_0f,,,_,:,Array,[,Boolean,,,0b1111,],;,_7,,,r,:,W,),{,},},<EOF>''',101))

    def test_3262(self):
        self.assertTrue(TestLexer.test('''Class D{Constructor (z3,r:Array [Float ,6];KQ,b:Boolean ;_K:String ;_,_:Array [Int ,0b1011101];_6F,_,u,_3,_61:Boolean ;d_Bd__Og,_:Float ){}Var _1__:Array [Array [Int ,73],73];$t_(_c,h9l4:Array [Array [Boolean ,0B11],0x2A];O:__){ {Continue ;} }}Class _{}''','''Class,D,{,Constructor,(,z3,,,r,:,Array,[,Float,,,6,],;,KQ,,,b,:,Boolean,;,_K,:,String,;,_,,,_,:,Array,[,Int,,,0b1011101,],;,_6F,,,_,,,u,,,_3,,,_61,:,Boolean,;,d_Bd__Og,,,_,:,Float,),{,},Var,_1__,:,Array,[,Array,[,Int,,,73,],,,73,],;,$t_,(,_c,,,h9l4,:,Array,[,Array,[,Boolean,,,0B11,],,,0x2A,],;,O,:,__,),{,{,Continue,;,},},},Class,_,{,},<EOF>''',101))

    def test_3263(self):
        self.assertTrue(TestLexer.test('''Class __1_N{Var I,$_:_9W;}Class p8:_c{$pm(U_:_;___H,mG:Array [Array [String ,0b1],03];u_:_;n__v,_:_12){}Val l,_,_z_:Array [Array [Boolean ,0X325],033_3];}''','''Class,__1_N,{,Var,I,,,$_,:,_9W,;,},Class,p8,:,_c,{,$pm,(,U_,:,_,;,___H,,,mG,:,Array,[,Array,[,String,,,0b1,],,,03,],;,u_,:,_,;,n__v,,,_,:,_12,),{,},Val,l,,,_,,,_z_,:,Array,[,Array,[,Boolean,,,0X325,],,,0333,],;,},<EOF>''',101))

    def test_3264(self):
        self.assertTrue(TestLexer.test('''Class Z4:FD{Destructor (){}Constructor (i4_z:Array [String ,0143];f9:Array [String ,0x6];N:Float ;s,_:Array [Array [Int ,0B110110],0x5E]){} }''','''Class,Z4,:,FD,{,Destructor,(,),{,},Constructor,(,i4_z,:,Array,[,String,,,0143,],;,f9,:,Array,[,String,,,0x6,],;,N,:,Float,;,s,,,_,:,Array,[,Array,[,Int,,,0B110110,],,,0x5E,],),{,},},<EOF>''',101))

    def test_3265(self):
        self.assertTrue(TestLexer.test('''Class _:BN_{}Class _4{Constructor (_k:Array [String ,0143];__F2,_7_:Array [Int ,0x3F];_,f:Array [Array [String ,0XD],0x3F]){} }''','''Class,_,:,BN_,{,},Class,_4,{,Constructor,(,_k,:,Array,[,String,,,0143,],;,__F2,,,_7_,:,Array,[,Int,,,0x3F,],;,_,,,f,:,Array,[,Array,[,String,,,0XD,],,,0x3F,],),{,},},<EOF>''',101))

    def test_3266(self):
        self.assertTrue(TestLexer.test('''Class q4:V6S_{Destructor (){Val _,___,_vXf:Array [Array [Array [String ,0102],6],0615];Break ;} }Class _3_y3:_{Destructor (){Continue ;} }Class b{Constructor (){} }Class o{}Class H:nT{Var _D:_a;}Class Q:_M{}''','''Class,q4,:,V6S_,{,Destructor,(,),{,Val,_,,,___,,,_vXf,:,Array,[,Array,[,Array,[,String,,,0102,],,,6,],,,0615,],;,Break,;,},},Class,_3_y3,:,_,{,Destructor,(,),{,Continue,;,},},Class,b,{,Constructor,(,),{,},},Class,o,{,},Class,H,:,nT,{,Var,_D,:,_a,;,},Class,Q,:,_M,{,},<EOF>''',101))

    def test_3267(self):
        self.assertTrue(TestLexer.test('''Class X{}Class __{Var ___,$3,hL,B,$4:Int ;}Class R:ky5{}Class c:s_{}Class C{___(d553_vz,_:Float ;_6Z6,_:Y){}Val o:Array [Array [Float ,0XC],6];Val $_F_:_2_;}''','''Class,X,{,},Class,__,{,Var,___,,,$3,,,hL,,,B,,,$4,:,Int,;,},Class,R,:,ky5,{,},Class,c,:,s_,{,},Class,C,{,___,(,d553_vz,,,_,:,Float,;,_6Z6,,,_,:,Y,),{,},Val,o,:,Array,[,Array,[,Float,,,0XC,],,,6,],;,Val,$_F_,:,_2_,;,},<EOF>''',101))

    def test_3268(self):
        self.assertTrue(TestLexer.test('''Class __:K{}Class u:_{_P_6(Fb5:_6;B9_:_){Return ;}Val $_:Array [Array [Array [Boolean ,29],0130],0x40];Constructor (u,j:h;R,S,T,_:Int ){}Var $64:Boolean ;}Class VSt{}''','''Class,__,:,K,{,},Class,u,:,_,{,_P_6,(,Fb5,:,_6,;,B9_,:,_,),{,Return,;,},Val,$_,:,Array,[,Array,[,Array,[,Boolean,,,29,],,,0130,],,,0x40,],;,Constructor,(,u,,,j,:,h,;,R,,,S,,,T,,,_,:,Int,),{,},Var,$64,:,Boolean,;,},Class,VSt,{,},<EOF>''',101))

    def test_3269(self):
        self.assertTrue(TestLexer.test('''Class _:_{Val $_s,$7,$_:Array [Array [Array [String ,0XD],96],0b1];}Class k:_{Constructor (){} }Class _7:___{}Class _{}''','''Class,_,:,_,{,Val,$_s,,,$7,,,$_,:,Array,[,Array,[,Array,[,String,,,0XD,],,,96,],,,0b1,],;,},Class,k,:,_,{,Constructor,(,),{,},},Class,_7,:,___,{,},Class,_,{,},<EOF>''',101))

    def test_3270(self):
        self.assertTrue(TestLexer.test('''Class x:O{_(_:_958;dP_K:Array [Array [Array [Array [Array [Array [Boolean ,0xB],76],0X26],0X26],2],0B10];W62:_;_:Int ){Continue ;Break ;} }''','''Class,x,:,O,{,_,(,_,:,_958,;,dP_K,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xB,],,,76,],,,0X26,],,,0X26,],,,2,],,,0B10,],;,W62,:,_,;,_,:,Int,),{,Continue,;,Break,;,},},<EOF>''',101))

    def test_3271(self):
        self.assertTrue(TestLexer.test('''Class _{}Class E{Val A0:Array [Int ,0x19];}Class G_GV_Kz:_l{Val ___PK7:Array [Array [Array [Boolean ,0b1100],02],066_6];Val $_3,U_7,$g7,$_:_;}''','''Class,_,{,},Class,E,{,Val,A0,:,Array,[,Int,,,0x19,],;,},Class,G_GV_Kz,:,_l,{,Val,___PK7,:,Array,[,Array,[,Array,[,Boolean,,,0b1100,],,,02,],,,0666,],;,Val,$_3,,,U_7,,,$g7,,,$_,:,_,;,},<EOF>''',101))

    def test_3272(self):
        self.assertTrue(TestLexer.test('''Class _M{Constructor (E,_W_:Array [Array [Int ,0B11],0b1];xT2:Float ;I:E__;Co_:Float ;_1:yx4m_){} }Class X__c:Bl{}Class __{Destructor (){} }Class d:f{}''','''Class,_M,{,Constructor,(,E,,,_W_,:,Array,[,Array,[,Int,,,0B11,],,,0b1,],;,xT2,:,Float,;,I,:,E__,;,Co_,:,Float,;,_1,:,yx4m_,),{,},},Class,X__c,:,Bl,{,},Class,__,{,Destructor,(,),{,},},Class,d,:,f,{,},<EOF>''',101))

    def test_3273(self):
        self.assertTrue(TestLexer.test('''Class R:_R_{Val _:Array [String ,063];a(_,AX7oiL_,R:Array [Int ,55];W_7_,__,z7,Re3f4,U:String ;_:_X;Y,L,E:Array [Array [Float ,0X2],55];L:Array [Boolean ,0B1_0];__8R,C:Array [Int ,0B1]){} }''','''Class,R,:,_R_,{,Val,_,:,Array,[,String,,,063,],;,a,(,_,,,AX7oiL_,,,R,:,Array,[,Int,,,55,],;,W_7_,,,__,,,z7,,,Re3f4,,,U,:,String,;,_,:,_X,;,Y,,,L,,,E,:,Array,[,Array,[,Float,,,0X2,],,,55,],;,L,:,Array,[,Boolean,,,0B10,],;,__8R,,,C,:,Array,[,Int,,,0B1,],),{,},},<EOF>''',101))

    def test_3274(self):
        self.assertTrue(TestLexer.test('''Class _23{_1(_T:String ;_W,A:String ;_,s_M,__,p,_,J_:String ;_,Up,d_,_:Array [String ,0b11];K,b_G,o:Float ){Return ;} }''','''Class,_23,{,_1,(,_T,:,String,;,_W,,,A,:,String,;,_,,,s_M,,,__,,,p,,,_,,,J_,:,String,;,_,,,Up,,,d_,,,_,:,Array,[,String,,,0b11,],;,K,,,b_G,,,o,:,Float,),{,Return,;,},},<EOF>''',101))

    def test_3275(self):
        self.assertTrue(TestLexer.test('''Class _0:_7{}Class r:M__{Constructor (Nd:Array [Array [Array [Array [Array [Array [Array [Float ,0x52],0x52],0b11_0],0766_4_7],48],0103],06_5]){} }''','''Class,_0,:,_7,{,},Class,r,:,M__,{,Constructor,(,Nd,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x52,],,,0x52,],,,0b110,],,,076647,],,,48,],,,0103,],,,065,],),{,},},<EOF>''',101))

    def test_3276(self):
        self.assertTrue(TestLexer.test('''Class u{Destructor (){} }Class __n{$_(U5,qe,_,_d:Float ){} }Class p8{Val $_,r,$9:Array [Array [Array [Array [Array [Array [Float ,9],05_6],9],0b10101],9],03];}''','''Class,u,{,Destructor,(,),{,},},Class,__n,{,$_,(,U5,,,qe,,,_,,,_d,:,Float,),{,},},Class,p8,{,Val,$_,,,r,,,$9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,9,],,,056,],,,9,],,,0b10101,],,,9,],,,03,],;,},<EOF>''',101))

    def test_3277(self):
        self.assertTrue(TestLexer.test('''Class I{_PL(H__,_,_,ME,C,m0_D,Y_W_i__:Array [Int ,0B1001100];I,_,__,z1,_:eDf;_0,n,a:Z;_0,_DN:Array [Float ,0b1];MX3:Boolean ){}Val $w:_6_;Var _:Int ;}Class _2:_rB{}''','''Class,I,{,_PL,(,H__,,,_,,,_,,,ME,,,C,,,m0_D,,,Y_W_i__,:,Array,[,Int,,,0B1001100,],;,I,,,_,,,__,,,z1,,,_,:,eDf,;,_0,,,n,,,a,:,Z,;,_0,,,_DN,:,Array,[,Float,,,0b1,],;,MX3,:,Boolean,),{,},Val,$w,:,_6_,;,Var,_,:,Int,;,},Class,_2,:,_rB,{,},<EOF>''',101))

    def test_3278(self):
        self.assertTrue(TestLexer.test('''Class I{}Class __:__{}Class G:__{Var _nfU_:Boolean ;}Class v{}Class _:Q3_{Constructor (){}Constructor (__,_:Int ;xrZ,g:Array [String ,0XE];O:Array [Boolean ,01]){} }Class _r17:__{}''','''Class,I,{,},Class,__,:,__,{,},Class,G,:,__,{,Var,_nfU_,:,Boolean,;,},Class,v,{,},Class,_,:,Q3_,{,Constructor,(,),{,},Constructor,(,__,,,_,:,Int,;,xrZ,,,g,:,Array,[,String,,,0XE,],;,O,:,Array,[,Boolean,,,01,],),{,},},Class,_r17,:,__,{,},<EOF>''',101))

    def test_3279(self):
        self.assertTrue(TestLexer.test('''Class S:K{$BX(_U:Array [Array [Array [String ,4],074],01_7];MJ,t0__:Array [Array [String ,074],06];_3_,_U:_J;_0U,_o1,_:Array [String ,0b1]){} }Class ve{}Class q7{Val Oi:B;}Class Y5:B1b{}Class l:J_5{}Class __:S{}Class m78:__X2_{}Class n{}''','''Class,S,:,K,{,$BX,(,_U,:,Array,[,Array,[,Array,[,String,,,4,],,,074,],,,017,],;,MJ,,,t0__,:,Array,[,Array,[,String,,,074,],,,06,],;,_3_,,,_U,:,_J,;,_0U,,,_o1,,,_,:,Array,[,String,,,0b1,],),{,},},Class,ve,{,},Class,q7,{,Val,Oi,:,B,;,},Class,Y5,:,B1b,{,},Class,l,:,J_5,{,},Class,__,:,S,{,},Class,m78,:,__X2_,{,},Class,n,{,},<EOF>''',101))

    def test_3280(self):
        self.assertTrue(TestLexer.test('''Class E2j:__{}Class Q:G3P{}Class fV38___:cPCQ{Constructor (p:o2m){}Val $0:_;}Class T_6YC_6_{Constructor (){} }''','''Class,E2j,:,__,{,},Class,Q,:,G3P,{,},Class,fV38___,:,cPCQ,{,Constructor,(,p,:,o2m,),{,},Val,$0,:,_,;,},Class,T_6YC_6_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_3281(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _e{}Class M_7:_{Constructor (Q_,_5l,T,__:Boolean ;h,_:Int ){}$j1(_4,_:Y;y,_,_,N__5_N_0:_;__:Array [Array [Boolean ,9],238]){} }''','''Class,_,{,},Class,_e,{,},Class,M_7,:,_,{,Constructor,(,Q_,,,_5l,,,T,,,__,:,Boolean,;,h,,,_,:,Int,),{,},$j1,(,_4,,,_,:,Y,;,y,,,_,,,_,,,N__5_N_0,:,_,;,__,:,Array,[,Array,[,Boolean,,,9,],,,238,],),{,},},<EOF>''',101))

    def test_3282(self):
        self.assertTrue(TestLexer.test('''Class __:_{Destructor (){}Var $__,$_,h:Array [Array [Array [Array [Boolean ,0B1000110],0B11],047],047];}Class D_3_:_i21{}Class _{Destructor (){}Val J,_:Array [Array [String ,3],52];}''','''Class,__,:,_,{,Destructor,(,),{,},Var,$__,,,$_,,,h,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1000110,],,,0B11,],,,047,],,,047,],;,},Class,D_3_,:,_i21,{,},Class,_,{,Destructor,(,),{,},Val,J,,,_,:,Array,[,Array,[,String,,,3,],,,52,],;,},<EOF>''',101))

    def test_3283(self):
        self.assertTrue(TestLexer.test('''Class __:_{Var ___:Array [Array [Array [Array [Array [Array [Boolean ,94],04],0x2],94],4_89],94];Constructor (S:_;j:_6_1_;_,h:T){}Var $6,$a_:__y;$_(){} }''','''Class,__,:,_,{,Var,___,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,94,],,,04,],,,0x2,],,,94,],,,489,],,,94,],;,Constructor,(,S,:,_,;,j,:,_6_1_,;,_,,,h,:,T,),{,},Var,$6,,,$a_,:,__y,;,$_,(,),{,},},<EOF>''',101))

    def test_3284(self):
        self.assertTrue(TestLexer.test('''Class _{p2(V5N,M7,__:String ;T7,V:Array [Array [Array [Float ,0B1_011_0],0x1B],72]){}Destructor (){}Val qC,$__,UM:Int ;}''','''Class,_,{,p2,(,V5N,,,M7,,,__,:,String,;,T7,,,V,:,Array,[,Array,[,Array,[,Float,,,0B10110,],,,0x1B,],,,72,],),{,},Destructor,(,),{,},Val,qC,,,$__,,,UM,:,Int,;,},<EOF>''',101))

    def test_3285(self):
        self.assertTrue(TestLexer.test('''Class y_:l{}Class _:B{Constructor (zf,_,_k_,Zt:q7;K,k,_:O;_,_:v_){Break ;} }Class j:_{Constructor (v_,g8T1:Int ;B_7,_c:Array [Array [Array [Array [Int ,0X2],33],034],33];B:Float ){} }''','''Class,y_,:,l,{,},Class,_,:,B,{,Constructor,(,zf,,,_,,,_k_,,,Zt,:,q7,;,K,,,k,,,_,:,O,;,_,,,_,:,v_,),{,Break,;,},},Class,j,:,_,{,Constructor,(,v_,,,g8T1,:,Int,;,B_7,,,_c,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X2,],,,33,],,,034,],,,33,],;,B,:,Float,),{,},},<EOF>''',101))

    def test_3286(self):
        self.assertTrue(TestLexer.test('''Class _c1q{F(_,_,_:Array [Array [Array [Float ,0x6],0B1],0xF]){}Constructor (_,C,_7_:Boolean ;_j:Boolean ){} }Class w:s_{$1(_,t:Float ){} }Class _:p{}''','''Class,_c1q,{,F,(,_,,,_,,,_,:,Array,[,Array,[,Array,[,Float,,,0x6,],,,0B1,],,,0xF,],),{,},Constructor,(,_,,,C,,,_7_,:,Boolean,;,_j,:,Boolean,),{,},},Class,w,:,s_,{,$1,(,_,,,t,:,Float,),{,},},Class,_,:,p,{,},<EOF>''',101))

    def test_3287(self):
        self.assertTrue(TestLexer.test('''Class N:_3{Val _15x,$M_O7:Array [Array [Boolean ,787],0B1];Val w:__M3;Val L,$8:Array [Array [Array [Boolean ,0B10],99],99];Var _O2,$_:_;}''','''Class,N,:,_3,{,Val,_15x,,,$M_O7,:,Array,[,Array,[,Boolean,,,787,],,,0B1,],;,Val,w,:,__M3,;,Val,L,,,$8,:,Array,[,Array,[,Array,[,Boolean,,,0B10,],,,99,],,,99,],;,Var,_O2,,,$_,:,_,;,},<EOF>''',101))

    def test_3288(self):
        self.assertTrue(TestLexer.test('''Class H{Var $_:z5;Constructor (){Return ;Continue ;}Var $_D23,$H:_;Var $6:Array [Array [Array [Array [Int ,0b1],0b111011],53],033];}Class _{Var $_,$_,$B:Boolean ;}''','''Class,H,{,Var,$_,:,z5,;,Constructor,(,),{,Return,;,Continue,;,},Var,$_D23,,,$H,:,_,;,Var,$6,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,0b111011,],,,53,],,,033,],;,},Class,_,{,Var,$_,,,$_,,,$B,:,Boolean,;,},<EOF>''',101))

    def test_3289(self):
        self.assertTrue(TestLexer.test('''Class __r_{}Class _{Val $O:Float ;Val _,$F_:Array [Boolean ,050];Val Y_,_b,r,$_F,$Xq7,_,$z_H:String ;Constructor (){Val C:Array [String ,0B1];Break ;Continue ;} }Class ___{}Class _{Destructor (){} }''','''Class,__r_,{,},Class,_,{,Val,$O,:,Float,;,Val,_,,,$F_,:,Array,[,Boolean,,,050,],;,Val,Y_,,,_b,,,r,,,$_F,,,$Xq7,,,_,,,$z_H,:,String,;,Constructor,(,),{,Val,C,:,Array,[,String,,,0B1,],;,Break,;,Continue,;,},},Class,___,{,},Class,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3290(self):
        self.assertTrue(TestLexer.test('''Class _{}Class Nz:S{Q(_3:String ){}Val i_,u:_4_7_;}Class z{Destructor (){}_(j_:nC_;x0hW,_9___:R_;z,bz,B:Array [Boolean ,02_0]){} }''','''Class,_,{,},Class,Nz,:,S,{,Q,(,_3,:,String,),{,},Val,i_,,,u,:,_4_7_,;,},Class,z,{,Destructor,(,),{,},_,(,j_,:,nC_,;,x0hW,,,_9___,:,R_,;,z,,,bz,,,B,:,Array,[,Boolean,,,020,],),{,},},<EOF>''',101))

    def test_3291(self):
        self.assertTrue(TestLexer.test('''Class _{$7(){}Constructor (W5,UiT,U:Array [Array [Array [Int ,500_4_3],075],2]){}Var x_:F_1;Var ql_:Array [String ,0x2B];Val _I,E:B_1;Var $4_8:Array [Array [Array [Int ,0X3],075],0b1000010];}Class _:_m{}''','''Class,_,{,$7,(,),{,},Constructor,(,W5,,,UiT,,,U,:,Array,[,Array,[,Array,[,Int,,,50043,],,,075,],,,2,],),{,},Var,x_,:,F_1,;,Var,ql_,:,Array,[,String,,,0x2B,],;,Val,_I,,,E,:,B_1,;,Var,$4_8,:,Array,[,Array,[,Array,[,Int,,,0X3,],,,075,],,,0b1000010,],;,},Class,_,:,_m,{,},<EOF>''',101))

    def test_3292(self):
        self.assertTrue(TestLexer.test('''Class _{Y(_:Array [Array [Array [Array [Boolean ,04_263],1],0b1],0B10_0];_:Array [Array [Array [Array [Boolean ,0x3],0x56],01_5],0xF]){} }''','''Class,_,{,Y,(,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,04263,],,,1,],,,0b1,],,,0B100,],;,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x3,],,,0x56,],,,015,],,,0xF,],),{,},},<EOF>''',101))

    def test_3293(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (D:Boolean ;_:Array [Array [Float ,0x7_FA9],0x15];q,k_8_,B,_Z8,W,h,_HJ:String ){} }Class t{}Class _:T2{}Class _1a_E{}''','''Class,_,:,_,{,Constructor,(,D,:,Boolean,;,_,:,Array,[,Array,[,Float,,,0x7FA9,],,,0x15,],;,q,,,k_8_,,,B,,,_Z8,,,W,,,h,,,_HJ,:,String,),{,},},Class,t,{,},Class,_,:,T2,{,},Class,_1a_E,{,},<EOF>''',101))

    def test_3294(self):
        self.assertTrue(TestLexer.test('''Class _{}Class q:K{}Class _:_6_5{Constructor (Ph:C;H,p,_5_:Boolean ;_,___,_:_){}Var $61,$_,L_5_,$_:Array [Array [Boolean ,0X4],0x4];}''','''Class,_,{,},Class,q,:,K,{,},Class,_,:,_6_5,{,Constructor,(,Ph,:,C,;,H,,,p,,,_5_,:,Boolean,;,_,,,___,,,_,:,_,),{,},Var,$61,,,$_,,,L_5_,,,$_,:,Array,[,Array,[,Boolean,,,0X4,],,,0x4,],;,},<EOF>''',101))

    def test_3295(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (w:Array [Array [Array [Array [Float ,0B1010111],0b100011],0x49],0X1A];f_Pn_A:Q_45__){} }Class _:_54_{}Class iT76_0_{Val c5:Array [Array [Array [Array [Float ,026],026],47],0B1];}''','''Class,_,{,Constructor,(,w,:,Array,[,Array,[,Array,[,Array,[,Float,,,0B1010111,],,,0b100011,],,,0x49,],,,0X1A,],;,f_Pn_A,:,Q_45__,),{,},},Class,_,:,_54_,{,},Class,iT76_0_,{,Val,c5,:,Array,[,Array,[,Array,[,Array,[,Float,,,026,],,,026,],,,47,],,,0B1,],;,},<EOF>''',101))

    def test_3296(self):
        self.assertTrue(TestLexer.test('''Class p__69{Val $R,$3,$dv,Q,_,$__:L_8;Val Jp,$_4_:Array [Array [Array [Float ,0B1_1_01_1_0],0XF_0D3_58],0b1];}''','''Class,p__69,{,Val,$R,,,$3,,,$dv,,,Q,,,_,,,$__,:,L_8,;,Val,Jp,,,$_4_,:,Array,[,Array,[,Array,[,Float,,,0B110110,],,,0XF0D358,],,,0b1,],;,},<EOF>''',101))

    def test_3297(self):
        self.assertTrue(TestLexer.test('''Class Q{Destructor (){ {} }}Class o{W(){}$G(V:_;_,__9d_,_,s,T,u_64Be,d:__){Break ;} }Class H:X_{Var _,ZU6:Zx;Val $_,_,$_,_,$h:Float ;}''','''Class,Q,{,Destructor,(,),{,{,},},},Class,o,{,W,(,),{,},$G,(,V,:,_,;,_,,,__9d_,,,_,,,s,,,T,,,u_64Be,,,d,:,__,),{,Break,;,},},Class,H,:,X_,{,Var,_,,,ZU6,:,Zx,;,Val,$_,,,_,,,$_,,,_,,,$h,:,Float,;,},<EOF>''',101))

    def test_3298(self):
        self.assertTrue(TestLexer.test('''Class _:__{}Class _{}Class a{Destructor (){}A_1(_B,_,_4Y3q0894y:_eWs9;_G3,__,i1J:Boolean ){} }Class _:_2_{}Class _:_{}''','''Class,_,:,__,{,},Class,_,{,},Class,a,{,Destructor,(,),{,},A_1,(,_B,,,_,,,_4Y3q0894y,:,_eWs9,;,_G3,,,__,,,i1J,:,Boolean,),{,},},Class,_,:,_2_,{,},Class,_,:,_,{,},<EOF>''',101))

    def test_3299(self):
        self.assertTrue(TestLexer.test('''Class _:d__{Destructor (){}Constructor (_6,_,_,b2H_2:V;_,N_,_s_,_1,_6N:Array [Array [Array [Boolean ,0b1_1],0B11_1_0],0b1];WV,Q:Array [Float ,64];w_:Int ;lX,O,v,_:Array [Array [Array [String ,0xBD_03],64],050]){} }Class _:_{}''','''Class,_,:,d__,{,Destructor,(,),{,},Constructor,(,_6,,,_,,,_,,,b2H_2,:,V,;,_,,,N_,,,_s_,,,_1,,,_6N,:,Array,[,Array,[,Array,[,Boolean,,,0b11,],,,0B1110,],,,0b1,],;,WV,,,Q,:,Array,[,Float,,,64,],;,w_,:,Int,;,lX,,,O,,,v,,,_,:,Array,[,Array,[,Array,[,String,,,0xBD03,],,,64,],,,050,],),{,},},Class,_,:,_,{,},<EOF>''',101))

    def test_3300(self):
        self.assertTrue(TestLexer.test('''Class _{}Class x_i:B{Var V,$_68:_;Var s:Array [Boolean ,0x39];Val $3W4k8:Array [Array [Array [String ,0X5],0x39],0XF];}''','''Class,_,{,},Class,x_i,:,B,{,Var,V,,,$_68,:,_,;,Var,s,:,Array,[,Boolean,,,0x39,],;,Val,$3W4k8,:,Array,[,Array,[,Array,[,String,,,0X5,],,,0x39,],,,0XF,],;,},<EOF>''',101))

    def test_3301(self):
        self.assertTrue(TestLexer.test('''Class Y{Constructor (_:t){} }Class n_:_{$_(){}Constructor (){}_(v,h_4:Int ;K:_z){Val v,_,_8:Array [Array [Int ,011],0x6];} }''','''Class,Y,{,Constructor,(,_,:,t,),{,},},Class,n_,:,_,{,$_,(,),{,},Constructor,(,),{,},_,(,v,,,h_4,:,Int,;,K,:,_z,),{,Val,v,,,_,,,_8,:,Array,[,Array,[,Int,,,011,],,,0x6,],;,},},<EOF>''',101))

    def test_3302(self):
        self.assertTrue(TestLexer.test('''Class vF:m_{Var x:Array [Array [Array [Array [Array [Int ,56],0x3],0135],0135],0x4];}Class _{Destructor (){} }Class lx2tp70{Var ZP,$_:Int ;}Class _{}''','''Class,vF,:,m_,{,Var,x,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,56,],,,0x3,],,,0135,],,,0135,],,,0x4,],;,},Class,_,{,Destructor,(,),{,},},Class,lx2tp70,{,Var,ZP,,,$_,:,Int,;,},Class,_,{,},<EOF>''',101))

    def test_3303(self):
        self.assertTrue(TestLexer.test('''Class _{}Class t{}Class _:__C__{Var _:Array [String ,0646_66];Var __:_;}Class j{Var $0:_;Constructor (_:Array [Boolean ,0xF];_9,_:Array [String ,0124];k3,_g1_b6P:Int ){} }''','''Class,_,{,},Class,t,{,},Class,_,:,__C__,{,Var,_,:,Array,[,String,,,064666,],;,Var,__,:,_,;,},Class,j,{,Var,$0,:,_,;,Constructor,(,_,:,Array,[,Boolean,,,0xF,],;,_9,,,_,:,Array,[,String,,,0124,],;,k3,,,_g1_b6P,:,Int,),{,},},<EOF>''',101))

    def test_3304(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_,d,M_x6:Array [Boolean ,077]){} }Class ____N1_{}Class uu{}Class _6{Destructor (){} }Class k9{}''','''Class,_,{,Constructor,(,_,,,d,,,M_x6,:,Array,[,Boolean,,,077,],),{,},},Class,____N1_,{,},Class,uu,{,},Class,_6,{,Destructor,(,),{,},},Class,k9,{,},<EOF>''',101))

    def test_3305(self):
        self.assertTrue(TestLexer.test('''Class _{}Class J7{}Class _:h{}Class _:_{Val $F,$a:S__;Destructor (){}Constructor (Z,H_:Array [Array [Boolean ,0B1_1010],0b1001000];_:_z){} }''','''Class,_,{,},Class,J7,{,},Class,_,:,h,{,},Class,_,:,_,{,Val,$F,,,$a,:,S__,;,Destructor,(,),{,},Constructor,(,Z,,,H_,:,Array,[,Array,[,Boolean,,,0B11010,],,,0b1001000,],;,_,:,_z,),{,},},<EOF>''',101))

    def test_3306(self):
        self.assertTrue(TestLexer.test('''Class _:V{}Class _7:_4_{$1z(T:E;H:Int ;__,_:_;Up,__:V;ex___:Array [Array [Array [Array [Array [Array [Int ,07],0x55],07],0x9],9_4],22];_:Array [Boolean ,22];Mz1,_:Array [Float ,0xFA]){} }Class E{_hW_(_:z2;_:Array [Boolean ,0b1_1_1_0_1_110_1_1_0]){ {} }Var $_:Boolean =_::$_()._._n+-_::$_q5.R().__H.A.__;_(){Continue ;} }''','''Class,_,:,V,{,},Class,_7,:,_4_,{,$1z,(,T,:,E,;,H,:,Int,;,__,,,_,:,_,;,Up,,,__,:,V,;,ex___,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,07,],,,0x55,],,,07,],,,0x9,],,,94,],,,22,],;,_,:,Array,[,Boolean,,,22,],;,Mz1,,,_,:,Array,[,Float,,,0xFA,],),{,},},Class,E,{,_hW_,(,_,:,z2,;,_,:,Array,[,Boolean,,,0b11101110110,],),{,{,},},Var,$_,:,Boolean,=,_,::,$_,(,),.,_,.,_n,+,-,_,::,$_q5,.,R,(,),.,__H,.,A,.,__,;,_,(,),{,Continue,;,},},<EOF>''',101))

    def test_3307(self):
        self.assertTrue(TestLexer.test('''Class eV:_{Val $3:Int ;Destructor (){ {}Continue ;}_U8(){}Var Qn_,$9_3:Array [Int ,7_8_7];}Class x:m_{Var _:Array [Array [Int ,0B1010],0XB];}''','''Class,eV,:,_,{,Val,$3,:,Int,;,Destructor,(,),{,{,},Continue,;,},_U8,(,),{,},Var,Qn_,,,$9_3,:,Array,[,Int,,,787,],;,},Class,x,:,m_,{,Var,_,:,Array,[,Array,[,Int,,,0B1010,],,,0XB,],;,},<EOF>''',101))

    def test_3308(self):
        self.assertTrue(TestLexer.test('''Class _7_d:_{Var _:Float ;}Class _{}Class E_:__3_{Constructor (){} }Class OU:D{}Class _{Val X_,$_:Int ;}Class __:_{}Class _5g:_{Destructor (){Continue ;} }''','''Class,_7_d,:,_,{,Var,_,:,Float,;,},Class,_,{,},Class,E_,:,__3_,{,Constructor,(,),{,},},Class,OU,:,D,{,},Class,_,{,Val,X_,,,$_,:,Int,;,},Class,__,:,_,{,},Class,_5g,:,_,{,Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_3309(self):
        self.assertTrue(TestLexer.test('''Class e{}Class _:_2{}Class _{Var A8_p_,LF5_6:Array [Array [Float ,49],0B10_0];}Class _2{$_0_(){}Destructor (){} }Class d318_{}''','''Class,e,{,},Class,_,:,_2,{,},Class,_,{,Var,A8_p_,,,LF5_6,:,Array,[,Array,[,Float,,,49,],,,0B100,],;,},Class,_2,{,$_0_,(,),{,},Destructor,(,),{,},},Class,d318_,{,},<EOF>''',101))

    def test_3310(self):
        self.assertTrue(TestLexer.test('''Class _:_e_5{Val $_,$O_0,t,$1:Array [Array [Array [Array [String ,041],40],0x6],041];_(_i,x_P1:_6){Val P,_:Array [Array [Array [Array [String ,05_25],0b1],2],07];}Destructor (){} }''','''Class,_,:,_e_5,{,Val,$_,,,$O_0,,,t,,,$1,:,Array,[,Array,[,Array,[,Array,[,String,,,041,],,,40,],,,0x6,],,,041,],;,_,(,_i,,,x_P1,:,_6,),{,Val,P,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0525,],,,0b1,],,,2,],,,07,],;,},Destructor,(,),{,},},<EOF>''',101))

    def test_3311(self):
        self.assertTrue(TestLexer.test('''Class O7_:a{Constructor (eR,___,a,__:Y0D_;o,_:___;g:Array [Boolean ,96]){}Destructor (){}Val $3,$I,qn60:Array [Array [String ,96],96];}''','''Class,O7_,:,a,{,Constructor,(,eR,,,___,,,a,,,__,:,Y0D_,;,o,,,_,:,___,;,g,:,Array,[,Boolean,,,96,],),{,},Destructor,(,),{,},Val,$3,,,$I,,,qn60,:,Array,[,Array,[,String,,,96,],,,96,],;,},<EOF>''',101))

    def test_3312(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _Y:__29{_E(){}Var j4:String ;Var _:Array [Array [Int ,0X40],0xB26_7E];_(k,_,_t,J5,W:Array [Float ,015];p6:VF;_54,_:Float ){}$9(___,y:String ;X:Float ){}Destructor (){Return ;P::$_();} }''','''Class,_,{,},Class,_Y,:,__29,{,_E,(,),{,},Var,j4,:,String,;,Var,_,:,Array,[,Array,[,Int,,,0X40,],,,0xB267E,],;,_,(,k,,,_,,,_t,,,J5,,,W,:,Array,[,Float,,,015,],;,p6,:,VF,;,_54,,,_,:,Float,),{,},$9,(,___,,,y,:,String,;,X,:,Float,),{,},Destructor,(,),{,Return,;,P,::,$_,(,),;,},},<EOF>''',101))

    def test_3313(self):
        self.assertTrue(TestLexer.test('''Class _5M_{}Class Ot:__{}Class _9{Var $MM_C,$5,x79:Int ;}Class _0:u{}Class t{Val I:Array [Array [Float ,12],0B10];}''','''Class,_5M_,{,},Class,Ot,:,__,{,},Class,_9,{,Var,$MM_C,,,$5,,,x79,:,Int,;,},Class,_0,:,u,{,},Class,t,{,Val,I,:,Array,[,Array,[,Float,,,12,],,,0B10,],;,},<EOF>''',101))

    def test_3314(self):
        self.assertTrue(TestLexer.test('''Class __:U7{Constructor (__:Array [Array [Array [Array [Array [Array [Int ,0b1_0_0_0],0X36],0b1],0b11],0b11],0XF];_,_,C:Array [Array [Float ,0x52],064];_,V:Int ){} }''','''Class,__,:,U7,{,Constructor,(,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b1000,],,,0X36,],,,0b1,],,,0b11,],,,0b11,],,,0XF,],;,_,,,_,,,C,:,Array,[,Array,[,Float,,,0x52,],,,064,],;,_,,,V,:,Int,),{,},},<EOF>''',101))

    def test_3315(self):
        self.assertTrue(TestLexer.test('''Class R_2:L{Constructor (_,_,_:Array [Float ,0b10000];_NU:Array [Boolean ,0B1001100];_:Array [Float ,7];v_22i,_,__:Array [Int ,05];_,__8:Mm1;sH,_0_:Array [Array [Float ,0B1_1_00],2];S:Float ;p,gd,_R_:Boolean ;m,_,qg,s_,L02:Int ;_,l:_;h:Array [String ,70];l,EWM:String ){Val _8_,_:_;} }Class j1m{}''','''Class,R_2,:,L,{,Constructor,(,_,,,_,,,_,:,Array,[,Float,,,0b10000,],;,_NU,:,Array,[,Boolean,,,0B1001100,],;,_,:,Array,[,Float,,,7,],;,v_22i,,,_,,,__,:,Array,[,Int,,,05,],;,_,,,__8,:,Mm1,;,sH,,,_0_,:,Array,[,Array,[,Float,,,0B1100,],,,2,],;,S,:,Float,;,p,,,gd,,,_R_,:,Boolean,;,m,,,_,,,qg,,,s_,,,L02,:,Int,;,_,,,l,:,_,;,h,:,Array,[,String,,,70,],;,l,,,EWM,:,String,),{,Val,_8_,,,_,:,_,;,},},Class,j1m,{,},<EOF>''',101))

    def test_3316(self):
        self.assertTrue(TestLexer.test('''Class LI{Val $M_M2:Array [String ,5];h4(_aC__:Array [Array [Array [Boolean ,0X5],0X5],81];_5,_,P,X,P9:Float ;_,_,_,i,S7,_,m0_:_;ZL,_,B,_:Array [Array [Array [String ,0b110110],0X9],77];_:JF42399_sb_6;k:__;_:Boolean ){} }''','''Class,LI,{,Val,$M_M2,:,Array,[,String,,,5,],;,h4,(,_aC__,:,Array,[,Array,[,Array,[,Boolean,,,0X5,],,,0X5,],,,81,],;,_5,,,_,,,P,,,X,,,P9,:,Float,;,_,,,_,,,_,,,i,,,S7,,,_,,,m0_,:,_,;,ZL,,,_,,,B,,,_,:,Array,[,Array,[,Array,[,String,,,0b110110,],,,0X9,],,,77,],;,_,:,JF42399_sb_6,;,k,:,__,;,_,:,Boolean,),{,},},<EOF>''',101))

    def test_3317(self):
        self.assertTrue(TestLexer.test('''Class e:B{Var A:Int ;}Class _{Constructor (Y:Float ;_:z8;w4:Float ;Bg_,P:Array [Array [Boolean ,0xD],0X3];_,b:Int ){} }''','''Class,e,:,B,{,Var,A,:,Int,;,},Class,_,{,Constructor,(,Y,:,Float,;,_,:,z8,;,w4,:,Float,;,Bg_,,,P,:,Array,[,Array,[,Boolean,,,0xD,],,,0X3,],;,_,,,b,:,Int,),{,},},<EOF>''',101))

    def test_3318(self):
        self.assertTrue(TestLexer.test('''Class XNOOH:T_9_{Var _3:Array [Array [Array [Array [Array [Boolean ,0xF],063],031],063],063];}Class Q_33Ag:__{}Class x10:_{Val _,_5_n3:Float ;}''','''Class,XNOOH,:,T_9_,{,Var,_3,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0xF,],,,063,],,,031,],,,063,],,,063,],;,},Class,Q_33Ag,:,__,{,},Class,x10,:,_,{,Val,_,,,_5_n3,:,Float,;,},<EOF>''',101))

    def test_3319(self):
        self.assertTrue(TestLexer.test('''Class Q{Constructor (h:Array [Array [Array [String ,0132],95],0b10101];f,_,_GQ_:String ){}Val G,F,$p_,Z_:Array [Int ,95];eRK81(){} }''','''Class,Q,{,Constructor,(,h,:,Array,[,Array,[,Array,[,String,,,0132,],,,95,],,,0b10101,],;,f,,,_,,,_GQ_,:,String,),{,},Val,G,,,F,,,$p_,,,Z_,:,Array,[,Int,,,95,],;,eRK81,(,),{,},},<EOF>''',101))

    def test_3320(self):
        self.assertTrue(TestLexer.test('''Class Fw:_3_S0{}Class __S0a4{Val ___:Array [Array [Array [Array [Int ,0x24],0b1],050],25];}Class l_9M6s_d5_6_:_{}''','''Class,Fw,:,_3_S0,{,},Class,__S0a4,{,Val,___,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x24,],,,0b1,],,,050,],,,25,],;,},Class,l_9M6s_d5_6_,:,_,{,},<EOF>''',101))

    def test_3321(self):
        self.assertTrue(TestLexer.test('''Class i17G:V{___(z,_,s,B_1:String ){}Var pp,$5:String ;Destructor (){}Var $GE,$_:Array [Array [Array [Boolean ,0x3B],61],4_7];}''','''Class,i17G,:,V,{,___,(,z,,,_,,,s,,,B_1,:,String,),{,},Var,pp,,,$5,:,String,;,Destructor,(,),{,},Var,$GE,,,$_,:,Array,[,Array,[,Array,[,Boolean,,,0x3B,],,,61,],,,47,],;,},<EOF>''',101))

    def test_3322(self):
        self.assertTrue(TestLexer.test('''Class U:_{}Class V2T1{Val $w,$_3:Array [Array [Array [Array [Array [Float ,934],0X7],0X4],0B1],58];}Class C_{Var _0_19:_Z;Var _:Int ;}Class __4j:w{Destructor (){} }Class _{}''','''Class,U,:,_,{,},Class,V2T1,{,Val,$w,,,$_3,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,934,],,,0X7,],,,0X4,],,,0B1,],,,58,],;,},Class,C_,{,Var,_0_19,:,_Z,;,Var,_,:,Int,;,},Class,__4j,:,w,{,Destructor,(,),{,},},Class,_,{,},<EOF>''',101))

    def test_3323(self):
        self.assertTrue(TestLexer.test('''Class R:_d5u9f{Constructor (b:Float ){Val __b,n,_Q,J9,b,_:Array [Float ,0b11_00];} }Class e_0{}Class __0SU:__c_ycW4{}''','''Class,R,:,_d5u9f,{,Constructor,(,b,:,Float,),{,Val,__b,,,n,,,_Q,,,J9,,,b,,,_,:,Array,[,Float,,,0b1100,],;,},},Class,e_0,{,},Class,__0SU,:,__c_ycW4,{,},<EOF>''',101))

    def test_3324(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){Var _,_,h:Array [Array [Array [Float ,01_4],0b110011],9];Continue ;}$_d(__:String ){} }Class H{}Class y{_(_:Array [Int ,0b11];X1,L,_,_:w5){}Val $_7,$h,X4:_;}''','''Class,_,{,Destructor,(,),{,Var,_,,,_,,,h,:,Array,[,Array,[,Array,[,Float,,,014,],,,0b110011,],,,9,],;,Continue,;,},$_d,(,__,:,String,),{,},},Class,H,{,},Class,y,{,_,(,_,:,Array,[,Int,,,0b11,],;,X1,,,L,,,_,,,_,:,w5,),{,},Val,$_7,,,$h,,,X4,:,_,;,},<EOF>''',101))

    def test_3325(self):
        self.assertTrue(TestLexer.test('''Class _:K{}Class E:_{}Class _mn___:___{Constructor (){Return ;}$fPuT27(Q:String ){}Val $P,n:Int ;}Class D_55:_44_{Constructor (V,_:_){} }Class j_u{Var $_:O_6;}Class l{}''','''Class,_,:,K,{,},Class,E,:,_,{,},Class,_mn___,:,___,{,Constructor,(,),{,Return,;,},$fPuT27,(,Q,:,String,),{,},Val,$P,,,n,:,Int,;,},Class,D_55,:,_44_,{,Constructor,(,V,,,_,:,_,),{,},},Class,j_u,{,Var,$_,:,O_6,;,},Class,l,{,},<EOF>''',101))

    def test_3326(self):
        self.assertTrue(TestLexer.test('''Class E31g_{Constructor (Va5_,_,iO:Array [Array [Array [Array [Boolean ,0X93_56],0B1000011],4],061];s,y,_Q,Y,n:Array [Array [Float ,0X9_D],78]){} }Class _v2_H_8O35_{Constructor (_:String ;C8__,K:String ;E_,i2:Float ){ {} }Var I:_;Val $_,_,$_9d,_:Array [Array [Array [String ,78],0B10_10],021];}''','''Class,E31g_,{,Constructor,(,Va5_,,,_,,,iO,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X9356,],,,0B1000011,],,,4,],,,061,],;,s,,,y,,,_Q,,,Y,,,n,:,Array,[,Array,[,Float,,,0X9D,],,,78,],),{,},},Class,_v2_H_8O35_,{,Constructor,(,_,:,String,;,C8__,,,K,:,String,;,E_,,,i2,:,Float,),{,{,},},Var,I,:,_,;,Val,$_,,,_,,,$_9d,,,_,:,Array,[,Array,[,Array,[,String,,,78,],,,0B1010,],,,021,],;,},<EOF>''',101))

    def test_3327(self):
        self.assertTrue(TestLexer.test('''Class t_:Z0_S6{Constructor (mYk,_:Int ;_8:Array [String ,0B1010]){Continue ;M_.O_L();}Constructor (){}Var $239EO:Boolean ;Constructor (___:Array [Array [Array [Boolean ,0x21],0B1_10],0b1010]){}_(){} }Class _:_{}''','''Class,t_,:,Z0_S6,{,Constructor,(,mYk,,,_,:,Int,;,_8,:,Array,[,String,,,0B1010,],),{,Continue,;,M_,.,O_L,(,),;,},Constructor,(,),{,},Var,$239EO,:,Boolean,;,Constructor,(,___,:,Array,[,Array,[,Array,[,Boolean,,,0x21,],,,0B110,],,,0b1010,],),{,},_,(,),{,},},Class,_,:,_,{,},<EOF>''',101))

    def test_3328(self):
        self.assertTrue(TestLexer.test('''Class Z:__{$82S1_(T,J,j:Int ){}Destructor (){}Val $k2:_C_7__;}Class Jt___:_N{Val j__,t_5LJ:String ;}Class Y{}Class n{Constructor (H,Q__73__,j:W;i:Array [Boolean ,0106]){}Var _,_2,$_:n_;Destructor (){}Constructor (j,_Ld0:_r__){Return ;} }''','''Class,Z,:,__,{,$82S1_,(,T,,,J,,,j,:,Int,),{,},Destructor,(,),{,},Val,$k2,:,_C_7__,;,},Class,Jt___,:,_N,{,Val,j__,,,t_5LJ,:,String,;,},Class,Y,{,},Class,n,{,Constructor,(,H,,,Q__73__,,,j,:,W,;,i,:,Array,[,Boolean,,,0106,],),{,},Var,_,,,_2,,,$_,:,n_,;,Destructor,(,),{,},Constructor,(,j,,,_Ld0,:,_r__,),{,Return,;,},},<EOF>''',101))

    def test_3329(self):
        self.assertTrue(TestLexer.test('''Class M{Var W_,Y,T,$_:Array [Float ,423_9_7];$X2(p:Array [Array [Array [Array [String ,0B1010101],0x1C_C],0b1],0B1010101];___:Array [Array [Int ,05],074_6]){} }Class q_L:_{}Class _5:_{Val _,_:M;}''','''Class,M,{,Var,W_,,,Y,,,T,,,$_,:,Array,[,Float,,,42397,],;,$X2,(,p,:,Array,[,Array,[,Array,[,Array,[,String,,,0B1010101,],,,0x1CC,],,,0b1,],,,0B1010101,],;,___,:,Array,[,Array,[,Int,,,05,],,,0746,],),{,},},Class,q_L,:,_,{,},Class,_5,:,_,{,Val,_,,,_,:,M,;,},<EOF>''',101))

    def test_3330(self):
        self.assertTrue(TestLexer.test('''Class _:J_m_vVy5p12_{Val $_:Array [Int ,05];Constructor (_3,_:Array [Boolean ,7];_21n,_9:Array [Array [Array [Array [Array [Array [String ,0b1_1],0B1_1],7],0b1],0X1C],02]){_L::$7();} }''','''Class,_,:,J_m_vVy5p12_,{,Val,$_,:,Array,[,Int,,,05,],;,Constructor,(,_3,,,_,:,Array,[,Boolean,,,7,],;,_21n,,,_9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b11,],,,0B11,],,,7,],,,0b1,],,,0X1C,],,,02,],),{,_L,::,$7,(,),;,},},<EOF>''',101))

    def test_3331(self):
        self.assertTrue(TestLexer.test('''Class _v:m{Constructor (V,__327:Array [Boolean ,0b111];G,____70__:Array [Array [String ,0B1011001],035];e_mx:Boolean ){} }''','''Class,_v,:,m,{,Constructor,(,V,,,__327,:,Array,[,Boolean,,,0b111,],;,G,,,____70__,:,Array,[,Array,[,String,,,0B1011001,],,,035,],;,e_mx,:,Boolean,),{,},},<EOF>''',101))

    def test_3332(self):
        self.assertTrue(TestLexer.test('''Class x_D5:_{Constructor (U,_7:Float ;a_L,_S:_){}Var fz:Array [Array [Array [Float ,0X32],0xE],0b1100000];}Class b01:_4w{}''','''Class,x_D5,:,_,{,Constructor,(,U,,,_7,:,Float,;,a_L,,,_S,:,_,),{,},Var,fz,:,Array,[,Array,[,Array,[,Float,,,0X32,],,,0xE,],,,0b1100000,],;,},Class,b01,:,_4w,{,},<EOF>''',101))

    def test_3333(self):
        self.assertTrue(TestLexer.test('''Class _:_3{Var $_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,0B11111],015],0X37],015],05_00],3_9_5_3],580_6220],7],0B1_1];}''','''Class,_,:,_3,{,Var,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B11111,],,,015,],,,0X37,],,,015,],,,0500,],,,3953,],,,5806220,],,,7,],,,0B11,],;,},<EOF>''',101))

    def test_3334(self):
        self.assertTrue(TestLexer.test('''Class J{Var d:u;Var _M7:Array [Array [Boolean ,0X5],0b110010];}Class f:jAPl{Var _8,$Rr,F,nV:Array [Array [String ,2],66];}''','''Class,J,{,Var,d,:,u,;,Var,_M7,:,Array,[,Array,[,Boolean,,,0X5,],,,0b110010,],;,},Class,f,:,jAPl,{,Var,_8,,,$Rr,,,F,,,nV,:,Array,[,Array,[,String,,,2,],,,66,],;,},<EOF>''',101))

    def test_3335(self):
        self.assertTrue(TestLexer.test('''Class _:_Z{}Class O_W:ZV__Z8{_5(_,C,_:Int ;_1:Array [Array [Array [Array [Array [Float ,01],03],0X98],03],0141]){} }''','''Class,_,:,_Z,{,},Class,O_W,:,ZV__Z8,{,_5,(,_,,,C,,,_,:,Int,;,_1,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,01,],,,03,],,,0X98,],,,03,],,,0141,],),{,},},<EOF>''',101))

    def test_3336(self):
        self.assertTrue(TestLexer.test('''Class t{Constructor (_:String ;_,_:Array [Array [Float ,0b101],0x1];w,_,I_2,_Ek,__,_1,_5Tx_4:Float ;_,__,_,aG:Int ;_,_:Array [Array [Array [String ,91],45],013]){} }''','''Class,t,{,Constructor,(,_,:,String,;,_,,,_,:,Array,[,Array,[,Float,,,0b101,],,,0x1,],;,w,,,_,,,I_2,,,_Ek,,,__,,,_1,,,_5Tx_4,:,Float,;,_,,,__,,,_,,,aG,:,Int,;,_,,,_,:,Array,[,Array,[,Array,[,String,,,91,],,,45,],,,013,],),{,},},<EOF>''',101))

    def test_3337(self):
        self.assertTrue(TestLexer.test('''Class c:_h1_{__(_,_:Array [Array [Array [Int ,7],40],0B110]){}C(i_f29,Zq,x,_:_9){Val p_,gR_,P:Float ;}Constructor (){} }''','''Class,c,:,_h1_,{,__,(,_,,,_,:,Array,[,Array,[,Array,[,Int,,,7,],,,40,],,,0B110,],),{,},C,(,i_f29,,,Zq,,,x,,,_,:,_9,),{,Val,p_,,,gR_,,,P,:,Float,;,},Constructor,(,),{,},},<EOF>''',101))

    def test_3338(self):
        self.assertTrue(TestLexer.test('''Class _NY:__{}Class q:I_{Destructor (){} }Class _{Var $M,_6u_:Float ;}Class Z{Destructor (){} }Class _{}Class _64je{$_(_:M_;dl_c_,_:Array [Boolean ,06_74]){} }''','''Class,_NY,:,__,{,},Class,q,:,I_,{,Destructor,(,),{,},},Class,_,{,Var,$M,,,_6u_,:,Float,;,},Class,Z,{,Destructor,(,),{,},},Class,_,{,},Class,_64je,{,$_,(,_,:,M_,;,dl_c_,,,_,:,Array,[,Boolean,,,0674,],),{,},},<EOF>''',101))

    def test_3339(self):
        self.assertTrue(TestLexer.test('''Class z_{}Class tU9_:_f{Constructor (_64J,n9__1,_yPv,p,_RQ,o:_0){}_z(__,n,_6Lj:hj6Y1_3w4;J,_:__x;_,_,__,m,_,Z,S:Array [Int ,055];o_,x_S,_1:Array [Array [String ,055],0x23];w,t,_h,v,_:X;H,_0:Array [Int ,13];S_:c){} }''','''Class,z_,{,},Class,tU9_,:,_f,{,Constructor,(,_64J,,,n9__1,,,_yPv,,,p,,,_RQ,,,o,:,_0,),{,},_z,(,__,,,n,,,_6Lj,:,hj6Y1_3w4,;,J,,,_,:,__x,;,_,,,_,,,__,,,m,,,_,,,Z,,,S,:,Array,[,Int,,,055,],;,o_,,,x_S,,,_1,:,Array,[,Array,[,String,,,055,],,,0x23,],;,w,,,t,,,_h,,,v,,,_,:,X,;,H,,,_0,:,Array,[,Int,,,13,],;,S_,:,c,),{,},},<EOF>''',101))

    def test_3340(self):
        self.assertTrue(TestLexer.test('''Class uRe{Constructor (_,T,_:Array [Boolean ,0122];_D___,m:String ;_,_U53_6:Boolean ){} }Class f:r{}Class s0{}Class T:o6{}''','''Class,uRe,{,Constructor,(,_,,,T,,,_,:,Array,[,Boolean,,,0122,],;,_D___,,,m,:,String,;,_,,,_U53_6,:,Boolean,),{,},},Class,f,:,r,{,},Class,s0,{,},Class,T,:,o6,{,},<EOF>''',101))

    def test_3341(self):
        self.assertTrue(TestLexer.test('''Class r{_(){} }Class _{Destructor (){Return ;}Var u__974,_:Array [Boolean ,1];Val _,T_J8R4:Array [Array [Array [String ,0x21],0b1011],0B1_1];__m(){Continue ;}$6(__:Array [Array [Int ,03],1];m_:I){_::$q();Return ;} }Class _34_{}''','''Class,r,{,_,(,),{,},},Class,_,{,Destructor,(,),{,Return,;,},Var,u__974,,,_,:,Array,[,Boolean,,,1,],;,Val,_,,,T_J8R4,:,Array,[,Array,[,Array,[,String,,,0x21,],,,0b1011,],,,0B11,],;,__m,(,),{,Continue,;,},$6,(,__,:,Array,[,Array,[,Int,,,03,],,,1,],;,m_,:,I,),{,_,::,$q,(,),;,Return,;,},},Class,_34_,{,},<EOF>''',101))

    def test_3342(self):
        self.assertTrue(TestLexer.test('''Class _:q7_I{}Class _{}Class n:__{Var z,$Qt:Array [Boolean ,0X34];}Class H9:_{}Class t:_4{Destructor (){} }Class _{}Class QS{}Class Z:F_1{}''','''Class,_,:,q7_I,{,},Class,_,{,},Class,n,:,__,{,Var,z,,,$Qt,:,Array,[,Boolean,,,0X34,],;,},Class,H9,:,_,{,},Class,t,:,_4,{,Destructor,(,),{,},},Class,_,{,},Class,QS,{,},Class,Z,:,F_1,{,},<EOF>''',101))

    def test_3343(self):
        self.assertTrue(TestLexer.test('''Class _:b7{_68_(){} }Class __:nW_{}Class J7M0f58J_4_{}Class P_:_{Constructor (Y5_:Boolean ;N_,__:Array [String ,21]){} }''','''Class,_,:,b7,{,_68_,(,),{,},},Class,__,:,nW_,{,},Class,J7M0f58J_4_,{,},Class,P_,:,_,{,Constructor,(,Y5_,:,Boolean,;,N_,,,__,:,Array,[,String,,,21,],),{,},},<EOF>''',101))

    def test_3344(self):
        self.assertTrue(TestLexer.test('''Class _{$_H(){}Constructor (){}Var B:_o_;}Class C8:_{}Class _{Destructor (){} }Class _t:_zg{Var $6,_,$0jR31XYXP__V:_2V;}''','''Class,_,{,$_H,(,),{,},Constructor,(,),{,},Var,B,:,_o_,;,},Class,C8,:,_,{,},Class,_,{,Destructor,(,),{,},},Class,_t,:,_zg,{,Var,$6,,,_,,,$0jR31XYXP__V,:,_2V,;,},<EOF>''',101))

    def test_3345(self):
        self.assertTrue(TestLexer.test('''Class s{Constructor (){Val v,z9V842_a13:Array [Array [Array [Array [Array [Array [Int ,033],034],3],0X9_6_B_A],0b111011],0B111];} }Class _{_5(){} }''','''Class,s,{,Constructor,(,),{,Val,v,,,z9V842_a13,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,033,],,,034,],,,3,],,,0X96BA,],,,0b111011,],,,0B111,],;,},},Class,_,{,_5,(,),{,},},<EOF>''',101))

    def test_3346(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){}Constructor (_:Array [Int ,67];Ikb:String ;E,_S:String ;K:Boolean ){} }Class x{Destructor (){} }''','''Class,_,{,Destructor,(,),{,},Constructor,(,_,:,Array,[,Int,,,67,],;,Ikb,:,String,;,E,,,_S,:,String,;,K,:,Boolean,),{,},},Class,x,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3347(self):
        self.assertTrue(TestLexer.test('''Class W:H9{}Class x9_7{}Class _{}Class _:_{Constructor (){Break ;Return ;Continue ;}Destructor (){} }Class u{Var w_,$W,__9a8,$1:Array [Float ,0X3D];Destructor (){Continue ;}Constructor (_5,_2:T){} }Class Y:__EH_{Destructor (){} }Class WC_Z__0{Destructor (){Return ;}Constructor (J3:t;u,_,W,h:Array [Boolean ,1_3_8_7_3]){} }''','''Class,W,:,H9,{,},Class,x9_7,{,},Class,_,{,},Class,_,:,_,{,Constructor,(,),{,Break,;,Return,;,Continue,;,},Destructor,(,),{,},},Class,u,{,Var,w_,,,$W,,,__9a8,,,$1,:,Array,[,Float,,,0X3D,],;,Destructor,(,),{,Continue,;,},Constructor,(,_5,,,_2,:,T,),{,},},Class,Y,:,__EH_,{,Destructor,(,),{,},},Class,WC_Z__0,{,Destructor,(,),{,Return,;,},Constructor,(,J3,:,t,;,u,,,_,,,W,,,h,:,Array,[,Boolean,,,13873,],),{,},},<EOF>''',101))

    def test_3348(self):
        self.assertTrue(TestLexer.test('''Class _0_{}Class _:_{Constructor (c,E,_,_:Zx3_38;cO,_,_:Float ;y2:Array [Array [Array [String ,0B110_0],0B1_00],89]){}Val pBV:_;i(Q:Int ;_8,_k,Ox,N_u6,T_:c_){} }Class M_b{}''','''Class,_0_,{,},Class,_,:,_,{,Constructor,(,c,,,E,,,_,,,_,:,Zx3_38,;,cO,,,_,,,_,:,Float,;,y2,:,Array,[,Array,[,Array,[,String,,,0B1100,],,,0B100,],,,89,],),{,},Val,pBV,:,_,;,i,(,Q,:,Int,;,_8,,,_k,,,Ox,,,N_u6,,,T_,:,c_,),{,},},Class,M_b,{,},<EOF>''',101))

    def test_3349(self):
        self.assertTrue(TestLexer.test('''Class _5_{$y2(_,_Q781,__0,_a98,_,b,Z:Array [Float ,0144];f:Float ){Break ;} }Class __{Var $x0,$T:Array [Float ,0b10010];Var $8_7,_:Array [String ,076_406];}Class _{Constructor (){} }''','''Class,_5_,{,$y2,(,_,,,_Q781,,,__0,,,_a98,,,_,,,b,,,Z,:,Array,[,Float,,,0144,],;,f,:,Float,),{,Break,;,},},Class,__,{,Var,$x0,,,$T,:,Array,[,Float,,,0b10010,],;,Var,$8_7,,,_,:,Array,[,String,,,076406,],;,},Class,_,{,Constructor,(,),{,},},<EOF>''',101))

    def test_3350(self):
        self.assertTrue(TestLexer.test('''Class S{Constructor (_R3,_c:_5;Vi:Array [Array [Boolean ,64],0XAA_3]){}O(w,_:_V){Var ge,M:Array [Array [Float ,64],0xB];} }''','''Class,S,{,Constructor,(,_R3,,,_c,:,_5,;,Vi,:,Array,[,Array,[,Boolean,,,64,],,,0XAA3,],),{,},O,(,w,,,_,:,_V,),{,Var,ge,,,M,:,Array,[,Array,[,Float,,,64,],,,0xB,],;,},},<EOF>''',101))

    def test_3351(self):
        self.assertTrue(TestLexer.test('''Class _8Jg7:vl{Var X,r:Boolean ;$_p(_:Array [Array [Array [Array [Array [Array [Float ,0B1],04],01],0x59],0X4_7_6],91_8];X9,_c,c,_,j_:Boolean ){}Var _:Array [Array [Boolean ,0XD3B_41F_5],0b101010];}Class G{}''','''Class,_8Jg7,:,vl,{,Var,X,,,r,:,Boolean,;,$_p,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1,],,,04,],,,01,],,,0x59,],,,0X476,],,,918,],;,X9,,,_c,,,c,,,_,,,j_,:,Boolean,),{,},Var,_,:,Array,[,Array,[,Boolean,,,0XD3B41F5,],,,0b101010,],;,},Class,G,{,},<EOF>''',101))

    def test_3352(self):
        self.assertTrue(TestLexer.test('''Class __:_F{Val $_:Int ;}Class HVj7{Constructor (_,Q5n:Int ){}Val $_,_e,_,qC:Array [Array [Array [Float ,5],0xA2],4_5];}''','''Class,__,:,_F,{,Val,$_,:,Int,;,},Class,HVj7,{,Constructor,(,_,,,Q5n,:,Int,),{,},Val,$_,,,_e,,,_,,,qC,:,Array,[,Array,[,Array,[,Float,,,5,],,,0xA2,],,,45,],;,},<EOF>''',101))

    def test_3353(self):
        self.assertTrue(TestLexer.test('''Class mq{Var S:Array [Boolean ,0b10110];Var T:Array [Boolean ,02_1];Constructor (_l1i9,_,_I,_,_:Float ;G__0,a3:Int ){} }''','''Class,mq,{,Var,S,:,Array,[,Boolean,,,0b10110,],;,Var,T,:,Array,[,Boolean,,,021,],;,Constructor,(,_l1i9,,,_,,,_I,,,_,,,_,:,Float,;,G__0,,,a3,:,Int,),{,},},<EOF>''',101))

    def test_3354(self):
        self.assertTrue(TestLexer.test('''Class __{}Class ZX8{}Class _:_t___E_{}Class _{_(e7l,m5:String ;_3,m_8__:b;g:Int ;_,_R32_,a,__:String ){} }Class _:v{}''','''Class,__,{,},Class,ZX8,{,},Class,_,:,_t___E_,{,},Class,_,{,_,(,e7l,,,m5,:,String,;,_3,,,m_8__,:,b,;,g,:,Int,;,_,,,_R32_,,,a,,,__,:,String,),{,},},Class,_,:,v,{,},<EOF>''',101))

    def test_3355(self):
        self.assertTrue(TestLexer.test('''Class b:_{Constructor (_,J:Boolean ;_:Float ;P:Array [Array [Array [Array [Array [Int ,01_5],0x1F],0b1010000],0X7639_8],43]){ {}Continue ;} }''','''Class,b,:,_,{,Constructor,(,_,,,J,:,Boolean,;,_,:,Float,;,P,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,015,],,,0x1F,],,,0b1010000,],,,0X76398,],,,43,],),{,{,},Continue,;,},},<EOF>''',101))

    def test_3356(self):
        self.assertTrue(TestLexer.test('''Class FkN{Var K,$1_:T_;Constructor (__:Array [Array [Boolean ,0b1],0b1_1];A_C,_4_,__9R,e,_:_;S,U,H9_,p,l:Array [Array [Array [String ,0B1],4],0B1011011]){} }Class _{}''','''Class,FkN,{,Var,K,,,$1_,:,T_,;,Constructor,(,__,:,Array,[,Array,[,Boolean,,,0b1,],,,0b11,],;,A_C,,,_4_,,,__9R,,,e,,,_,:,_,;,S,,,U,,,H9_,,,p,,,l,:,Array,[,Array,[,Array,[,String,,,0B1,],,,4,],,,0B1011011,],),{,},},Class,_,{,},<EOF>''',101))

    def test_3357(self):
        self.assertTrue(TestLexer.test('''Class _{O_j(_:Float ){}Val S,J:Array [Array [Array [Float ,070_7_2_0_3_6],0X18],06_1];Constructor (S:Boolean ){}Val Nv_FM8j4:Array [Boolean ,071];Val _pG_:Array [String ,071];Var $_:Float ;}''','''Class,_,{,O_j,(,_,:,Float,),{,},Val,S,,,J,:,Array,[,Array,[,Array,[,Float,,,07072036,],,,0X18,],,,061,],;,Constructor,(,S,:,Boolean,),{,},Val,Nv_FM8j4,:,Array,[,Boolean,,,071,],;,Val,_pG_,:,Array,[,String,,,071,],;,Var,$_,:,Float,;,},<EOF>''',101))

    def test_3358(self):
        self.assertTrue(TestLexer.test('''Class k:_{}Class _x{$H7(b,__,_:Array [Array [Array [Array [String ,0x4],0b1001110],064],064];_:r_){Val _g1U,__,e:Int ;}Constructor (){}Constructor (_,_,_:_9){Var __1_,m_:Array [String ,0X64];} }''','''Class,k,:,_,{,},Class,_x,{,$H7,(,b,,,__,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0x4,],,,0b1001110,],,,064,],,,064,],;,_,:,r_,),{,Val,_g1U,,,__,,,e,:,Int,;,},Constructor,(,),{,},Constructor,(,_,,,_,,,_,:,_9,),{,Var,__1_,,,m_,:,Array,[,String,,,0X64,],;,},},<EOF>''',101))

    def test_3359(self):
        self.assertTrue(TestLexer.test('''Class _:_L_{_(Tv_:Float ;_0:Float ;M,_8_6:a){}Destructor (){} }Class w66Zl{Destructor (){}Constructor (){} }Class ir:__{$_(Y6y,K,gl:String ){}Val $D,$3_,$B3_:z;}''','''Class,_,:,_L_,{,_,(,Tv_,:,Float,;,_0,:,Float,;,M,,,_8_6,:,a,),{,},Destructor,(,),{,},},Class,w66Zl,{,Destructor,(,),{,},Constructor,(,),{,},},Class,ir,:,__,{,$_,(,Y6y,,,K,,,gl,:,String,),{,},Val,$D,,,$3_,,,$B3_,:,z,;,},<EOF>''',101))

    def test_3360(self):
        self.assertTrue(TestLexer.test('''Class e{Constructor (b_:String ;_5,zCm:Array [String ,0140]){} }Class qJ{Var $3,$AU,$H:Array [Array [String ,59],05_4];}Class _t{}Class hJ{}''','''Class,e,{,Constructor,(,b_,:,String,;,_5,,,zCm,:,Array,[,String,,,0140,],),{,},},Class,qJ,{,Var,$3,,,$AU,,,$H,:,Array,[,Array,[,String,,,59,],,,054,],;,},Class,_t,{,},Class,hJ,{,},<EOF>''',101))

    def test_3361(self):
        self.assertTrue(TestLexer.test('''Class k{}Class K:_54{Val _,$_:t;Var $_,$N:_;Constructor (O_:Array [Float ,0B1010000];_z,_J39:Boolean ){} }Class ____W:_VF{}''','''Class,k,{,},Class,K,:,_54,{,Val,_,,,$_,:,t,;,Var,$_,,,$N,:,_,;,Constructor,(,O_,:,Array,[,Float,,,0B1010000,],;,_z,,,_J39,:,Boolean,),{,},},Class,____W,:,_VF,{,},<EOF>''',101))

    def test_3362(self):
        self.assertTrue(TestLexer.test('''Class r{$_(b,_:String ;__:Array [Boolean ,0105];_:Array [Array [Array [Int ,0105],0b101101],04_3];B:Array [Array [Array [Array [Int ,0XA_A_5_8_C_D],0B10101],7],7];_RJ9:Int ){} }''','''Class,r,{,$_,(,b,,,_,:,String,;,__,:,Array,[,Boolean,,,0105,],;,_,:,Array,[,Array,[,Array,[,Int,,,0105,],,,0b101101,],,,043,],;,B,:,Array,[,Array,[,Array,[,Array,[,Int,,,0XAA58CD,],,,0B10101,],,,7,],,,7,],;,_RJ9,:,Int,),{,},},<EOF>''',101))

    def test_3363(self):
        self.assertTrue(TestLexer.test('''Class ETE_:_2X_{$____4(_:_;Q7:Int ;Z_:Array [Array [String ,0X15],40];__:Array [Array [Array [Array [Float ,0x1A],0b1],0B10],0X8]){} }''','''Class,ETE_,:,_2X_,{,$____4,(,_,:,_,;,Q7,:,Int,;,Z_,:,Array,[,Array,[,String,,,0X15,],,,40,],;,__,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x1A,],,,0b1,],,,0B10,],,,0X8,],),{,},},<EOF>''',101))

    def test_3364(self):
        self.assertTrue(TestLexer.test('''Class U_{}Class J_:u{Destructor (){}Var $__,$_X,$7:_;S(){Continue ;}Destructor (){} }Class _:_{Constructor (){Continue ;} }''','''Class,U_,{,},Class,J_,:,u,{,Destructor,(,),{,},Var,$__,,,$_X,,,$7,:,_,;,S,(,),{,Continue,;,},Destructor,(,),{,},},Class,_,:,_,{,Constructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_3365(self):
        self.assertTrue(TestLexer.test('''Class _:_923_{Val $_,$c,$43,$_,_,_8:Boolean ;}Class eA{}Class _G___:_{Var _Y,$_:Array [Array [String ,077],0X5_0];}Class _:__X{}Class i_{Destructor (){}q27(d,I,__W,_0t51:Array [Array [Boolean ,077],07_1]){} }Class Y{}Class Z:D{}Class l:V{Var $_:Array [Array [Float ,077],0B1001];D7(___sv_:x_93d;_,_2:q){} }''','''Class,_,:,_923_,{,Val,$_,,,$c,,,$43,,,$_,,,_,,,_8,:,Boolean,;,},Class,eA,{,},Class,_G___,:,_,{,Var,_Y,,,$_,:,Array,[,Array,[,String,,,077,],,,0X50,],;,},Class,_,:,__X,{,},Class,i_,{,Destructor,(,),{,},q27,(,d,,,I,,,__W,,,_0t51,:,Array,[,Array,[,Boolean,,,077,],,,071,],),{,},},Class,Y,{,},Class,Z,:,D,{,},Class,l,:,V,{,Var,$_,:,Array,[,Array,[,Float,,,077,],,,0B1001,],;,D7,(,___sv_,:,x_93d,;,_,,,_2,:,q,),{,},},<EOF>''',101))

    def test_3366(self):
        self.assertTrue(TestLexer.test('''Class _:_{Var $An:Yg_;}Class A_c{}Class _:o3{}Class _{$y(_2,R,n,__:Array [String ,0B10];T:Boolean ){Val _,g,_:_;Continue ;} }''','''Class,_,:,_,{,Var,$An,:,Yg_,;,},Class,A_c,{,},Class,_,:,o3,{,},Class,_,{,$y,(,_2,,,R,,,n,,,__,:,Array,[,String,,,0B10,],;,T,:,Boolean,),{,Val,_,,,g,,,_,:,_,;,Continue,;,},},<EOF>''',101))

    def test_3367(self):
        self.assertTrue(TestLexer.test('''Class N{m(_g:__2){Break ;Break ;Break ;Continue ;b::$_i00();}$7dF(_p7B:Array [Array [Int ,0b111111],2_5_3];S:Boolean ){} }''','''Class,N,{,m,(,_g,:,__2,),{,Break,;,Break,;,Break,;,Continue,;,b,::,$_i00,(,),;,},$7dF,(,_p7B,:,Array,[,Array,[,Int,,,0b111111,],,,253,],;,S,:,Boolean,),{,},},<EOF>''',101))

    def test_3368(self):
        self.assertTrue(TestLexer.test('''Class F__:_D8{}Class _:SW{Val $p1,_:Array [Array [Array [Boolean ,02],83],0x6];Val n:Array [String ,3];Var $y_,_:Array [Array [Array [Int ,0XE_3F7C],83],0X993];}Class _{}''','''Class,F__,:,_D8,{,},Class,_,:,SW,{,Val,$p1,,,_,:,Array,[,Array,[,Array,[,Boolean,,,02,],,,83,],,,0x6,],;,Val,n,:,Array,[,String,,,3,],;,Var,$y_,,,_,:,Array,[,Array,[,Array,[,Int,,,0XE3F7C,],,,83,],,,0X993,],;,},Class,_,{,},<EOF>''',101))

    def test_3369(self):
        self.assertTrue(TestLexer.test('''Class c:l_4{}Class __{$9r(A,___:BgfPp4;L__:Int ;Rg:Array [Float ,05];_,___x__2:Array [String ,0620_4_2_4]){Break ;}Val K:w_;}''','''Class,c,:,l_4,{,},Class,__,{,$9r,(,A,,,___,:,BgfPp4,;,L__,:,Int,;,Rg,:,Array,[,Float,,,05,],;,_,,,___x__2,:,Array,[,String,,,0620424,],),{,Break,;,},Val,K,:,w_,;,},<EOF>''',101))

    def test_3370(self):
        self.assertTrue(TestLexer.test('''Class _5{$_q(Y7,N:Array [Float ,0x6];_:Array [Array [String ,0B1_0],0123];M:Int ;d:Array [Float ,0b1_0_1_1_11]){}Constructor (A:_x;ip7_:Float ;c:Array [Float ,0X9]){ {} }}Class F{}''','''Class,_5,{,$_q,(,Y7,,,N,:,Array,[,Float,,,0x6,],;,_,:,Array,[,Array,[,String,,,0B10,],,,0123,],;,M,:,Int,;,d,:,Array,[,Float,,,0b101111,],),{,},Constructor,(,A,:,_x,;,ip7_,:,Float,;,c,:,Array,[,Float,,,0X9,],),{,{,},},},Class,F,{,},<EOF>''',101))

    def test_3371(self):
        self.assertTrue(TestLexer.test('''Class q:__1{Constructor (){} }Class d{Var BF:Array [Boolean ,0b1100010];$_(){} }Class c:D_5{Val E6g:Array [Array [String ,0B1_0],0x1_D];Var $wr2:Boolean ;}''','''Class,q,:,__1,{,Constructor,(,),{,},},Class,d,{,Var,BF,:,Array,[,Boolean,,,0b1100010,],;,$_,(,),{,},},Class,c,:,D_5,{,Val,E6g,:,Array,[,Array,[,String,,,0B10,],,,0x1D,],;,Var,$wr2,:,Boolean,;,},<EOF>''',101))

    def test_3372(self):
        self.assertTrue(TestLexer.test('''Class _:x_{}Class w:y{}Class _{Constructor (_:String ;_kl,_,___:Array [Array [Boolean ,0x31],04];H,_:Float ;j9z__,_:e_;k:String ){} }Class _{}''','''Class,_,:,x_,{,},Class,w,:,y,{,},Class,_,{,Constructor,(,_,:,String,;,_kl,,,_,,,___,:,Array,[,Array,[,Boolean,,,0x31,],,,04,],;,H,,,_,:,Float,;,j9z__,,,_,:,e_,;,k,:,String,),{,},},Class,_,{,},<EOF>''',101))

    def test_3373(self):
        self.assertTrue(TestLexer.test('''Class r5I{$Kb(i:Array [Float ,01_7];_4:Array [Boolean ,0B100];G:Int ){} }Class G:yry{$_uW(){} }Class _{}Class q:_{Destructor (){} }''','''Class,r5I,{,$Kb,(,i,:,Array,[,Float,,,017,],;,_4,:,Array,[,Boolean,,,0B100,],;,G,:,Int,),{,},},Class,G,:,yry,{,$_uW,(,),{,},},Class,_,{,},Class,q,:,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3374(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){} }Class _Xb5:_{$11_W(T,nl_06,Pg2:Array [Array [Int ,0b1011100],02_6];w:Array [Boolean ,02];_:i;__8P,Z:Array [Array [Array [Array [String ,0B1001010],0x26],0B1],056]){ {} }}Class X{}''','''Class,_,{,Destructor,(,),{,},},Class,_Xb5,:,_,{,$11_W,(,T,,,nl_06,,,Pg2,:,Array,[,Array,[,Int,,,0b1011100,],,,026,],;,w,:,Array,[,Boolean,,,02,],;,_,:,i,;,__8P,,,Z,:,Array,[,Array,[,Array,[,Array,[,String,,,0B1001010,],,,0x26,],,,0B1,],,,056,],),{,{,},},},Class,X,{,},<EOF>''',101))

    def test_3375(self):
        self.assertTrue(TestLexer.test('''Class ___x092:_{Constructor (){}$_(y,_,_:Array [Array [String ,073],0X3_E9];s_,E,_yI_,_N__D:Array [Array [Int ,072],77];_9,b:Array [Array [Int ,0b1],0x7]){} }''','''Class,___x092,:,_,{,Constructor,(,),{,},$_,(,y,,,_,,,_,:,Array,[,Array,[,String,,,073,],,,0X3E9,],;,s_,,,E,,,_yI_,,,_N__D,:,Array,[,Array,[,Int,,,072,],,,77,],;,_9,,,b,:,Array,[,Array,[,Int,,,0b1,],,,0x7,],),{,},},<EOF>''',101))

    def test_3376(self):
        self.assertTrue(TestLexer.test('''Class w7:_8{$_(Z,c:Float ){}Constructor (_,_,_:String ;_:String ){Var _a___:Array [Array [Array [Float ,0x2F],0123],0x9_4_B];_2::$_6Q();} }''','''Class,w7,:,_8,{,$_,(,Z,,,c,:,Float,),{,},Constructor,(,_,,,_,,,_,:,String,;,_,:,String,),{,Var,_a___,:,Array,[,Array,[,Array,[,Float,,,0x2F,],,,0123,],,,0x94B,],;,_2,::,$_6Q,(,),;,},},<EOF>''',101))

    def test_3377(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){Continue ;} }Class _:q_{Var _U9,b0:_;Destructor (){}Constructor (o,r96,A,_4,W_v_o9,_,_:Array [Array [Array [Float ,0B1_1_0],073],521]){} }''','''Class,_,{,Destructor,(,),{,Continue,;,},},Class,_,:,q_,{,Var,_U9,,,b0,:,_,;,Destructor,(,),{,},Constructor,(,o,,,r96,,,A,,,_4,,,W_v_o9,,,_,,,_,:,Array,[,Array,[,Array,[,Float,,,0B110,],,,073,],,,521,],),{,},},<EOF>''',101))

    def test_3378(self):
        self.assertTrue(TestLexer.test('''Class N{}Class U{Constructor (e,__L__,C2:Array [Boolean ,54];_yr,_3:Array [Array [Array [Array [Float ,070],02_2],0B1],54]){Break ;} }''','''Class,N,{,},Class,U,{,Constructor,(,e,,,__L__,,,C2,:,Array,[,Boolean,,,54,],;,_yr,,,_3,:,Array,[,Array,[,Array,[,Array,[,Float,,,070,],,,022,],,,0B1,],,,54,],),{,Break,;,},},<EOF>''',101))

    def test_3379(self):
        self.assertTrue(TestLexer.test('''Class _6:_{}Class P{}Class __k4{Val $_:Array [Array [Array [Int ,0b1_1],0472],0XC];Var $__,t:Array [String ,3];}''','''Class,_6,:,_,{,},Class,P,{,},Class,__k4,{,Val,$_,:,Array,[,Array,[,Array,[,Int,,,0b11,],,,0472,],,,0XC,],;,Var,$__,,,t,:,Array,[,String,,,3,],;,},<EOF>''',101))

    def test_3380(self):
        self.assertTrue(TestLexer.test('''Class _0Wb:_2Y{}Class P:__e{Constructor (Pi,p:Int ;W_1bu__,_v15,A3,l,_2,_:Array [Array [String ,0X8],0B101];G_,l,___D:Boolean ;r__6,J_1_,_,_9,M:Array [Int ,19];Y20_:Int ){} }''','''Class,_0Wb,:,_2Y,{,},Class,P,:,__e,{,Constructor,(,Pi,,,p,:,Int,;,W_1bu__,,,_v15,,,A3,,,l,,,_2,,,_,:,Array,[,Array,[,String,,,0X8,],,,0B101,],;,G_,,,l,,,___D,:,Boolean,;,r__6,,,J_1_,,,_,,,_9,,,M,:,Array,[,Int,,,19,],;,Y20_,:,Int,),{,},},<EOF>''',101))

    def test_3381(self):
        self.assertTrue(TestLexer.test('''Class GOi00_{}Class __{}Class L8:d7{}Class _6D:_{}Class bO:_{Constructor (X_4_9:_f;_:_5){}Constructor (_Z,Y,E2:Boolean ;w:Float ;_d,_,_d_:Array [Array [Array [Array [Boolean ,52],0X37],5],52];Q:_0cv){Continue ;} }''','''Class,GOi00_,{,},Class,__,{,},Class,L8,:,d7,{,},Class,_6D,:,_,{,},Class,bO,:,_,{,Constructor,(,X_4_9,:,_f,;,_,:,_5,),{,},Constructor,(,_Z,,,Y,,,E2,:,Boolean,;,w,:,Float,;,_d,,,_,,,_d_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,52,],,,0X37,],,,5,],,,52,],;,Q,:,_0cv,),{,Continue,;,},},<EOF>''',101))

    def test_3382(self):
        self.assertTrue(TestLexer.test('''Class O:s__{Destructor (){}Val w,$_1_4m,$6_,$__,$_:Float ;}Class _6D{$_(F:String ){}Val $2:k;_B(_:Array [Array [Array [Array [Boolean ,03],0445],01],0b111111];s6__:_){} }''','''Class,O,:,s__,{,Destructor,(,),{,},Val,w,,,$_1_4m,,,$6_,,,$__,,,$_,:,Float,;,},Class,_6D,{,$_,(,F,:,String,),{,},Val,$2,:,k,;,_B,(,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,03,],,,0445,],,,01,],,,0b111111,],;,s6__,:,_,),{,},},<EOF>''',101))

    def test_3383(self):
        self.assertTrue(TestLexer.test('''Class sn:c_{Val _:Boolean ;Var _w,W_,$Kf_j:String ;}Class y2:_8{}Class i:I1{Var K9__4,_1,$_:_;Constructor (_p_:Array [Array [String ,488],0B1];_l,_F5:Array [Array [Array [Array [Boolean ,0X8_B],0B1000110],36],0135]){} }''','''Class,sn,:,c_,{,Val,_,:,Boolean,;,Var,_w,,,W_,,,$Kf_j,:,String,;,},Class,y2,:,_8,{,},Class,i,:,I1,{,Var,K9__4,,,_1,,,$_,:,_,;,Constructor,(,_p_,:,Array,[,Array,[,String,,,488,],,,0B1,],;,_l,,,_F5,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X8B,],,,0B1000110,],,,36,],,,0135,],),{,},},<EOF>''',101))

    def test_3384(self):
        self.assertTrue(TestLexer.test('''Class A_:k2{}Class o{Val $i,$0:Array [Int ,0B110011];Var m,$3,$Uq,P,l:Array [Boolean ,0X38];}Class T{Constructor (M8:___;___,_7:Array [String ,70];e:M31;_:String ){}Destructor (){}Val $88_,$_3V,c:Array [Array [Array [Int ,0112],0xC],70];Destructor (){}$d(){} }Class eT{}''','''Class,A_,:,k2,{,},Class,o,{,Val,$i,,,$0,:,Array,[,Int,,,0B110011,],;,Var,m,,,$3,,,$Uq,,,P,,,l,:,Array,[,Boolean,,,0X38,],;,},Class,T,{,Constructor,(,M8,:,___,;,___,,,_7,:,Array,[,String,,,70,],;,e,:,M31,;,_,:,String,),{,},Destructor,(,),{,},Val,$88_,,,$_3V,,,c,:,Array,[,Array,[,Array,[,Int,,,0112,],,,0xC,],,,70,],;,Destructor,(,),{,},$d,(,),{,},},Class,eT,{,},<EOF>''',101))

    def test_3385(self):
        self.assertTrue(TestLexer.test('''Class OQ9_{e_(d:Boolean ){}Var $m__:h;Constructor (__:Array [Int ,02]){} }Class _{Var _X2_,r,Y_n__,$c2,$1,__i2_:Array [Float ,0B1000011];Destructor (){} }''','''Class,OQ9_,{,e_,(,d,:,Boolean,),{,},Var,$m__,:,h,;,Constructor,(,__,:,Array,[,Int,,,02,],),{,},},Class,_,{,Var,_X2_,,,r,,,Y_n__,,,$c2,,,$1,,,__i2_,:,Array,[,Float,,,0B1000011,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_3386(self):
        self.assertTrue(TestLexer.test('''Class q8:_{}Class _:_{Val $__,_,Y:Array [Array [Array [Boolean ,0b11111],0X18],06];Var kf,P:h;}Class _3U{Var $73:_8__;}Class Z_{}''','''Class,q8,:,_,{,},Class,_,:,_,{,Val,$__,,,_,,,Y,:,Array,[,Array,[,Array,[,Boolean,,,0b11111,],,,0X18,],,,06,],;,Var,kf,,,P,:,h,;,},Class,_3U,{,Var,$73,:,_8__,;,},Class,Z_,{,},<EOF>''',101))

    def test_3387(self):
        self.assertTrue(TestLexer.test('''Class ___:_9{}Class Q_T_:_{}Class b{Var __:M;}Class _{Val $a:w_;Var $7,$_,$7v,W:Array [Array [Array [String ,0B101101],0b11111],0x6];_17__(br2:Array [Boolean ,0X6_C9]){ {}Break ;} }''','''Class,___,:,_9,{,},Class,Q_T_,:,_,{,},Class,b,{,Var,__,:,M,;,},Class,_,{,Val,$a,:,w_,;,Var,$7,,,$_,,,$7v,,,W,:,Array,[,Array,[,Array,[,String,,,0B101101,],,,0b11111,],,,0x6,],;,_17__,(,br2,:,Array,[,Boolean,,,0X6C9,],),{,{,},Break,;,},},<EOF>''',101))

    def test_3388(self):
        self.assertTrue(TestLexer.test('''Class _Sr{Val $5:Array [Int ,0B1];Var _,$2,_1:a9;Val P_,$_j3_,MJ,_,$88,$06_,eo,$Z:Float ;__(_91,y:String ;__:String ){}Constructor (s:Boolean ){} }Class V{}''','''Class,_Sr,{,Val,$5,:,Array,[,Int,,,0B1,],;,Var,_,,,$2,,,_1,:,a9,;,Val,P_,,,$_j3_,,,MJ,,,_,,,$88,,,$06_,,,eo,,,$Z,:,Float,;,__,(,_91,,,y,:,String,;,__,:,String,),{,},Constructor,(,s,:,Boolean,),{,},},Class,V,{,},<EOF>''',101))

    def test_3389(self):
        self.assertTrue(TestLexer.test('''Class jxH51{Val P,I__1_P:Array [Boolean ,035];}Class G{$_w1_(C,_,gm,__Q7:__8){}Val _:EF;Destructor (){v::$_dC_();}Var $_:String ;}''','''Class,jxH51,{,Val,P,,,I__1_P,:,Array,[,Boolean,,,035,],;,},Class,G,{,$_w1_,(,C,,,_,,,gm,,,__Q7,:,__8,),{,},Val,_,:,EF,;,Destructor,(,),{,v,::,$_dC_,(,),;,},Var,$_,:,String,;,},<EOF>''',101))

    def test_3390(self):
        self.assertTrue(TestLexer.test('''Class __{Destructor (){}Var h:Array [String ,071];Val $_6:Array [Float ,0x66];}Class vU_2:yN{Var _,$D,$_sT,Z:String ;}Class _83{Val _v3_:___;}''','''Class,__,{,Destructor,(,),{,},Var,h,:,Array,[,String,,,071,],;,Val,$_6,:,Array,[,Float,,,0x66,],;,},Class,vU_2,:,yN,{,Var,_,,,$D,,,$_sT,,,Z,:,String,;,},Class,_83,{,Val,_v3_,:,___,;,},<EOF>''',101))

    def test_3391(self):
        self.assertTrue(TestLexer.test('''Class XR:_{Constructor (){}Constructor (Y_,_:Array [Array [Array [Int ,057],0xF_3_82],057];_:Boolean ;R5:Boolean ;V:String ){}Var $67:String ;}''','''Class,XR,:,_,{,Constructor,(,),{,},Constructor,(,Y_,,,_,:,Array,[,Array,[,Array,[,Int,,,057,],,,0xF382,],,,057,],;,_,:,Boolean,;,R5,:,Boolean,;,V,:,String,),{,},Var,$67,:,String,;,},<EOF>''',101))

    def test_3392(self):
        self.assertTrue(TestLexer.test('''Class s{Var _:Z_;Var __:t;Val $2c4,$__42,$0,_,$7_,$_G,o_:Array [Array [Array [Array [String ,0b1100011],06],0X4],11];}''','''Class,s,{,Var,_,:,Z_,;,Var,__,:,t,;,Val,$2c4,,,$__42,,,$0,,,_,,,$7_,,,$_G,,,o_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1100011,],,,06,],,,0X4,],,,11,],;,},<EOF>''',101))

    def test_3393(self):
        self.assertTrue(TestLexer.test('''Class _y{T(z_5:b;GRb,RI,wS:Float ){} }Class _W9:p_{}Class __{Constructor (_:O;W,D_,V6:Array [Array [Float ,0b10010],8_6];n,_:__){} }Class Li7_:_A{Var $47Z6_5M:Array [Array [Array [Array [Boolean ,0X2],0b10010],033],100];}''','''Class,_y,{,T,(,z_5,:,b,;,GRb,,,RI,,,wS,:,Float,),{,},},Class,_W9,:,p_,{,},Class,__,{,Constructor,(,_,:,O,;,W,,,D_,,,V6,:,Array,[,Array,[,Float,,,0b10010,],,,86,],;,n,,,_,:,__,),{,},},Class,Li7_,:,_A,{,Var,$47Z6_5M,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X2,],,,0b10010,],,,033,],,,100,],;,},<EOF>''',101))

    def test_3394(self):
        self.assertTrue(TestLexer.test('''Class c:_{}Class O{Destructor (){Return ;}Constructor (_,_,d:Array [Array [String ,05],16]){__::$0__8W();Break ;} }''','''Class,c,:,_,{,},Class,O,{,Destructor,(,),{,Return,;,},Constructor,(,_,,,_,,,d,:,Array,[,Array,[,String,,,05,],,,16,],),{,__,::,$0__8W,(,),;,Break,;,},},<EOF>''',101))

    def test_3395(self):
        self.assertTrue(TestLexer.test('''Class w:_2Z{Constructor (__:Array [Array [Float ,0673],0b11];__,E:L_A){Val y__P,k,O7,_,_,_,__:Array [Array [Int ,0x1],0B1_01_10_1111];} }Class L:_{}Class k2_{Constructor (){} }Class _:K5{}''','''Class,w,:,_2Z,{,Constructor,(,__,:,Array,[,Array,[,Float,,,0673,],,,0b11,],;,__,,,E,:,L_A,),{,Val,y__P,,,k,,,O7,,,_,,,_,,,_,,,__,:,Array,[,Array,[,Int,,,0x1,],,,0B101101111,],;,},},Class,L,:,_,{,},Class,k2_,{,Constructor,(,),{,},},Class,_,:,K5,{,},<EOF>''',101))

    def test_3396(self):
        self.assertTrue(TestLexer.test('''Class u:q{}Class _0v:_G{_(G58_0_yo:Array [Int ,5_93]){} }Class i0:y{Val ju_,_,g_:Float ;Constructor (){} }Class ___{}''','''Class,u,:,q,{,},Class,_0v,:,_G,{,_,(,G58_0_yo,:,Array,[,Int,,,593,],),{,},},Class,i0,:,y,{,Val,ju_,,,_,,,g_,:,Float,;,Constructor,(,),{,},},Class,___,{,},<EOF>''',101))

    def test_3397(self):
        self.assertTrue(TestLexer.test('''Class G:G{}Class _9:E8{}Class K{Constructor (_G:_5T;_U2,__i2_:e;_3_6,uN,iJ_N:Array [Array [Float ,55],0B1100100]){} }Class k_P{}''','''Class,G,:,G,{,},Class,_9,:,E8,{,},Class,K,{,Constructor,(,_G,:,_5T,;,_U2,,,__i2_,:,e,;,_3_6,,,uN,,,iJ_N,:,Array,[,Array,[,Float,,,55,],,,0B1100100,],),{,},},Class,k_P,{,},<EOF>''',101))

    def test_3398(self):
        self.assertTrue(TestLexer.test('''Class LV{Var __2lt,$5o6,$4:String ;}Class E{Constructor (_:Array [Int ,027];_:Float ;_Zw_:Int ;_5___,_:Array [Boolean ,03]){}Constructor (_22:String ){} }Class __:Ib{Destructor (){Continue ;} }''','''Class,LV,{,Var,__2lt,,,$5o6,,,$4,:,String,;,},Class,E,{,Constructor,(,_,:,Array,[,Int,,,027,],;,_,:,Float,;,_Zw_,:,Int,;,_5___,,,_,:,Array,[,Boolean,,,03,],),{,},Constructor,(,_22,:,String,),{,},},Class,__,:,Ib,{,Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_3399(self):
        self.assertTrue(TestLexer.test('''Class DJ8:_b8W_{Var k0,b8_4,__,o_H,$_:Array [Array [Array [String ,0X33],0B1],0b1001000];}Class __TW_2:__{Var _:_;}Class ji4{}''','''Class,DJ8,:,_b8W_,{,Var,k0,,,b8_4,,,__,,,o_H,,,$_,:,Array,[,Array,[,Array,[,String,,,0X33,],,,0B1,],,,0b1001000,],;,},Class,__TW_2,:,__,{,Var,_,:,_,;,},Class,ji4,{,},<EOF>''',101))

    def test_3400(self):
        self.assertTrue(TestLexer.test('''Class y__7Xe:S3{Var K,$_5v2_,y:Array [Int ,017];Constructor (__0,u288,Qt:Array [Array [String ,0XF],8];j1:Array [Array [Float ,91],07];B_Gh:String ;_:B){} }Class _{}Class _{}''','''Class,y__7Xe,:,S3,{,Var,K,,,$_5v2_,,,y,:,Array,[,Int,,,017,],;,Constructor,(,__0,,,u288,,,Qt,:,Array,[,Array,[,String,,,0XF,],,,8,],;,j1,:,Array,[,Array,[,Float,,,91,],,,07,],;,B_Gh,:,String,;,_,:,B,),{,},},Class,_,{,},Class,_,{,},<EOF>''',101))

    def test_3401(self):
        self.assertTrue(TestLexer.test('''Class g{$6v(kc:Float ){Break ;}$O(__Is,l8:_;A_:Int ;jN9:Float ;_,q99,TEI,s,___:Array [Array [Array [Float ,0x1D],2],0b10010]){Break ;}Destructor (){} }Class Mv_u:W{}Class _I{Var $39U,$_,m,$4,__t_:Array [Float ,06];}''','''Class,g,{,$6v,(,kc,:,Float,),{,Break,;,},$O,(,__Is,,,l8,:,_,;,A_,:,Int,;,jN9,:,Float,;,_,,,q99,,,TEI,,,s,,,___,:,Array,[,Array,[,Array,[,Float,,,0x1D,],,,2,],,,0b10010,],),{,Break,;,},Destructor,(,),{,},},Class,Mv_u,:,W,{,},Class,_I,{,Var,$39U,,,$_,,,m,,,$4,,,__t_,:,Array,[,Float,,,06,],;,},<EOF>''',101))

    def test_3402(self):
        self.assertTrue(TestLexer.test('''Class r{Constructor (){}Val $4:o;$_(uX__,_,u_u_:Array [Boolean ,07_4_0]){} }Class _4__50W_T:_J{}Class v:__{_(R_U_,_29:Array [Int ,0b110111];_:Array [Int ,0x26]){}Constructor (_:Array [Int ,0b110111]){}Val $_:k;}Class n{}Class J:dX{}''','''Class,r,{,Constructor,(,),{,},Val,$4,:,o,;,$_,(,uX__,,,_,,,u_u_,:,Array,[,Boolean,,,0740,],),{,},},Class,_4__50W_T,:,_J,{,},Class,v,:,__,{,_,(,R_U_,,,_29,:,Array,[,Int,,,0b110111,],;,_,:,Array,[,Int,,,0x26,],),{,},Constructor,(,_,:,Array,[,Int,,,0b110111,],),{,},Val,$_,:,k,;,},Class,n,{,},Class,J,:,dX,{,},<EOF>''',101))

    def test_3403(self):
        self.assertTrue(TestLexer.test('''Class _4{}Class v{Constructor (z:Boolean ;x,_:_){}Constructor (){} }Class _:N1U{Val $_,$0,$_Q:I2U;Destructor (){Break ;Continue ;Continue ;Break ;} }Class k_X{Constructor (l7_,H8,_:Float ){} }''','''Class,_4,{,},Class,v,{,Constructor,(,z,:,Boolean,;,x,,,_,:,_,),{,},Constructor,(,),{,},},Class,_,:,N1U,{,Val,$_,,,$0,,,$_Q,:,I2U,;,Destructor,(,),{,Break,;,Continue,;,Continue,;,Break,;,},},Class,k_X,{,Constructor,(,l7_,,,H8,,,_,:,Float,),{,},},<EOF>''',101))

    def test_3404(self):
        self.assertTrue(TestLexer.test('''Class R5:a_8_7A29{}Class _6dthFz_0{Var $A,$uhc99:Array [Boolean ,034];}Class _{Val $0t:String ;}Class D5:_{}Class X:_{}Class sC_ta_{}Class o:z{}Class _:_k{Constructor (){_2V::$__();}Var $_,_o00:_0;}''','''Class,R5,:,a_8_7A29,{,},Class,_6dthFz_0,{,Var,$A,,,$uhc99,:,Array,[,Boolean,,,034,],;,},Class,_,{,Val,$0t,:,String,;,},Class,D5,:,_,{,},Class,X,:,_,{,},Class,sC_ta_,{,},Class,o,:,z,{,},Class,_,:,_k,{,Constructor,(,),{,_2V,::,$__,(,),;,},Var,$_,,,_o00,:,_0,;,},<EOF>''',101))

    def test_3405(self):
        self.assertTrue(TestLexer.test('''Class _:s5{}Class s_:_{Var $4_:Array [Array [Int ,79],94];Destructor (){}Constructor (_F,W3:Array [Float ,0X3_0_8_F];r:z_r){Return ;} }Class __E:h{}Class t_:__e{}''','''Class,_,:,s5,{,},Class,s_,:,_,{,Var,$4_,:,Array,[,Array,[,Int,,,79,],,,94,],;,Destructor,(,),{,},Constructor,(,_F,,,W3,:,Array,[,Float,,,0X308F,],;,r,:,z_r,),{,Return,;,},},Class,__E,:,h,{,},Class,t_,:,__e,{,},<EOF>''',101))

    def test_3406(self):
        self.assertTrue(TestLexer.test('''Class i_1{}Class D:u_Vo1{}Class P7:_{}Class R{Val $2:Array [Array [Array [String ,020],05],0B1];}Class _8u_:G1gDX{}''','''Class,i_1,{,},Class,D,:,u_Vo1,{,},Class,P7,:,_,{,},Class,R,{,Val,$2,:,Array,[,Array,[,Array,[,String,,,020,],,,05,],,,0B1,],;,},Class,_8u_,:,G1gDX,{,},<EOF>''',101))

    def test_3407(self):
        self.assertTrue(TestLexer.test('''Class S:C__{Val S:Array [Array [Float ,0b1011001],04]=!_9__0::$_;Constructor (tbmTw7:Array [Array [Array [String ,0B1_1],100],2];Y_8_5ul,_,_:Array [Float ,04];__,_4:Array [Boolean ,100]){} }''','''Class,S,:,C__,{,Val,S,:,Array,[,Array,[,Float,,,0b1011001,],,,04,],=,!,_9__0,::,$_,;,Constructor,(,tbmTw7,:,Array,[,Array,[,Array,[,String,,,0B11,],,,100,],,,2,],;,Y_8_5ul,,,_,,,_,:,Array,[,Float,,,04,],;,__,,,_4,:,Array,[,Boolean,,,100,],),{,},},<EOF>''',101))

    def test_3408(self):
        self.assertTrue(TestLexer.test('''Class L0{Var $H,_kN,$_P,_31,Zf6,$_0,$_boa8_4,L,x_:Int ;Val _7,j,nC,_,$_Z_,$K:K;$7(___,G__:Float ;lG5,___,L,_6,L_9ZbL2,_,j,_:Float ;lU:String ;__,_,o:Array [Boolean ,0X63]){}Destructor (){}Val $__w,_6,$_k:Array [Array [Boolean ,07],0x2];i__(){} }''','''Class,L0,{,Var,$H,,,_kN,,,$_P,,,_31,,,Zf6,,,$_0,,,$_boa8_4,,,L,,,x_,:,Int,;,Val,_7,,,j,,,nC,,,_,,,$_Z_,,,$K,:,K,;,$7,(,___,,,G__,:,Float,;,lG5,,,___,,,L,,,_6,,,L_9ZbL2,,,_,,,j,,,_,:,Float,;,lU,:,String,;,__,,,_,,,o,:,Array,[,Boolean,,,0X63,],),{,},Destructor,(,),{,},Val,$__w,,,_6,,,$_k,:,Array,[,Array,[,Boolean,,,07,],,,0x2,],;,i__,(,),{,},},<EOF>''',101))

    def test_3409(self):
        self.assertTrue(TestLexer.test('''Class _{_(_:Array [Float ,93]){}I(_7:Array [Boolean ,0X8]){Continue ;}Var c,$3,r0E_,$3:Array [Array [Array [Array [Float ,056],0XAA_7],0B100010],0B111_01_0];}''','''Class,_,{,_,(,_,:,Array,[,Float,,,93,],),{,},I,(,_7,:,Array,[,Boolean,,,0X8,],),{,Continue,;,},Var,c,,,$3,,,r0E_,,,$3,:,Array,[,Array,[,Array,[,Array,[,Float,,,056,],,,0XAA7,],,,0B100010,],,,0B111010,],;,},<EOF>''',101))

    def test_3410(self):
        self.assertTrue(TestLexer.test('''Class _:_{$5(__,E7,_7Vu,s:_;_,x,_:Array [Array [Array [Int ,0xDA],1_6],0xCC8_E6];w:Float ){ {} }$T_n4_jR_(m:Array [Array [Boolean ,8401],121_2_4_6_6]){} }''','''Class,_,:,_,{,$5,(,__,,,E7,,,_7Vu,,,s,:,_,;,_,,,x,,,_,:,Array,[,Array,[,Array,[,Int,,,0xDA,],,,16,],,,0xCC8E6,],;,w,:,Float,),{,{,},},$T_n4_jR_,(,m,:,Array,[,Array,[,Boolean,,,8401,],,,1212466,],),{,},},<EOF>''',101))

    def test_3411(self):
        self.assertTrue(TestLexer.test('''Class _4:y{Val h9:Array [Array [Array [Array [Array [Int ,0X48],9],2],44],060_2];Var ___,S:Int ;}Class Qs{q4(){Return ;} }Class _r_{}''','''Class,_4,:,y,{,Val,h9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X48,],,,9,],,,2,],,,44,],,,0602,],;,Var,___,,,S,:,Int,;,},Class,Qs,{,q4,(,),{,Return,;,},},Class,_r_,{,},<EOF>''',101))

    def test_3412(self):
        self.assertTrue(TestLexer.test('''Class T2:P{Constructor (){}Val $_y,$DI,__:String ;Constructor (_Vl:_C){} }Class T:X5__{Val ZtX:Array [Array [String ,0B110000],2];$___(){} }''','''Class,T2,:,P,{,Constructor,(,),{,},Val,$_y,,,$DI,,,__,:,String,;,Constructor,(,_Vl,:,_C,),{,},},Class,T,:,X5__,{,Val,ZtX,:,Array,[,Array,[,String,,,0B110000,],,,2,],;,$___,(,),{,},},<EOF>''',101))

    def test_3413(self):
        self.assertTrue(TestLexer.test('''Class L:_02{}Class cE_w:_1{Constructor (_,R_:L_;T7,_0r7,uB,d_:Array [Int ,0142];__:___){}Destructor (){Continue ;} }''','''Class,L,:,_02,{,},Class,cE_w,:,_1,{,Constructor,(,_,,,R_,:,L_,;,T7,,,_0r7,,,uB,,,d_,:,Array,[,Int,,,0142,],;,__,:,___,),{,},Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_3414(self):
        self.assertTrue(TestLexer.test('''Class l5F5oi:r{Val d_,$G,_:Array [Float ,0X5];}Class t:f{}Class _:y_{}Class st:f_{Destructor (){} }Class _{}Class _tJV{}Class _{}''','''Class,l5F5oi,:,r,{,Val,d_,,,$G,,,_,:,Array,[,Float,,,0X5,],;,},Class,t,:,f,{,},Class,_,:,y_,{,},Class,st,:,f_,{,Destructor,(,),{,},},Class,_,{,},Class,_tJV,{,},Class,_,{,},<EOF>''',101))

    def test_3415(self):
        self.assertTrue(TestLexer.test('''Class __:i{Constructor (_d___:Int ;Glg7:String ){Val Oh:Array [Array [Array [Array [Array [Array [Array [String ,0X47_1_0],52],58],075],0b10011],02],0x2E5_44_D];} }Class X:C{}''','''Class,__,:,i,{,Constructor,(,_d___,:,Int,;,Glg7,:,String,),{,Val,Oh,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X4710,],,,52,],,,58,],,,075,],,,0b10011,],,,02,],,,0x2E544D,],;,},},Class,X,:,C,{,},<EOF>''',101))

    def test_3416(self):
        self.assertTrue(TestLexer.test('''Class _:E_{$C_p(_3:Float ;o_,_9:String ){Continue ;} }Class _:NBA84{Var $P,$8:_5;$__(_,W_,E,i8,_w22,T:Float ){}Destructor (){Continue ;}Val _a4:Array [Array [Int ,59],755];}Class i:F{}Class r4:__{}Class _{}Class _4{_g67(_:Boolean ){} }''','''Class,_,:,E_,{,$C_p,(,_3,:,Float,;,o_,,,_9,:,String,),{,Continue,;,},},Class,_,:,NBA84,{,Var,$P,,,$8,:,_5,;,$__,(,_,,,W_,,,E,,,i8,,,_w22,,,T,:,Float,),{,},Destructor,(,),{,Continue,;,},Val,_a4,:,Array,[,Array,[,Int,,,59,],,,755,],;,},Class,i,:,F,{,},Class,r4,:,__,{,},Class,_,{,},Class,_4,{,_g67,(,_,:,Boolean,),{,},},<EOF>''',101))

    def test_3417(self):
        self.assertTrue(TestLexer.test('''Class e:_{Constructor (_26a,_:L__f_9;B,_,p59,_,_PU:Array [Float ,0x1_4];_,_3:Array [Array [Int ,0B1100100],0b110];u,UK:Float ){} }Class I{}Class IJ{}''','''Class,e,:,_,{,Constructor,(,_26a,,,_,:,L__f_9,;,B,,,_,,,p59,,,_,,,_PU,:,Array,[,Float,,,0x14,],;,_,,,_3,:,Array,[,Array,[,Int,,,0B1100100,],,,0b110,],;,u,,,UK,:,Float,),{,},},Class,I,{,},Class,IJ,{,},<EOF>''',101))

    def test_3418(self):
        self.assertTrue(TestLexer.test('''Class _L:_2{}Class _{Destructor (){}Val $_y,_4,_,_2:Array [String ,24];Destructor (){ {} }$_34H(_,_:Boolean ){}Constructor (){Continue ;}Destructor (){}Var $_9:Float ;}''','''Class,_L,:,_2,{,},Class,_,{,Destructor,(,),{,},Val,$_y,,,_4,,,_,,,_2,:,Array,[,String,,,24,],;,Destructor,(,),{,{,},},$_34H,(,_,,,_,:,Boolean,),{,},Constructor,(,),{,Continue,;,},Destructor,(,),{,},Var,$_9,:,Float,;,},<EOF>''',101))

    def test_3419(self):
        self.assertTrue(TestLexer.test('''Class o:_D_42{Constructor (){Continue ;Continue ;Continue ;Continue ;}Val $g,$W:Array [Boolean ,0X42];Constructor (V:_;_,f:Array [Array [Array [Array [Boolean ,0XA],0B1111],0xA2],0x23]){} }''','''Class,o,:,_D_42,{,Constructor,(,),{,Continue,;,Continue,;,Continue,;,Continue,;,},Val,$g,,,$W,:,Array,[,Boolean,,,0X42,],;,Constructor,(,V,:,_,;,_,,,f,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0XA,],,,0B1111,],,,0xA2,],,,0x23,],),{,},},<EOF>''',101))

    def test_3420(self):
        self.assertTrue(TestLexer.test('''Class _:u_6{}Class PUL:l{Destructor (){Val p:Array [Array [Array [Array [Array [Int ,18],04],030],0xE4],18];} }Class x:_{$F(){Var _:Boolean ;Continue ;}f_(__,O_:Array [Boolean ,030];__,t:String ){} }''','''Class,_,:,u_6,{,},Class,PUL,:,l,{,Destructor,(,),{,Val,p,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,18,],,,04,],,,030,],,,0xE4,],,,18,],;,},},Class,x,:,_,{,$F,(,),{,Var,_,:,Boolean,;,Continue,;,},f_,(,__,,,O_,:,Array,[,Boolean,,,030,],;,__,,,t,:,String,),{,},},<EOF>''',101))

    def test_3421(self):
        self.assertTrue(TestLexer.test('''Class __:_{d(_WV1:Int ;__,_N,H:Array [Array [Boolean ,21_4_8],052_7];__,__,_9:d_;_:Float ;_:p4_i7uz;__:Int ;_mK:Boolean ;m:String ){} }''','''Class,__,:,_,{,d,(,_WV1,:,Int,;,__,,,_N,,,H,:,Array,[,Array,[,Boolean,,,2148,],,,0527,],;,__,,,__,,,_9,:,d_,;,_,:,Float,;,_,:,p4_i7uz,;,__,:,Int,;,_mK,:,Boolean,;,m,:,String,),{,},},<EOF>''',101))

    def test_3422(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (O,__,L:Array [Int ,0X88]){Return ;Continue ;}Destructor (){Break ;} }Class D_7:_54{Val j,$6n,$B:_vC;}''','''Class,_,:,_,{,Constructor,(,O,,,__,,,L,:,Array,[,Int,,,0X88,],),{,Return,;,Continue,;,},Destructor,(,),{,Break,;,},},Class,D_7,:,_54,{,Val,j,,,$6n,,,$B,:,_vC,;,},<EOF>''',101))

    def test_3423(self):
        self.assertTrue(TestLexer.test('''Class e{Constructor (Fx:Float ;_0:String ;d,_,__830__:v;U:f){}Val t2,$_M,S,$_t:Int ;Destructor (){}Var _,$03u_:Array [String ,0b101];}''','''Class,e,{,Constructor,(,Fx,:,Float,;,_0,:,String,;,d,,,_,,,__830__,:,v,;,U,:,f,),{,},Val,t2,,,$_M,,,S,,,$_t,:,Int,;,Destructor,(,),{,},Var,_,,,$03u_,:,Array,[,String,,,0b101,],;,},<EOF>''',101))

    def test_3424(self):
        self.assertTrue(TestLexer.test('''Class e8Qvo5{}Class Oj{}Class _:_{Destructor (){}Val y_:__;Destructor (){Return ;}Val $_:___f;}Class __9:_2{Constructor (_,RI__05:y_){} }''','''Class,e8Qvo5,{,},Class,Oj,{,},Class,_,:,_,{,Destructor,(,),{,},Val,y_,:,__,;,Destructor,(,),{,Return,;,},Val,$_,:,___f,;,},Class,__9,:,_2,{,Constructor,(,_,,,RI__05,:,y_,),{,},},<EOF>''',101))

    def test_3425(self):
        self.assertTrue(TestLexer.test('''Class _{Val _63:Array [Array [Array [Array [Array [Array [Array [Array [String ,0B1010001],0x9],0x9],52],07],84],05_0],52];}''','''Class,_,{,Val,_63,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B1010001,],,,0x9,],,,0x9,],,,52,],,,07,],,,84,],,,050,],,,52,],;,},<EOF>''',101))

    def test_3426(self):
        self.assertTrue(TestLexer.test('''Class _{}Class B:h3{Val $_5:Array [Array [Array [Array [Array [Float ,0B1_10_1],0x53],0141],0b11],22];Var $C,$fE_:Float ;}Class H1{Constructor (){} }''','''Class,_,{,},Class,B,:,h3,{,Val,$_5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1101,],,,0x53,],,,0141,],,,0b11,],,,22,],;,Var,$C,,,$fE_,:,Float,;,},Class,H1,{,Constructor,(,),{,},},<EOF>''',101))

    def test_3427(self):
        self.assertTrue(TestLexer.test('''Class A{}Class c_9:A2dI_{$3(a,W,_1h8L_,_m,M,S6:Boolean ;B0,_,vZ,u,_8:j_;_,__,mR_,n:String ;n:String ){}Val $__K:Array [String ,077];}''','''Class,A,{,},Class,c_9,:,A2dI_,{,$3,(,a,,,W,,,_1h8L_,,,_m,,,M,,,S6,:,Boolean,;,B0,,,_,,,vZ,,,u,,,_8,:,j_,;,_,,,__,,,mR_,,,n,:,String,;,n,:,String,),{,},Val,$__K,:,Array,[,String,,,077,],;,},<EOF>''',101))

    def test_3428(self):
        self.assertTrue(TestLexer.test('''Class Z:Za0{Constructor (_,_n1,_W:Float ;_zp,_4:Boolean ;_,O9_8:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0B10100],0X7_C],010],010],0b1],1],0xCA],0x25],0X3];_60:_J;_:_;_5,P6:String ;_2:Array [String ,9_7_64_4_06]){} }''','''Class,Z,:,Za0,{,Constructor,(,_,,,_n1,,,_W,:,Float,;,_zp,,,_4,:,Boolean,;,_,,,O9_8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B10100,],,,0X7C,],,,010,],,,010,],,,0b1,],,,1,],,,0xCA,],,,0x25,],,,0X3,],;,_60,:,_J,;,_,:,_,;,_5,,,P6,:,String,;,_2,:,Array,[,String,,,9764406,],),{,},},<EOF>''',101))

    def test_3429(self):
        self.assertTrue(TestLexer.test('''Class __{}Class N_{Destructor (){}Constructor (__z20:_;_,X:_){} }Class q4{Val $i2_,$6:g;Constructor (_,j,U:Boolean ;y:String ){} }''','''Class,__,{,},Class,N_,{,Destructor,(,),{,},Constructor,(,__z20,:,_,;,_,,,X,:,_,),{,},},Class,q4,{,Val,$i2_,,,$6,:,g,;,Constructor,(,_,,,j,,,U,:,Boolean,;,y,:,String,),{,},},<EOF>''',101))

    def test_3430(self):
        self.assertTrue(TestLexer.test('''Class __{Constructor (_,_W,v,h:Array [Array [String ,5],017];x:Array [Int ,0B1_0];_49O:_){}Val $g:Array [Array [Boolean ,0B1],017];Destructor (){}Destructor (){} }''','''Class,__,{,Constructor,(,_,,,_W,,,v,,,h,:,Array,[,Array,[,String,,,5,],,,017,],;,x,:,Array,[,Int,,,0B10,],;,_49O,:,_,),{,},Val,$g,:,Array,[,Array,[,Boolean,,,0B1,],,,017,],;,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_3431(self):
        self.assertTrue(TestLexer.test('''Class _:___{Constructor (UR,a:Array [String ,0B1100010];J,v2j:Array [Array [Int ,81],042];_,_,sg:Boolean ){}Var $r_m_xa:Array [Array [Float ,042],8_3];}''','''Class,_,:,___,{,Constructor,(,UR,,,a,:,Array,[,String,,,0B1100010,],;,J,,,v2j,:,Array,[,Array,[,Int,,,81,],,,042,],;,_,,,_,,,sg,:,Boolean,),{,},Var,$r_m_xa,:,Array,[,Array,[,Float,,,042,],,,83,],;,},<EOF>''',101))

    def test_3432(self):
        self.assertTrue(TestLexer.test('''Class _{$G(){}Val G_b6:Array [Array [Array [Array [Int ,0b1101],0b1101],72],042];$67(__:h_a;_,u,GJ,__r:Array [Float ,0b1101];_c,_,H_:f;k,d,_GB_,__,m:Array [Int ,0B1001000]){} }Class _:_{}''','''Class,_,{,$G,(,),{,},Val,G_b6,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b1101,],,,0b1101,],,,72,],,,042,],;,$67,(,__,:,h_a,;,_,,,u,,,GJ,,,__r,:,Array,[,Float,,,0b1101,],;,_c,,,_,,,H_,:,f,;,k,,,d,,,_GB_,,,__,,,m,:,Array,[,Int,,,0B1001000,],),{,},},Class,_,:,_,{,},<EOF>''',101))

    def test_3433(self):
        self.assertTrue(TestLexer.test('''Class _p:_J{Constructor (D_,T_C,l0,_:Array [Array [Array [String ,017_0_3],043],21];__2:Array [Array [Int ,0b110101],21]){}Constructor (_3_t:T){} }''','''Class,_p,:,_J,{,Constructor,(,D_,,,T_C,,,l0,,,_,:,Array,[,Array,[,Array,[,String,,,01703,],,,043,],,,21,],;,__2,:,Array,[,Array,[,Int,,,0b110101,],,,21,],),{,},Constructor,(,_3_t,:,T,),{,},},<EOF>''',101))

    def test_3434(self):
        self.assertTrue(TestLexer.test('''Class N{Destructor (){}Constructor (l,c_6a__35_,d,_Q0_N:NB3;_,_,W_8:Boolean ;J,___:_7_){} }Class _:__7T{Var $__,H,m,$3,$_p,_Y_:Boolean ;}''','''Class,N,{,Destructor,(,),{,},Constructor,(,l,,,c_6a__35_,,,d,,,_Q0_N,:,NB3,;,_,,,_,,,W_8,:,Boolean,;,J,,,___,:,_7_,),{,},},Class,_,:,__7T,{,Var,$__,,,H,,,m,,,$3,,,$_p,,,_Y_,:,Boolean,;,},<EOF>''',101))

    def test_3435(self):
        self.assertTrue(TestLexer.test('''Class i:Q{Constructor (_,o4,_o55,_:Array [Array [Array [Array [Boolean ,45],027],07],45];_w_,_:Array [Array [Float ,07],027]){Break ;} }''','''Class,i,:,Q,{,Constructor,(,_,,,o4,,,_o55,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,45,],,,027,],,,07,],,,45,],;,_w_,,,_,:,Array,[,Array,[,Float,,,07,],,,027,],),{,Break,;,},},<EOF>''',101))

    def test_3436(self):
        self.assertTrue(TestLexer.test('''Class ____:h95_M2{Constructor (Zn,_1n:Array [Array [Array [Array [Array [Int ,0x7],0136],0b1100001],0X22],16]){Return ;} }Class TO:z{}''','''Class,____,:,h95_M2,{,Constructor,(,Zn,,,_1n,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x7,],,,0136,],,,0b1100001,],,,0X22,],,,16,],),{,Return,;,},},Class,TO,:,z,{,},<EOF>''',101))

    def test_3437(self):
        self.assertTrue(TestLexer.test('''Class __{Val $5:u_;$b_6_F0I4(){}Constructor (_7,_7:_;_4,lX,_:String ;h3,g:Array [Int ,0b1_1_1]){Var _,dE3,_,u1_,l9rM,S,u7_3_M,gH:_;} }''','''Class,__,{,Val,$5,:,u_,;,$b_6_F0I4,(,),{,},Constructor,(,_7,,,_7,:,_,;,_4,,,lX,,,_,:,String,;,h3,,,g,:,Array,[,Int,,,0b111,],),{,Var,_,,,dE3,,,_,,,u1_,,,l9rM,,,S,,,u7_3_M,,,gH,:,_,;,},},<EOF>''',101))

    def test_3438(self):
        self.assertTrue(TestLexer.test('''Class F_V:_{}Class _:_{Val _,$9:Boolean ;Destructor (){}$59(k,___7S:Array [Array [Int ,41],0XE];_,_:L;C,_:Float ){Continue ;} }''','''Class,F_V,:,_,{,},Class,_,:,_,{,Val,_,,,$9,:,Boolean,;,Destructor,(,),{,},$59,(,k,,,___7S,:,Array,[,Array,[,Int,,,41,],,,0XE,],;,_,,,_,:,L,;,C,,,_,:,Float,),{,Continue,;,},},<EOF>''',101))

    def test_3439(self):
        self.assertTrue(TestLexer.test('''Class ___{}Class i{Var _935:k;Constructor (__:Array [Array [Array [Array [Float ,0xDE5],64],85161],071];_,E:String ){} }Class Q{}Class c9_:G9{}''','''Class,___,{,},Class,i,{,Var,_935,:,k,;,Constructor,(,__,:,Array,[,Array,[,Array,[,Array,[,Float,,,0xDE5,],,,64,],,,85161,],,,071,],;,_,,,E,:,String,),{,},},Class,Q,{,},Class,c9_,:,G9,{,},<EOF>''',101))

    def test_3440(self):
        self.assertTrue(TestLexer.test('''Class ____d:j{Var $_,g,W_Q:Array [String ,0B1];Destructor (){Val _,s,_K,_O,y__:Boolean ;} }Class T5y__{Constructor (){Return ;}Destructor (){Var _G:Int ;} }''','''Class,____d,:,j,{,Var,$_,,,g,,,W_Q,:,Array,[,String,,,0B1,],;,Destructor,(,),{,Val,_,,,s,,,_K,,,_O,,,y__,:,Boolean,;,},},Class,T5y__,{,Constructor,(,),{,Return,;,},Destructor,(,),{,Var,_G,:,Int,;,},},<EOF>''',101))

    def test_3441(self):
        self.assertTrue(TestLexer.test('''Class wHDHJ__:sx{Val a:Array [Array [Float ,0b1110],0b1];Constructor (){Return ;}Val _8h:u__1=o::$8h1_;Constructor (_,_,_,_,j:Boolean ){} }''','''Class,wHDHJ__,:,sx,{,Val,a,:,Array,[,Array,[,Float,,,0b1110,],,,0b1,],;,Constructor,(,),{,Return,;,},Val,_8h,:,u__1,=,o,::,$8h1_,;,Constructor,(,_,,,_,,,_,,,_,,,j,:,Boolean,),{,},},<EOF>''',101))

    def test_3442(self):
        self.assertTrue(TestLexer.test('''Class _:_5j8{}Class s0{Val $sv:_;Constructor (_,_,_:String ){}Var $9:Array [Array [Float ,2_2],05];Val b:Boolean ;Constructor (__,t:Array [String ,97]){}Constructor (){} }''','''Class,_,:,_5j8,{,},Class,s0,{,Val,$sv,:,_,;,Constructor,(,_,,,_,,,_,:,String,),{,},Var,$9,:,Array,[,Array,[,Float,,,22,],,,05,],;,Val,b,:,Boolean,;,Constructor,(,__,,,t,:,Array,[,String,,,97,],),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_3443(self):
        self.assertTrue(TestLexer.test('''Class a:Z{}Class _:_{Constructor (a:Array [String ,042]){Val T:Array [Array [Array [Array [Boolean ,042],0b1_11_0],0B11_01],06_2];}_9C(){} }Class _{}''','''Class,a,:,Z,{,},Class,_,:,_,{,Constructor,(,a,:,Array,[,String,,,042,],),{,Val,T,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,042,],,,0b1110,],,,0B1101,],,,062,],;,},_9C,(,),{,},},Class,_,{,},<EOF>''',101))

    def test_3444(self):
        self.assertTrue(TestLexer.test('''Class _37A8_kO{Val $Z,_:Array [Float ,0b101011];Constructor (){}Constructor (_,bMd9m:Array [Float ,4];_0,L:Boolean ;_1a:String ;x,_a,_,_:Int ){Continue ;}Val r_:Float ;Destructor (){} }Class __{}''','''Class,_37A8_kO,{,Val,$Z,,,_,:,Array,[,Float,,,0b101011,],;,Constructor,(,),{,},Constructor,(,_,,,bMd9m,:,Array,[,Float,,,4,],;,_0,,,L,:,Boolean,;,_1a,:,String,;,x,,,_a,,,_,,,_,:,Int,),{,Continue,;,},Val,r_,:,Float,;,Destructor,(,),{,},},Class,__,{,},<EOF>''',101))

    def test_3445(self):
        self.assertTrue(TestLexer.test('''Class N:___{Val $v,L1:S92U;Var i_,$K2,_,$04:Array [Array [Array [Array [Array [Array [Array [Int ,45],0XC],0241],45],45],45],024];}''','''Class,N,:,___,{,Val,$v,,,L1,:,S92U,;,Var,i_,,,$K2,,,_,,,$04,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,45,],,,0XC,],,,0241,],,,45,],,,45,],,,45,],,,024,],;,},<EOF>''',101))

    def test_3446(self):
        self.assertTrue(TestLexer.test('''Class L{Destructor (){}Constructor (__pG_m5_,_,x_,_:Float ;H479:_3){Break ;}Destructor (){} }Class b__:H{}Class __{}Class ___:_{}''','''Class,L,{,Destructor,(,),{,},Constructor,(,__pG_m5_,,,_,,,x_,,,_,:,Float,;,H479,:,_3,),{,Break,;,},Destructor,(,),{,},},Class,b__,:,H,{,},Class,__,{,},Class,___,:,_,{,},<EOF>''',101))

    def test_3447(self):
        self.assertTrue(TestLexer.test('''Class m{Constructor (_a:String ;_,p,i_,w2L,t:Int ;P,x_,V:Array [Float ,7_1];_:_;j1,_,_,_,__,b_:Array [Float ,0B1]){} }Class _:_{Var _,Y,_:Array [String ,6];}''','''Class,m,{,Constructor,(,_a,:,String,;,_,,,p,,,i_,,,w2L,,,t,:,Int,;,P,,,x_,,,V,:,Array,[,Float,,,71,],;,_,:,_,;,j1,,,_,,,_,,,_,,,__,,,b_,:,Array,[,Float,,,0B1,],),{,},},Class,_,:,_,{,Var,_,,,Y,,,_,:,Array,[,String,,,6,],;,},<EOF>''',101))

    def test_3448(self):
        self.assertTrue(TestLexer.test('''Class o_{Val _s:Array [Array [Array [Array [Array [Array [Array [String ,87],0X25],87],0B1_0_1],2_8_2],87],02_44];}Class _:p{}''','''Class,o_,{,Val,_s,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,87,],,,0X25,],,,87,],,,0B101,],,,282,],,,87,],,,0244,],;,},Class,_,:,p,{,},<EOF>''',101))

    def test_3449(self):
        self.assertTrue(TestLexer.test('''Class ___303oA6{Var $V,n_9a,$_v,d,$_:_;}Class G7{}Class X:O0_{}Class __{}Class F:_06{}Class W:J{}Class __:r5{}Class _1{Destructor (){} }''','''Class,___303oA6,{,Var,$V,,,n_9a,,,$_v,,,d,,,$_,:,_,;,},Class,G7,{,},Class,X,:,O0_,{,},Class,__,{,},Class,F,:,_06,{,},Class,W,:,J,{,},Class,__,:,r5,{,},Class,_1,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3450(self):
        self.assertTrue(TestLexer.test('''Class mR:q6___02{Var $_r9ew:P1_;L__7B_(_g:Array [Array [Array [Array [Array [Boolean ,97],01],97],046],031]){} }Class _:_{}''','''Class,mR,:,q6___02,{,Var,$_r9ew,:,P1_,;,L__7B_,(,_g,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,97,],,,01,],,,97,],,,046,],,,031,],),{,},},Class,_,:,_,{,},<EOF>''',101))

    def test_3451(self):
        self.assertTrue(TestLexer.test('''Class _:_{Constructor (_,mx_,Z:_){} }Class U2Z{Val _E,$1_0,$_9,$_h,$z_,$__6n,$_,__,$0_:Array [Array [Array [Array [Array [String ,03],431_24_1_7_6_3],0B110001],06_2],03];Constructor (Y6____G:_){} }Class E_:_8{}Class __{Val G:_;Gf(__:Array [Int ,016];E,_,i_1X,U,__,G,R:Array [String ,21]){} }''','''Class,_,:,_,{,Constructor,(,_,,,mx_,,,Z,:,_,),{,},},Class,U2Z,{,Val,_E,,,$1_0,,,$_9,,,$_h,,,$z_,,,$__6n,,,$_,,,__,,,$0_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,03,],,,431241763,],,,0B110001,],,,062,],,,03,],;,Constructor,(,Y6____G,:,_,),{,},},Class,E_,:,_8,{,},Class,__,{,Val,G,:,_,;,Gf,(,__,:,Array,[,Int,,,016,],;,E,,,_,,,i_1X,,,U,,,__,,,G,,,R,:,Array,[,String,,,21,],),{,},},<EOF>''',101))

    def test_3452(self):
        self.assertTrue(TestLexer.test('''Class t{Constructor (){} }Class _:m_8{}Class _{b(C:Array [Array [Boolean ,99],0B100110];__:Boolean ;UfH_6b,AK8,N,_8:_){} }Class _ek:_{Val $_p,$_t_:Array [Array [Array [Array [String ,0X2],99],99],0X6];_(I:Array [Boolean ,0B100110]){ {} }Destructor (){}Constructor (){} }''','''Class,t,{,Constructor,(,),{,},},Class,_,:,m_8,{,},Class,_,{,b,(,C,:,Array,[,Array,[,Boolean,,,99,],,,0B100110,],;,__,:,Boolean,;,UfH_6b,,,AK8,,,N,,,_8,:,_,),{,},},Class,_ek,:,_,{,Val,$_p,,,$_t_,:,Array,[,Array,[,Array,[,Array,[,String,,,0X2,],,,99,],,,99,],,,0X6,],;,_,(,I,:,Array,[,Boolean,,,0B100110,],),{,{,},},Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_3453(self):
        self.assertTrue(TestLexer.test('''Class m9{}Class _9{}Class _:_3{Constructor (_1,G_y_4,__:W3h9_p;o:Array [Int ,60_74]){Continue ;} }Class _{Destructor (){}$c8(){}Destructor (){} }Class F{Constructor (){Continue ;}Constructor (J:Z5){Val _:_;} }''','''Class,m9,{,},Class,_9,{,},Class,_,:,_3,{,Constructor,(,_1,,,G_y_4,,,__,:,W3h9_p,;,o,:,Array,[,Int,,,6074,],),{,Continue,;,},},Class,_,{,Destructor,(,),{,},$c8,(,),{,},Destructor,(,),{,},},Class,F,{,Constructor,(,),{,Continue,;,},Constructor,(,J,:,Z5,),{,Val,_,:,_,;,},},<EOF>''',101))

    def test_3454(self):
        self.assertTrue(TestLexer.test('''Class __:R8_04_{}Class _bk_:x_P{Var $oQQmF__:String ;Destructor (){}Constructor (J0:Int ;t:Array [Int ,0X3]){Val J,I:Array [Array [Boolean ,183],70];} }''','''Class,__,:,R8_04_,{,},Class,_bk_,:,x_P,{,Var,$oQQmF__,:,String,;,Destructor,(,),{,},Constructor,(,J0,:,Int,;,t,:,Array,[,Int,,,0X3,],),{,Val,J,,,I,:,Array,[,Array,[,Boolean,,,183,],,,70,],;,},},<EOF>''',101))

    def test_3455(self):
        self.assertTrue(TestLexer.test('''Class _:e{$k8_4(){} }Class _E:_b{$__(_:_;NM:_9;_n_:_9_7;Lr1_,_:Array [Boolean ,065_2];u6_5_,n:String ;_h__4_6m__25:Array [Array [String ,0B1_1],03];_:_;_:__){}Var p,x,_:Array [Array [Int ,0B101],03];Constructor (q,j:Boolean ){Break ;}N__(o:Array [Array [Array [Int ,3],03],89];L_1,__QjO78,F_gI_:Array [Int ,0b1010001];_:Float ;_:c6;_d_,i,_4:Array [Float ,3];_:V;_:Int ){} }Class _s:x{}Class d{_d(){}Var _R:Array [Int ,03];}''','''Class,_,:,e,{,$k8_4,(,),{,},},Class,_E,:,_b,{,$__,(,_,:,_,;,NM,:,_9,;,_n_,:,_9_7,;,Lr1_,,,_,:,Array,[,Boolean,,,0652,],;,u6_5_,,,n,:,String,;,_h__4_6m__25,:,Array,[,Array,[,String,,,0B11,],,,03,],;,_,:,_,;,_,:,__,),{,},Var,p,,,x,,,_,:,Array,[,Array,[,Int,,,0B101,],,,03,],;,Constructor,(,q,,,j,:,Boolean,),{,Break,;,},N__,(,o,:,Array,[,Array,[,Array,[,Int,,,3,],,,03,],,,89,],;,L_1,,,__QjO78,,,F_gI_,:,Array,[,Int,,,0b1010001,],;,_,:,Float,;,_,:,c6,;,_d_,,,i,,,_4,:,Array,[,Float,,,3,],;,_,:,V,;,_,:,Int,),{,},},Class,_s,:,x,{,},Class,d,{,_d,(,),{,},Var,_R,:,Array,[,Int,,,03,],;,},<EOF>''',101))

    def test_3456(self):
        self.assertTrue(TestLexer.test('''Class v_:_q{}Class wH{}Class F1_d5eNz:Zex{}Class __{Var l_:j;Destructor (){} }Class r:YE{}Class S{}Class f4:_7{}''','''Class,v_,:,_q,{,},Class,wH,{,},Class,F1_d5eNz,:,Zex,{,},Class,__,{,Var,l_,:,j,;,Destructor,(,),{,},},Class,r,:,YE,{,},Class,S,{,},Class,f4,:,_7,{,},<EOF>''',101))

    def test_3457(self):
        self.assertTrue(TestLexer.test('''Class y2_H__x:e{}Class __{}Class _{}Class k3R4:_{Val _,$9:y;}Class GH6_sl9_{}Class Ox:_1{Val ___6,__,$yj:Array [Boolean ,0X5];}''','''Class,y2_H__x,:,e,{,},Class,__,{,},Class,_,{,},Class,k3R4,:,_,{,Val,_,,,$9,:,y,;,},Class,GH6_sl9_,{,},Class,Ox,:,_1,{,Val,___6,,,__,,,$yj,:,Array,[,Boolean,,,0X5,],;,},<EOF>''',101))

    def test_3458(self):
        self.assertTrue(TestLexer.test('''Class __{Val $_,$9X_5:Boolean ;Constructor (Q__1:Array [String ,024];_:Array [Int ,0XF4_B];g:Boolean ;Q_8:Array [Array [Array [Array [Float ,0b1001111],0b1001111],0X19],0x9];_,v:___){} }''','''Class,__,{,Val,$_,,,$9X_5,:,Boolean,;,Constructor,(,Q__1,:,Array,[,String,,,024,],;,_,:,Array,[,Int,,,0XF4B,],;,g,:,Boolean,;,Q_8,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1001111,],,,0b1001111,],,,0X19,],,,0x9,],;,_,,,v,:,___,),{,},},<EOF>''',101))

    def test_3459(self):
        self.assertTrue(TestLexer.test('''Class _:_7{Val _,B:Array [String ,01];Destructor (){} }Class j5:_9_5b0G9__{Constructor (_:Array [Array [Boolean ,0X9],7_0];F,c91:_){}Var __,$z:m5;Destructor (){} }''','''Class,_,:,_7,{,Val,_,,,B,:,Array,[,String,,,01,],;,Destructor,(,),{,},},Class,j5,:,_9_5b0G9__,{,Constructor,(,_,:,Array,[,Array,[,Boolean,,,0X9,],,,70,],;,F,,,c91,:,_,),{,},Var,__,,,$z,:,m5,;,Destructor,(,),{,},},<EOF>''',101))

    def test_3460(self):
        self.assertTrue(TestLexer.test('''Class __:_{Var $X_:String =!!!!!---j::$9Yg98D._%_::$_m_==.!----_%-Kv::$_C7_._;Val $I_:Array [Array [Array [Boolean ,0X4F],054],01_2];}''','''Class,__,:,_,{,Var,$X_,:,String,=,!,!,!,!,!,-,-,-,j,::,$9Yg98D,.,_,%,_,::,$_m_,==.,!,-,-,-,-,_,%,-,Kv,::,$_C7_,.,_,;,Val,$I_,:,Array,[,Array,[,Array,[,Boolean,,,0X4F,],,,054,],,,012,],;,},<EOF>''',101))

    def test_3461(self):
        self.assertTrue(TestLexer.test('''Class Y:B7_4{}Class _{_3K_4(_V:R;s7:Boolean ;_V_,__,H1,z,_3_:Boolean ){Break ;}Var $96:_;Destructor (){Return ;} }''','''Class,Y,:,B7_4,{,},Class,_,{,_3K_4,(,_V,:,R,;,s7,:,Boolean,;,_V_,,,__,,,H1,,,z,,,_3_,:,Boolean,),{,Break,;,},Var,$96,:,_,;,Destructor,(,),{,Return,;,},},<EOF>''',101))

    def test_3462(self):
        self.assertTrue(TestLexer.test('''Class L:e{$9(){} }Class b{Constructor (_8c_:Array [Int ,1];_,h:O;g757_,_015:Array [Array [String ,0B101010],77];q,o,N:Array [Int ,3];m,Vf,I:Boolean ){} }Class e4:_{}Class c:w{}Class _{}Class _{}''','''Class,L,:,e,{,$9,(,),{,},},Class,b,{,Constructor,(,_8c_,:,Array,[,Int,,,1,],;,_,,,h,:,O,;,g757_,,,_015,:,Array,[,Array,[,String,,,0B101010,],,,77,],;,q,,,o,,,N,:,Array,[,Int,,,3,],;,m,,,Vf,,,I,:,Boolean,),{,},},Class,e4,:,_,{,},Class,c,:,w,{,},Class,_,{,},Class,_,{,},<EOF>''',101))

    def test_3463(self):
        self.assertTrue(TestLexer.test('''Class C9:rp5{Val o:Array [Array [Array [Array [Float ,0b1010110],0b10_0],03_4],04_7];}Class rJ{}Class Y{Destructor (){Val __haa,GJ:S;} }''','''Class,C9,:,rp5,{,Val,o,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b1010110,],,,0b100,],,,034,],,,047,],;,},Class,rJ,{,},Class,Y,{,Destructor,(,),{,Val,__haa,,,GJ,:,S,;,},},<EOF>''',101))

    def test_3464(self):
        self.assertTrue(TestLexer.test('''Class _:_F{Var $j,$_:_;}Class _{Var _86:String ;Constructor (){}Constructor (L,_:Array [Boolean ,98]){} }Class _2:_8{}Class _{}''','''Class,_,:,_F,{,Var,$j,,,$_,:,_,;,},Class,_,{,Var,_86,:,String,;,Constructor,(,),{,},Constructor,(,L,,,_,:,Array,[,Boolean,,,98,],),{,},},Class,_2,:,_8,{,},Class,_,{,},<EOF>''',101))

    def test_3465(self):
        self.assertTrue(TestLexer.test('''Class Zn:_e_77__{Ln4c(Aek0_2,_24_0_6:Array [Array [Array [Float ,82],63146],82];_9:l____bz){If (-0.4*!!!!!New _Jz()){Continue ;R::$3_();} }}''','''Class,Zn,:,_e_77__,{,Ln4c,(,Aek0_2,,,_24_0_6,:,Array,[,Array,[,Array,[,Float,,,82,],,,63146,],,,82,],;,_9,:,l____bz,),{,If,(,-,0.4,*,!,!,!,!,!,New,_Jz,(,),),{,Continue,;,R,::,$3_,(,),;,},},},<EOF>''',101))

    def test_3466(self):
        self.assertTrue(TestLexer.test('''Class _n_e:_2{Val __5_:Array [Array [Array [Array [Array [Int ,2_3],0B101010],03_4_6_6],0B101010],7];g__(_6_,RGQLM:_){} }''','''Class,_n_e,:,_2,{,Val,__5_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,23,],,,0B101010,],,,03466,],,,0B101010,],,,7,],;,g__,(,_6_,,,RGQLM,:,_,),{,},},<EOF>''',101))

    def test_3467(self):
        self.assertTrue(TestLexer.test('''Class a_:__{Destructor (){ {Break ;} }Destructor (){Break ;Continue ;}Destructor (){} }Class __:_{}Class An{}Class n:G{Destructor (){} }''','''Class,a_,:,__,{,Destructor,(,),{,{,Break,;,},},Destructor,(,),{,Break,;,Continue,;,},Destructor,(,),{,},},Class,__,:,_,{,},Class,An,{,},Class,n,:,G,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3468(self):
        self.assertTrue(TestLexer.test('''Class p:U{Constructor (_Y:Array [Boolean ,0b101110];U_E_Fe__39_,_2:Array [Array [Array [Array [String ,04],031],045],027];s:L;_:Int ;_:__c_){} }''','''Class,p,:,U,{,Constructor,(,_Y,:,Array,[,Boolean,,,0b101110,],;,U_E_Fe__39_,,,_2,:,Array,[,Array,[,Array,[,Array,[,String,,,04,],,,031,],,,045,],,,027,],;,s,:,L,;,_,:,Int,;,_,:,__c_,),{,},},<EOF>''',101))

    def test_3469(self):
        self.assertTrue(TestLexer.test('''Class xs_33j0:u6{$68(e,_:Array [String ,04]){Var _:Array [Boolean ,0X15];Var _8_8,_:Array [Array [Array [Int ,04],90],0x18];} }Class _:X_{}Class x{}''','''Class,xs_33j0,:,u6,{,$68,(,e,,,_,:,Array,[,String,,,04,],),{,Var,_,:,Array,[,Boolean,,,0X15,],;,Var,_8_8,,,_,:,Array,[,Array,[,Array,[,Int,,,04,],,,90,],,,0x18,],;,},},Class,_,:,X_,{,},Class,x,{,},<EOF>''',101))

    def test_3470(self):
        self.assertTrue(TestLexer.test('''Class _6tyg:_{Constructor (Wg:Array [String ,0115]){} }Class _7O{Constructor (gP,d:Int ;D:k;_,h_j:Int ;p:_;_,_,_,Z,t:N;a,v,C,dR,E,_6,q2,M4_,_,e7:_;_Q_0,I_z:Array [Array [Array [Array [Array [Int ,0b1_1],7_9],0115],8],0x29]){} }''','''Class,_6tyg,:,_,{,Constructor,(,Wg,:,Array,[,String,,,0115,],),{,},},Class,_7O,{,Constructor,(,gP,,,d,:,Int,;,D,:,k,;,_,,,h_j,:,Int,;,p,:,_,;,_,,,_,,,_,,,Z,,,t,:,N,;,a,,,v,,,C,,,dR,,,E,,,_6,,,q2,,,M4_,,,_,,,e7,:,_,;,_Q_0,,,I_z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b11,],,,79,],,,0115,],,,8,],,,0x29,],),{,},},<EOF>''',101))

    def test_3471(self):
        self.assertTrue(TestLexer.test('''Class s{Destructor (){ {}Break ;}Val $_,_,_jt:Array [String ,0x2];}Class k{Constructor (){}Var $2:j;$_(_r,S,s_:B;H:Int ;e_QV7x1GR__L,__,_8:Int ){} }''','''Class,s,{,Destructor,(,),{,{,},Break,;,},Val,$_,,,_,,,_jt,:,Array,[,String,,,0x2,],;,},Class,k,{,Constructor,(,),{,},Var,$2,:,j,;,$_,(,_r,,,S,,,s_,:,B,;,H,:,Int,;,e_QV7x1GR__L,,,__,,,_8,:,Int,),{,},},<EOF>''',101))

    def test_3472(self):
        self.assertTrue(TestLexer.test('''Class _7:n{}Class Feu:_{Var h:Array [Array [Array [Array [Array [Array [Array [Int ,0b1],07],0122],0B1000111],0122],0xCF_C],051_4];}Class c_{Constructor (OY,h_:mM;G,Y,_,_,H2__3__c61_:Float ;g,M_9,_,E5:Array [Array [Array [Boolean ,0B11_1_0],25],1_4];_:K){} }''','''Class,_7,:,n,{,},Class,Feu,:,_,{,Var,h,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b1,],,,07,],,,0122,],,,0B1000111,],,,0122,],,,0xCFC,],,,0514,],;,},Class,c_,{,Constructor,(,OY,,,h_,:,mM,;,G,,,Y,,,_,,,_,,,H2__3__c61_,:,Float,;,g,,,M_9,,,_,,,E5,:,Array,[,Array,[,Array,[,Boolean,,,0B1110,],,,25,],,,14,],;,_,:,K,),{,},},<EOF>''',101))

    def test_3473(self):
        self.assertTrue(TestLexer.test('''Class _4{}Class Og4:_7C{Constructor (_,_c__F,_:O;_,_:Array [Array [Array [Array [String ,06_0],0B1],0B1],0b1]){} }''','''Class,_4,{,},Class,Og4,:,_7C,{,Constructor,(,_,,,_c__F,,,_,:,O,;,_,,,_,:,Array,[,Array,[,Array,[,Array,[,String,,,060,],,,0B1,],,,0B1,],,,0b1,],),{,},},<EOF>''',101))

    def test_3474(self):
        self.assertTrue(TestLexer.test('''Class _z:__{Val $_,b1anh,Q__:Array [Boolean ,6_66];$_4Uo(_1,_0KYv,__,T9:String ;K:Array [Array [Array [Int ,23],0XF_A],05_0651]){} }''','''Class,_z,:,__,{,Val,$_,,,b1anh,,,Q__,:,Array,[,Boolean,,,666,],;,$_4Uo,(,_1,,,_0KYv,,,__,,,T9,:,String,;,K,:,Array,[,Array,[,Array,[,Int,,,23,],,,0XFA,],,,050651,],),{,},},<EOF>''',101))

    def test_3475(self):
        self.assertTrue(TestLexer.test('''Class h_66B{_(x:Float ;S,N___,L:Array [Float ,1]){}Var _:m;Constructor (t:Boolean ){Var _,__,l_XFn,_:Boolean ;Return ;} }''','''Class,h_66B,{,_,(,x,:,Float,;,S,,,N___,,,L,:,Array,[,Float,,,1,],),{,},Var,_,:,m,;,Constructor,(,t,:,Boolean,),{,Var,_,,,__,,,l_XFn,,,_,:,Boolean,;,Return,;,},},<EOF>''',101))

    def test_3476(self):
        self.assertTrue(TestLexer.test('''Class __:_{Destructor (){}$P(rD_,_1D,_,z0:Array [String ,30];q,_:Boolean ;b_0__,w,i,_:__;UU7,m,_,_1,_:Boolean ){Continue ;} }Class _6_{}''','''Class,__,:,_,{,Destructor,(,),{,},$P,(,rD_,,,_1D,,,_,,,z0,:,Array,[,String,,,30,],;,q,,,_,:,Boolean,;,b_0__,,,w,,,i,,,_,:,__,;,UU7,,,m,,,_,,,_1,,,_,:,Boolean,),{,Continue,;,},},Class,_6_,{,},<EOF>''',101))

    def test_3477(self):
        self.assertTrue(TestLexer.test('''Class _t__{}Class _y{}Class _{}Class _1{}Class R_:_JS{Constructor (d:Array [Array [Array [Array [Array [Array [String ,0b110110],0b110110],015],0B1],0b11_1],3];_h,_7Mc,_,k:x;_X31,vw:_5){} }''','''Class,_t__,{,},Class,_y,{,},Class,_,{,},Class,_1,{,},Class,R_,:,_JS,{,Constructor,(,d,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0b110110,],,,0b110110,],,,015,],,,0B1,],,,0b111,],,,3,],;,_h,,,_7Mc,,,_,,,k,:,x,;,_X31,,,vw,:,_5,),{,},},<EOF>''',101))

    def test_3478(self):
        self.assertTrue(TestLexer.test('''Class rS_{$16_(_f,_:Array [Array [Array [Array [Array [Array [Int ,0X2],0X9_D],0x1E],0B1001010],6_1],0B1001010]){}Var $q,DPo:a;Val $3c,_,$Q4:Boolean ;Val _:T6;}Class mE{}''','''Class,rS_,{,$16_,(,_f,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X2,],,,0X9D,],,,0x1E,],,,0B1001010,],,,61,],,,0B1001010,],),{,},Var,$q,,,DPo,:,a,;,Val,$3c,,,_,,,$Q4,:,Boolean,;,Val,_,:,T6,;,},Class,mE,{,},<EOF>''',101))

    def test_3479(self):
        self.assertTrue(TestLexer.test('''Class __0711_7{}Class _{}Class J{}Class _07F{}Class t:_{Var $6_:Array [Array [Array [Array [Array [Array [Float ,0x45],0XB],0112],0X95],0XB],0xF];Constructor (){Return ;} }''','''Class,__0711_7,{,},Class,_,{,},Class,J,{,},Class,_07F,{,},Class,t,:,_,{,Var,$6_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x45,],,,0XB,],,,0112,],,,0X95,],,,0XB,],,,0xF,],;,Constructor,(,),{,Return,;,},},<EOF>''',101))

    def test_3480(self):
        self.assertTrue(TestLexer.test('''Class b___7{Q4K80_(S_4,__a,j:Array [Boolean ,0X5F]){O_::$A1R_7();Break ;}Val $_:v;Val __8c,$745:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Int ,0XFB_4_6],0X5F],0b1010101],4_0],02],013],0x8C_B],0B101100],0b11],0X5F];R(_f:n;d:_0_N){} }Class miX:j{}''','''Class,b___7,{,Q4K80_,(,S_4,,,__a,,,j,:,Array,[,Boolean,,,0X5F,],),{,O_,::,$A1R_7,(,),;,Break,;,},Val,$_,:,v,;,Val,__8c,,,$745,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0XFB46,],,,0X5F,],,,0b1010101,],,,40,],,,02,],,,013,],,,0x8CB,],,,0B101100,],,,0b11,],,,0X5F,],;,R,(,_f,:,n,;,d,:,_0_N,),{,},},Class,miX,:,j,{,},<EOF>''',101))

    def test_3481(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _:b95518{Var $_,v1Wl,$_6:j9W;$s(Q,_:Array [Array [Boolean ,1_71],0B1_0];_:Array [String ,0X2];l0:Array [Array [Array [Array [Float ,0102],25],0X72],05_0];__H0T,_W,_w_:Array [Array [Array [Boolean ,0102],0102],0B1];Y,M:String ;S1:Int ;E:Array [Array [Boolean ,0xF0],0B1100];b_:String ;_,a0:Array [Array [Array [Float ,25],0x20],8]){} }Class fI{}Class _I569{}''','''Class,_,:,_,{,},Class,_,:,b95518,{,Var,$_,,,v1Wl,,,$_6,:,j9W,;,$s,(,Q,,,_,:,Array,[,Array,[,Boolean,,,171,],,,0B10,],;,_,:,Array,[,String,,,0X2,],;,l0,:,Array,[,Array,[,Array,[,Array,[,Float,,,0102,],,,25,],,,0X72,],,,050,],;,__H0T,,,_W,,,_w_,:,Array,[,Array,[,Array,[,Boolean,,,0102,],,,0102,],,,0B1,],;,Y,,,M,:,String,;,S1,:,Int,;,E,:,Array,[,Array,[,Boolean,,,0xF0,],,,0B1100,],;,b_,:,String,;,_,,,a0,:,Array,[,Array,[,Array,[,Float,,,25,],,,0x20,],,,8,],),{,},},Class,fI,{,},Class,_I569,{,},<EOF>''',101))

    def test_3482(self):
        self.assertTrue(TestLexer.test('''Class wsp:__{Var l:Array [Array [Array [Array [Int ,7_1],01],04],0X5B];_Wh(_3:Array [Int ,0X3_05];_,_54:Array [String ,38];_:Array [Array [Boolean ,0B10_0],38];k:___y_C;k:_){} }''','''Class,wsp,:,__,{,Var,l,:,Array,[,Array,[,Array,[,Array,[,Int,,,71,],,,01,],,,04,],,,0X5B,],;,_Wh,(,_3,:,Array,[,Int,,,0X305,],;,_,,,_54,:,Array,[,String,,,38,],;,_,:,Array,[,Array,[,Boolean,,,0B100,],,,38,],;,k,:,___y_C,;,k,:,_,),{,},},<EOF>''',101))

    def test_3483(self):
        self.assertTrue(TestLexer.test('''Class i8e{Val $_4:Array [String ,10];Val $n18E_c:Array [Array [Array [Int ,0xA_73],7],0B1];Constructor (_:String ){}Destructor (){Var _,w,_,_k:Boolean ;} }''','''Class,i8e,{,Val,$_4,:,Array,[,String,,,10,],;,Val,$n18E_c,:,Array,[,Array,[,Array,[,Int,,,0xA73,],,,7,],,,0B1,],;,Constructor,(,_,:,String,),{,},Destructor,(,),{,Var,_,,,w,,,_,,,_k,:,Boolean,;,},},<EOF>''',101))

    def test_3484(self):
        self.assertTrue(TestLexer.test('''Class W:s{Val $0_,$_yfW_8f:Array [Float ,0110];Var $9_:X;Destructor (){} }Class _2{}Class _:s_{}Class _n9:e{Destructor (){}Destructor (){}Val jl4:___925;Var E,$6,$_:__;}Class s:C6j{}Class _:_{}Class U{}Class _:_{}Class _1:c{Val _:Array [Boolean ,0110];}''','''Class,W,:,s,{,Val,$0_,,,$_yfW_8f,:,Array,[,Float,,,0110,],;,Var,$9_,:,X,;,Destructor,(,),{,},},Class,_2,{,},Class,_,:,s_,{,},Class,_n9,:,e,{,Destructor,(,),{,},Destructor,(,),{,},Val,jl4,:,___925,;,Var,E,,,$6,,,$_,:,__,;,},Class,s,:,C6j,{,},Class,_,:,_,{,},Class,U,{,},Class,_,:,_,{,},Class,_1,:,c,{,Val,_,:,Array,[,Boolean,,,0110,],;,},<EOF>''',101))

    def test_3485(self):
        self.assertTrue(TestLexer.test('''Class e{$u(_6,T_9:Array [Array [Int ,05],0B10010];F7,_W,__,_:zo05;_UT,_:Array [Array [Array [String ,03],0112],0112]){} }Class _hU:T{}''','''Class,e,{,$u,(,_6,,,T_9,:,Array,[,Array,[,Int,,,05,],,,0B10010,],;,F7,,,_W,,,__,,,_,:,zo05,;,_UT,,,_,:,Array,[,Array,[,Array,[,String,,,03,],,,0112,],,,0112,],),{,},},Class,_hU,:,T,{,},<EOF>''',101))

    def test_3486(self):
        self.assertTrue(TestLexer.test('''Class _:__{Constructor (FW64:String ;_,_,s_6_Hi:Float ){Var P2u6Sa_:Array [Array [Array [Array [Array [Boolean ,073],78],78],1],0x4A];} }''','''Class,_,:,__,{,Constructor,(,FW64,:,String,;,_,,,_,,,s_6_Hi,:,Float,),{,Var,P2u6Sa_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,073,],,,78,],,,78,],,,1,],,,0x4A,],;,},},<EOF>''',101))

    def test_3487(self):
        self.assertTrue(TestLexer.test('''Class __4W:a{}Class _B:_{}Class __{$7Lm_2xk(_A:Int ;N,_,IA_,__:String ;I5,_,_b290F,k:Array [Int ,52]){Return ;} }Class j{}''','''Class,__4W,:,a,{,},Class,_B,:,_,{,},Class,__,{,$7Lm_2xk,(,_A,:,Int,;,N,,,_,,,IA_,,,__,:,String,;,I5,,,_,,,_b290F,,,k,:,Array,[,Int,,,52,],),{,Return,;,},},Class,j,{,},<EOF>''',101))

    def test_3488(self):
        self.assertTrue(TestLexer.test('''Class O:_V{Destructor (){}$z(_:u;K_2:Array [Array [Float ,02],60];KV6,w,G7:E;_:Array [Array [Float ,0x3B],60]){} }Class L{}Class _{}Class Y_z:x5{Destructor (){}Val $y,$V:Array [Int ,60];Val $_:Float ;}''','''Class,O,:,_V,{,Destructor,(,),{,},$z,(,_,:,u,;,K_2,:,Array,[,Array,[,Float,,,02,],,,60,],;,KV6,,,w,,,G7,:,E,;,_,:,Array,[,Array,[,Float,,,0x3B,],,,60,],),{,},},Class,L,{,},Class,_,{,},Class,Y_z,:,x5,{,Destructor,(,),{,},Val,$y,,,$V,:,Array,[,Int,,,60,],;,Val,$_,:,Float,;,},<EOF>''',101))

    def test_3489(self):
        self.assertTrue(TestLexer.test('''Class i4_:w_{w(_,_:Array [String ,0B10];AW_,_,_7_4D,b_:String ;_,_5:Array [Array [Array [Int ,0B1],9],9];J5_8:Array [String ,0x22]){} }''','''Class,i4_,:,w_,{,w,(,_,,,_,:,Array,[,String,,,0B10,],;,AW_,,,_,,,_7_4D,,,b_,:,String,;,_,,,_5,:,Array,[,Array,[,Array,[,Int,,,0B1,],,,9,],,,9,],;,J5_8,:,Array,[,String,,,0x22,],),{,},},<EOF>''',101))

    def test_3490(self):
        self.assertTrue(TestLexer.test('''Class __:_7{Val $C:String ;Constructor (__,W,p9_,_,Q,o:Array [Array [Array [Float ,2],0X4_8],7]){}Var __,_,wX,_8,S:M40;}Class _{}''','''Class,__,:,_7,{,Val,$C,:,String,;,Constructor,(,__,,,W,,,p9_,,,_,,,Q,,,o,:,Array,[,Array,[,Array,[,Float,,,2,],,,0X48,],,,7,],),{,},Var,__,,,_,,,wX,,,_8,,,S,:,M40,;,},Class,_,{,},<EOF>''',101))

    def test_3491(self):
        self.assertTrue(TestLexer.test('''Class _G:_171_{}Class _{_GOO(_,__,C_V,uZ:String ;d:Int ;_,_,d:Array [Boolean ,0B1000000]){}Var $Wa:Array [Array [Float ,0b10000],01];}Class T{}''','''Class,_G,:,_171_,{,},Class,_,{,_GOO,(,_,,,__,,,C_V,,,uZ,:,String,;,d,:,Int,;,_,,,_,,,d,:,Array,[,Boolean,,,0B1000000,],),{,},Var,$Wa,:,Array,[,Array,[,Float,,,0b10000,],,,01,],;,},Class,T,{,},<EOF>''',101))

    def test_3492(self):
        self.assertTrue(TestLexer.test('''Class q_:D{Constructor (){}Constructor (__8,_:Array [Array [Int ,0XE],0B1]){ {}{Break ;} }}Class _1_2:__{Destructor (){} }''','''Class,q_,:,D,{,Constructor,(,),{,},Constructor,(,__8,,,_,:,Array,[,Array,[,Int,,,0XE,],,,0B1,],),{,{,},{,Break,;,},},},Class,_1_2,:,__,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3493(self):
        self.assertTrue(TestLexer.test('''Class a{c(FR61,_5,_s2,__:Int ;_:Array [Array [Array [Array [Array [String ,50],0X21],0x464],50],0xF]){Val c_5E,__2:UO3;} }''','''Class,a,{,c,(,FR61,,,_5,,,_s2,,,__,:,Int,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,50,],,,0X21,],,,0x464,],,,50,],,,0xF,],),{,Val,c_5E,,,__2,:,UO3,;,},},<EOF>''',101))

    def test_3494(self):
        self.assertTrue(TestLexer.test('''Class b{}Class __{}Class _:_e3s_8{}Class _L_:_Q_{Destructor (){__::$3_1._();}Val Z:Array [Float ,0X7_8];Destructor (){ {} }}''','''Class,b,{,},Class,__,{,},Class,_,:,_e3s_8,{,},Class,_L_,:,_Q_,{,Destructor,(,),{,__,::,$3_1,.,_,(,),;,},Val,Z,:,Array,[,Float,,,0X78,],;,Destructor,(,),{,{,},},},<EOF>''',101))

    def test_3495(self):
        self.assertTrue(TestLexer.test('''Class __:ku{Val $32:Boolean ;Constructor (){Val O_,p_:Array [Int ,0B1];} }Class __W_P:gi4{Constructor (){} }Class V:_L{}''','''Class,__,:,ku,{,Val,$32,:,Boolean,;,Constructor,(,),{,Val,O_,,,p_,:,Array,[,Int,,,0B1,],;,},},Class,__W_P,:,gi4,{,Constructor,(,),{,},},Class,V,:,_L,{,},<EOF>''',101))

    def test_3496(self):
        self.assertTrue(TestLexer.test('''Class o{Val _:Int ;Constructor (jD_q:Array [String ,0B110010];__L,_:Array [Float ,0x59]){} }Class J:AR{}Class H_:S{}Class q{}''','''Class,o,{,Val,_,:,Int,;,Constructor,(,jD_q,:,Array,[,String,,,0B110010,],;,__L,,,_,:,Array,[,Float,,,0x59,],),{,},},Class,J,:,AR,{,},Class,H_,:,S,{,},Class,q,{,},<EOF>''',101))

    def test_3497(self):
        self.assertTrue(TestLexer.test('''Class j:_e{Destructor (){Continue ;}Constructor (_,O7_:Array [Float ,0xE];_,__:Array [Float ,07];_,P6:n2;_7:O){Break ;Var Op,f,__8_,D,_Xw05,e,t_:n_;} }''','''Class,j,:,_e,{,Destructor,(,),{,Continue,;,},Constructor,(,_,,,O7_,:,Array,[,Float,,,0xE,],;,_,,,__,:,Array,[,Float,,,07,],;,_,,,P6,:,n2,;,_7,:,O,),{,Break,;,Var,Op,,,f,,,__8_,,,D,,,_Xw05,,,e,,,t_,:,n_,;,},},<EOF>''',101))

    def test_3498(self):
        self.assertTrue(TestLexer.test('''Class V23{Val $_P,_L:Array [Boolean ,0X1];Val $i_y:Array [Array [String ,0B1010011],0X2E];Var _:Boolean ;}Class y{}Class w:_{}''','''Class,V23,{,Val,$_P,,,_L,:,Array,[,Boolean,,,0X1,],;,Val,$i_y,:,Array,[,Array,[,String,,,0B1010011,],,,0X2E,],;,Var,_,:,Boolean,;,},Class,y,{,},Class,w,:,_,{,},<EOF>''',101))

    def test_3499(self):
        self.assertTrue(TestLexer.test('''Class r_:O{Var $4,V:Array [Array [Array [Float ,0100],0100],3_9_8_4];x(_:Boolean ;_Q_:_U){}Constructor (_:Float ;E1VN4,_sO:Float ){} }Class _:N{}Class _o{}''','''Class,r_,:,O,{,Var,$4,,,V,:,Array,[,Array,[,Array,[,Float,,,0100,],,,0100,],,,3984,],;,x,(,_,:,Boolean,;,_Q_,:,_U,),{,},Constructor,(,_,:,Float,;,E1VN4,,,_sO,:,Float,),{,},},Class,_,:,N,{,},Class,_o,{,},<EOF>''',101))

    def test_3500(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _:_{$A(d:String ;N,w2,x_:S;j6_29Y_,_m:String ;__,t_9:Array [Array [String ,0B1],0XD2D]){} }Class _62:t{}Class _{}''','''Class,_,:,_,{,},Class,_,:,_,{,$A,(,d,:,String,;,N,,,w2,,,x_,:,S,;,j6_29Y_,,,_m,:,String,;,__,,,t_9,:,Array,[,Array,[,String,,,0B1,],,,0XD2D,],),{,},},Class,_62,:,t,{,},Class,_,{,},<EOF>''',101))

    def test_3501(self):
        self.assertTrue(TestLexer.test('''Class _{}Class y4{Constructor (){}M(TH:Array [Int ,8];_,E5,f_Z7:String ;_02N:Array [Float ,0XB];u_:C;V9_7:Y27;_:__;s4,v9q_,K4:_t;t:Array [Array [Array [Int ,0B11000],0x1C],0x5_5_1B];p5,_d:Int ;L_S,W,_4:String ;j,C3s,E_,r8b5j:P_;_q:String ){} }Class _63:R{}''','''Class,_,{,},Class,y4,{,Constructor,(,),{,},M,(,TH,:,Array,[,Int,,,8,],;,_,,,E5,,,f_Z7,:,String,;,_02N,:,Array,[,Float,,,0XB,],;,u_,:,C,;,V9_7,:,Y27,;,_,:,__,;,s4,,,v9q_,,,K4,:,_t,;,t,:,Array,[,Array,[,Array,[,Int,,,0B11000,],,,0x1C,],,,0x551B,],;,p5,,,_d,:,Int,;,L_S,,,W,,,_4,:,String,;,j,,,C3s,,,E_,,,r8b5j,:,P_,;,_q,:,String,),{,},},Class,_63,:,R,{,},<EOF>''',101))

    def test_3502(self):
        self.assertTrue(TestLexer.test('''Class _0{Destructor (){}Constructor (_,_77p,_,_:__00;P,s3,_p:b;l,_,y98y__,n_,___,Z_,___i,_nk:Array [Int ,0b1_1];A,k:Array [Boolean ,0x47];_,N:Boolean ){} }''','''Class,_0,{,Destructor,(,),{,},Constructor,(,_,,,_77p,,,_,,,_,:,__00,;,P,,,s3,,,_p,:,b,;,l,,,_,,,y98y__,,,n_,,,___,,,Z_,,,___i,,,_nk,:,Array,[,Int,,,0b11,],;,A,,,k,:,Array,[,Boolean,,,0x47,],;,_,,,N,:,Boolean,),{,},},<EOF>''',101))

    def test_3503(self):
        self.assertTrue(TestLexer.test('''Class F{Val o:Boolean ;Constructor (X3Y:Array [Array [String ,8],0X5D]){}Val $_6,$_:Array [Float ,5_5];}Class dr_Y_T_:yF7_{}Class _4{}Class L2{}''','''Class,F,{,Val,o,:,Boolean,;,Constructor,(,X3Y,:,Array,[,Array,[,String,,,8,],,,0X5D,],),{,},Val,$_6,,,$_,:,Array,[,Float,,,55,],;,},Class,dr_Y_T_,:,yF7_,{,},Class,_4,{,},Class,L2,{,},<EOF>''',101))

    def test_3504(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){Continue ;}w(){Break ;}Constructor (d7:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0b11100],0b1_0],0xC],06],0B1001010],0x1],0X6],0b11100]){} }''','''Class,_,{,Destructor,(,),{,Continue,;,},w,(,),{,Break,;,},Constructor,(,d7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b11100,],,,0b10,],,,0xC,],,,06,],,,0B1001010,],,,0x1,],,,0X6,],,,0b11100,],),{,},},<EOF>''',101))

    def test_3505(self):
        self.assertTrue(TestLexer.test('''Class _:_9{}Class _4{}Class _:Rj{}Class q_{Constructor (_0__:String ){}_(){Break ;{Var _,Rw,L_Z_,___,k,z:Array [Boolean ,0X76F9];Break ;} }}Class UH_2:c{}Class _:_4{}''','''Class,_,:,_9,{,},Class,_4,{,},Class,_,:,Rj,{,},Class,q_,{,Constructor,(,_0__,:,String,),{,},_,(,),{,Break,;,{,Var,_,,,Rw,,,L_Z_,,,___,,,k,,,z,:,Array,[,Boolean,,,0X76F9,],;,Break,;,},},},Class,UH_2,:,c,{,},Class,_,:,_4,{,},<EOF>''',101))

    def test_3506(self):
        self.assertTrue(TestLexer.test('''Class _n{}Class _n:_b{Val Q:Float ;Constructor (xD,_5:Float ;_:Array [String ,0b1111]){Return ;}Constructor (_v,_1,__,_7:Boolean ;b_:Array [Array [Array [Array [String ,0X66],0b1_0_0_0_1_1],0X9_B],036];_u:Int ;_:H;_S6_F,_,X:Array [Boolean ,04_6];f6_,_:Float ;_:_6){} }Class f_:_{Var $5_,K_:Array [Array [Int ,036],036];}''','''Class,_n,{,},Class,_n,:,_b,{,Val,Q,:,Float,;,Constructor,(,xD,,,_5,:,Float,;,_,:,Array,[,String,,,0b1111,],),{,Return,;,},Constructor,(,_v,,,_1,,,__,,,_7,:,Boolean,;,b_,:,Array,[,Array,[,Array,[,Array,[,String,,,0X66,],,,0b100011,],,,0X9B,],,,036,],;,_u,:,Int,;,_,:,H,;,_S6_F,,,_,,,X,:,Array,[,Boolean,,,046,],;,f6_,,,_,:,Float,;,_,:,_6,),{,},},Class,f_,:,_,{,Var,$5_,,,K_,:,Array,[,Array,[,Int,,,036,],,,036,],;,},<EOF>''',101))

    def test_3507(self):
        self.assertTrue(TestLexer.test('''Class Q{}Class P2:u0{$_2_(J_,s,I1:Array [Float ,070];E:Array [Array [Float ,0x4],0X24];i,_y:_2;_5:X){}Var O,$3,K:_;}Class _52{_(){} }''','''Class,Q,{,},Class,P2,:,u0,{,$_2_,(,J_,,,s,,,I1,:,Array,[,Float,,,070,],;,E,:,Array,[,Array,[,Float,,,0x4,],,,0X24,],;,i,,,_y,:,_2,;,_5,:,X,),{,},Var,O,,,$3,,,K,:,_,;,},Class,_52,{,_,(,),{,},},<EOF>''',101))

    def test_3508(self):
        self.assertTrue(TestLexer.test('''Class m{Val $658,$__7b:Boolean ;Val $A:Array [Array [Float ,0x2],0b1_1]=!!!_::$9_n()._();Val $88iT_7,B,$7:Array [Int ,036];}Class d{}Class ___o_{Val _:Array [Array [Array [String ,0B1],8],0B1000101];}''','''Class,m,{,Val,$658,,,$__7b,:,Boolean,;,Val,$A,:,Array,[,Array,[,Float,,,0x2,],,,0b11,],=,!,!,!,_,::,$9_n,(,),.,_,(,),;,Val,$88iT_7,,,B,,,$7,:,Array,[,Int,,,036,],;,},Class,d,{,},Class,___o_,{,Val,_,:,Array,[,Array,[,Array,[,String,,,0B1,],,,8,],,,0B1000101,],;,},<EOF>''',101))

    def test_3509(self):
        self.assertTrue(TestLexer.test('''Class Ai_:F4J_{Constructor (_:Int ){Continue ;}Val o9,$9,$__:_;Val $_2:Array [Float ,2_7_3_5];Val _x1:Array [String ,0x6_EF_9];}Class _:_{}''','''Class,Ai_,:,F4J_,{,Constructor,(,_,:,Int,),{,Continue,;,},Val,o9,,,$9,,,$__,:,_,;,Val,$_2,:,Array,[,Float,,,2735,],;,Val,_x1,:,Array,[,String,,,0x6EF9,],;,},Class,_,:,_,{,},<EOF>''',101))

    def test_3510(self):
        self.assertTrue(TestLexer.test('''Class I4j:G5_7_{Constructor (W_j,_:Boolean ;__:Array [Array [Float ,02_4],010];_,_T:Int ;_v_,_S_,_:Array [Array [String ,0X3D],052_3]){Val I2:String ;} }''','''Class,I4j,:,G5_7_,{,Constructor,(,W_j,,,_,:,Boolean,;,__,:,Array,[,Array,[,Float,,,024,],,,010,],;,_,,,_T,:,Int,;,_v_,,,_S_,,,_,:,Array,[,Array,[,String,,,0X3D,],,,0523,],),{,Val,I2,:,String,;,},},<EOF>''',101))

    def test_3511(self):
        self.assertTrue(TestLexer.test('''Class P70{}Class S2_:qR{R_c5(z8,S:Array [Int ,0x23];U_,t:Array [Array [Array [Float ,0B111100],0b1],0x4];x:Array [Int ,0b1_0_1]){} }Class _:__O{}Class _:X1{}''','''Class,P70,{,},Class,S2_,:,qR,{,R_c5,(,z8,,,S,:,Array,[,Int,,,0x23,],;,U_,,,t,:,Array,[,Array,[,Array,[,Float,,,0B111100,],,,0b1,],,,0x4,],;,x,:,Array,[,Int,,,0b101,],),{,},},Class,_,:,__O,{,},Class,_,:,X1,{,},<EOF>''',101))

    def test_3512(self):
        self.assertTrue(TestLexer.test('''Class NX{$_Z(__6,_:Array [Array [Array [Array [Array [Float ,0xD_E_6],85],0X2],0x43],0X39];c,_,Ok:Boolean ){} }Class __R_1:_{}''','''Class,NX,{,$_Z,(,__6,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0xDE6,],,,85,],,,0X2,],,,0x43,],,,0X39,],;,c,,,_,,,Ok,:,Boolean,),{,},},Class,__R_1,:,_,{,},<EOF>''',101))

    def test_3513(self):
        self.assertTrue(TestLexer.test('''Class _:l{Val $endT,AIc7,$90__2,R_2I4:Int ;Val $2_:B8;Destructor (){}$o(){Continue ;Continue ;} }Class U{_4(){} }''','''Class,_,:,l,{,Val,$endT,,,AIc7,,,$90__2,,,R_2I4,:,Int,;,Val,$2_,:,B8,;,Destructor,(,),{,},$o,(,),{,Continue,;,Continue,;,},},Class,U,{,_4,(,),{,},},<EOF>''',101))

    def test_3514(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class Jz:_{}Class P:g08e{Constructor (){} }Class _6:_09__{}Class u:_{Var _:M7;}Class _um{Constructor (_hY,_:Array [Float ,0b11000]){}Val _,_c_,__y_:_;Var $0GX:Array [Array [Float ,064],0763];}''','''Class,_,:,_,{,},Class,Jz,:,_,{,},Class,P,:,g08e,{,Constructor,(,),{,},},Class,_6,:,_09__,{,},Class,u,:,_,{,Var,_,:,M7,;,},Class,_um,{,Constructor,(,_hY,,,_,:,Array,[,Float,,,0b11000,],),{,},Val,_,,,_c_,,,__y_,:,_,;,Var,$0GX,:,Array,[,Array,[,Float,,,064,],,,0763,],;,},<EOF>''',101))

    def test_3515(self):
        self.assertTrue(TestLexer.test('''Class _C7K:_{}Class z{Constructor (){Continue ;Val W,e:Array [String ,0B111101];Continue ;Break ;} }Class _{}Class I_:_Q{}''','''Class,_C7K,:,_,{,},Class,z,{,Constructor,(,),{,Continue,;,Val,W,,,e,:,Array,[,String,,,0B111101,],;,Continue,;,Break,;,},},Class,_,{,},Class,I_,:,_Q,{,},<EOF>''',101))

    def test_3516(self):
        self.assertTrue(TestLexer.test('''Class x{}Class __:_9{Val $__,_U,_4B:Boolean ;Constructor (__:Array [Float ,2];_4_:_;_,_,_,_0:Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0x2F],05],065],0X3],0b1000011],0xD],065],0B101000];_,_:K;_:String ){Break ;} }''','''Class,x,{,},Class,__,:,_9,{,Val,$__,,,_U,,,_4B,:,Boolean,;,Constructor,(,__,:,Array,[,Float,,,2,],;,_4_,:,_,;,_,,,_,,,_,,,_0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x2F,],,,05,],,,065,],,,0X3,],,,0b1000011,],,,0xD,],,,065,],,,0B101000,],;,_,,,_,:,K,;,_,:,String,),{,Break,;,},},<EOF>''',101))

    def test_3517(self):
        self.assertTrue(TestLexer.test('''Class M3{Var _:Array [String ,0b100100];Constructor (_,_l____,I,_:Array [Array [Array [Array [Array [Boolean ,040],0xB],74],0X28],0x31]){} }Class O8777{Var $4m__,$d_a:Array [Float ,2];}Class bF_{_(){}Var $u,R01:String ;Var $8_:String ;}''','''Class,M3,{,Var,_,:,Array,[,String,,,0b100100,],;,Constructor,(,_,,,_l____,,,I,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,040,],,,0xB,],,,74,],,,0X28,],,,0x31,],),{,},},Class,O8777,{,Var,$4m__,,,$d_a,:,Array,[,Float,,,2,],;,},Class,bF_,{,_,(,),{,},Var,$u,,,R01,:,String,;,Var,$8_,:,String,;,},<EOF>''',101))

    def test_3518(self):
        self.assertTrue(TestLexer.test('''Class __Y{$vz(c:Int ){}$_(b:Array [Boolean ,97];SF,_06,f1,__d6:Array [Array [Array [Array [Boolean ,97],0b1001],02],0B1_0_0]){} }''','''Class,__Y,{,$vz,(,c,:,Int,),{,},$_,(,b,:,Array,[,Boolean,,,97,],;,SF,,,_06,,,f1,,,__d6,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,97,],,,0b1001,],,,02,],,,0B100,],),{,},},<EOF>''',101))

    def test_3519(self):
        self.assertTrue(TestLexer.test('''Class _9_{Destructor (){}Val $B_8:o;}Class C93__{Constructor (Q:__0;d_9:Boolean ){}Val R8,_0:D_;}Class SO:qZeRg5{}''','''Class,_9_,{,Destructor,(,),{,},Val,$B_8,:,o,;,},Class,C93__,{,Constructor,(,Q,:,__0,;,d_9,:,Boolean,),{,},Val,R8,,,_0,:,D_,;,},Class,SO,:,qZeRg5,{,},<EOF>''',101))

    def test_3520(self):
        self.assertTrue(TestLexer.test('''Class ___:_7P{Var _,f,ul_,$N,z:O8;}Class A{Val __,$5:Array [Array [Array [Array [Boolean ,0b111100],0x4E],6],0127];Destructor (){Continue ;}Val _,v4M5h:String ;}Class Sb:a{}''','''Class,___,:,_7P,{,Var,_,,,f,,,ul_,,,$N,,,z,:,O8,;,},Class,A,{,Val,__,,,$5,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b111100,],,,0x4E,],,,6,],,,0127,],;,Destructor,(,),{,Continue,;,},Val,_,,,v4M5h,:,String,;,},Class,Sb,:,a,{,},<EOF>''',101))

    def test_3521(self):
        self.assertTrue(TestLexer.test('''Class _3{}Class B7:_7_{Constructor (_,_T,_:U){}$_(a:_;E:Array [Float ,0X35]){}Var $ot6o:_c7n=!_::$_._;W(){} }''','''Class,_3,{,},Class,B7,:,_7_,{,Constructor,(,_,,,_T,,,_,:,U,),{,},$_,(,a,:,_,;,E,:,Array,[,Float,,,0X35,],),{,},Var,$ot6o,:,_c7n,=,!,_,::,$_,.,_,;,W,(,),{,},},<EOF>''',101))

    def test_3522(self):
        self.assertTrue(TestLexer.test('''Class e{Destructor (){}Destructor (){}F(){}Destructor (){} }Class W{}Class P{Var I,_,$___7:uN6_7S;Val $_l:Boolean ;}''','''Class,e,{,Destructor,(,),{,},Destructor,(,),{,},F,(,),{,},Destructor,(,),{,},},Class,W,{,},Class,P,{,Var,I,,,_,,,$___7,:,uN6_7S,;,Val,$_l,:,Boolean,;,},<EOF>''',101))

    def test_3523(self):
        self.assertTrue(TestLexer.test('''Class _eC{Destructor (){}L(r_a_:Array [Int ,0B1];_8,_,N,_:__Z;__:Array [Array [Float ,0X8],0B1001101];_:Array [Array [Array [String ,02_0],0B10_1_1],0B1001101]){} }''','''Class,_eC,{,Destructor,(,),{,},L,(,r_a_,:,Array,[,Int,,,0B1,],;,_8,,,_,,,N,,,_,:,__Z,;,__,:,Array,[,Array,[,Float,,,0X8,],,,0B1001101,],;,_,:,Array,[,Array,[,Array,[,String,,,020,],,,0B1011,],,,0B1001101,],),{,},},<EOF>''',101))

    def test_3524(self):
        self.assertTrue(TestLexer.test('''Class _{}Class J{Destructor (){}z(_:Hjm;__T,_:___;_7_8_,I:Array [Array [Array [Boolean ,83],031],0X814]){} }Class __{}Class r{Var $_:Array [Boolean ,0B110101];Var $3__,_,$_:Array [Boolean ,0B1];}''','''Class,_,{,},Class,J,{,Destructor,(,),{,},z,(,_,:,Hjm,;,__T,,,_,:,___,;,_7_8_,,,I,:,Array,[,Array,[,Array,[,Boolean,,,83,],,,031,],,,0X814,],),{,},},Class,__,{,},Class,r,{,Var,$_,:,Array,[,Boolean,,,0B110101,],;,Var,$3__,,,_,,,$_,:,Array,[,Boolean,,,0B1,],;,},<EOF>''',101))

    def test_3525(self):
        self.assertTrue(TestLexer.test('''Class Hw__{Constructor (I,RT:Array [String ,015];_:Array [Boolean ,50]){} }Class BA:_{Constructor (_s0P:Array [Boolean ,50];___:d_k_){} }''','''Class,Hw__,{,Constructor,(,I,,,RT,:,Array,[,String,,,015,],;,_,:,Array,[,Boolean,,,50,],),{,},},Class,BA,:,_,{,Constructor,(,_s0P,:,Array,[,Boolean,,,50,],;,___,:,d_k_,),{,},},<EOF>''',101))

    def test_3526(self):
        self.assertTrue(TestLexer.test('''Class I_{Destructor (){}Var I,$1,$2,J,J_2:Array [Array [Int ,89],0X7];}Class D:Z_u35{}Class _:_0{}Class h_:_4W{Constructor (){} }''','''Class,I_,{,Destructor,(,),{,},Var,I,,,$1,,,$2,,,J,,,J_2,:,Array,[,Array,[,Int,,,89,],,,0X7,],;,},Class,D,:,Z_u35,{,},Class,_,:,_0,{,},Class,h_,:,_4W,{,Constructor,(,),{,},},<EOF>''',101))

    def test_3527(self):
        self.assertTrue(TestLexer.test('''Class _:X{Constructor (){} }Class __{}Class _q{}Class v7Q:C5{}Class r_{}Class _j3r{Var w6:Array [Boolean ,0X14];}Class _:aPL{}''','''Class,_,:,X,{,Constructor,(,),{,},},Class,__,{,},Class,_q,{,},Class,v7Q,:,C5,{,},Class,r_,{,},Class,_j3r,{,Var,w6,:,Array,[,Boolean,,,0X14,],;,},Class,_,:,aPL,{,},<EOF>''',101))

    def test_3528(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _g___{Val $J__:A;Val $_2:Array [Array [Boolean ,0b1],3_6];Constructor (){}Constructor (_,Y:Boolean ;_,ieS5FS_,F_:s_;_,T,j_:Array [Boolean ,0x45]){Break ;} }Class _:_{Destructor (){} }''','''Class,_,{,},Class,_g___,{,Val,$J__,:,A,;,Val,$_2,:,Array,[,Array,[,Boolean,,,0b1,],,,36,],;,Constructor,(,),{,},Constructor,(,_,,,Y,:,Boolean,;,_,,,ieS5FS_,,,F_,:,s_,;,_,,,T,,,j_,:,Array,[,Boolean,,,0x45,],),{,Break,;,},},Class,_,:,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3529(self):
        self.assertTrue(TestLexer.test('''Class s_1{}Class __2{$1__(U__:String ){ {Continue ;} }Var $76e0:Array [Array [Array [Int ,03],74],0x46];Constructor (){}Constructor (N,MICf:_;_,_G_:Array [Array [Array [Int ,0b1],0b1010000],0XE];t6e,n:Array [Float ,04];e_Z6k9,x,_,Js:Float ;_:Float ;n9,_,y,L,_:b;r:Int ){} }Class __{Constructor (_,_:Array [Int ,74];_,C__6:Array [String ,0b1_0_1_1];vR,M4_y__:Array [Int ,03];o,v,Ds_9:Array [Array [Array [String ,03],01],0b1]){}Constructor (){} }Class _{}Class b__{Var pj_5,_:_S__9_;Constructor (){}Destructor (){}$C(){}Constructor (){} }''','''Class,s_1,{,},Class,__2,{,$1__,(,U__,:,String,),{,{,Continue,;,},},Var,$76e0,:,Array,[,Array,[,Array,[,Int,,,03,],,,74,],,,0x46,],;,Constructor,(,),{,},Constructor,(,N,,,MICf,:,_,;,_,,,_G_,:,Array,[,Array,[,Array,[,Int,,,0b1,],,,0b1010000,],,,0XE,],;,t6e,,,n,:,Array,[,Float,,,04,],;,e_Z6k9,,,x,,,_,,,Js,:,Float,;,_,:,Float,;,n9,,,_,,,y,,,L,,,_,:,b,;,r,:,Int,),{,},},Class,__,{,Constructor,(,_,,,_,:,Array,[,Int,,,74,],;,_,,,C__6,:,Array,[,String,,,0b1011,],;,vR,,,M4_y__,:,Array,[,Int,,,03,],;,o,,,v,,,Ds_9,:,Array,[,Array,[,Array,[,String,,,03,],,,01,],,,0b1,],),{,},Constructor,(,),{,},},Class,_,{,},Class,b__,{,Var,pj_5,,,_,:,_S__9_,;,Constructor,(,),{,},Destructor,(,),{,},$C,(,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_3530(self):
        self.assertTrue(TestLexer.test('''Class g__GG{Constructor (){}Constructor (z,pO,_E3:Array [Array [Array [Array [Float ,0126],07],0b100],0X4_8_7B_E_F2F_2]){Val __62B4,U__,_,yvc,_03q,_,_,_:Array [Array [Array [Boolean ,0126],06],6_0];}Var $s_,K_,$__,s,$z____5:__v;Destructor (){} }''','''Class,g__GG,{,Constructor,(,),{,},Constructor,(,z,,,pO,,,_E3,:,Array,[,Array,[,Array,[,Array,[,Float,,,0126,],,,07,],,,0b100,],,,0X487BEF2F2,],),{,Val,__62B4,,,U__,,,_,,,yvc,,,_03q,,,_,,,_,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0126,],,,06,],,,60,],;,},Var,$s_,,,K_,,,$__,,,s,,,$z____5,:,__v,;,Destructor,(,),{,},},<EOF>''',101))

    def test_3531(self):
        self.assertTrue(TestLexer.test('''Class _{Q(Rzur_:Boolean ;i_:Array [Float ,0X2D];__:o_;Dc:M){Val _,C60_,V9T:f;Var p:A;} }Class l:O38{Val $up,w2,Aj:Float ;_FG7(h4___0,f_,_1_7,M:String ;_84:Array [Array [Array [Boolean ,04],6],0B1]){}Var $Z31G:S1;}Class _09{}Class _{Destructor (){} }''','''Class,_,{,Q,(,Rzur_,:,Boolean,;,i_,:,Array,[,Float,,,0X2D,],;,__,:,o_,;,Dc,:,M,),{,Val,_,,,C60_,,,V9T,:,f,;,Var,p,:,A,;,},},Class,l,:,O38,{,Val,$up,,,w2,,,Aj,:,Float,;,_FG7,(,h4___0,,,f_,,,_1_7,,,M,:,String,;,_84,:,Array,[,Array,[,Array,[,Boolean,,,04,],,,6,],,,0B1,],),{,},Var,$Z31G,:,S1,;,},Class,_09,{,},Class,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3532(self):
        self.assertTrue(TestLexer.test('''Class __:_{$_8(M:Array [Int ,0b1010101]){}$__(_:Boolean ;__,__,_:Array [Array [Array [Float ,84],7_6_0_3],04];M,KX_,w3:___j_7){}_V(){}Destructor (){} }''','''Class,__,:,_,{,$_8,(,M,:,Array,[,Int,,,0b1010101,],),{,},$__,(,_,:,Boolean,;,__,,,__,,,_,:,Array,[,Array,[,Array,[,Float,,,84,],,,7603,],,,04,],;,M,,,KX_,,,w3,:,___j_7,),{,},_V,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_3533(self):
        self.assertTrue(TestLexer.test('''Class _{Val P:bSy__;n(){Val _g_3_,t,O,XF8K_9H:Array [Array [Array [Array [Boolean ,036],0XF],99],0b110011];}Var _:Int ;}Class cTwx_619_{_(){} }''','''Class,_,{,Val,P,:,bSy__,;,n,(,),{,Val,_g_3_,,,t,,,O,,,XF8K_9H,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,036,],,,0XF,],,,99,],,,0b110011,],;,},Var,_,:,Int,;,},Class,cTwx_619_,{,_,(,),{,},},<EOF>''',101))

    def test_3534(self):
        self.assertTrue(TestLexer.test('''Class __{Destructor (){}$72(__,v0_9:Array [Boolean ,85];_,a,r,__:Array [Array [Array [Array [Array [Float ,1],0b1001100],0X3],0121],0B11]){} }''','''Class,__,{,Destructor,(,),{,},$72,(,__,,,v0_9,:,Array,[,Boolean,,,85,],;,_,,,a,,,r,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,1,],,,0b1001100,],,,0X3,],,,0121,],,,0B11,],),{,},},<EOF>''',101))

    def test_3535(self):
        self.assertTrue(TestLexer.test('''Class _x45:IW_83_{}Class T_{Val o,$_:Array [Array [Array [Array [Array [Array [Int ,0b110110],0B1],0100],0x3],0x1_D],0b1];Var k,$S_:F;}Class B:v{}''','''Class,_x45,:,IW_83_,{,},Class,T_,{,Val,o,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b110110,],,,0B1,],,,0100,],,,0x3,],,,0x1D,],,,0b1,],;,Var,k,,,$S_,:,F,;,},Class,B,:,v,{,},<EOF>''',101))

    def test_3536(self):
        self.assertTrue(TestLexer.test('''Class v{Val ___,$6,$V:Array [Boolean ,01];x_bFl10(vm,_:Float ;J,_6,tj:_){} }Class _43Pq5m{Val $_:Array [Array [Array [Boolean ,07_0_302],0133],05];}''','''Class,v,{,Val,___,,,$6,,,$V,:,Array,[,Boolean,,,01,],;,x_bFl10,(,vm,,,_,:,Float,;,J,,,_6,,,tj,:,_,),{,},},Class,_43Pq5m,{,Val,$_,:,Array,[,Array,[,Array,[,Boolean,,,070302,],,,0133,],,,05,],;,},<EOF>''',101))

    def test_3537(self):
        self.assertTrue(TestLexer.test('''Class _4:X_8{}Class __{$2(_,l:Array [Array [Float ,0135],0135];g1__:__9sp___;_g0J,k7_,_:Float ;_t0,_,N9:String ;B,bND:Array [Float ,82]){}Constructor (A,i:Float ){}Destructor (){}Var b6,_:Array [Int ,0X30];}Class _:k{Val OY:Array [Array [Array [Array [Array [Array [Array [Int ,0135],0b1_0],0x27],0X30],0x27],78_6],82];Destructor (){Break ;} }''','''Class,_4,:,X_8,{,},Class,__,{,$2,(,_,,,l,:,Array,[,Array,[,Float,,,0135,],,,0135,],;,g1__,:,__9sp___,;,_g0J,,,k7_,,,_,:,Float,;,_t0,,,_,,,N9,:,String,;,B,,,bND,:,Array,[,Float,,,82,],),{,},Constructor,(,A,,,i,:,Float,),{,},Destructor,(,),{,},Var,b6,,,_,:,Array,[,Int,,,0X30,],;,},Class,_,:,k,{,Val,OY,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0135,],,,0b10,],,,0x27,],,,0X30,],,,0x27,],,,786,],,,82,],;,Destructor,(,),{,Break,;,},},<EOF>''',101))

    def test_3538(self):
        self.assertTrue(TestLexer.test('''Class _47:z_4K{}Class _{$j77(){ {Break ;Break ;} }}Class lA:cqTL{_(_,De,_,r7,g_9_:String ;_:Array [Boolean ,0x43];V:Int ;_Y8,L,V:Float ){}Destructor (){ {} }}''','''Class,_47,:,z_4K,{,},Class,_,{,$j77,(,),{,{,Break,;,Break,;,},},},Class,lA,:,cqTL,{,_,(,_,,,De,,,_,,,r7,,,g_9_,:,String,;,_,:,Array,[,Boolean,,,0x43,],;,V,:,Int,;,_Y8,,,L,,,V,:,Float,),{,},Destructor,(,),{,{,},},},<EOF>''',101))

    def test_3539(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _{}Class _:_{$8_(Fo:Array [Array [Array [Int ,0B1000001],06_2_22],0x19];P,i:String ;c,O3A:Array [Float ,0b1];J:Array [String ,0104];VP8,_,_:Array [Float ,0x19];__dI0,_:Array [Int ,0X5E];_:_;_q_:_;__:_7;Oc:_;_,nQ,_:Array [Array [Float ,4],0B1000001];sc:Array [Array [Array [Array [String ,0xF],10_4],59],0XC6F];Z,W:Float ){} }''','''Class,_,{,},Class,_,{,},Class,_,:,_,{,$8_,(,Fo,:,Array,[,Array,[,Array,[,Int,,,0B1000001,],,,06222,],,,0x19,],;,P,,,i,:,String,;,c,,,O3A,:,Array,[,Float,,,0b1,],;,J,:,Array,[,String,,,0104,],;,VP8,,,_,,,_,:,Array,[,Float,,,0x19,],;,__dI0,,,_,:,Array,[,Int,,,0X5E,],;,_,:,_,;,_q_,:,_,;,__,:,_7,;,Oc,:,_,;,_,,,nQ,,,_,:,Array,[,Array,[,Float,,,4,],,,0B1000001,],;,sc,:,Array,[,Array,[,Array,[,Array,[,String,,,0xF,],,,104,],,,59,],,,0XC6F,],;,Z,,,W,:,Float,),{,},},<EOF>''',101))

    def test_3540(self):
        self.assertTrue(TestLexer.test('''Class _:_5{}Class T:_{Constructor (_:A_;t4,t,x8_:Float ){}Val $_:Array [Array [String ,1],0X4_A];Var $_:Boolean ;}''','''Class,_,:,_5,{,},Class,T,:,_,{,Constructor,(,_,:,A_,;,t4,,,t,,,x8_,:,Float,),{,},Val,$_,:,Array,[,Array,[,String,,,1,],,,0X4A,],;,Var,$_,:,Boolean,;,},<EOF>''',101))

    def test_3541(self):
        self.assertTrue(TestLexer.test('''Class Q4:i_{Val _,$9_,s,m7:Array [Boolean ,0x5];}Class __{}Class _1{Var $f,H,_,$_:Array [Int ,06671];}Class _0:r39_{_(_:Array [Array [Array [Array [Array [Array [Int ,0x37],0X26],0127],6],97],0127_0_5]){} }''','''Class,Q4,:,i_,{,Val,_,,,$9_,,,s,,,m7,:,Array,[,Boolean,,,0x5,],;,},Class,__,{,},Class,_1,{,Var,$f,,,H,,,_,,,$_,:,Array,[,Int,,,06671,],;,},Class,_0,:,r39_,{,_,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0x37,],,,0X26,],,,0127,],,,6,],,,97,],,,012705,],),{,},},<EOF>''',101))

    def test_3542(self):
        self.assertTrue(TestLexer.test('''Class Md{Val $0_,m:Boolean ;Var _,$p,$86:String ;Constructor (_s:Boolean ){} }Class _{}Class _{_p2(){} }Class _{Destructor (){} }Class C:e_{}''','''Class,Md,{,Val,$0_,,,m,:,Boolean,;,Var,_,,,$p,,,$86,:,String,;,Constructor,(,_s,:,Boolean,),{,},},Class,_,{,},Class,_,{,_p2,(,),{,},},Class,_,{,Destructor,(,),{,},},Class,C,:,e_,{,},<EOF>''',101))

    def test_3543(self):
        self.assertTrue(TestLexer.test('''Class CK:_{Val $_,_:String ;Destructor (){}Val P:_;Destructor (){Continue ;}Var $7_:Array [Array [String ,0x6_E],0B1000011];}''','''Class,CK,:,_,{,Val,$_,,,_,:,String,;,Destructor,(,),{,},Val,P,:,_,;,Destructor,(,),{,Continue,;,},Var,$7_,:,Array,[,Array,[,String,,,0x6E,],,,0B1000011,],;,},<EOF>''',101))

    def test_3544(self):
        self.assertTrue(TestLexer.test('''Class J:_O{}Class d_F_{}Class W:f{}Class _:OY{Destructor (){} }Class _{$D(){V_::$_();}Var $_,_:Array [Array [Float ,72],043];}''','''Class,J,:,_O,{,},Class,d_F_,{,},Class,W,:,f,{,},Class,_,:,OY,{,Destructor,(,),{,},},Class,_,{,$D,(,),{,V_,::,$_,(,),;,},Var,$_,,,_,:,Array,[,Array,[,Float,,,72,],,,043,],;,},<EOF>''',101))

    def test_3545(self):
        self.assertTrue(TestLexer.test('''Class z:N4{$__(w:Array [Array [Array [Int ,87],6],9];_n,_e_,_:K;A8_,r2w:__;_,Q_,A:X){ {} }}Class Ko3__{Val $9A463:Array [Int ,9];}''','''Class,z,:,N4,{,$__,(,w,:,Array,[,Array,[,Array,[,Int,,,87,],,,6,],,,9,],;,_n,,,_e_,,,_,:,K,;,A8_,,,r2w,:,__,;,_,,,Q_,,,A,:,X,),{,{,},},},Class,Ko3__,{,Val,$9A463,:,Array,[,Int,,,9,],;,},<EOF>''',101))

    def test_3546(self):
        self.assertTrue(TestLexer.test('''Class _:_{$__(m,r,g:Array [Array [Float ,0b1000111],05];_,H_:Array [Boolean ,0x3E]){} }Class _{Var _:Array [Int ,0b11];}''','''Class,_,:,_,{,$__,(,m,,,r,,,g,:,Array,[,Array,[,Float,,,0b1000111,],,,05,],;,_,,,H_,:,Array,[,Boolean,,,0x3E,],),{,},},Class,_,{,Var,_,:,Array,[,Int,,,0b11,],;,},<EOF>''',101))

    def test_3547(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_:Array [Array [String ,0X500],0X2C];_:Array [Array [Array [Array [String ,0xC_4],5],0xAF],0X2C]){} }Class y_{}Class _rC__8{}''','''Class,_,{,Constructor,(,_,:,Array,[,Array,[,String,,,0X500,],,,0X2C,],;,_,:,Array,[,Array,[,Array,[,Array,[,String,,,0xC4,],,,5,],,,0xAF,],,,0X2C,],),{,},},Class,y_,{,},Class,_rC__8,{,},<EOF>''',101))

    def test_3548(self):
        self.assertTrue(TestLexer.test('''Class __:Xe__W{Var $9:Int ;}Class p{Wq(){}Val $48f:C;Destructor (){}Val $_5,_0:Array [String ,4_9];Destructor (){} }''','''Class,__,:,Xe__W,{,Var,$9,:,Int,;,},Class,p,{,Wq,(,),{,},Val,$48f,:,C,;,Destructor,(,),{,},Val,$_5,,,_0,:,Array,[,String,,,49,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_3549(self):
        self.assertTrue(TestLexer.test('''Class _:npz{}Class _:_4{Val $51X,$0_i:Array [Float ,0XD_4];}Class __:f0{Constructor (_:Int ){Break ;} }Class _Xv:o{}''','''Class,_,:,npz,{,},Class,_,:,_4,{,Val,$51X,,,$0_i,:,Array,[,Float,,,0XD4,],;,},Class,__,:,f0,{,Constructor,(,_,:,Int,),{,Break,;,},},Class,_Xv,:,o,{,},<EOF>''',101))

    def test_3550(self):
        self.assertTrue(TestLexer.test('''Class L{}Class g___:Jju_{}Class _:S_{$5(){}$7(W7y:Boolean ;___,i,R:Int ;_Y7:Int ;e_2,L0:r80){} }Class _{Destructor (){}Var $_40,x1_79C:Array [Array [Array [Array [String ,68],076],0b100],50];Val $0,_,$_,S:_;}''','''Class,L,{,},Class,g___,:,Jju_,{,},Class,_,:,S_,{,$5,(,),{,},$7,(,W7y,:,Boolean,;,___,,,i,,,R,:,Int,;,_Y7,:,Int,;,e_2,,,L0,:,r80,),{,},},Class,_,{,Destructor,(,),{,},Var,$_40,,,x1_79C,:,Array,[,Array,[,Array,[,Array,[,String,,,68,],,,076,],,,0b100,],,,50,],;,Val,$0,,,_,,,$_,,,S,:,_,;,},<EOF>''',101))

    def test_3551(self):
        self.assertTrue(TestLexer.test('''Class _:_{_(_8__,_:G_9hloW;N_:_28LV8){}Val $i:_9__;$C_(_7I:Array [Array [Array [Int ,0X6_9],0X1],0X6_9_8_0A]){} }''','''Class,_,:,_,{,_,(,_8__,,,_,:,G_9hloW,;,N_,:,_28LV8,),{,},Val,$i,:,_9__,;,$C_,(,_7I,:,Array,[,Array,[,Array,[,Int,,,0X69,],,,0X1,],,,0X6980A,],),{,},},<EOF>''',101))

    def test_3552(self):
        self.assertTrue(TestLexer.test('''Class _D{}Class _q3:_4_2_{Val $Vo_,__6,$5:Float ;Constructor (){} }Class _:s{Var x,$j,H3:Array [Boolean ,013];}Class Q{}''','''Class,_D,{,},Class,_q3,:,_4_2_,{,Val,$Vo_,,,__6,,,$5,:,Float,;,Constructor,(,),{,},},Class,_,:,s,{,Var,x,,,$j,,,H3,:,Array,[,Boolean,,,013,],;,},Class,Q,{,},<EOF>''',101))

    def test_3553(self):
        self.assertTrue(TestLexer.test('''Class nj4{}Class s:_4{$__(){}Val _9,$03uh:Array [Array [Array [Array [Array [Array [String ,0X12],077],0XB_F],077],24],89];}''','''Class,nj4,{,},Class,s,:,_4,{,$__,(,),{,},Val,_9,,,$03uh,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X12,],,,077,],,,0XBF,],,,077,],,,24,],,,89,],;,},<EOF>''',101))

    def test_3554(self):
        self.assertTrue(TestLexer.test('''Class _k6:_{Var $0202e:Array [String ,0x1F];Constructor (_,_,w_,_VJ,p:String ;d:Array [String ,017];m,_:Array [Array [Array [Array [Array [Array [String ,04_1_7_3],0X1A],0X4],1],0x9],0x1]){} }Class __4r{Var $__,_:_;b(){} }Class r_{}Class __5_{}Class T_{}''','''Class,_k6,:,_,{,Var,$0202e,:,Array,[,String,,,0x1F,],;,Constructor,(,_,,,_,,,w_,,,_VJ,,,p,:,String,;,d,:,Array,[,String,,,017,],;,m,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,04173,],,,0X1A,],,,0X4,],,,1,],,,0x9,],,,0x1,],),{,},},Class,__4r,{,Var,$__,,,_,:,_,;,b,(,),{,},},Class,r_,{,},Class,__5_,{,},Class,T_,{,},<EOF>''',101))

    def test_3555(self):
        self.assertTrue(TestLexer.test('''Class __:R{Constructor (_0:Array [Boolean ,0b1]){Continue ;Continue ;zS::$l();}Val T__9,_Sk83rj_7:Array [Array [Boolean ,0772_3_2353],06];}''','''Class,__,:,R,{,Constructor,(,_0,:,Array,[,Boolean,,,0b1,],),{,Continue,;,Continue,;,zS,::,$l,(,),;,},Val,T__9,,,_Sk83rj_7,:,Array,[,Array,[,Boolean,,,077232353,],,,06,],;,},<EOF>''',101))

    def test_3556(self):
        self.assertTrue(TestLexer.test('''Class m{Val _:Xn9;Destructor (){}Val l:Array [Array [Array [Array [String ,0X1],0B1],0106],0b1];Var d_:Array [String ,0xA];}''','''Class,m,{,Val,_,:,Xn9,;,Destructor,(,),{,},Val,l,:,Array,[,Array,[,Array,[,Array,[,String,,,0X1,],,,0B1,],,,0106,],,,0b1,],;,Var,d_,:,Array,[,String,,,0xA,],;,},<EOF>''',101))

    def test_3557(self):
        self.assertTrue(TestLexer.test('''Class S:K{}Class __8{}Class Pv71:O{}Class __u:i83{Constructor (_,d2EW:Array [Array [Boolean ,59],96_7_4_96_2]){Continue ;Continue ;} }''','''Class,S,:,K,{,},Class,__8,{,},Class,Pv71,:,O,{,},Class,__u,:,i83,{,Constructor,(,_,,,d2EW,:,Array,[,Array,[,Boolean,,,59,],,,9674962,],),{,Continue,;,Continue,;,},},<EOF>''',101))

    def test_3558(self):
        self.assertTrue(TestLexer.test('''Class wxjx_0H{R_2(cZ0:Array [Array [String ,0b1000111],01];g:Array [Boolean ,0X1C];Jc,B,_,t:Float ;o4_,_4,Q5__,t,n,_,_:L;_,__,_:String ){} }''','''Class,wxjx_0H,{,R_2,(,cZ0,:,Array,[,Array,[,String,,,0b1000111,],,,01,],;,g,:,Array,[,Boolean,,,0X1C,],;,Jc,,,B,,,_,,,t,:,Float,;,o4_,,,_4,,,Q5__,,,t,,,n,,,_,,,_,:,L,;,_,,,__,,,_,:,String,),{,},},<EOF>''',101))

    def test_3559(self):
        self.assertTrue(TestLexer.test('''Class n:B{Destructor (){} }Class __{Var P_:String ;Constructor (){ {}Return ;}Val d,$2_E:Array [Float ,0B11];}Class Hb{}Class _l{}Class __M_:mh3mi{}''','''Class,n,:,B,{,Destructor,(,),{,},},Class,__,{,Var,P_,:,String,;,Constructor,(,),{,{,},Return,;,},Val,d,,,$2_E,:,Array,[,Float,,,0B11,],;,},Class,Hb,{,},Class,_l,{,},Class,__M_,:,mh3mi,{,},<EOF>''',101))

    def test_3560(self):
        self.assertTrue(TestLexer.test('''Class _{}Class A{Val $7,f786_,$___,_i9_,_Pi_,_T:Array [Array [String ,011],0X4];Constructor (){V__::$x();}Destructor (){Val _F,__:_;}E(I,w4s,_2,g,L,y,iS,_:Array [Int ,011]){}Val $_6:_;}Class x{$o_J(d,PB:Boolean ){} }''','''Class,_,{,},Class,A,{,Val,$7,,,f786_,,,$___,,,_i9_,,,_Pi_,,,_T,:,Array,[,Array,[,String,,,011,],,,0X4,],;,Constructor,(,),{,V__,::,$x,(,),;,},Destructor,(,),{,Val,_F,,,__,:,_,;,},E,(,I,,,w4s,,,_2,,,g,,,L,,,y,,,iS,,,_,:,Array,[,Int,,,011,],),{,},Val,$_6,:,_,;,},Class,x,{,$o_J,(,d,,,PB,:,Boolean,),{,},},<EOF>''',101))

    def test_3561(self):
        self.assertTrue(TestLexer.test('''Class _2__v{Val $2P,__:Boolean ;Var $_,Zf,i:Boolean ;Destructor (){} }Class nK{}Class _{}Class q:lL{_(_5,y,__ui3,_,__,_,bM,m_,Z___x0,_19:b__;H_:Array [Array [Int ,9],0X14];_15,V,D:String ){} }Class B:y{Val $__L,_,e76,$_:Int ;$_(){vA::$_c();} }''','''Class,_2__v,{,Val,$2P,,,__,:,Boolean,;,Var,$_,,,Zf,,,i,:,Boolean,;,Destructor,(,),{,},},Class,nK,{,},Class,_,{,},Class,q,:,lL,{,_,(,_5,,,y,,,__ui3,,,_,,,__,,,_,,,bM,,,m_,,,Z___x0,,,_19,:,b__,;,H_,:,Array,[,Array,[,Int,,,9,],,,0X14,],;,_15,,,V,,,D,:,String,),{,},},Class,B,:,y,{,Val,$__L,,,_,,,e76,,,$_,:,Int,;,$_,(,),{,vA,::,$_c,(,),;,},},<EOF>''',101))

    def test_3562(self):
        self.assertTrue(TestLexer.test('''Class w_{}Class X4:_{}Class b{Val _:O__;}Class t:_2{}Class _00_:_{}Class W:_8_{Var m4_8,$m7_U:Array [Float ,050];}''','''Class,w_,{,},Class,X4,:,_,{,},Class,b,{,Val,_,:,O__,;,},Class,t,:,_2,{,},Class,_00_,:,_,{,},Class,W,:,_8_,{,Var,m4_8,,,$m7_U,:,Array,[,Float,,,050,],;,},<EOF>''',101))

    def test_3563(self):
        self.assertTrue(TestLexer.test('''Class g_i:___{Var $___3:_3;Destructor (){}$g3_(Is1:Int ;_,Lh0a_,M_:Array [Array [Array [Int ,0xB_5_3_8],5],020_2];T_0,L5,D_,u5ZT:Float ;_9:Array [Boolean ,0X2]){} }''','''Class,g_i,:,___,{,Var,$___3,:,_3,;,Destructor,(,),{,},$g3_,(,Is1,:,Int,;,_,,,Lh0a_,,,M_,:,Array,[,Array,[,Array,[,Int,,,0xB538,],,,5,],,,0202,],;,T_0,,,L5,,,D_,,,u5ZT,:,Float,;,_9,:,Array,[,Boolean,,,0X2,],),{,},},<EOF>''',101))

    def test_3564(self):
        self.assertTrue(TestLexer.test('''Class C:e{$a(){}L(_j_z:Boolean ){}Constructor (){_N::$k_.h._w__.q();} }Class _a_4_{Val __s,$M:Array [Array [Array [Boolean ,3],063],0x19];}''','''Class,C,:,e,{,$a,(,),{,},L,(,_j_z,:,Boolean,),{,},Constructor,(,),{,_N,::,$k_,.,h,.,_w__,.,q,(,),;,},},Class,_a_4_,{,Val,__s,,,$M,:,Array,[,Array,[,Array,[,Boolean,,,3,],,,063,],,,0x19,],;,},<EOF>''',101))

    def test_3565(self):
        self.assertTrue(TestLexer.test('''Class J_{$_(_0__,D,I_:Array [Int ,01_2]){}Val D4___:Array [Int ,0x24];}Class _{Constructor (){}$A_(U___,oF:f_){Return ;}$__A(){} }''','''Class,J_,{,$_,(,_0__,,,D,,,I_,:,Array,[,Int,,,012,],),{,},Val,D4___,:,Array,[,Int,,,0x24,],;,},Class,_,{,Constructor,(,),{,},$A_,(,U___,,,oF,:,f_,),{,Return,;,},$__A,(,),{,},},<EOF>''',101))

    def test_3566(self):
        self.assertTrue(TestLexer.test('''Class _68g:_{Val g,$____OH:Array [Array [Array [Array [Array [Array [String ,027],0B1000110],027],0B10],0x8],0B11_1];}''','''Class,_68g,:,_,{,Val,g,,,$____OH,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,027,],,,0B1000110,],,,027,],,,0B10,],,,0x8,],,,0B111,],;,},<EOF>''',101))

    def test_3567(self):
        self.assertTrue(TestLexer.test('''Class b{}Class _{Var $2C140,_,$6o_6:Z;$SW(_3_,X22,_Q,i,_E15:Array [Array [Array [Int ,0B1],48],48]){}Destructor (){} }''','''Class,b,{,},Class,_,{,Var,$2C140,,,_,,,$6o_6,:,Z,;,$SW,(,_3_,,,X22,,,_Q,,,i,,,_E15,:,Array,[,Array,[,Array,[,Int,,,0B1,],,,48,],,,48,],),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_3568(self):
        self.assertTrue(TestLexer.test('''Class __{_Q(Id__,_2w_,_:__e;__:__){_9::$7();}Var $_:Array [Array [Array [Array [Array [String ,01],0XC],0b1011011],61],0104];}''','''Class,__,{,_Q,(,Id__,,,_2w_,,,_,:,__e,;,__,:,__,),{,_9,::,$7,(,),;,},Var,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,01,],,,0XC,],,,0b1011011,],,,61,],,,0104,],;,},<EOF>''',101))

    def test_3569(self):
        self.assertTrue(TestLexer.test('''Class L{}Class _o:_B{Destructor (){}Val J6_6:Float ;}Class y{Destructor (){ {} }Var lm6g:Float ;Val ___,$8:Array [Float ,7_26];}''','''Class,L,{,},Class,_o,:,_B,{,Destructor,(,),{,},Val,J6_6,:,Float,;,},Class,y,{,Destructor,(,),{,{,},},Var,lm6g,:,Float,;,Val,___,,,$8,:,Array,[,Float,,,726,],;,},<EOF>''',101))

    def test_3570(self):
        self.assertTrue(TestLexer.test('''Class S{Var __K,$I8S:Array [Float ,0B10010];}Class _E:Q_Y{}Class R_s{Constructor (q,r,_:Array [Int ,013];Xd:_){NU::$L_();}Var _:Float ;__6_(aQ,__:Array [Array [Array [Array [Boolean ,73],06],0B10010],8]){} }Class R{Constructor (_3_3:I30){} }''','''Class,S,{,Var,__K,,,$I8S,:,Array,[,Float,,,0B10010,],;,},Class,_E,:,Q_Y,{,},Class,R_s,{,Constructor,(,q,,,r,,,_,:,Array,[,Int,,,013,],;,Xd,:,_,),{,NU,::,$L_,(,),;,},Var,_,:,Float,;,__6_,(,aQ,,,__,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,73,],,,06,],,,0B10010,],,,8,],),{,},},Class,R,{,Constructor,(,_3_3,:,I30,),{,},},<EOF>''',101))

    def test_3571(self):
        self.assertTrue(TestLexer.test('''Class _:Y{Constructor (L67:_;_:Array [Array [Boolean ,03],39];I70_i8,_B:Array [Array [Array [Int ,04523],072],45];EB:String ){} }Class M:_{}''','''Class,_,:,Y,{,Constructor,(,L67,:,_,;,_,:,Array,[,Array,[,Boolean,,,03,],,,39,],;,I70_i8,,,_B,:,Array,[,Array,[,Array,[,Int,,,04523,],,,072,],,,45,],;,EB,:,String,),{,},},Class,M,:,_,{,},<EOF>''',101))

    def test_3572(self):
        self.assertTrue(TestLexer.test('''Class Vw6_{Constructor (a_k08_:l3p4jd4;_IP:Int ;_,V:Float ;p_,a2x:Array [Int ,0b10000];e,v,_:Array [Array [Float ,6],4309_4]){} }''','''Class,Vw6_,{,Constructor,(,a_k08_,:,l3p4jd4,;,_IP,:,Int,;,_,,,V,:,Float,;,p_,,,a2x,:,Array,[,Int,,,0b10000,],;,e,,,v,,,_,:,Array,[,Array,[,Float,,,6,],,,43094,],),{,},},<EOF>''',101))

    def test_3573(self):
        self.assertTrue(TestLexer.test('''Class _:S{Var WL_7:_;Constructor (e:Array [Array [Array [Array [Int ,0x7],010],0B110],0xF];_n,_:Array [Boolean ,0b1]){Val _K3_,____:D__;Continue ;} }Class _:S{}Class eE:m__{Constructor (u:T){}n(){}Val a_,_,U,$_0m8_,$6,_,$_,x,$6:_9_;}''','''Class,_,:,S,{,Var,WL_7,:,_,;,Constructor,(,e,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x7,],,,010,],,,0B110,],,,0xF,],;,_n,,,_,:,Array,[,Boolean,,,0b1,],),{,Val,_K3_,,,____,:,D__,;,Continue,;,},},Class,_,:,S,{,},Class,eE,:,m__,{,Constructor,(,u,:,T,),{,},n,(,),{,},Val,a_,,,_,,,U,,,$_0m8_,,,$6,,,_,,,$_,,,x,,,$6,:,_9_,;,},<EOF>''',101))

    def test_3574(self):
        self.assertTrue(TestLexer.test('''Class W{Val $9,$_,_7_,$_,_:Array [Array [Array [Boolean ,0X60],18],0b1_1];Constructor (h,a4_6_8,mD,wa7,_,M,_4_N:Lp;_:Boolean ;_5:q4){Break ;}Destructor (){Break ;}Var _:_9_;}''','''Class,W,{,Val,$9,,,$_,,,_7_,,,$_,,,_,:,Array,[,Array,[,Array,[,Boolean,,,0X60,],,,18,],,,0b11,],;,Constructor,(,h,,,a4_6_8,,,mD,,,wa7,,,_,,,M,,,_4_N,:,Lp,;,_,:,Boolean,;,_5,:,q4,),{,Break,;,},Destructor,(,),{,Break,;,},Var,_,:,_9_,;,},<EOF>''',101))

    def test_3575(self):
        self.assertTrue(TestLexer.test('''Class _L{$x(){} }Class _{$X(_YY_:l_Ro;d:String ;Li:Array [Array [Array [Array [Boolean ,0X3_8],0107],2],0b1100100]){} }''','''Class,_L,{,$x,(,),{,},},Class,_,{,$X,(,_YY_,:,l_Ro,;,d,:,String,;,Li,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X38,],,,0107,],,,2,],,,0b1100100,],),{,},},<EOF>''',101))

    def test_3576(self):
        self.assertTrue(TestLexer.test('''Class _{Var $__3,_0:String ;Constructor (_:Boolean ;ZB_f,_k:Array [Boolean ,0xA];K,w_:qd){}Val $_T,$_R,k:Array [String ,4];_w(){} }''','''Class,_,{,Var,$__3,,,_0,:,String,;,Constructor,(,_,:,Boolean,;,ZB_f,,,_k,:,Array,[,Boolean,,,0xA,],;,K,,,w_,:,qd,),{,},Val,$_T,,,$_R,,,k,:,Array,[,String,,,4,],;,_w,(,),{,},},<EOF>''',101))

    def test_3577(self):
        self.assertTrue(TestLexer.test('''Class _5:_{$0(_:Array [Boolean ,0B1];__8_,_:Array [Array [Array [Array [Array [String ,0B1_0_0],070],1],0x24],0XA_FB]){ {} }$_(){} }Class i_{Destructor (){} }''','''Class,_5,:,_,{,$0,(,_,:,Array,[,Boolean,,,0B1,],;,__8_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0B100,],,,070,],,,1,],,,0x24,],,,0XAFB,],),{,{,},},$_,(,),{,},},Class,i_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3578(self):
        self.assertTrue(TestLexer.test('''Class Oh5:_{Var $_v_:Array [Array [Boolean ,25],055];Val $X,__,k_44_:Array [Array [Array [Boolean ,031_7_0],07],2_6_8];}''','''Class,Oh5,:,_,{,Var,$_v_,:,Array,[,Array,[,Boolean,,,25,],,,055,],;,Val,$X,,,__,,,k_44_,:,Array,[,Array,[,Array,[,Boolean,,,03170,],,,07,],,,268,],;,},<EOF>''',101))

    def test_3579(self):
        self.assertTrue(TestLexer.test('''Class _9{Var $_:_;Destructor (){ {} }}Class JJ{Constructor (){}Val $_v,_K:ED_;Destructor (){}Var $f,$_60,$u6,$_:V_0__;}Class _{}''','''Class,_9,{,Var,$_,:,_,;,Destructor,(,),{,{,},},},Class,JJ,{,Constructor,(,),{,},Val,$_v,,,_K,:,ED_,;,Destructor,(,),{,},Var,$f,,,$_60,,,$u6,,,$_,:,V_0__,;,},Class,_,{,},<EOF>''',101))

    def test_3580(self):
        self.assertTrue(TestLexer.test('''Class ____:e_{X(_:Array [Int ,0x9_C_3_C4]){}Val $2,$_,c,$y:Int ;Var cJ,_,_59:Array [Array [Array [String ,0b1],8],0B1_0_1];}Class _4_{}Class T_q3c{_(){} }''','''Class,____,:,e_,{,X,(,_,:,Array,[,Int,,,0x9C3C4,],),{,},Val,$2,,,$_,,,c,,,$y,:,Int,;,Var,cJ,,,_,,,_59,:,Array,[,Array,[,Array,[,String,,,0b1,],,,8,],,,0B101,],;,},Class,_4_,{,},Class,T_q3c,{,_,(,),{,},},<EOF>''',101))

    def test_3581(self):
        self.assertTrue(TestLexer.test('''Class Fb{Var $_:Boolean ;}Class Af:K{}Class _{Val $5V11,$5__x8:Array [Array [String ,5],0144];}Class __:_4{_(){ {} }}''','''Class,Fb,{,Var,$_,:,Boolean,;,},Class,Af,:,K,{,},Class,_,{,Val,$5V11,,,$5__x8,:,Array,[,Array,[,String,,,5,],,,0144,],;,},Class,__,:,_4,{,_,(,),{,{,},},},<EOF>''',101))

    def test_3582(self):
        self.assertTrue(TestLexer.test('''Class N:_{$_(sF,j:Array [Array [Int ,05],0B1_11]){} }Class o:M{}Class e{Var $c:Boolean ;Var $_2:Array [Array [Array [Array [Float ,015],015],17],032];}Class m69{Val $3,$_:_;}Class _{}''','''Class,N,:,_,{,$_,(,sF,,,j,:,Array,[,Array,[,Int,,,05,],,,0B111,],),{,},},Class,o,:,M,{,},Class,e,{,Var,$c,:,Boolean,;,Var,$_2,:,Array,[,Array,[,Array,[,Array,[,Float,,,015,],,,015,],,,17,],,,032,],;,},Class,m69,{,Val,$3,,,$_,:,_,;,},Class,_,{,},<EOF>''',101))

    def test_3583(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){}$5(){} }Class _:b{Val $gy9,_,_0,$_g,b,$4,$2_,___0:Array [Int ,4];$1(F:String ;v__,_,h1NC_,mz:Float ){} }Class _{}Class w:B{Destructor (){} }Class u_5_H:_{}''','''Class,_,{,Constructor,(,),{,},$5,(,),{,},},Class,_,:,b,{,Val,$gy9,,,_,,,_0,,,$_g,,,b,,,$4,,,$2_,,,___0,:,Array,[,Int,,,4,],;,$1,(,F,:,String,;,v__,,,_,,,h1NC_,,,mz,:,Float,),{,},},Class,_,{,},Class,w,:,B,{,Destructor,(,),{,},},Class,u_5_H,:,_,{,},<EOF>''',101))

    def test_3584(self):
        self.assertTrue(TestLexer.test('''Class _:g{Constructor (W_,__4x,_:Array [Array [Int ,9],075]){Continue ;{} }Constructor (){Continue ;}Val $J,$V,$___,_,$14:String ;}Class b8{}''','''Class,_,:,g,{,Constructor,(,W_,,,__4x,,,_,:,Array,[,Array,[,Int,,,9,],,,075,],),{,Continue,;,{,},},Constructor,(,),{,Continue,;,},Val,$J,,,$V,,,$___,,,_,,,$14,:,String,;,},Class,b8,{,},<EOF>''',101))

    def test_3585(self):
        self.assertTrue(TestLexer.test('''Class z:_m__9{}Class _{Val $O:Array [Array [Array [Float ,0b11],02],69];Val $W_Z,Z,$0_:Array [Array [Array [Int ,0x18],3_447],0x18];}Class _:_{}''','''Class,z,:,_m__9,{,},Class,_,{,Val,$O,:,Array,[,Array,[,Array,[,Float,,,0b11,],,,02,],,,69,],;,Val,$W_Z,,,Z,,,$0_,:,Array,[,Array,[,Array,[,Int,,,0x18,],,,3447,],,,0x18,],;,},Class,_,:,_,{,},<EOF>''',101))

    def test_3586(self):
        self.assertTrue(TestLexer.test('''Class _:_{$_2_(b:Array [String ,045];q_,W,__6469:Array [Boolean ,0b10_0_1_0];_:Array [Array [Array [String ,6_4],100],98];bA,_63:Array [String ,03_74]){} }''','''Class,_,:,_,{,$_2_,(,b,:,Array,[,String,,,045,],;,q_,,,W,,,__6469,:,Array,[,Boolean,,,0b10010,],;,_,:,Array,[,Array,[,Array,[,String,,,64,],,,100,],,,98,],;,bA,,,_63,:,Array,[,String,,,0374,],),{,},},<EOF>''',101))

    def test_3587(self):
        self.assertTrue(TestLexer.test('''Class S:_93_KL9__{$9(){Break ;Return ;} }Class Q{Constructor (o99__,T:Ma){} }Class P{Constructor (C_2p3:String ;q,_:String ;r,Z5,_R:WE){ {} }}''','''Class,S,:,_93_KL9__,{,$9,(,),{,Break,;,Return,;,},},Class,Q,{,Constructor,(,o99__,,,T,:,Ma,),{,},},Class,P,{,Constructor,(,C_2p3,:,String,;,q,,,_,:,String,;,r,,,Z5,,,_R,:,WE,),{,{,},},},<EOF>''',101))

    def test_3588(self):
        self.assertTrue(TestLexer.test('''Class __:S_{}Class Y:s{Constructor (_,pC:V;__,i,C,_k,_:Array [Array [Array [Array [Array [Array [Array [Float ,065],9],0B1010000],0b101111],0XC_AE_6],046],05_0]){} }''','''Class,__,:,S_,{,},Class,Y,:,s,{,Constructor,(,_,,,pC,:,V,;,__,,,i,,,C,,,_k,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,065,],,,9,],,,0B1010000,],,,0b101111,],,,0XCAE6,],,,046,],,,050,],),{,},},<EOF>''',101))

    def test_3589(self):
        self.assertTrue(TestLexer.test('''Class a{}Class _4:_{Destructor (){Break ;}Constructor (y2:Array [Int ,0B1];__:Array [Array [Array [Array [Array [Boolean ,0x66],2],0B1000011],0b1],02_62];__2,E6_4401V:_4){ {Break ;} }}Class l_42R2{}Class b:Qg{}Class _1{}Class S_5{}Class _3jHb:K{}Class ___1_49:_7{}''','''Class,a,{,},Class,_4,:,_,{,Destructor,(,),{,Break,;,},Constructor,(,y2,:,Array,[,Int,,,0B1,],;,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x66,],,,2,],,,0B1000011,],,,0b1,],,,0262,],;,__2,,,E6_4401V,:,_4,),{,{,Break,;,},},},Class,l_42R2,{,},Class,b,:,Qg,{,},Class,_1,{,},Class,S_5,{,},Class,_3jHb,:,K,{,},Class,___1_49,:,_7,{,},<EOF>''',101))

    def test_3590(self):
        self.assertTrue(TestLexer.test('''Class s8c:_3e_5G___{}Class ____3S7:_6_{}Class u:_0T_{Destructor (){n2_::$e();Continue ;}Destructor (){} }Class M:_9{}Class S__{}''','''Class,s8c,:,_3e_5G___,{,},Class,____3S7,:,_6_,{,},Class,u,:,_0T_,{,Destructor,(,),{,n2_,::,$e,(,),;,Continue,;,},Destructor,(,),{,},},Class,M,:,_9,{,},Class,S__,{,},<EOF>''',101))

    def test_3591(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_X__:Array [Array [Array [Array [Array [Boolean ,8],0B101011],7_6],0x4],0xA4]){} }Class _9i{Val __:Array [Array [Array [Array [Array [Float ,0110],6_9],0b1],804_1],24_8];}''','''Class,_,{,Constructor,(,_X__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,8,],,,0B101011,],,,76,],,,0x4,],,,0xA4,],),{,},},Class,_9i,{,Val,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0110,],,,69,],,,0b1,],,,8041,],,,248,],;,},<EOF>''',101))

    def test_3592(self):
        self.assertTrue(TestLexer.test('''Class _3{Constructor (__,_c:Array [Array [Array [String ,0B111101],0x5B],0b1010011];_d,J___:Float ;_Y,_8,_,u,N71:Boolean ;s,_A__,a8b:Array [Array [Int ,055],017]){}Var _:_;}''','''Class,_3,{,Constructor,(,__,,,_c,:,Array,[,Array,[,Array,[,String,,,0B111101,],,,0x5B,],,,0b1010011,],;,_d,,,J___,:,Float,;,_Y,,,_8,,,_,,,u,,,N71,:,Boolean,;,s,,,_A__,,,a8b,:,Array,[,Array,[,Int,,,055,],,,017,],),{,},Var,_,:,_,;,},<EOF>''',101))

    def test_3593(self):
        self.assertTrue(TestLexer.test('''Class F{}Class _:c5{Constructor (__,f:Int ;_X:Array [String ,42];_,l__,_:Y_;_L6o:__){}Constructor (V,Q_4875:Int ;_,__,_,U3,Q:y){}Val $E:Int ;}''','''Class,F,{,},Class,_,:,c5,{,Constructor,(,__,,,f,:,Int,;,_X,:,Array,[,String,,,42,],;,_,,,l__,,,_,:,Y_,;,_L6o,:,__,),{,},Constructor,(,V,,,Q_4875,:,Int,;,_,,,__,,,_,,,U3,,,Q,:,y,),{,},Val,$E,:,Int,;,},<EOF>''',101))

    def test_3594(self):
        self.assertTrue(TestLexer.test('''Class _:S{Var $_w,_,$O:Float ;Constructor (_,_:Array [Array [Float ,5_63],0B1011];b1:Float ;Bi1_C6,_,U_:Array [Array [String ,6],60];ij:_v3;__:Array [Array [Array [Boolean ,60],04_7],60];_:Int ;y:Array [Array [Boolean ,026_75_7_6_136_2_1],29_8]){} }''','''Class,_,:,S,{,Var,$_w,,,_,,,$O,:,Float,;,Constructor,(,_,,,_,:,Array,[,Array,[,Float,,,563,],,,0B1011,],;,b1,:,Float,;,Bi1_C6,,,_,,,U_,:,Array,[,Array,[,String,,,6,],,,60,],;,ij,:,_v3,;,__,:,Array,[,Array,[,Array,[,Boolean,,,60,],,,047,],,,60,],;,_,:,Int,;,y,:,Array,[,Array,[,Boolean,,,026757613621,],,,298,],),{,},},<EOF>''',101))

    def test_3595(self):
        self.assertTrue(TestLexer.test('''Class bQ_P_35{Constructor (T:Array [Int ,0106];_:Int ;_,__J:String ;B,_1_:Array [Array [Boolean ,0106],0106];T:L;_:Boolean ){}Var $d,__20tB_,$P:Array [Array [Array [Boolean ,0B11100],82],0b10];}''','''Class,bQ_P_35,{,Constructor,(,T,:,Array,[,Int,,,0106,],;,_,:,Int,;,_,,,__J,:,String,;,B,,,_1_,:,Array,[,Array,[,Boolean,,,0106,],,,0106,],;,T,:,L,;,_,:,Boolean,),{,},Var,$d,,,__20tB_,,,$P,:,Array,[,Array,[,Array,[,Boolean,,,0B11100,],,,82,],,,0b10,],;,},<EOF>''',101))

    def test_3596(self):
        self.assertTrue(TestLexer.test('''Class I{Val M,$_,x:_;}Class t:z7{o(_,_,__,S11Z,_T_:Int ;___PKU0_94c,o,_,_fE,__,_,k8,_:Boolean ;Q__,j:_){Continue ;} }''','''Class,I,{,Val,M,,,$_,,,x,:,_,;,},Class,t,:,z7,{,o,(,_,,,_,,,__,,,S11Z,,,_T_,:,Int,;,___PKU0_94c,,,o,,,_,,,_fE,,,__,,,_,,,k8,,,_,:,Boolean,;,Q__,,,j,:,_,),{,Continue,;,},},<EOF>''',101))

    def test_3597(self):
        self.assertTrue(TestLexer.test('''Class D2521{Val $C:Array [Array [Float ,0142],0142];Constructor (){}Constructor (_M_,sbF:Array [Array [String ,07_3_3],0B11_0]){} }Class _{}''','''Class,D2521,{,Val,$C,:,Array,[,Array,[,Float,,,0142,],,,0142,],;,Constructor,(,),{,},Constructor,(,_M_,,,sbF,:,Array,[,Array,[,String,,,0733,],,,0B110,],),{,},},Class,_,{,},<EOF>''',101))

    def test_3598(self):
        self.assertTrue(TestLexer.test('''Class _:__{Var _,_,$3v:l4;Constructor (a,_,P,_0:Array [Array [Array [Array [Int ,02_74],0b1_0_1],0X34],0134];a:Array [Array [String ,0B1000],04]){} }Class __:c{}''','''Class,_,:,__,{,Var,_,,,_,,,$3v,:,l4,;,Constructor,(,a,,,_,,,P,,,_0,:,Array,[,Array,[,Array,[,Array,[,Int,,,0274,],,,0b101,],,,0X34,],,,0134,],;,a,:,Array,[,Array,[,String,,,0B1000,],,,04,],),{,},},Class,__,:,c,{,},<EOF>''',101))

    def test_3599(self):
        self.assertTrue(TestLexer.test('''Class U__:_{Var _8:Array [Array [Array [Float ,0141],06_0],10];}Class c:___O31_8{}Class B{Destructor (){}Var $w:Array [Array [Array [Array [Int ,0x63],03_2],0141],10];Val S__,L:Array [Array [Array [Array [String ,0xF_2],0X7],0XE],0b11101];$E(){ {}{} }}Class Y{}Class __T_0:A_3{Destructor (){} }Class c{}''','''Class,U__,:,_,{,Var,_8,:,Array,[,Array,[,Array,[,Float,,,0141,],,,060,],,,10,],;,},Class,c,:,___O31_8,{,},Class,B,{,Destructor,(,),{,},Var,$w,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x63,],,,032,],,,0141,],,,10,],;,Val,S__,,,L,:,Array,[,Array,[,Array,[,Array,[,String,,,0xF2,],,,0X7,],,,0XE,],,,0b11101,],;,$E,(,),{,{,},{,},},},Class,Y,{,},Class,__T_0,:,A_3,{,Destructor,(,),{,},},Class,c,{,},<EOF>''',101))

    def test_3600(self):
        self.assertTrue(TestLexer.test('''Class _2_:_{$G(){} }Class _:zb{}Class _pX_i:B_1{Destructor (){} }Class ___:S7{Constructor (_,_s_0:_3){ {Return ;Var _:Float ;} }}Class G_{Destructor (){} }''','''Class,_2_,:,_,{,$G,(,),{,},},Class,_,:,zb,{,},Class,_pX_i,:,B_1,{,Destructor,(,),{,},},Class,___,:,S7,{,Constructor,(,_,,,_s_0,:,_3,),{,{,Return,;,Var,_,:,Float,;,},},},Class,G_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3601(self):
        self.assertTrue(TestLexer.test('''Class _3{Val $__d__Pvfg6_0:String ;}Class _:w{}Class U__p{}Class _w{}Class _{Val _d,rQe_4,Y:Array [Array [Array [Array [Array [Array [Array [Int ,2_30],066],0x47],18],0X3F],18],066];}Class d:n_2_4{}Class m{}Class T7{}Class i:G7{}''','''Class,_3,{,Val,$__d__Pvfg6_0,:,String,;,},Class,_,:,w,{,},Class,U__p,{,},Class,_w,{,},Class,_,{,Val,_d,,,rQe_4,,,Y,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,230,],,,066,],,,0x47,],,,18,],,,0X3F,],,,18,],,,066,],;,},Class,d,:,n_2_4,{,},Class,m,{,},Class,T7,{,},Class,i,:,G7,{,},<EOF>''',101))

    def test_3602(self):
        self.assertTrue(TestLexer.test('''Class __R:Vj_{Constructor (_:LDl;M,_:Array [Array [Array [Array [Array [Array [Int ,5],0134],0X63],0134],0xE],0x4_A];_,Gb:_){}Var $_:Array [Array [Int ,07],6];}Class _ui:C{$_(V,Kv2_,c,_,I9e__,_:Array [Float ,0X63];_:h;_3,_,_,Z,_43qn_0,M6:Array [Float ,0134]){Continue ;} }''','''Class,__R,:,Vj_,{,Constructor,(,_,:,LDl,;,M,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,5,],,,0134,],,,0X63,],,,0134,],,,0xE,],,,0x4A,],;,_,,,Gb,:,_,),{,},Var,$_,:,Array,[,Array,[,Int,,,07,],,,6,],;,},Class,_ui,:,C,{,$_,(,V,,,Kv2_,,,c,,,_,,,I9e__,,,_,:,Array,[,Float,,,0X63,],;,_,:,h,;,_3,,,_,,,_,,,Z,,,_43qn_0,,,M6,:,Array,[,Float,,,0134,],),{,Continue,;,},},<EOF>''',101))

    def test_3603(self):
        self.assertTrue(TestLexer.test('''Class _:_8I{}Class kx_82_1:_{Constructor (S__:Array [Array [Array [Float ,0127],9_9],01_63_4_3];C_Y:Boolean ;___:Array [String ,47]){}Destructor (){ {Continue ;}Break ;} }''','''Class,_,:,_8I,{,},Class,kx_82_1,:,_,{,Constructor,(,S__,:,Array,[,Array,[,Array,[,Float,,,0127,],,,99,],,,016343,],;,C_Y,:,Boolean,;,___,:,Array,[,String,,,47,],),{,},Destructor,(,),{,{,Continue,;,},Break,;,},},<EOF>''',101))

    def test_3604(self):
        self.assertTrue(TestLexer.test('''Class __T:_94{$oHGbXr(){}Val $2V,$1:Int ;$_(_17:Array [Array [Array [Array [Int ,0x3],03746_357_71],64],0x3];_G,T_,_C_:Float ;_:Array [Array [Boolean ,014],0B110100]){}Destructor (){} }Class _:__{}Class V:_{}Class _{Constructor (l,_08,O,_:String ){} }''','''Class,__T,:,_94,{,$oHGbXr,(,),{,},Val,$2V,,,$1,:,Int,;,$_,(,_17,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x3,],,,0374635771,],,,64,],,,0x3,],;,_G,,,T_,,,_C_,:,Float,;,_,:,Array,[,Array,[,Boolean,,,014,],,,0B110100,],),{,},Destructor,(,),{,},},Class,_,:,__,{,},Class,V,:,_,{,},Class,_,{,Constructor,(,l,,,_08,,,O,,,_,:,String,),{,},},<EOF>''',101))

    def test_3605(self):
        self.assertTrue(TestLexer.test('''Class ___d3{}Class _u__40:d6{}Class h_:_{}Class __294__6F:x0{Val $6_,$6:Array [Array [Array [String ,1],0B10],0x36];Val $6,$l:X7;}Class _{}''','''Class,___d3,{,},Class,_u__40,:,d6,{,},Class,h_,:,_,{,},Class,__294__6F,:,x0,{,Val,$6_,,,$6,:,Array,[,Array,[,Array,[,String,,,1,],,,0B10,],,,0x36,],;,Val,$6,,,$l,:,X7,;,},Class,_,{,},<EOF>''',101))

    def test_3606(self):
        self.assertTrue(TestLexer.test('''Class D71{}Class P{Constructor (_L44b,C__:___;_:Array [Array [Boolean ,0X2C_F],0b1000011]){New _9().N();} }Class __:l_{}''','''Class,D71,{,},Class,P,{,Constructor,(,_L44b,,,C__,:,___,;,_,:,Array,[,Array,[,Boolean,,,0X2CF,],,,0b1000011,],),{,New,_9,(,),.,N,(,),;,},},Class,__,:,l_,{,},<EOF>''',101))

    def test_3607(self):
        self.assertTrue(TestLexer.test('''Class _341{}Class _:__{_6(_:i;__4,_:Array [Boolean ,0X5A];_b9,J_:Array [Int ,0b100]){ {} }Destructor (){Continue ;} }Class _:_{Destructor (){}Constructor (_:Array [Int ,48];w:_){"".N();}$82(){Continue ;Break ;} }''','''Class,_341,{,},Class,_,:,__,{,_6,(,_,:,i,;,__4,,,_,:,Array,[,Boolean,,,0X5A,],;,_b9,,,J_,:,Array,[,Int,,,0b100,],),{,{,},},Destructor,(,),{,Continue,;,},},Class,_,:,_,{,Destructor,(,),{,},Constructor,(,_,:,Array,[,Int,,,48,],;,w,:,_,),{,,.,N,(,),;,},$82,(,),{,Continue,;,Break,;,},},<EOF>''',101))

    def test_3608(self):
        self.assertTrue(TestLexer.test('''Class T_:n3KNp{Val $_7:D;_(o5,y_,_d0k,R_,__:_5;q,_p:Float ;_5_,_:Array [Array [Int ,0x4],0B1011110];_:_){}m(_:Array [Array [Array [Int ,04_1],19],7];_,_:Array [Array [Array [Float ,0xE],0x1A],0132];_:_;_,_:Float ;_H:Array [Array [Array [Array [Float ,0132],0B1011110],0x1],0b1_0]){} }''','''Class,T_,:,n3KNp,{,Val,$_7,:,D,;,_,(,o5,,,y_,,,_d0k,,,R_,,,__,:,_5,;,q,,,_p,:,Float,;,_5_,,,_,:,Array,[,Array,[,Int,,,0x4,],,,0B1011110,],;,_,:,_,),{,},m,(,_,:,Array,[,Array,[,Array,[,Int,,,041,],,,19,],,,7,],;,_,,,_,:,Array,[,Array,[,Array,[,Float,,,0xE,],,,0x1A,],,,0132,],;,_,:,_,;,_,,,_,:,Float,;,_H,:,Array,[,Array,[,Array,[,Array,[,Float,,,0132,],,,0B1011110,],,,0x1,],,,0b10,],),{,},},<EOF>''',101))

    def test_3609(self):
        self.assertTrue(TestLexer.test('''Class K:i{}Class g_:N4{Constructor (c,s,R_:_){ {} }}Class _{Destructor (){}Constructor (____,j_cq3:String ){}Var $P,$1_:Array [Int ,2_72_52];}Class R{}Class _:_{}''','''Class,K,:,i,{,},Class,g_,:,N4,{,Constructor,(,c,,,s,,,R_,:,_,),{,{,},},},Class,_,{,Destructor,(,),{,},Constructor,(,____,,,j_cq3,:,String,),{,},Var,$P,,,$1_,:,Array,[,Int,,,27252,],;,},Class,R,{,},Class,_,:,_,{,},<EOF>''',101))

    def test_3610(self):
        self.assertTrue(TestLexer.test('''Class j{$9B(_:IQ06;_,lukt:Boolean ){}Constructor (D,_q,_,s:Array [Array [Array [Array [Float ,054],0x6],0B100],0534]){} }Class H{}''','''Class,j,{,$9B,(,_,:,IQ06,;,_,,,lukt,:,Boolean,),{,},Constructor,(,D,,,_q,,,_,,,s,:,Array,[,Array,[,Array,[,Array,[,Float,,,054,],,,0x6,],,,0B100,],,,0534,],),{,},},Class,H,{,},<EOF>''',101))

    def test_3611(self):
        self.assertTrue(TestLexer.test('''Class _{P(L,_6__,q,Z_,_2,_:u){}Constructor (){}_(){}$Y(__Xj_:String ;k:Q_M__){}Destructor (){Continue ;}Destructor (){Var S6___,_8__ui5,q_,z_b,_,__,_4:Array [Array [String ,0125],0B10111];} }''','''Class,_,{,P,(,L,,,_6__,,,q,,,Z_,,,_2,,,_,:,u,),{,},Constructor,(,),{,},_,(,),{,},$Y,(,__Xj_,:,String,;,k,:,Q_M__,),{,},Destructor,(,),{,Continue,;,},Destructor,(,),{,Var,S6___,,,_8__ui5,,,q_,,,z_b,,,_,,,__,,,_4,:,Array,[,Array,[,String,,,0125,],,,0B10111,],;,},},<EOF>''',101))

    def test_3612(self):
        self.assertTrue(TestLexer.test('''Class a:__{Var _,J,rK,n:Int ;Val $3_fA:Array [Array [Array [Array [Array [Array [String ,66],035],0b1000100],0254],035],0X6];}Class z:d5{Var _,_0,$7I,I_t,u,$_2,$wq:__;}''','''Class,a,:,__,{,Var,_,,,J,,,rK,,,n,:,Int,;,Val,$3_fA,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,66,],,,035,],,,0b1000100,],,,0254,],,,035,],,,0X6,],;,},Class,z,:,d5,{,Var,_,,,_0,,,$7I,,,I_t,,,u,,,$_2,,,$wq,:,__,;,},<EOF>''',101))

    def test_3613(self):
        self.assertTrue(TestLexer.test('''Class h:_d85{Constructor (s_:Array [Boolean ,0x9]){}Constructor (__q9__m:Array [Int ,0b11];pyD__:Array [Int ,0b1011111]){} }Class _:_{Var _9_,_:Int ;}Class _:_{Val n,$_,p4:Array [Array [Array [Int ,01],012],0B101011];}''','''Class,h,:,_d85,{,Constructor,(,s_,:,Array,[,Boolean,,,0x9,],),{,},Constructor,(,__q9__m,:,Array,[,Int,,,0b11,],;,pyD__,:,Array,[,Int,,,0b1011111,],),{,},},Class,_,:,_,{,Var,_9_,,,_,:,Int,;,},Class,_,:,_,{,Val,n,,,$_,,,p4,:,Array,[,Array,[,Array,[,Int,,,01,],,,012,],,,0B101011,],;,},<EOF>''',101))

    def test_3614(self):
        self.assertTrue(TestLexer.test('''Class C{Constructor (n,k:Array [Int ,0x5_43A];s_T:Array [String ,75];L5:Array [String ,75];_,h:Boolean ;__,D:Boolean ;_k:Float ){} }''','''Class,C,{,Constructor,(,n,,,k,:,Array,[,Int,,,0x543A,],;,s_T,:,Array,[,String,,,75,],;,L5,:,Array,[,String,,,75,],;,_,,,h,:,Boolean,;,__,,,D,:,Boolean,;,_k,:,Float,),{,},},<EOF>''',101))

    def test_3615(self):
        self.assertTrue(TestLexer.test('''Class S439_33:_{}Class Y_t{Val $___,$vi,_,$O:Array [Array [Array [Array [Array [Float ,032],02],032],5_4],0X5];}''','''Class,S439_33,:,_,{,},Class,Y_t,{,Val,$___,,,$vi,,,_,,,$O,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,032,],,,02,],,,032,],,,54,],,,0X5,],;,},<EOF>''',101))

    def test_3616(self):
        self.assertTrue(TestLexer.test('''Class D_60{$_(l,K_7,i_1,_:Array [Int ,4_5];c,_:_e6;_:Boolean ;_____:Int ;_,F:Boolean ;l,d,K_:Int ;AS:_8_;__3f:u;g__,Z72x,_:Array [Int ,025];v:__){}Var _d:Int ;Destructor (){}Val MX:Array [Boolean ,3_0_1];Val t,$H8_O:Array [Array [Array [Array [Int ,0X4F],0X4F],025],05_4_0];Var $9_,$c:Float ;}''','''Class,D_60,{,$_,(,l,,,K_7,,,i_1,,,_,:,Array,[,Int,,,45,],;,c,,,_,:,_e6,;,_,:,Boolean,;,_____,:,Int,;,_,,,F,:,Boolean,;,l,,,d,,,K_,:,Int,;,AS,:,_8_,;,__3f,:,u,;,g__,,,Z72x,,,_,:,Array,[,Int,,,025,],;,v,:,__,),{,},Var,_d,:,Int,;,Destructor,(,),{,},Val,MX,:,Array,[,Boolean,,,301,],;,Val,t,,,$H8_O,:,Array,[,Array,[,Array,[,Array,[,Int,,,0X4F,],,,0X4F,],,,025,],,,0540,],;,Var,$9_,,,$c,:,Float,;,},<EOF>''',101))

    def test_3617(self):
        self.assertTrue(TestLexer.test('''Class q{Destructor (){}Var $R:Int ;Val $5,$1,$_d:Array [Boolean ,64];}Class _:_0{Val r_:_;Var $3P:Array [Int ,0b1_0];}Class X___:E5{}''','''Class,q,{,Destructor,(,),{,},Var,$R,:,Int,;,Val,$5,,,$1,,,$_d,:,Array,[,Boolean,,,64,],;,},Class,_,:,_0,{,Val,r_,:,_,;,Var,$3P,:,Array,[,Int,,,0b10,],;,},Class,X___,:,E5,{,},<EOF>''',101))

    def test_3618(self):
        self.assertTrue(TestLexer.test('''Class _:d{Constructor (q:Int ;iu:_;J5,_0,__,h,_,__,K,_O:Float ;_:Float ){}Var XZ8P:Array [String ,0b1000100];Destructor (){} }Class f{}''','''Class,_,:,d,{,Constructor,(,q,:,Int,;,iu,:,_,;,J5,,,_0,,,__,,,h,,,_,,,__,,,K,,,_O,:,Float,;,_,:,Float,),{,},Var,XZ8P,:,Array,[,String,,,0b1000100,],;,Destructor,(,),{,},},Class,f,{,},<EOF>''',101))

    def test_3619(self):
        self.assertTrue(TestLexer.test('''Class k{}Class _{Constructor (_4S,_:_4_;c,_6:Array [Array [Array [Boolean ,0XF],0b10],0X12]){}Var __,$5wb__:Array [Float ,6];Val _:v;Constructor (){}Destructor (){} }Class s_{}Class a:It{}''','''Class,k,{,},Class,_,{,Constructor,(,_4S,,,_,:,_4_,;,c,,,_6,:,Array,[,Array,[,Array,[,Boolean,,,0XF,],,,0b10,],,,0X12,],),{,},Var,__,,,$5wb__,:,Array,[,Float,,,6,],;,Val,_,:,v,;,Constructor,(,),{,},Destructor,(,),{,},},Class,s_,{,},Class,a,:,It,{,},<EOF>''',101))

    def test_3620(self):
        self.assertTrue(TestLexer.test('''Class M{Constructor (CI,_,__:Array [Array [Array [Array [Int ,4_41],0B1_1],0x5],35];_p:Boolean ){}$K_md(_5,__,r,_:C0){}Val __:N;}''','''Class,M,{,Constructor,(,CI,,,_,,,__,:,Array,[,Array,[,Array,[,Array,[,Int,,,441,],,,0B11,],,,0x5,],,,35,],;,_p,:,Boolean,),{,},$K_md,(,_5,,,__,,,r,,,_,:,C0,),{,},Val,__,:,N,;,},<EOF>''',101))

    def test_3621(self):
        self.assertTrue(TestLexer.test('''Class _iw{}Class Y{Constructor (_v:f;_:Array [Int ,06_41_5];o,_,B,U,V:f_6;__,Y8:Array [Float ,0x3B];n:_;f,__:Float ){} }Class __1:a_a{}''','''Class,_iw,{,},Class,Y,{,Constructor,(,_v,:,f,;,_,:,Array,[,Int,,,06415,],;,o,,,_,,,B,,,U,,,V,:,f_6,;,__,,,Y8,:,Array,[,Float,,,0x3B,],;,n,:,_,;,f,,,__,:,Float,),{,},},Class,__1,:,a_a,{,},<EOF>''',101))

    def test_3622(self):
        self.assertTrue(TestLexer.test('''Class Qg{}Class _:m__F11{Val $_1,_6:Float ;Constructor (){} }Class R{Val $706:N;}Class _:g5{Var P6_,_6_h3,$8088P4Y:Boolean ;}''','''Class,Qg,{,},Class,_,:,m__F11,{,Val,$_1,,,_6,:,Float,;,Constructor,(,),{,},},Class,R,{,Val,$706,:,N,;,},Class,_,:,g5,{,Var,P6_,,,_6_h3,,,$8088P4Y,:,Boolean,;,},<EOF>''',101))

    def test_3623(self):
        self.assertTrue(TestLexer.test('''Class ___w16:S{$_(){Val O_F:String ;}Val $sf0D:Array [Array [Boolean ,0B1_0],0B11100];Constructor (K_,l3L6VRe,T,_,_,_,W:kb__;k:Array [Float ,2]){} }''','''Class,___w16,:,S,{,$_,(,),{,Val,O_F,:,String,;,},Val,$sf0D,:,Array,[,Array,[,Boolean,,,0B10,],,,0B11100,],;,Constructor,(,K_,,,l3L6VRe,,,T,,,_,,,_,,,_,,,W,:,kb__,;,k,:,Array,[,Float,,,2,],),{,},},<EOF>''',101))

    def test_3624(self):
        self.assertTrue(TestLexer.test('''Class iW_:_2_{Val _:Array [Array [Array [Array [Array [Array [Float ,9],01_6_2_6_4],02_0_04_2],06],011],0x4];Var $x:Array [Array [Array [String ,06],0X79],0B1_010_1];}''','''Class,iW_,:,_2_,{,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,9,],,,016264,],,,020042,],,,06,],,,011,],,,0x4,],;,Var,$x,:,Array,[,Array,[,Array,[,String,,,06,],,,0X79,],,,0B10101,],;,},<EOF>''',101))

    def test_3625(self):
        self.assertTrue(TestLexer.test('''Class d9{}Class _3_:_{Constructor (_,b__:v;M:Array [Array [Array [Float ,02_7],0114],2_3];_,_:Array [Float ,0B11_1]){}$p(_,_,_:Array [Array [Array [Array [Array [String ,0114],55],6],0x1C],0114];I,pw:Array [Array [Boolean ,0114],57];k:Int ;_73764:String ){} }''','''Class,d9,{,},Class,_3_,:,_,{,Constructor,(,_,,,b__,:,v,;,M,:,Array,[,Array,[,Array,[,Float,,,027,],,,0114,],,,23,],;,_,,,_,:,Array,[,Float,,,0B111,],),{,},$p,(,_,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0114,],,,55,],,,6,],,,0x1C,],,,0114,],;,I,,,pw,:,Array,[,Array,[,Boolean,,,0114,],,,57,],;,k,:,Int,;,_73764,:,String,),{,},},<EOF>''',101))

    def test_3626(self):
        self.assertTrue(TestLexer.test('''Class _8_:IW{Destructor (){}Constructor (__da:C;_Q:_R){}Val P:Boolean ;_3(_,_:Boolean ;_:String ){} }Class W{}''','''Class,_8_,:,IW,{,Destructor,(,),{,},Constructor,(,__da,:,C,;,_Q,:,_R,),{,},Val,P,:,Boolean,;,_3,(,_,,,_,:,Boolean,;,_,:,String,),{,},},Class,W,{,},<EOF>''',101))

    def test_3627(self):
        self.assertTrue(TestLexer.test('''Class _F{}Class k:J{Constructor (i_:Array [Array [Array [Array [Int ,014_3_401_5_0],4],014],0276]){}Val $_,$13_1g:String ;}''','''Class,_F,{,},Class,k,:,J,{,Constructor,(,i_,:,Array,[,Array,[,Array,[,Array,[,Int,,,014340150,],,,4,],,,014,],,,0276,],),{,},Val,$_,,,$13_1g,:,String,;,},<EOF>''',101))

    def test_3628(self):
        self.assertTrue(TestLexer.test('''Class g__{Var $_:Array [Array [String ,0x4C],3_188];}Class gxU_G{Var $9NM:Array [Array [Float ,6_9_0_7_52],0XE];}''','''Class,g__,{,Var,$_,:,Array,[,Array,[,String,,,0x4C,],,,3188,],;,},Class,gxU_G,{,Var,$9NM,:,Array,[,Array,[,Float,,,690752,],,,0XE,],;,},<EOF>''',101))

    def test_3629(self):
        self.assertTrue(TestLexer.test('''Class _:H{x7(f_v_81,N:Array [Array [Array [Array [Array [String ,0X49],5],0B110],0B11],0B1_01]){Val _:String ;}Val $3,BT:_3;}Class D:k4{Destructor (){ {} }}''','''Class,_,:,H,{,x7,(,f_v_81,,,N,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X49,],,,5,],,,0B110,],,,0B11,],,,0B101,],),{,Val,_,:,String,;,},Val,$3,,,BT,:,_3,;,},Class,D,:,k4,{,Destructor,(,),{,{,},},},<EOF>''',101))

    def test_3630(self):
        self.assertTrue(TestLexer.test('''Class j0_:w{}Class _:z9{Constructor (_:Array [Float ,0B1];Q_:Array [Boolean ,0x40];K,dA7,_:Int ){ {} }}Class u89{}''','''Class,j0_,:,w,{,},Class,_,:,z9,{,Constructor,(,_,:,Array,[,Float,,,0B1,],;,Q_,:,Array,[,Boolean,,,0x40,],;,K,,,dA7,,,_,:,Int,),{,{,},},},Class,u89,{,},<EOF>''',101))

    def test_3631(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _k{_(H_C,__:Array [Array [Int ,0B1],81];h:W;_2:H;_:Array [Array [Float ,0x27E],0b1]){Break ;Return ;Break ;} }Class Y_7GjT{Constructor (){} }''','''Class,_,{,},Class,_k,{,_,(,H_C,,,__,:,Array,[,Array,[,Int,,,0B1,],,,81,],;,h,:,W,;,_2,:,H,;,_,:,Array,[,Array,[,Float,,,0x27E,],,,0b1,],),{,Break,;,Return,;,Break,;,},},Class,Y_7GjT,{,Constructor,(,),{,},},<EOF>''',101))

    def test_3632(self):
        self.assertTrue(TestLexer.test('''Class w5:_{Destructor (){}Destructor (){} }Class q{}Class R{}Class y6{Destructor (){}Var ___,y_:P;Var $H,$h,$_6,$_5M:m_;Val rls:u;}Class _2{}''','''Class,w5,:,_,{,Destructor,(,),{,},Destructor,(,),{,},},Class,q,{,},Class,R,{,},Class,y6,{,Destructor,(,),{,},Var,___,,,y_,:,P,;,Var,$H,,,$h,,,$_6,,,$_5M,:,m_,;,Val,rls,:,u,;,},Class,_2,{,},<EOF>''',101))

    def test_3633(self):
        self.assertTrue(TestLexer.test('''Class n:f{$_(_,_:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,42],0X54_96],02],42],0B1_1],01],0b111],0b111],0B1]){} }''','''Class,n,:,f,{,$_,(,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,42,],,,0X5496,],,,02,],,,42,],,,0B11,],,,01,],,,0b111,],,,0b111,],,,0B1,],),{,},},<EOF>''',101))

    def test_3634(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _:_{}Class __9{Var _:_5;Constructor (T:Float ){} }Class E_{}Class cx__:_{Val _X_f0:d_;}Class e4:e{}''','''Class,_,{,},Class,_,:,_,{,},Class,__9,{,Var,_,:,_5,;,Constructor,(,T,:,Float,),{,},},Class,E_,{,},Class,cx__,:,_,{,Val,_X_f0,:,d_,;,},Class,e4,:,e,{,},<EOF>''',101))

    def test_3635(self):
        self.assertTrue(TestLexer.test('''Class _2c_9_L{Destructor (){}A_0(e7:Array [Array [Boolean ,0x21],07];ix,V,_9,g_MW:Int ;U:k){}Val $6:Boolean ;}Class C{}''','''Class,_2c_9_L,{,Destructor,(,),{,},A_0,(,e7,:,Array,[,Array,[,Boolean,,,0x21,],,,07,],;,ix,,,V,,,_9,,,g_MW,:,Int,;,U,:,k,),{,},Val,$6,:,Boolean,;,},Class,C,{,},<EOF>''',101))

    def test_3636(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (h6,__:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,7],070],83],0xC],97_2],0B110000],83],0B1],83],0X47],6],0x4C]){}Var _73_4__,_O,_:Int ;}''','''Class,_,{,Constructor,(,h6,,,__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,7,],,,070,],,,83,],,,0xC,],,,972,],,,0B110000,],,,83,],,,0B1,],,,83,],,,0X47,],,,6,],,,0x4C,],),{,},Var,_73_4__,,,_O,,,_,:,Int,;,},<EOF>''',101))

    def test_3637(self):
        self.assertTrue(TestLexer.test('''Class I43X:_{}Class ___Jj6:aXW3{Constructor (){Val u:Int ;} }Class _z81{}Class _{}Class M_U4:_{_C(){}Var $9005:Array [String ,0b1];Var jn9,$_:Boolean ;}''','''Class,I43X,:,_,{,},Class,___Jj6,:,aXW3,{,Constructor,(,),{,Val,u,:,Int,;,},},Class,_z81,{,},Class,_,{,},Class,M_U4,:,_,{,_C,(,),{,},Var,$9005,:,Array,[,String,,,0b1,],;,Var,jn9,,,$_,:,Boolean,;,},<EOF>''',101))

    def test_3638(self):
        self.assertTrue(TestLexer.test('''Class ___:s_{}Class _1b{}Class s_{Constructor (R:Boolean ;_5,qQwr,E3:b0__;_z:Pw_;_:Array [Array [Array [String ,0x2],0b111011],022];_,rd37J,__,_,nM__,_:__){T__::$_C();} }Class ___:_{}Class Eqx__9_:_{Constructor (){Continue ;} }Class k_{Var b:Boolean ;}''','''Class,___,:,s_,{,},Class,_1b,{,},Class,s_,{,Constructor,(,R,:,Boolean,;,_5,,,qQwr,,,E3,:,b0__,;,_z,:,Pw_,;,_,:,Array,[,Array,[,Array,[,String,,,0x2,],,,0b111011,],,,022,],;,_,,,rd37J,,,__,,,_,,,nM__,,,_,:,__,),{,T__,::,$_C,(,),;,},},Class,___,:,_,{,},Class,Eqx__9_,:,_,{,Constructor,(,),{,Continue,;,},},Class,k_,{,Var,b,:,Boolean,;,},<EOF>''',101))

    def test_3639(self):
        self.assertTrue(TestLexer.test('''Class M:U{_l(_h:String ;_JQ:Array [Array [Int ,0B1],88]){}Val _8,_:Int ;Constructor (_z,M,j_F6MgC_1,p68:_T;X:Array [Boolean ,030]){} }''','''Class,M,:,U,{,_l,(,_h,:,String,;,_JQ,:,Array,[,Array,[,Int,,,0B1,],,,88,],),{,},Val,_8,,,_,:,Int,;,Constructor,(,_z,,,M,,,j_F6MgC_1,,,p68,:,_T,;,X,:,Array,[,Boolean,,,030,],),{,},},<EOF>''',101))

    def test_3640(self):
        self.assertTrue(TestLexer.test('''Class L:i_8{}Class _4{}Class _{Val t,$62:Array [Boolean ,0137];Constructor (){ {} }Val TZ,$_5X_:Boolean ;Var m0:Float ;Var __,V,$Y6,$_,j,W:Array [Boolean ,58];}Class Y:_{}Class V:_{}''','''Class,L,:,i_8,{,},Class,_4,{,},Class,_,{,Val,t,,,$62,:,Array,[,Boolean,,,0137,],;,Constructor,(,),{,{,},},Val,TZ,,,$_5X_,:,Boolean,;,Var,m0,:,Float,;,Var,__,,,V,,,$Y6,,,$_,,,j,,,W,:,Array,[,Boolean,,,58,],;,},Class,Y,:,_,{,},Class,V,:,_,{,},<EOF>''',101))

    def test_3641(self):
        self.assertTrue(TestLexer.test('''Class __:_6_7{Val _,_,$_7,$Wg_:Array [Array [Array [Array [Boolean ,4],0X16],011],3];}Class _:e{Constructor (){}Var $__:_2;_1(BC,_:Boolean ){} }''','''Class,__,:,_6_7,{,Val,_,,,_,,,$_7,,,$Wg_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,4,],,,0X16,],,,011,],,,3,],;,},Class,_,:,e,{,Constructor,(,),{,},Var,$__,:,_2,;,_1,(,BC,,,_,:,Boolean,),{,},},<EOF>''',101))

    def test_3642(self):
        self.assertTrue(TestLexer.test('''Class t_:D_1{$_(h:Int ;_3,p_9,z:Array [Boolean ,8]){}Val $_S1,$4,q8,$m5_,kD:Array [Boolean ,0XF3];}Class __:_2{}Class e:zu{Destructor (){} }''','''Class,t_,:,D_1,{,$_,(,h,:,Int,;,_3,,,p_9,,,z,:,Array,[,Boolean,,,8,],),{,},Val,$_S1,,,$4,,,q8,,,$m5_,,,kD,:,Array,[,Boolean,,,0XF3,],;,},Class,__,:,_2,{,},Class,e,:,zu,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3643(self):
        self.assertTrue(TestLexer.test('''Class __{}Class h{}Class T:_{}Class E{Destructor (){Return ;Break ;}Constructor (i,_56Z:Array [Array [Array [Int ,186],1],62]){} }Class _:_{Var FT,g,$v:Array [Array [String ,0x53],06_1];Val $F,tM,_5,$yZ:Array [Float ,3];Val o:Array [String ,62];}''','''Class,__,{,},Class,h,{,},Class,T,:,_,{,},Class,E,{,Destructor,(,),{,Return,;,Break,;,},Constructor,(,i,,,_56Z,:,Array,[,Array,[,Array,[,Int,,,186,],,,1,],,,62,],),{,},},Class,_,:,_,{,Var,FT,,,g,,,$v,:,Array,[,Array,[,String,,,0x53,],,,061,],;,Val,$F,,,tM,,,_5,,,$yZ,:,Array,[,Float,,,3,],;,Val,o,:,Array,[,String,,,62,],;,},<EOF>''',101))

    def test_3644(self):
        self.assertTrue(TestLexer.test('''Class t{}Class A_:_{}Class C:s_{Var z_9:Array [String ,0b1011110];Var $5q_7B,$W:Array [Array [Int ,0b1011110],03];}Class Sk_{}Class ___:_{}''','''Class,t,{,},Class,A_,:,_,{,},Class,C,:,s_,{,Var,z_9,:,Array,[,String,,,0b1011110,],;,Var,$5q_7B,,,$W,:,Array,[,Array,[,Int,,,0b1011110,],,,03,],;,},Class,Sk_,{,},Class,___,:,_,{,},<EOF>''',101))

    def test_3645(self):
        self.assertTrue(TestLexer.test('''Class l7{}Class _2:K{}Class h58{}Class Pt{A(Y1,__97:Array [Array [Boolean ,0b1000100],48]){Var Z_l:Int ;} }Class _L0_6{}''','''Class,l7,{,},Class,_2,:,K,{,},Class,h58,{,},Class,Pt,{,A,(,Y1,,,__97,:,Array,[,Array,[,Boolean,,,0b1000100,],,,48,],),{,Var,Z_l,:,Int,;,},},Class,_L0_6,{,},<EOF>''',101))

    def test_3646(self):
        self.assertTrue(TestLexer.test('''Class Y0_q{}Class I:_5{Constructor (_,_,_:Array [Array [Array [Int ,53],53],42];_,R:Array [Array [Array [Boolean ,53],0B1],9_9_4]){ {}a0_6::$5_();Continue ;Break ;}Var _3_3_3:Float ;Constructor (_5_:Float ;Sl0_4j,_,Dg:Array [Array [Boolean ,31_67_1],0xC]){} }Class x:_{gT(){} }Class Z{}''','''Class,Y0_q,{,},Class,I,:,_5,{,Constructor,(,_,,,_,,,_,:,Array,[,Array,[,Array,[,Int,,,53,],,,53,],,,42,],;,_,,,R,:,Array,[,Array,[,Array,[,Boolean,,,53,],,,0B1,],,,994,],),{,{,},a0_6,::,$5_,(,),;,Continue,;,Break,;,},Var,_3_3_3,:,Float,;,Constructor,(,_5_,:,Float,;,Sl0_4j,,,_,,,Dg,:,Array,[,Array,[,Boolean,,,31671,],,,0xC,],),{,},},Class,x,:,_,{,gT,(,),{,},},Class,Z,{,},<EOF>''',101))

    def test_3647(self):
        self.assertTrue(TestLexer.test('''Class _q_:v{}Class a:_{}Class _{$_(_6,_j:m;J,i5,_,X:Array [Array [Array [Boolean ,5],6],0X3F];z58,_,_:U;_S4,_Pre:String ){Return ;} }''','''Class,_q_,:,v,{,},Class,a,:,_,{,},Class,_,{,$_,(,_6,,,_j,:,m,;,J,,,i5,,,_,,,X,:,Array,[,Array,[,Array,[,Boolean,,,5,],,,6,],,,0X3F,],;,z58,,,_,,,_,:,U,;,_S4,,,_Pre,:,String,),{,Return,;,},},<EOF>''',101))

    def test_3648(self):
        self.assertTrue(TestLexer.test('''Class R:ia_h{$2(g,_m:___){Return ;Var Oj7,A:String ;}Constructor (z:Array [Array [Array [Float ,03_0_3],0b1],01];_N,_,m:Int ;_:Boolean ){} }Class _:_6o_{}''','''Class,R,:,ia_h,{,$2,(,g,,,_m,:,___,),{,Return,;,Var,Oj7,,,A,:,String,;,},Constructor,(,z,:,Array,[,Array,[,Array,[,Float,,,0303,],,,0b1,],,,01,],;,_N,,,_,,,m,:,Int,;,_,:,Boolean,),{,},},Class,_,:,_6o_,{,},<EOF>''',101))

    def test_3649(self):
        self.assertTrue(TestLexer.test('''Class X:K{}Class _{Destructor (){} }Class _{$g(){Continue ;}Destructor (){} }Class b:t{}Class d:_R5{Destructor (){}Val $5,$m_:Float ;}Class u:__{}''','''Class,X,:,K,{,},Class,_,{,Destructor,(,),{,},},Class,_,{,$g,(,),{,Continue,;,},Destructor,(,),{,},},Class,b,:,t,{,},Class,d,:,_R5,{,Destructor,(,),{,},Val,$5,,,$m_,:,Float,;,},Class,u,:,__,{,},<EOF>''',101))

    def test_3650(self):
        self.assertTrue(TestLexer.test('''Class Q{Constructor (){}Constructor (_,_C,_8_:Array [Array [Boolean ,70],0x5773];_:Array [String ,0x6];__,_,rl_qL:Array [Array [Array [Array [String ,70],0b10],0X3],0B10111]){} }''','''Class,Q,{,Constructor,(,),{,},Constructor,(,_,,,_C,,,_8_,:,Array,[,Array,[,Boolean,,,70,],,,0x5773,],;,_,:,Array,[,String,,,0x6,],;,__,,,_,,,rl_qL,:,Array,[,Array,[,Array,[,Array,[,String,,,70,],,,0b10,],,,0X3,],,,0B10111,],),{,},},<EOF>''',101))

    def test_3651(self):
        self.assertTrue(TestLexer.test('''Class _:r__840R0{}Class _A{Constructor (_6SC,T:Array [Array [Array [Boolean ,0B101101],013],7_8];_:Float ;_,Sn,_:Array [Array [Float ,042],55];Z9,_:Boolean ){}Var $__e:Int ;}''','''Class,_,:,r__840R0,{,},Class,_A,{,Constructor,(,_6SC,,,T,:,Array,[,Array,[,Array,[,Boolean,,,0B101101,],,,013,],,,78,],;,_,:,Float,;,_,,,Sn,,,_,:,Array,[,Array,[,Float,,,042,],,,55,],;,Z9,,,_,:,Boolean,),{,},Var,$__e,:,Int,;,},<EOF>''',101))

    def test_3652(self):
        self.assertTrue(TestLexer.test('''Class F:_{Constructor (_:Boolean ;ko_,U1,W23,W4,_k,_6:Array [Float ,12]){Return ;} }Class _w__b{Var pR_b_:Array [Array [Array [Int ,0x1E],0B1_011_1],0x2];}Class U{$r92(fR,YRd,_,_,f_E5,_N,_:Array [Int ,12];P,S2_:Array [Array [Int ,0XE_3_B],044]){} }Class _377j8H:_4_ee_{}''','''Class,F,:,_,{,Constructor,(,_,:,Boolean,;,ko_,,,U1,,,W23,,,W4,,,_k,,,_6,:,Array,[,Float,,,12,],),{,Return,;,},},Class,_w__b,{,Var,pR_b_,:,Array,[,Array,[,Array,[,Int,,,0x1E,],,,0B10111,],,,0x2,],;,},Class,U,{,$r92,(,fR,,,YRd,,,_,,,_,,,f_E5,,,_N,,,_,:,Array,[,Int,,,12,],;,P,,,S2_,:,Array,[,Array,[,Int,,,0XE3B,],,,044,],),{,},},Class,_377j8H,:,_4_ee_,{,},<EOF>''',101))

    def test_3653(self):
        self.assertTrue(TestLexer.test('''Class C_T__:i{__3_(){}U(z,_7H_:Array [Array [Array [Array [Boolean ,0x9_0],0x55],0b1],6];d,_:Array [String ,0X54];_s,_6:C){} }Class F:_{Val __:Array [Array [Array [Float ,0x55],5],01];}Class W{}''','''Class,C_T__,:,i,{,__3_,(,),{,},U,(,z,,,_7H_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0x90,],,,0x55,],,,0b1,],,,6,],;,d,,,_,:,Array,[,String,,,0X54,],;,_s,,,_6,:,C,),{,},},Class,F,:,_,{,Val,__,:,Array,[,Array,[,Array,[,Float,,,0x55,],,,5,],,,01,],;,},Class,W,{,},<EOF>''',101))

    def test_3654(self):
        self.assertTrue(TestLexer.test('''Class __bN{_(_fw_:Float ;d:Array [Array [Array [Float ,99],0324_5],02];m9,D_5Q:_w;j,_,a668:T;l:W_;_:String ){Continue ;}Destructor (){Return ;} }''','''Class,__bN,{,_,(,_fw_,:,Float,;,d,:,Array,[,Array,[,Array,[,Float,,,99,],,,03245,],,,02,],;,m9,,,D_5Q,:,_w,;,j,,,_,,,a668,:,T,;,l,:,W_,;,_,:,String,),{,Continue,;,},Destructor,(,),{,Return,;,},},<EOF>''',101))

    def test_3655(self):
        self.assertTrue(TestLexer.test('''Class _995K:Em__M{Val X1:String ;Constructor (_,_7_8__,im,m,__,_:Array [Boolean ,0XDA];_:Array [Array [Boolean ,042],7]){}Val _:Array [Boolean ,0X3];}''','''Class,_995K,:,Em__M,{,Val,X1,:,String,;,Constructor,(,_,,,_7_8__,,,im,,,m,,,__,,,_,:,Array,[,Boolean,,,0XDA,],;,_,:,Array,[,Array,[,Boolean,,,042,],,,7,],),{,},Val,_,:,Array,[,Boolean,,,0X3,],;,},<EOF>''',101))

    def test_3656(self):
        self.assertTrue(TestLexer.test('''Class _:_s2_{}Class _6H{Var $eY7Rh,$g,$B,Ru1K3:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,0x9_1],0141],0141],0B1],01],035_607],4_2_2_6],6],3_4],0XD],7],0b101010];}''','''Class,_,:,_s2_,{,},Class,_6H,{,Var,$eY7Rh,,,$g,,,$B,,,Ru1K3,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x91,],,,0141,],,,0141,],,,0B1,],,,01,],,,035607,],,,4226,],,,6,],,,34,],,,0XD,],,,7,],,,0b101010,],;,},<EOF>''',101))

    def test_3657(self):
        self.assertTrue(TestLexer.test('''Class _:Z{}Class c_{}Class t_:Q3{}Class g:_{}Class _1:ZP{Var $Q,$_:Array [String ,0b1];}Class _:_h{}Class b:_{}''','''Class,_,:,Z,{,},Class,c_,{,},Class,t_,:,Q3,{,},Class,g,:,_,{,},Class,_1,:,ZP,{,Var,$Q,,,$_,:,Array,[,String,,,0b1,],;,},Class,_,:,_h,{,},Class,b,:,_,{,},<EOF>''',101))

    def test_3658(self):
        self.assertTrue(TestLexer.test('''Class k2{Constructor (e,P:_;kL:Int ;_:E_;P,_,_,k,__0:Array [Boolean ,74]){Return ;}Constructor (_g:a){i6::$0__2();}Val _,$_6:Int ;Constructor (_23_H:R3){}$n(){} }Class Q_:p2_{}''','''Class,k2,{,Constructor,(,e,,,P,:,_,;,kL,:,Int,;,_,:,E_,;,P,,,_,,,_,,,k,,,__0,:,Array,[,Boolean,,,74,],),{,Return,;,},Constructor,(,_g,:,a,),{,i6,::,$0__2,(,),;,},Val,_,,,$_6,:,Int,;,Constructor,(,_23_H,:,R3,),{,},$n,(,),{,},},Class,Q_,:,p2_,{,},<EOF>''',101))

    def test_3659(self):
        self.assertTrue(TestLexer.test('''Class _:_{Var _eU,_:Float ;Val T,$3:__5;Constructor (){}Var _,$l:Array [Array [Array [Array [Float ,0x53],0B1],0B1001100],0x4];}''','''Class,_,:,_,{,Var,_eU,,,_,:,Float,;,Val,T,,,$3,:,__5,;,Constructor,(,),{,},Var,_,,,$l,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x53,],,,0B1,],,,0B1001100,],,,0x4,],;,},<EOF>''',101))

    def test_3660(self):
        self.assertTrue(TestLexer.test('''Class _:_4{Constructor (){}Val $_K,$3,$_W,$j,$054,$Z,E_51Yc,$5_,$2g,$J,$5,B:Array [Array [Float ,0B111011],24_0];}''','''Class,_,:,_4,{,Constructor,(,),{,},Val,$_K,,,$3,,,$_W,,,$j,,,$054,,,$Z,,,E_51Yc,,,$5_,,,$2g,,,$J,,,$5,,,B,:,Array,[,Array,[,Float,,,0B111011,],,,240,],;,},<EOF>''',101))

    def test_3661(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_,s_0,__,G,eJ_59:Array [Int ,0B1_1];x2,jn:Array [Array [Array [Array [Array [Array [Array [Array [Float ,0x1],02_2],3],0X20],0B1_11_1],0X5_6],05],4]){} }Class f:g4{}''','''Class,_,{,Constructor,(,_,,,s_0,,,__,,,G,,,eJ_59,:,Array,[,Int,,,0B11,],;,x2,,,jn,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0x1,],,,022,],,,3,],,,0X20,],,,0B1111,],,,0X56,],,,05,],,,4,],),{,},},Class,f,:,g4,{,},<EOF>''',101))

    def test_3662(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _:a{Var B_y,t21,$0:Array [Array [Array [Array [Array [Array [Array [Array [Int ,75],0X3D],0135],0x8],0135],0135],0b1],0B1];Val P:Q_;Var _:Array [Boolean ,01];Constructor (X:L96_){} }''','''Class,_,{,},Class,_,:,a,{,Var,B_y,,,t21,,,$0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,75,],,,0X3D,],,,0135,],,,0x8,],,,0135,],,,0135,],,,0b1,],,,0B1,],;,Val,P,:,Q_,;,Var,_,:,Array,[,Boolean,,,01,],;,Constructor,(,X,:,L96_,),{,},},<EOF>''',101))

    def test_3663(self):
        self.assertTrue(TestLexer.test('''Class _:__{Val _,$7,$7A5,$_tv,_otohsH,$_,$_:Boolean ;Val $T,H:Array [Float ,0X46];Var $k,_,_:Array [Boolean ,2_3_7];}''','''Class,_,:,__,{,Val,_,,,$7,,,$7A5,,,$_tv,,,_otohsH,,,$_,,,$_,:,Boolean,;,Val,$T,,,H,:,Array,[,Float,,,0X46,],;,Var,$k,,,_,,,_,:,Array,[,Boolean,,,237,],;,},<EOF>''',101))

    def test_3664(self):
        self.assertTrue(TestLexer.test('''Class O__6p:N1{Constructor (){}e(F_a:Array [Boolean ,98];m:_;P5D4I:__;k:___;Z_,_,_,__:Array [Array [Boolean ,0x28],0B1];_,L_,_,__,H:Int ){} }''','''Class,O__6p,:,N1,{,Constructor,(,),{,},e,(,F_a,:,Array,[,Boolean,,,98,],;,m,:,_,;,P5D4I,:,__,;,k,:,___,;,Z_,,,_,,,_,,,__,:,Array,[,Array,[,Boolean,,,0x28,],,,0B1,],;,_,,,L_,,,_,,,__,,,H,:,Int,),{,},},<EOF>''',101))

    def test_3665(self):
        self.assertTrue(TestLexer.test('''Class Gl:Z8{Var x31F:Array [Array [Array [Array [Array [String ,0xF7],0B110101],7],0B110101],0x33];}Class h{}Class u6{}Class y:_{Destructor (){_::$wN0_();Return ;}Val $R__:Boolean ;}Class _95_{}''','''Class,Gl,:,Z8,{,Var,x31F,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0xF7,],,,0B110101,],,,7,],,,0B110101,],,,0x33,],;,},Class,h,{,},Class,u6,{,},Class,y,:,_,{,Destructor,(,),{,_,::,$wN0_,(,),;,Return,;,},Val,$R__,:,Boolean,;,},Class,_95_,{,},<EOF>''',101))

    def test_3666(self):
        self.assertTrue(TestLexer.test('''Class W:kls{}Class _86:__{Destructor (){}Val _,$N,$_,_:e;Val $7,$1:Array [Float ,0b1_100];Val e:Array [Array [Array [Boolean ,0241],0XCD],0X22];$aP(){}Var $_:Array [Array [Int ,52],05_53];}Class _1{}''','''Class,W,:,kls,{,},Class,_86,:,__,{,Destructor,(,),{,},Val,_,,,$N,,,$_,,,_,:,e,;,Val,$7,,,$1,:,Array,[,Float,,,0b1100,],;,Val,e,:,Array,[,Array,[,Array,[,Boolean,,,0241,],,,0XCD,],,,0X22,],;,$aP,(,),{,},Var,$_,:,Array,[,Array,[,Int,,,52,],,,0553,],;,},Class,_1,{,},<EOF>''',101))

    def test_3667(self):
        self.assertTrue(TestLexer.test('''Class Q:g{Constructor (){}Constructor (_A8k_,_,_:_;g_,_:Array [Array [Array [String ,0XD_F],92],0b1];_:M_e;_,R__L,_:Array [Array [Int ,076],01];_j19U_l:Array [Array [Float ,4],017];mR,IR_:Array [Boolean ,0X2_AFE_3]){}Var $_,dW6,_x:_6;Val $f4__,kP,___2,x:Array [Array [Array [Float ,99],0xE],0x4D];Constructor (k:String ;_,__81:_){} }''','''Class,Q,:,g,{,Constructor,(,),{,},Constructor,(,_A8k_,,,_,,,_,:,_,;,g_,,,_,:,Array,[,Array,[,Array,[,String,,,0XDF,],,,92,],,,0b1,],;,_,:,M_e,;,_,,,R__L,,,_,:,Array,[,Array,[,Int,,,076,],,,01,],;,_j19U_l,:,Array,[,Array,[,Float,,,4,],,,017,],;,mR,,,IR_,:,Array,[,Boolean,,,0X2AFE3,],),{,},Var,$_,,,dW6,,,_x,:,_6,;,Val,$f4__,,,kP,,,___2,,,x,:,Array,[,Array,[,Array,[,Float,,,99,],,,0xE,],,,0x4D,],;,Constructor,(,k,:,String,;,_,,,__81,:,_,),{,},},<EOF>''',101))

    def test_3668(self):
        self.assertTrue(TestLexer.test('''Class _{Var d:Array [Array [Array [Array [Int ,0b1_10],06_2_4],0120],0120];}Class _{Destructor (){}Val $KD:Array [Array [Float ,0X5_C9],67];$c(_UR_65:PLm_6V){}Destructor (){}Constructor (_,fg:Array [Array [Array [Float ,48],48],0x4]){ {Val _,f:Int ;} }Destructor (){Return ;Continue ;_k_q::$Y();} }''','''Class,_,{,Var,d,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b110,],,,0624,],,,0120,],,,0120,],;,},Class,_,{,Destructor,(,),{,},Val,$KD,:,Array,[,Array,[,Float,,,0X5C9,],,,67,],;,$c,(,_UR_65,:,PLm_6V,),{,},Destructor,(,),{,},Constructor,(,_,,,fg,:,Array,[,Array,[,Array,[,Float,,,48,],,,48,],,,0x4,],),{,{,Val,_,,,f,:,Int,;,},},Destructor,(,),{,Return,;,Continue,;,_k_q,::,$Y,(,),;,},},<EOF>''',101))

    def test_3669(self):
        self.assertTrue(TestLexer.test('''Class _14__9K{}Class _:bS{Constructor (_4__0__5:U90E2;_2:y0){}$_7_(gyF,Y:Array [String ,30]){Continue ;}Val _:Array [String ,04_5_0];}Class _:__{$4_(){}Val $_:_1K;}Class n:_{}''','''Class,_14__9K,{,},Class,_,:,bS,{,Constructor,(,_4__0__5,:,U90E2,;,_2,:,y0,),{,},$_7_,(,gyF,,,Y,:,Array,[,String,,,30,],),{,Continue,;,},Val,_,:,Array,[,String,,,0450,],;,},Class,_,:,__,{,$4_,(,),{,},Val,$_,:,_1K,;,},Class,n,:,_,{,},<EOF>''',101))

    def test_3670(self):
        self.assertTrue(TestLexer.test('''Class Ph0:Q_5qq{}Class __97:C{Var $6,I9,$4,$__169:Array [Array [Float ,0b11101],0134];Val $20,$a_:Array [String ,03];}Class _8{}Class _w_:_{}''','''Class,Ph0,:,Q_5qq,{,},Class,__97,:,C,{,Var,$6,,,I9,,,$4,,,$__169,:,Array,[,Array,[,Float,,,0b11101,],,,0134,],;,Val,$20,,,$a_,:,Array,[,String,,,03,],;,},Class,_8,{,},Class,_w_,:,_,{,},<EOF>''',101))

    def test_3671(self):
        self.assertTrue(TestLexer.test('''Class H{Destructor (){}_(S:b;_,V:Array [Array [Array [String ,044],013],49];_,c_:Array [Array [Array [Boolean ,8],0X7],0B1011001]){Continue ;}Val $80_d,c_,$2:_;}''','''Class,H,{,Destructor,(,),{,},_,(,S,:,b,;,_,,,V,:,Array,[,Array,[,Array,[,String,,,044,],,,013,],,,49,],;,_,,,c_,:,Array,[,Array,[,Array,[,Boolean,,,8,],,,0X7,],,,0B1011001,],),{,Continue,;,},Val,$80_d,,,c_,,,$2,:,_,;,},<EOF>''',101))

    def test_3672(self):
        self.assertTrue(TestLexer.test('''Class _{Var $_,B,Sp:Array [Array [Array [Array [String ,0133],0B1011001],0x41],1_3_11];Val $2,$_,X_:Float ;Var $_Z,_,__9:Boolean ;}''','''Class,_,{,Var,$_,,,B,,,Sp,:,Array,[,Array,[,Array,[,Array,[,String,,,0133,],,,0B1011001,],,,0x41,],,,1311,],;,Val,$2,,,$_,,,X_,:,Float,;,Var,$_Z,,,_,,,__9,:,Boolean,;,},<EOF>''',101))

    def test_3673(self):
        self.assertTrue(TestLexer.test('''Class v{}Class _{Constructor (_0,_,_:Array [Boolean ,0b1];n_,v,_:Float ){}a(Q8,_,m,_3:Boolean ;q_,C3:Y;_:__){}Var $7,_0:c;w(){} }Class J_O_:m{}''','''Class,v,{,},Class,_,{,Constructor,(,_0,,,_,,,_,:,Array,[,Boolean,,,0b1,],;,n_,,,v,,,_,:,Float,),{,},a,(,Q8,,,_,,,m,,,_3,:,Boolean,;,q_,,,C3,:,Y,;,_,:,__,),{,},Var,$7,,,_0,:,c,;,w,(,),{,},},Class,J_O_,:,m,{,},<EOF>''',101))

    def test_3674(self):
        self.assertTrue(TestLexer.test('''Class _:_{G(){}Destructor (){}Destructor (){}_(){}Constructor (_WC:Array [Int ,0b1];_,v4,__,m:i8){Break ;Continue ;Return ;} }Class _{Val $9:Boolean ;Var _56,_,$o3:_Q;}Class _:h{}''','''Class,_,:,_,{,G,(,),{,},Destructor,(,),{,},Destructor,(,),{,},_,(,),{,},Constructor,(,_WC,:,Array,[,Int,,,0b1,],;,_,,,v4,,,__,,,m,:,i8,),{,Break,;,Continue,;,Return,;,},},Class,_,{,Val,$9,:,Boolean,;,Var,_56,,,_,,,$o3,:,_Q,;,},Class,_,:,h,{,},<EOF>''',101))

    def test_3675(self):
        self.assertTrue(TestLexer.test('''Class _{_1_Io(_p,_:String ;S:_;Eu,_EV5_,_,H,_,___6,_7_,_:Array [Boolean ,89]){Break ;}Val $t:_;Destructor (){} }Class V{}''','''Class,_,{,_1_Io,(,_p,,,_,:,String,;,S,:,_,;,Eu,,,_EV5_,,,_,,,H,,,_,,,___6,,,_7_,,,_,:,Array,[,Boolean,,,89,],),{,Break,;,},Val,$t,:,_,;,Destructor,(,),{,},},Class,V,{,},<EOF>''',101))

    def test_3676(self):
        self.assertTrue(TestLexer.test('''Class _v16_g{Constructor (_HI:_0;__,_9:_;A:l0_0;J0:t;_4,F:jEJ;g_,RMe,YY_,_:_J5;C,U8:Array [Array [Array [Float ,0x1B],95],0124];O_,Q:Array [Float ,0124]){ {Break ;} }Val _,$_,$5,__3,_zy_,$_,_:String ;}''','''Class,_v16_g,{,Constructor,(,_HI,:,_0,;,__,,,_9,:,_,;,A,:,l0_0,;,J0,:,t,;,_4,,,F,:,jEJ,;,g_,,,RMe,,,YY_,,,_,:,_J5,;,C,,,U8,:,Array,[,Array,[,Array,[,Float,,,0x1B,],,,95,],,,0124,],;,O_,,,Q,:,Array,[,Float,,,0124,],),{,{,Break,;,},},Val,_,,,$_,,,$5,,,__3,,,_zy_,,,$_,,,_,:,String,;,},<EOF>''',101))

    def test_3677(self):
        self.assertTrue(TestLexer.test('''Class __j:b6{}Class __:_y{Constructor (V_,r,_589:Array [Array [Array [Array [Boolean ,0X50],8_2_7],0144],44]){}Val __V:Int ;}Class S__C{}''','''Class,__j,:,b6,{,},Class,__,:,_y,{,Constructor,(,V_,,,r,,,_589,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X50,],,,827,],,,0144,],,,44,],),{,},Val,__V,:,Int,;,},Class,S__C,{,},<EOF>''',101))

    def test_3678(self):
        self.assertTrue(TestLexer.test('''Class _th9:k{_D_(_8:Int ;v,_PEE:Float ;P__,r__6q,__,v:Array [Array [Array [String ,50],0b1],03_0];U,_,_d56,p:Boolean ;eH,_R,k,F_H4_0:Int ){Return -m_7::$_Qa.Z_0().o5.o.g_HI_;} }''','''Class,_th9,:,k,{,_D_,(,_8,:,Int,;,v,,,_PEE,:,Float,;,P__,,,r__6q,,,__,,,v,:,Array,[,Array,[,Array,[,String,,,50,],,,0b1,],,,030,],;,U,,,_,,,_d56,,,p,:,Boolean,;,eH,,,_R,,,k,,,F_H4_0,:,Int,),{,Return,-,m_7,::,$_Qa,.,Z_0,(,),.,o5,.,o,.,g_HI_,;,},},<EOF>''',101))

    def test_3679(self):
        self.assertTrue(TestLexer.test('''Class _:tx{}Class _U2_n7:_{}Class _8OU{Val $5_5,$7ag_47,o,_A,$_S:Array [String ,0B1];}Class __H_3:_428{}Class H{Val $2N8,$p_,$__:Int ;Constructor (){} }''','''Class,_,:,tx,{,},Class,_U2_n7,:,_,{,},Class,_8OU,{,Val,$5_5,,,$7ag_47,,,o,,,_A,,,$_S,:,Array,[,String,,,0B1,],;,},Class,__H_3,:,_428,{,},Class,H,{,Val,$2N8,,,$p_,,,$__,:,Int,;,Constructor,(,),{,},},<EOF>''',101))

    def test_3680(self):
        self.assertTrue(TestLexer.test('''Class __s:Q{}Class Q6{Val uJ__:__W;Destructor (){}Constructor (){}Constructor (_2_:Array [Array [Array [Float ,0136],05],0136]){Break ;} }Class _:xd{}Class s:o{}''','''Class,__s,:,Q,{,},Class,Q6,{,Val,uJ__,:,__W,;,Destructor,(,),{,},Constructor,(,),{,},Constructor,(,_2_,:,Array,[,Array,[,Array,[,Float,,,0136,],,,05,],,,0136,],),{,Break,;,},},Class,_,:,xd,{,},Class,s,:,o,{,},<EOF>''',101))

    def test_3681(self):
        self.assertTrue(TestLexer.test('''Class X{$w(S_:Int ;ku7:String ;e,V7____,c,m:Array [Array [Array [Boolean ,0B1110],2_89],0b1]){} }Class L97_Y:P{}Class N:z{}''','''Class,X,{,$w,(,S_,:,Int,;,ku7,:,String,;,e,,,V7____,,,c,,,m,:,Array,[,Array,[,Array,[,Boolean,,,0B1110,],,,289,],,,0b1,],),{,},},Class,L97_Y,:,P,{,},Class,N,:,z,{,},<EOF>''',101))

    def test_3682(self):
        self.assertTrue(TestLexer.test('''Class b:c{$M_(U_,_7:_1_;_:Int ;_:Boolean ;c:Array [Int ,0B100010]){}Var w:Array [Array [Array [Array [Array [Array [Float ,0B100010],0X2_95_4],0X4F],9],0B100010],0B10];}''','''Class,b,:,c,{,$M_,(,U_,,,_7,:,_1_,;,_,:,Int,;,_,:,Boolean,;,c,:,Array,[,Int,,,0B100010,],),{,},Var,w,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B100010,],,,0X2954,],,,0X4F,],,,9,],,,0B100010,],,,0B10,],;,},<EOF>''',101))

    def test_3683(self):
        self.assertTrue(TestLexer.test('''Class N___{}Class QS7:_{Constructor (){Val w:Array [Array [Array [Boolean ,017_1_5],0b1],0B10_01];}Var _w,y,$v,Z,___x5:Array [Array [Array [Int ,037],0b111000],0B1_1];Destructor (){} }''','''Class,N___,{,},Class,QS7,:,_,{,Constructor,(,),{,Val,w,:,Array,[,Array,[,Array,[,Boolean,,,01715,],,,0b1,],,,0B1001,],;,},Var,_w,,,y,,,$v,,,Z,,,___x5,:,Array,[,Array,[,Array,[,Int,,,037,],,,0b111000,],,,0B11,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_3684(self):
        self.assertTrue(TestLexer.test('''Class X:_y{Constructor (s__,_:_){}Val ___5:_;$M_Wq(){} }Class T6_k:_{Var $7,$6:_;Var $vI_:N;}Class _:_{}Class _{}''','''Class,X,:,_y,{,Constructor,(,s__,,,_,:,_,),{,},Val,___5,:,_,;,$M_Wq,(,),{,},},Class,T6_k,:,_,{,Var,$7,,,$6,:,_,;,Var,$vI_,:,N,;,},Class,_,:,_,{,},Class,_,{,},<EOF>''',101))

    def test_3685(self):
        self.assertTrue(TestLexer.test('''Class _:u8{Var A:String ;}Class __t70_:_{Var _U_3:_;}Class _6Q_E:S{}Class H{_(U:j4_m;u_qe,d,_1,l:String ;__0O,_5A:Float ){} }''','''Class,_,:,u8,{,Var,A,:,String,;,},Class,__t70_,:,_,{,Var,_U_3,:,_,;,},Class,_6Q_E,:,S,{,},Class,H,{,_,(,U,:,j4_m,;,u_qe,,,d,,,_1,,,l,:,String,;,__0O,,,_5A,:,Float,),{,},},<EOF>''',101))

    def test_3686(self):
        self.assertTrue(TestLexer.test('''Class Yq:__Tr{Var $_t4_,$O11:String ;Constructor (_,Jw:Array [Array [Array [Float ,0B1],9],0b110011];_,_,_9_8,u,_7:_){}Var $E,_:Array [Array [Array [Boolean ,6],01],6];}Class _{}Class N04:_{}''','''Class,Yq,:,__Tr,{,Var,$_t4_,,,$O11,:,String,;,Constructor,(,_,,,Jw,:,Array,[,Array,[,Array,[,Float,,,0B1,],,,9,],,,0b110011,],;,_,,,_,,,_9_8,,,u,,,_7,:,_,),{,},Var,$E,,,_,:,Array,[,Array,[,Array,[,Boolean,,,6,],,,01,],,,6,],;,},Class,_,{,},Class,N04,:,_,{,},<EOF>''',101))

    def test_3687(self):
        self.assertTrue(TestLexer.test('''Class W_5Ki{Val U,_:Boolean ;Var $8:_;Constructor (_,wQ:Boolean ;C2:_;z_:Int ;_:_;a08,j_3,_,W:Array [Int ,2];_:Eh0;z:Float ;nC,_Z,Q,j:Boolean ){} }Class Z{}''','''Class,W_5Ki,{,Val,U,,,_,:,Boolean,;,Var,$8,:,_,;,Constructor,(,_,,,wQ,:,Boolean,;,C2,:,_,;,z_,:,Int,;,_,:,_,;,a08,,,j_3,,,_,,,W,:,Array,[,Int,,,2,],;,_,:,Eh0,;,z,:,Float,;,nC,,,_Z,,,Q,,,j,:,Boolean,),{,},},Class,Z,{,},<EOF>''',101))

    def test_3688(self):
        self.assertTrue(TestLexer.test('''Class X__:_{Constructor (){}Var L,_2w:Array [Int ,0B1000010];}Class L3{}Class a{Constructor (n_:_){} }Class p:t__O{Val $2F:N;}Class o_v__F:N5{$z(){} }Class m{Var _,D_B9_:D6;}''','''Class,X__,:,_,{,Constructor,(,),{,},Var,L,,,_2w,:,Array,[,Int,,,0B1000010,],;,},Class,L3,{,},Class,a,{,Constructor,(,n_,:,_,),{,},},Class,p,:,t__O,{,Val,$2F,:,N,;,},Class,o_v__F,:,N5,{,$z,(,),{,},},Class,m,{,Var,_,,,D_B9_,:,D6,;,},<EOF>''',101))

    def test_3689(self):
        self.assertTrue(TestLexer.test('''Class _:_S{Var f:Boolean ;}Class a3{}Class b59_{Destructor (){}Var _,Y:Boolean ;}Class i_0:t{Constructor (){} }Class _:_v{}''','''Class,_,:,_S,{,Var,f,:,Boolean,;,},Class,a3,{,},Class,b59_,{,Destructor,(,),{,},Var,_,,,Y,:,Boolean,;,},Class,i_0,:,t,{,Constructor,(,),{,},},Class,_,:,_v,{,},<EOF>''',101))

    def test_3690(self):
        self.assertTrue(TestLexer.test('''Class _9v8K__I2{Constructor (_:z){}Constructor (_C,c_:Array [Float ,36_6_08];pC,G:Array [Array [Array [Float ,0b100100],0100],2];_5,G_:_){} }Class _:_{Val Gf,A_,_,Y_:Array [Boolean ,0x51];}''','''Class,_9v8K__I2,{,Constructor,(,_,:,z,),{,},Constructor,(,_C,,,c_,:,Array,[,Float,,,36608,],;,pC,,,G,:,Array,[,Array,[,Array,[,Float,,,0b100100,],,,0100,],,,2,],;,_5,,,G_,:,_,),{,},},Class,_,:,_,{,Val,Gf,,,A_,,,_,,,Y_,:,Array,[,Boolean,,,0x51,],;,},<EOF>''',101))

    def test_3691(self):
        self.assertTrue(TestLexer.test('''Class uD:_{Constructor (_a:String ;_,_,_:Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,6],0103],97],0103],0b1100000],0b1],0103],0b11],0b1]){}Destructor (){}$__Wg(){}Val n:Boolean ;}''','''Class,uD,:,_,{,Constructor,(,_a,:,String,;,_,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,6,],,,0103,],,,97,],,,0103,],,,0b1100000,],,,0b1,],,,0103,],,,0b11,],,,0b1,],),{,},Destructor,(,),{,},$__Wg,(,),{,},Val,n,:,Boolean,;,},<EOF>''',101))

    def test_3692(self):
        self.assertTrue(TestLexer.test('''Class P_{}Class Z7{Destructor (){} }Class Z8{}Class K_:_{Val $8_5,_:Array [Boolean ,49];Val J,$9:Float ;p4(){Break ;} }''','''Class,P_,{,},Class,Z7,{,Destructor,(,),{,},},Class,Z8,{,},Class,K_,:,_,{,Val,$8_5,,,_,:,Array,[,Boolean,,,49,],;,Val,J,,,$9,:,Float,;,p4,(,),{,Break,;,},},<EOF>''',101))

    def test_3693(self):
        self.assertTrue(TestLexer.test('''Class Wde{Constructor (P:G;j:Array [Array [Array [Array [Array [Array [String ,99],76_3],0b1],06],05],5_8_78_4_9];__:String ){} }''','''Class,Wde,{,Constructor,(,P,:,G,;,j,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,99,],,,763,],,,0b1,],,,06,],,,05,],,,587849,],;,__,:,String,),{,},},<EOF>''',101))

    def test_3694(self):
        self.assertTrue(TestLexer.test('''Class _qW:_3__15{}Class __9Qg{Val $7:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,065],01],8],0b1],0XD],0B101],0B101],51_5],0X30_2A],0b1111],9],0X2E1B72_8_07_2A],055_6_2],0X61],0B101],80];}''','''Class,_qW,:,_3__15,{,},Class,__9Qg,{,Val,$7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,065,],,,01,],,,8,],,,0b1,],,,0XD,],,,0B101,],,,0B101,],,,515,],,,0X302A,],,,0b1111,],,,9,],,,0X2E1B728072A,],,,05562,],,,0X61,],,,0B101,],,,80,],;,},<EOF>''',101))

    def test_3695(self):
        self.assertTrue(TestLexer.test('''Class e_08_{Destructor (){} }Class _{}Class o9:_{Val $5:Array [Array [Array [Array [Array [Int ,07_5_626],03_623_5],2],83],0b1_00];Constructor (q:_T;_,_:Boolean ;_1,GV,M3_:String ){}Destructor (){} }''','''Class,e_08_,{,Destructor,(,),{,},},Class,_,{,},Class,o9,:,_,{,Val,$5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,075626,],,,036235,],,,2,],,,83,],,,0b100,],;,Constructor,(,q,:,_T,;,_,,,_,:,Boolean,;,_1,,,GV,,,M3_,:,String,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_3696(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class A5:St{Val $_,$0:Array [Array [Array [String ,0B100000],0B11_1],0b1000100];Constructor (D,__:_64;f,_,a62__,Y:Boolean ){}Val $8,_t3_:_;}''','''Class,_,:,_,{,},Class,A5,:,St,{,Val,$_,,,$0,:,Array,[,Array,[,Array,[,String,,,0B100000,],,,0B111,],,,0b1000100,],;,Constructor,(,D,,,__,:,_64,;,f,,,_,,,a62__,,,Y,:,Boolean,),{,},Val,$8,,,_t3_,:,_,;,},<EOF>''',101))

    def test_3697(self):
        self.assertTrue(TestLexer.test('''Class k10:__5_{}Class N8{_hj6Ia71_(__H,_:Y){Break ;_4::$166E_.__4_();Break ;Return ;Continue ;}Var $w:String ;}''','''Class,k10,:,__5_,{,},Class,N8,{,_hj6Ia71_,(,__H,,,_,:,Y,),{,Break,;,_4,::,$166E_,.,__4_,(,),;,Break,;,Return,;,Continue,;,},Var,$w,:,String,;,},<EOF>''',101))

    def test_3698(self):
        self.assertTrue(TestLexer.test('''Class _:Qg{}Class _Q:v4{Constructor (_b,Q_,E_2:o){}Constructor (_:Int ){Continue ;v::$0_();}Var v0:Array [Array [Array [Array [Array [Array [Array [Int ,4_4],03],0xC],0b1_1_00],0B1],60],07];}Class b5:p{}Class b_Y:_{}''','''Class,_,:,Qg,{,},Class,_Q,:,v4,{,Constructor,(,_b,,,Q_,,,E_2,:,o,),{,},Constructor,(,_,:,Int,),{,Continue,;,v,::,$0_,(,),;,},Var,v0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,44,],,,03,],,,0xC,],,,0b1100,],,,0B1,],,,60,],,,07,],;,},Class,b5,:,p,{,},Class,b_Y,:,_,{,},<EOF>''',101))

    def test_3699(self):
        self.assertTrue(TestLexer.test('''Class _:_Z_C{Var Y:Array [Array [Array [Array [Array [Array [Float ,06],0X1_5],1],8],0B1_0],06];}Class C{$p(wo:Array [Array [String ,1],1];n9:Array [Boolean ,0b1];x_Y:String ;CL,s:o;_,_7:Array [Array [Array [String ,01],0X1],017]){}Constructor (_6__,U:Float ){} }''','''Class,_,:,_Z_C,{,Var,Y,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,06,],,,0X15,],,,1,],,,8,],,,0B10,],,,06,],;,},Class,C,{,$p,(,wo,:,Array,[,Array,[,String,,,1,],,,1,],;,n9,:,Array,[,Boolean,,,0b1,],;,x_Y,:,String,;,CL,,,s,:,o,;,_,,,_7,:,Array,[,Array,[,Array,[,String,,,01,],,,0X1,],,,017,],),{,},Constructor,(,_6__,,,U,:,Float,),{,},},<EOF>''',101))

    def test_3700(self):
        self.assertTrue(TestLexer.test('''Class __V_{Val O,$cY:Array [Array [Array [Array [Float ,02_5],2],0X4C],55];}Class U_:H{Var _,$F,$3:Array [Boolean ,0X9_F];}''','''Class,__V_,{,Val,O,,,$cY,:,Array,[,Array,[,Array,[,Array,[,Float,,,025,],,,2,],,,0X4C,],,,55,],;,},Class,U_,:,H,{,Var,_,,,$F,,,$3,:,Array,[,Boolean,,,0X9F,],;,},<EOF>''',101))

    def test_3701(self):
        self.assertTrue(TestLexer.test('''Class _3_{Val K7:Array [Array [Int ,0X4B5],0XB];Val __:String ;}Class Q:_C{}Class j:_{$3744(_,_y,m8V5_1__,j:_;h,_J_5,_:Array [Boolean ,0x92_C];_:Float ;_2h,_Jq:Array [Boolean ,0B1_00];J_1,_,p2,_4:String ;__s4_A,y1,EO,h___6_7w:String ){} }''','''Class,_3_,{,Val,K7,:,Array,[,Array,[,Int,,,0X4B5,],,,0XB,],;,Val,__,:,String,;,},Class,Q,:,_C,{,},Class,j,:,_,{,$3744,(,_,,,_y,,,m8V5_1__,,,j,:,_,;,h,,,_J_5,,,_,:,Array,[,Boolean,,,0x92C,],;,_,:,Float,;,_2h,,,_Jq,:,Array,[,Boolean,,,0B100,],;,J_1,,,_,,,p2,,,_4,:,String,;,__s4_A,,,y1,,,EO,,,h___6_7w,:,String,),{,},},<EOF>''',101))

    def test_3702(self):
        self.assertTrue(TestLexer.test('''Class __:j{}Class B9:P___f{Destructor (){}Val ___,__9_:Boolean ;}Class _7{}Class _n{Var a,$49:Array [Array [Array [Int ,6_1],0x22],0x22];}Class _{}Class OUA82:lu_a8_9{Destructor (){Continue ;Return ;} }''','''Class,__,:,j,{,},Class,B9,:,P___f,{,Destructor,(,),{,},Val,___,,,__9_,:,Boolean,;,},Class,_7,{,},Class,_n,{,Var,a,,,$49,:,Array,[,Array,[,Array,[,Int,,,61,],,,0x22,],,,0x22,],;,},Class,_,{,},Class,OUA82,:,lu_a8_9,{,Destructor,(,),{,Continue,;,Return,;,},},<EOF>''',101))

    def test_3703(self):
        self.assertTrue(TestLexer.test('''Class _:A{Constructor (q,y,W:Array [Array [Array [Array [Array [Array [Array [Array [Int ,02],7_3_7],7],8],0B1010000],0X6_A_D_C],0x9_9],0X1B];_g:_){Return ;} }Class _{Var $J7_g,d,_24_8,$Z,__06:Float ;}''','''Class,_,:,A,{,Constructor,(,q,,,y,,,W,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,02,],,,737,],,,7,],,,8,],,,0B1010000,],,,0X6ADC,],,,0x99,],,,0X1B,],;,_g,:,_,),{,Return,;,},},Class,_,{,Var,$J7_g,,,d,,,_24_8,,,$Z,,,__06,:,Float,;,},<EOF>''',101))

    def test_3704(self):
        self.assertTrue(TestLexer.test('''Class i7y{_U5(_i_,_G:Array [String ,0B11];z_2,_:c;_:Array [Array [Boolean ,0X28],0141]){}Destructor (){Continue ;} }Class __9{Constructor (){}$4B5K(x,M,_3B8_5,gI_,_:G){_::$D9().___._();}Var $_,$_:Array [Array [Array [Array [Array [Array [Array [Int ,0141],0b11110],0X4_3],7],0B11],7],0141];}''','''Class,i7y,{,_U5,(,_i_,,,_G,:,Array,[,String,,,0B11,],;,z_2,,,_,:,c,;,_,:,Array,[,Array,[,Boolean,,,0X28,],,,0141,],),{,},Destructor,(,),{,Continue,;,},},Class,__9,{,Constructor,(,),{,},$4B5K,(,x,,,M,,,_3B8_5,,,gI_,,,_,:,G,),{,_,::,$D9,(,),.,___,.,_,(,),;,},Var,$_,,,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0141,],,,0b11110,],,,0X43,],,,7,],,,0B11,],,,7,],,,0141,],;,},<EOF>''',101))

    def test_3705(self):
        self.assertTrue(TestLexer.test('''Class _{Var _I86:_0_;}Class C{$4(__:String ;g:String ;C0,Z_i:Array [Array [Array [Array [Float ,9],064],35],012314_7_1_4_0]){} }''','''Class,_,{,Var,_I86,:,_0_,;,},Class,C,{,$4,(,__,:,String,;,g,:,String,;,C0,,,Z_i,:,Array,[,Array,[,Array,[,Array,[,Float,,,9,],,,064,],,,35,],,,0123147140,],),{,},},<EOF>''',101))

    def test_3706(self):
        self.assertTrue(TestLexer.test('''Class _4_{}Class h13_{}Class _N_{}Class L_:ll{Var $r:Array [Array [Array [Array [Array [Array [Boolean ,0X7C],0b100011],0XA4],06],0B1],7_2_6];}Class _:S{Constructor (_,F:Array [Float ,71];n,H05_K:Boolean ;t__j:_;_q:Boolean ){} }''','''Class,_4_,{,},Class,h13_,{,},Class,_N_,{,},Class,L_,:,ll,{,Var,$r,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X7C,],,,0b100011,],,,0XA4,],,,06,],,,0B1,],,,726,],;,},Class,_,:,S,{,Constructor,(,_,,,F,:,Array,[,Float,,,71,],;,n,,,H05_K,:,Boolean,;,t__j,:,_,;,_q,:,Boolean,),{,},},<EOF>''',101))

    def test_3707(self):
        self.assertTrue(TestLexer.test('''Class _l:_{}Class Hue:u5_{}Class _{}Class Q_3__{}Class R:z{}Class T_4:Sr51{}Class _{Var __,$0_a,$V_Fk,N4,$Y,$0:Array [String ,0124];}''','''Class,_l,:,_,{,},Class,Hue,:,u5_,{,},Class,_,{,},Class,Q_3__,{,},Class,R,:,z,{,},Class,T_4,:,Sr51,{,},Class,_,{,Var,__,,,$0_a,,,$V_Fk,,,N4,,,$Y,,,$0,:,Array,[,String,,,0124,],;,},<EOF>''',101))

    def test_3708(self):
        self.assertTrue(TestLexer.test('''Class D0{}Class l6{Val cK_,_7,$68:___;Val $__V3:__;Var __5,$P_1,$Z:Array [Array [Array [Array [Float ,0b1_0],87],0B11001],87];}''','''Class,D0,{,},Class,l6,{,Val,cK_,,,_7,,,$68,:,___,;,Val,$__V3,:,__,;,Var,__5,,,$P_1,,,$Z,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b10,],,,87,],,,0B11001,],,,87,],;,},<EOF>''',101))

    def test_3709(self):
        self.assertTrue(TestLexer.test('''Class a5{}Class _:M{Val _:Int ;}Class _nu6:d{Destructor (){}Val a,$I,$RGbi,$iq,$5__:Array [Array [Array [Boolean ,0XD],035_50],6];}''','''Class,a5,{,},Class,_,:,M,{,Val,_,:,Int,;,},Class,_nu6,:,d,{,Destructor,(,),{,},Val,a,,,$I,,,$RGbi,,,$iq,,,$5__,:,Array,[,Array,[,Array,[,Boolean,,,0XD,],,,03550,],,,6,],;,},<EOF>''',101))

    def test_3710(self):
        self.assertTrue(TestLexer.test('''Class _i:i4{}Class y:__i9HKOA__{t(Q:Array [Array [Array [Array [Array [Array [Array [Float ,0X61],0B10110],0b100110],0x5D],0x5D],0B10110],075];__:Float ){ {} }Val $093,$7G:Boolean ;}''','''Class,_i,:,i4,{,},Class,y,:,__i9HKOA__,{,t,(,Q,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X61,],,,0B10110,],,,0b100110,],,,0x5D,],,,0x5D,],,,0B10110,],,,075,],;,__,:,Float,),{,{,},},Val,$093,,,$7G,:,Boolean,;,},<EOF>''',101))

    def test_3711(self):
        self.assertTrue(TestLexer.test('''Class B_:bG{Val __4_5l:Int ;Var $6:F_;}Class o:vj{Constructor (fR:Array [Array [Array [Array [Boolean ,071_5_1],0b1001011],076],0XE_3]){ {} }}''','''Class,B_,:,bG,{,Val,__4_5l,:,Int,;,Var,$6,:,F_,;,},Class,o,:,vj,{,Constructor,(,fR,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,07151,],,,0b1001011,],,,076,],,,0XE3,],),{,{,},},},<EOF>''',101))

    def test_3712(self):
        self.assertTrue(TestLexer.test('''Class A0__{}Class _:C_{Destructor (){} }Class Q:z{$3_(_V,_P_,c,_1k__:Array [Array [Array [Float ,0b11110],6],0x44]){}Val _N,$_s:Boolean ;Destructor (){} }''','''Class,A0__,{,},Class,_,:,C_,{,Destructor,(,),{,},},Class,Q,:,z,{,$3_,(,_V,,,_P_,,,c,,,_1k__,:,Array,[,Array,[,Array,[,Float,,,0b11110,],,,6,],,,0x44,],),{,},Val,_N,,,$_s,:,Boolean,;,Destructor,(,),{,},},<EOF>''',101))

    def test_3713(self):
        self.assertTrue(TestLexer.test('''Class J{Destructor (){} }Class c{}Class N{Val _,_855,$uf_,J:Array [Array [Array [Int ,03_64_63],0x9_F],0X8];q5_(){} }Class u{Constructor (){} }''','''Class,J,{,Destructor,(,),{,},},Class,c,{,},Class,N,{,Val,_,,,_855,,,$uf_,,,J,:,Array,[,Array,[,Array,[,Int,,,036463,],,,0x9F,],,,0X8,],;,q5_,(,),{,},},Class,u,{,Constructor,(,),{,},},<EOF>''',101))

    def test_3714(self):
        self.assertTrue(TestLexer.test('''Class H{Var $nfO1__:Array [Array [Array [Array [String ,55],046],0x4D],0B10];Var yO:Float ;Z(SfKO4amw:Float ){Break ;}Var $Q:String ;}Class _:_{Var Y:Array [Float ,046];Var $c25,$_8,$J_:Array [Int ,7];}''','''Class,H,{,Var,$nfO1__,:,Array,[,Array,[,Array,[,Array,[,String,,,55,],,,046,],,,0x4D,],,,0B10,],;,Var,yO,:,Float,;,Z,(,SfKO4amw,:,Float,),{,Break,;,},Var,$Q,:,String,;,},Class,_,:,_,{,Var,Y,:,Array,[,Float,,,046,],;,Var,$c25,,,$_8,,,$J_,:,Array,[,Int,,,7,],;,},<EOF>''',101))

    def test_3715(self):
        self.assertTrue(TestLexer.test('''Class q_{$__S(_kb_:J;J:String ;uS,_,_:Array [Array [Boolean ,7],0B1_0];_h8,l,G,_,w,J:Array [String ,5]){} }Class _i{}''','''Class,q_,{,$__S,(,_kb_,:,J,;,J,:,String,;,uS,,,_,,,_,:,Array,[,Array,[,Boolean,,,7,],,,0B10,],;,_h8,,,l,,,G,,,_,,,w,,,J,:,Array,[,String,,,5,],),{,},},Class,_i,{,},<EOF>''',101))

    def test_3716(self):
        self.assertTrue(TestLexer.test('''Class __:s27{_(_,_sEe,_3,__,__:Float ;m3H8,_p:Array [Array [Int ,0XB],95]){}Destructor (){} }Class ___:_21{}Class ZI:_{Var $_8_:Array [String ,02_5_6];}''','''Class,__,:,s27,{,_,(,_,,,_sEe,,,_3,,,__,,,__,:,Float,;,m3H8,,,_p,:,Array,[,Array,[,Int,,,0XB,],,,95,],),{,},Destructor,(,),{,},},Class,___,:,_21,{,},Class,ZI,:,_,{,Var,$_8_,:,Array,[,String,,,0256,],;,},<EOF>''',101))

    def test_3717(self):
        self.assertTrue(TestLexer.test('''Class _:M{}Class Pl2:_{Val $3:Array [Array [Array [Boolean ,7],0b101101],16];}Class G3:H{}Class K93_:q{Destructor (){} }''','''Class,_,:,M,{,},Class,Pl2,:,_,{,Val,$3,:,Array,[,Array,[,Array,[,Boolean,,,7,],,,0b101101,],,,16,],;,},Class,G3,:,H,{,},Class,K93_,:,q,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3718(self):
        self.assertTrue(TestLexer.test('''Class _:__3{_4(_:tK;s:Int ){}Var $_,$u8H,_:wM;Constructor (){} }Class Y__a9:_{Destructor (){}Destructor (){}Destructor (){} }Class y:x{}Class _{}Class _:e{}''','''Class,_,:,__3,{,_4,(,_,:,tK,;,s,:,Int,),{,},Var,$_,,,$u8H,,,_,:,wM,;,Constructor,(,),{,},},Class,Y__a9,:,_,{,Destructor,(,),{,},Destructor,(,),{,},Destructor,(,),{,},},Class,y,:,x,{,},Class,_,{,},Class,_,:,e,{,},<EOF>''',101))

    def test_3719(self):
        self.assertTrue(TestLexer.test('''Class _:p{Val o5:Array [Array [Array [Array [String ,01],01],0B110101],37];Val $92,$1:Boolean ;$6(__,_:Array [Array [Boolean ,0B1_10],0104];_:Float ;q,Y:Array [String ,0x8];f_LL,__:Array [Array [Array [Boolean ,0x61D],0b1],0X64];C0,Y:Array [Boolean ,0104]){Break ;} }''','''Class,_,:,p,{,Val,o5,:,Array,[,Array,[,Array,[,Array,[,String,,,01,],,,01,],,,0B110101,],,,37,],;,Val,$92,,,$1,:,Boolean,;,$6,(,__,,,_,:,Array,[,Array,[,Boolean,,,0B110,],,,0104,],;,_,:,Float,;,q,,,Y,:,Array,[,String,,,0x8,],;,f_LL,,,__,:,Array,[,Array,[,Array,[,Boolean,,,0x61D,],,,0b1,],,,0X64,],;,C0,,,Y,:,Array,[,Boolean,,,0104,],),{,Break,;,},},<EOF>''',101))

    def test_3720(self):
        self.assertTrue(TestLexer.test('''Class I{}Class V{}Class l:Dzt{Destructor (){}Constructor (_:Array [Array [Array [Array [Array [Array [Array [Array [Int ,2],3],43],0127],0B1],0x2],056],02_32];_:Array [Float ,43];F5:s;_,_,B,x:Float ){} }''','''Class,I,{,},Class,V,{,},Class,l,:,Dzt,{,Destructor,(,),{,},Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,2,],,,3,],,,43,],,,0127,],,,0B1,],,,0x2,],,,056,],,,0232,],;,_,:,Array,[,Float,,,43,],;,F5,:,s,;,_,,,_,,,B,,,x,:,Float,),{,},},<EOF>''',101))

    def test_3721(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _k{Var $6_Aah,P___,e:Int ;}Class _Q:_{$s(){}_(_,__W1:Array [Array [Array [Array [Int ,2_6],54],0B10011],0b1001011];___,q2,z,_:Float ;_:Array [Float ,2]){}Val j:Array [String ,071];Val $__,$_5,$__C:Array [Array [String ,0b1001011],071];}''','''Class,_,:,_,{,},Class,_k,{,Var,$6_Aah,,,P___,,,e,:,Int,;,},Class,_Q,:,_,{,$s,(,),{,},_,(,_,,,__W1,:,Array,[,Array,[,Array,[,Array,[,Int,,,26,],,,54,],,,0B10011,],,,0b1001011,],;,___,,,q2,,,z,,,_,:,Float,;,_,:,Array,[,Float,,,2,],),{,},Val,j,:,Array,[,String,,,071,],;,Val,$__,,,$_5,,,$__C,:,Array,[,Array,[,String,,,0b1001011,],,,071,],;,},<EOF>''',101))

    def test_3722(self):
        self.assertTrue(TestLexer.test('''Class UY{}Class Hz_{Destructor (){Break ;{}Break ;}Constructor (G_:String ;_7:Boolean ;_,r11py,T,_,s___,_4:Array [String ,0b10011];W:Int ;_M,_75_,Bi,___:Array [Array [String ,0B1000001],075];k4,e,_9B,f_:Boolean ){} }''','''Class,UY,{,},Class,Hz_,{,Destructor,(,),{,Break,;,{,},Break,;,},Constructor,(,G_,:,String,;,_7,:,Boolean,;,_,,,r11py,,,T,,,_,,,s___,,,_4,:,Array,[,String,,,0b10011,],;,W,:,Int,;,_M,,,_75_,,,Bi,,,___,:,Array,[,Array,[,String,,,0B1000001,],,,075,],;,k4,,,e,,,_9B,,,f_,:,Boolean,),{,},},<EOF>''',101))

    def test_3723(self):
        self.assertTrue(TestLexer.test('''Class _:Y_{}Class _:DR{}Class G_fy{Constructor (){}Destructor (){}Var $_:Array [Array [Int ,1_3_2],0XE];}Class N:_{}''','''Class,_,:,Y_,{,},Class,_,:,DR,{,},Class,G_fy,{,Constructor,(,),{,},Destructor,(,),{,},Var,$_,:,Array,[,Array,[,Int,,,132,],,,0XE,],;,},Class,N,:,_,{,},<EOF>''',101))

    def test_3724(self):
        self.assertTrue(TestLexer.test('''Class __7e:_{rE(i:String ;DZ_,V,x_,O,_5,R_,_:Array [Array [String ,062],61];T0:Array [Array [Array [Float ,077],04],0X3_AF];_,_:Float ){ {Continue ;}Continue ;} }''','''Class,__7e,:,_,{,rE,(,i,:,String,;,DZ_,,,V,,,x_,,,O,,,_5,,,R_,,,_,:,Array,[,Array,[,String,,,062,],,,61,],;,T0,:,Array,[,Array,[,Array,[,Float,,,077,],,,04,],,,0X3AF,],;,_,,,_,:,Float,),{,{,Continue,;,},Continue,;,},},<EOF>''',101))

    def test_3725(self):
        self.assertTrue(TestLexer.test('''Class _:I_{Destructor (){}Constructor (X_:t1N;K:Array [Array [Array [Array [Array [Boolean ,8],01_7],0x47],0b1011101],30];u,J0354:Array [Array [Array [Array [Float ,0x5],0b11],0b1011101],30];Q:Array [String ,30]){} }Class my{Val M:String ;}''','''Class,_,:,I_,{,Destructor,(,),{,},Constructor,(,X_,:,t1N,;,K,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,8,],,,017,],,,0x47,],,,0b1011101,],,,30,],;,u,,,J0354,:,Array,[,Array,[,Array,[,Array,[,Float,,,0x5,],,,0b11,],,,0b1011101,],,,30,],;,Q,:,Array,[,String,,,30,],),{,},},Class,my,{,Val,M,:,String,;,},<EOF>''',101))

    def test_3726(self):
        self.assertTrue(TestLexer.test('''Class _{Val _9:Array [Boolean ,59];Var $Yw_:Array [String ,59];_(E_,E:Array [Float ,0xCA]){}Destructor (){}Destructor (){} }''','''Class,_,{,Val,_9,:,Array,[,Boolean,,,59,],;,Var,$Yw_,:,Array,[,String,,,59,],;,_,(,E_,,,E,:,Array,[,Float,,,0xCA,],),{,},Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_3727(self):
        self.assertTrue(TestLexer.test('''Class d{Var Pr:Boolean ;}Class _5{}Class _{}Class __0{}Class _:kL{}Class L{Var _8,$_6:Array [Array [Float ,030],14];}''','''Class,d,{,Var,Pr,:,Boolean,;,},Class,_5,{,},Class,_,{,},Class,__0,{,},Class,_,:,kL,{,},Class,L,{,Var,_8,,,$_6,:,Array,[,Array,[,Float,,,030,],,,14,],;,},<EOF>''',101))

    def test_3728(self):
        self.assertTrue(TestLexer.test('''Class __3:_Id{$c(__,_,M:Array [String ,4];_,_,J,_:Boolean ;_l,_,_,_GcyD41N96:Array [Array [Array [Float ,0344],0b10001],1_2_5];_:OaVD_Y){} }Class x9:_{Val w,$8u,V,$Z:_3;}''','''Class,__3,:,_Id,{,$c,(,__,,,_,,,M,:,Array,[,String,,,4,],;,_,,,_,,,J,,,_,:,Boolean,;,_l,,,_,,,_,,,_GcyD41N96,:,Array,[,Array,[,Array,[,Float,,,0344,],,,0b10001,],,,125,],;,_,:,OaVD_Y,),{,},},Class,x9,:,_,{,Val,w,,,$8u,,,V,,,$Z,:,_3,;,},<EOF>''',101))

    def test_3729(self):
        self.assertTrue(TestLexer.test('''Class _X7{Val i,_3:Array [Array [Array [Array [Float ,0b11],9],07],070];Constructor (){} }Class _:_yF{Destructor (){} }Class E_8{}''','''Class,_X7,{,Val,i,,,_3,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b11,],,,9,],,,07,],,,070,],;,Constructor,(,),{,},},Class,_,:,_yF,{,Destructor,(,),{,},},Class,E_8,{,},<EOF>''',101))

    def test_3730(self):
        self.assertTrue(TestLexer.test('''Class W8{Destructor (){} }Class _2{}Class ____:_{Constructor (b,i,Dj5:_;_S,sSA_2:Int ){Var _:Int ;} }Class _:_{}''','''Class,W8,{,Destructor,(,),{,},},Class,_2,{,},Class,____,:,_,{,Constructor,(,b,,,i,,,Dj5,:,_,;,_S,,,sSA_2,:,Int,),{,Var,_,:,Int,;,},},Class,_,:,_,{,},<EOF>''',101))

    def test_3731(self):
        self.assertTrue(TestLexer.test('''Class p:G_4{Constructor (m9,__,_z_:Array [Array [Boolean ,0X3C],7];__,_,_:Array [Float ,82];x1_,p_:Int ;_,J6,k22:Boolean ){} }''','''Class,p,:,G_4,{,Constructor,(,m9,,,__,,,_z_,:,Array,[,Array,[,Boolean,,,0X3C,],,,7,],;,__,,,_,,,_,:,Array,[,Float,,,82,],;,x1_,,,p_,:,Int,;,_,,,J6,,,k22,:,Boolean,),{,},},<EOF>''',101))

    def test_3732(self):
        self.assertTrue(TestLexer.test('''Class oW_B:_{}Class R{Constructor (_8,N_:Int ;A:Int ){Continue ;} }Class _6_i:_u3{$fp(JS64,T,_5i,_gpsG,d:Array [Boolean ,0X9]){} }''','''Class,oW_B,:,_,{,},Class,R,{,Constructor,(,_8,,,N_,:,Int,;,A,:,Int,),{,Continue,;,},},Class,_6_i,:,_u3,{,$fp,(,JS64,,,T,,,_5i,,,_gpsG,,,d,:,Array,[,Boolean,,,0X9,],),{,},},<EOF>''',101))

    def test_3733(self):
        self.assertTrue(TestLexer.test('''Class _{}Class U4:_{Val __9:_M;}Class __:_{Constructor (c,_1_z9:Int ){}$T_9_6_e(){Continue ;}Constructor (_8d,h,_7__7A,Y:_){} }''','''Class,_,{,},Class,U4,:,_,{,Val,__9,:,_M,;,},Class,__,:,_,{,Constructor,(,c,,,_1_z9,:,Int,),{,},$T_9_6_e,(,),{,Continue,;,},Constructor,(,_8d,,,h,,,_7__7A,,,Y,:,_,),{,},},<EOF>''',101))

    def test_3734(self):
        self.assertTrue(TestLexer.test('''Class b{Var $pk:f;Var P:__;}Class q_:_{_(_:Int ;R:Array [Array [String ,0XC],04]){}Var _,$3,__42,S,_3_q:Boolean ;Destructor (){}Constructor (){} }Class __:_3P{$n5(K,Un:Int ;f:Array [Float ,0b111];P21:Float ){Var E,o,_,_48,__9_i,_:Float ;}Destructor (){} }''','''Class,b,{,Var,$pk,:,f,;,Var,P,:,__,;,},Class,q_,:,_,{,_,(,_,:,Int,;,R,:,Array,[,Array,[,String,,,0XC,],,,04,],),{,},Var,_,,,$3,,,__42,,,S,,,_3_q,:,Boolean,;,Destructor,(,),{,},Constructor,(,),{,},},Class,__,:,_3P,{,$n5,(,K,,,Un,:,Int,;,f,:,Array,[,Float,,,0b111,],;,P21,:,Float,),{,Var,E,,,o,,,_,,,_48,,,__9_i,,,_,:,Float,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_3735(self):
        self.assertTrue(TestLexer.test('''Class m:_{}Class x{Val eJ,$_,$W_H,_,h:Array [Array [Array [Array [Array [Int ,0XA8],1_660],0b1010000],38],0xE];_(w:Array [Array [Int ,03],0X49]){} }Class W:_{}''','''Class,m,:,_,{,},Class,x,{,Val,eJ,,,$_,,,$W_H,,,_,,,h,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0XA8,],,,1660,],,,0b1010000,],,,38,],,,0xE,],;,_,(,w,:,Array,[,Array,[,Int,,,03,],,,0X49,],),{,},},Class,W,:,_,{,},<EOF>''',101))

    def test_3736(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (__w:bv2k___;d:Array [Array [Array [String ,68],0b11010],68];_:_){ {} }}Class __:W__E{Val $X:Float ;}Class W{Val _,_6_,h_:Array [Array [Array [String ,041_540],07],0b1001_00];}Class i:_{Val _:Int ;Val $0:Array [Boolean ,68];}Class _L{}''','''Class,_,{,Constructor,(,__w,:,bv2k___,;,d,:,Array,[,Array,[,Array,[,String,,,68,],,,0b11010,],,,68,],;,_,:,_,),{,{,},},},Class,__,:,W__E,{,Val,$X,:,Float,;,},Class,W,{,Val,_,,,_6_,,,h_,:,Array,[,Array,[,Array,[,String,,,041540,],,,07,],,,0b100100,],;,},Class,i,:,_,{,Val,_,:,Int,;,Val,$0,:,Array,[,Boolean,,,68,],;,},Class,_L,{,},<EOF>''',101))

    def test_3737(self):
        self.assertTrue(TestLexer.test('''Class e{Constructor (_,T_kg,kC,_:Boolean ;n:_;_w:Array [String ,077_01_2];_,mm:u_N042){Return ;} }Class _0:__{Var $_:Int ;}''','''Class,e,{,Constructor,(,_,,,T_kg,,,kC,,,_,:,Boolean,;,n,:,_,;,_w,:,Array,[,String,,,077012,],;,_,,,mm,:,u_N042,),{,Return,;,},},Class,_0,:,__,{,Var,$_,:,Int,;,},<EOF>''',101))

    def test_3738(self):
        self.assertTrue(TestLexer.test('''Class _C:_{_s(o:Array [Array [Int ,0xD_1],8];_,_:Array [Array [Array [Int ,0B1_0_1_010],0B1_1],074]){Continue ;} }Class T:R{Val F:Array [Array [String ,5_16],0B100101]=!-_::$0().jqQ()._q;Var c,_,$7:__z5;__p(_3:Boolean ;_47Pk,___y,__:Int ){}Var $D:Array [Array [Int ,0b1_0],0XD];}Class _:_{}Class __QT_:e{}''','''Class,_C,:,_,{,_s,(,o,:,Array,[,Array,[,Int,,,0xD1,],,,8,],;,_,,,_,:,Array,[,Array,[,Array,[,Int,,,0B101010,],,,0B11,],,,074,],),{,Continue,;,},},Class,T,:,R,{,Val,F,:,Array,[,Array,[,String,,,516,],,,0B100101,],=,!,-,_,::,$0,(,),.,jqQ,(,),.,_q,;,Var,c,,,_,,,$7,:,__z5,;,__p,(,_3,:,Boolean,;,_47Pk,,,___y,,,__,:,Int,),{,},Var,$D,:,Array,[,Array,[,Int,,,0b10,],,,0XD,],;,},Class,_,:,_,{,},Class,__QT_,:,e,{,},<EOF>''',101))

    def test_3739(self):
        self.assertTrue(TestLexer.test('''Class _74:_{Var $_q:Array [Array [Float ,64_8],0X87];_(Q:Float ){}Constructor (){}Constructor (_,B0:_;E_mA___,_5,_,T,_L,__g9_4:j8C_yo5_){Py::$9b___5_();} }''','''Class,_74,:,_,{,Var,$_q,:,Array,[,Array,[,Float,,,648,],,,0X87,],;,_,(,Q,:,Float,),{,},Constructor,(,),{,},Constructor,(,_,,,B0,:,_,;,E_mA___,,,_5,,,_,,,T,,,_L,,,__g9_4,:,j8C_yo5_,),{,Py,::,$9b___5_,(,),;,},},<EOF>''',101))

    def test_3740(self):
        self.assertTrue(TestLexer.test('''Class N:S{Var $__,$3,_0,_0___9,$1,$qi2,$s8,u_,$c:di;Val $f,$x:_;}Class em{Val I:Array [Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0b111000],0XB4A],3_1],0B1_0_1],0x3],8],38],0B10001],0B10001];}''','''Class,N,:,S,{,Var,$__,,,$3,,,_0,,,_0___9,,,$1,,,$qi2,,,$s8,,,u_,,,$c,:,di,;,Val,$f,,,$x,:,_,;,},Class,em,{,Val,I,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b111000,],,,0XB4A,],,,31,],,,0B101,],,,0x3,],,,8,],,,38,],,,0B10001,],,,0B10001,],;,},<EOF>''',101))

    def test_3741(self):
        self.assertTrue(TestLexer.test('''Class _J8s_9{Val $e,$P__S,_:Array [Array [Array [Array [Boolean ,062],0XCA6_F_3F],0b1100011],0X4];$_(){Continue ;_0::$_();Break ;}Val _c_,_:Boolean ;}''','''Class,_J8s_9,{,Val,$e,,,$P__S,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,062,],,,0XCA6F3F,],,,0b1100011,],,,0X4,],;,$_,(,),{,Continue,;,_0,::,$_,(,),;,Break,;,},Val,_c_,,,_,:,Boolean,;,},<EOF>''',101))

    def test_3742(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (){}Val _:Array [Boolean ,0b101100];}Class __:hy{Destructor (){} }Class _:ue_L_{Destructor (){} }''','''Class,_,{,Constructor,(,),{,},Val,_,:,Array,[,Boolean,,,0b101100,],;,},Class,__,:,hy,{,Destructor,(,),{,},},Class,_,:,ue_L_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3743(self):
        self.assertTrue(TestLexer.test('''Class F{}Class J_R_S2{}Class __{V(w:Array [Array [Array [Array [Array [Float ,0b1010100],0x5E],022],9],0B10]){}oh(T,x,N_:_;_,E,_6,J:Float ;_,M8_,_,_:Float ){}Constructor (__:Array [Array [Array [Boolean ,0B1_1],0B111100],04];d:Array [Array [Array [Array [Boolean ,047],12],0x5E],0x5E]){} }''','''Class,F,{,},Class,J_R_S2,{,},Class,__,{,V,(,w,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0b1010100,],,,0x5E,],,,022,],,,9,],,,0B10,],),{,},oh,(,T,,,x,,,N_,:,_,;,_,,,E,,,_6,,,J,:,Float,;,_,,,M8_,,,_,,,_,:,Float,),{,},Constructor,(,__,:,Array,[,Array,[,Array,[,Boolean,,,0B11,],,,0B111100,],,,04,],;,d,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,047,],,,12,],,,0x5E,],,,0x5E,],),{,},},<EOF>''',101))

    def test_3744(self):
        self.assertTrue(TestLexer.test('''Class V:__4z_{$_(V:Boolean ){}Val $5:Array [Array [Array [Array [Array [Array [Array [String ,26],26],0b10101],0x15],0B1000100],0B1000100],71];}''','''Class,V,:,__4z_,{,$_,(,V,:,Boolean,),{,},Val,$5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,26,],,,26,],,,0b10101,],,,0x15,],,,0B1000100,],,,0B1000100,],,,71,],;,},<EOF>''',101))

    def test_3745(self):
        self.assertTrue(TestLexer.test('''Class _:S_{Constructor (Y_,t,_3,_,k2_7__b8,__:Array [Int ,0b101_0];Mj:Boolean ){Var yU:Array [Array [Float ,056],056];} }''','''Class,_,:,S_,{,Constructor,(,Y_,,,t,,,_3,,,_,,,k2_7__b8,,,__,:,Array,[,Int,,,0b1010,],;,Mj,:,Boolean,),{,Var,yU,:,Array,[,Array,[,Float,,,056,],,,056,],;,},},<EOF>''',101))

    def test_3746(self):
        self.assertTrue(TestLexer.test('''Class n_9x4HH:_6{}Class _{}Class __:_m{Constructor (_1:G;J9:Boolean ;__:Float ;_:String ;i82_:Array [Array [Array [Array [Array [Int ,0B1],67],0105],67],076]){} }''','''Class,n_9x4HH,:,_6,{,},Class,_,{,},Class,__,:,_m,{,Constructor,(,_1,:,G,;,J9,:,Boolean,;,__,:,Float,;,_,:,String,;,i82_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,67,],,,0105,],,,67,],,,076,],),{,},},<EOF>''',101))

    def test_3747(self):
        self.assertTrue(TestLexer.test('''Class V:x{Val $4:Array [Boolean ,0B1];_n(__b,_0:String ){If (--New w_()>=!-_::$13){} }Destructor (){Continue ;} }''','''Class,V,:,x,{,Val,$4,:,Array,[,Boolean,,,0B1,],;,_n,(,__b,,,_0,:,String,),{,If,(,-,-,New,w_,(,),>=,!,-,_,::,$13,),{,},},Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_3748(self):
        self.assertTrue(TestLexer.test('''Class d:O{_(h9,_3:Array [Array [Array [Array [String ,0x9E5],0b1],0B1],0b111110];l,e1j,_,_M,y,A,_Xs,G7111:Boolean ){} }''','''Class,d,:,O,{,_,(,h9,,,_3,:,Array,[,Array,[,Array,[,Array,[,String,,,0x9E5,],,,0b1,],,,0B1,],,,0b111110,],;,l,,,e1j,,,_,,,_M,,,y,,,A,,,_Xs,,,G7111,:,Boolean,),{,},},<EOF>''',101))

    def test_3749(self):
        self.assertTrue(TestLexer.test('''Class ___:_s{Constructor (X:Boolean ;_:__;__,_938,_1,_,i6,T,_0_,n4:Array [String ,0b11110];_,u6,_a,_,Lz_7:Array [Array [Array [Array [Array [Int ,0b11110],854_3],0x33],0x33],0B1_0_1];W7,x,_:Boolean ){} }Class zj:e_{Val $6s:Array [Array [Array [Array [Array [Array [Float ,0143],0xD],0116],0143],0b11110],20];}Class y_:_{}Class _D:_6_{Destructor (){} }''','''Class,___,:,_s,{,Constructor,(,X,:,Boolean,;,_,:,__,;,__,,,_938,,,_1,,,_,,,i6,,,T,,,_0_,,,n4,:,Array,[,String,,,0b11110,],;,_,,,u6,,,_a,,,_,,,Lz_7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0b11110,],,,8543,],,,0x33,],,,0x33,],,,0B101,],;,W7,,,x,,,_,:,Boolean,),{,},},Class,zj,:,e_,{,Val,$6s,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0143,],,,0xD,],,,0116,],,,0143,],,,0b11110,],,,20,],;,},Class,y_,:,_,{,},Class,_D,:,_6_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3750(self):
        self.assertTrue(TestLexer.test('''Class _{Val $__5:Array [String ,0X4C];Destructor (){}_l_(_:Float ;P60,j,_:String ){}Var $080,S6:Array [Boolean ,07];Var $_d_:Int ;Val $8:__ld;}Class Q{$__V29(Q:__;_9:Array [Array [Array [String ,0123],69],03_53]){} }''','''Class,_,{,Val,$__5,:,Array,[,String,,,0X4C,],;,Destructor,(,),{,},_l_,(,_,:,Float,;,P60,,,j,,,_,:,String,),{,},Var,$080,,,S6,:,Array,[,Boolean,,,07,],;,Var,$_d_,:,Int,;,Val,$8,:,__ld,;,},Class,Q,{,$__V29,(,Q,:,__,;,_9,:,Array,[,Array,[,Array,[,String,,,0123,],,,69,],,,0353,],),{,},},<EOF>''',101))

    def test_3751(self):
        self.assertTrue(TestLexer.test('''Class Xf:_{}Class _{}Class _l_{Var __s:Float ;____(){}Constructor (U_9t8,_l,__:Float ;_n,m,L3:Int ){Continue ;} }''','''Class,Xf,:,_,{,},Class,_,{,},Class,_l_,{,Var,__s,:,Float,;,____,(,),{,},Constructor,(,U_9t8,,,_l,,,__,:,Float,;,_n,,,m,,,L3,:,Int,),{,Continue,;,},},<EOF>''',101))

    def test_3752(self):
        self.assertTrue(TestLexer.test('''Class nY:p2{Constructor (L_,__7:Array [Array [Array [Array [Array [Array [Array [Boolean ,0X20],2],0B1100],28],0XC43_23],0b101010],06_1_6_0]){} }''','''Class,nY,:,p2,{,Constructor,(,L_,,,__7,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X20,],,,2,],,,0B1100,],,,28,],,,0XC4323,],,,0b101010,],,,06160,],),{,},},<EOF>''',101))

    def test_3753(self):
        self.assertTrue(TestLexer.test('''Class _:_r{Var $8_:_b_x;Constructor (_,k_n:Array [Array [Array [Boolean ,0B10_01],24],07]){Continue ;}Destructor (){Continue ;} }''','''Class,_,:,_r,{,Var,$8_,:,_b_x,;,Constructor,(,_,,,k_n,:,Array,[,Array,[,Array,[,Boolean,,,0B1001,],,,24,],,,07,],),{,Continue,;,},Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_3754(self):
        self.assertTrue(TestLexer.test('''Class _:JT{Val $bC,a56:Array [Int ,0B1000111];Var _:String ;Var _72Z,Z_0:D_;Val _,b_,_z0:Array [Array [Array [Array [Boolean ,0XA],0B1000111],0B1000111],0B1000111];Destructor (){} }''','''Class,_,:,JT,{,Val,$bC,,,a56,:,Array,[,Int,,,0B1000111,],;,Var,_,:,String,;,Var,_72Z,,,Z_0,:,D_,;,Val,_,,,b_,,,_z0,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0XA,],,,0B1000111,],,,0B1000111,],,,0B1000111,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_3755(self):
        self.assertTrue(TestLexer.test('''Class _:P9{}Class _2_p{Destructor (){}Val z,u_Dz,r,$R2_q,$H,h50X8_B_,c,$g,$H,$_c_,J,$_,$u:Array [Boolean ,3_4_3];}''','''Class,_,:,P9,{,},Class,_2_p,{,Destructor,(,),{,},Val,z,,,u_Dz,,,r,,,$R2_q,,,$H,,,h50X8_B_,,,c,,,$g,,,$H,,,$_c_,,,J,,,$_,,,$u,:,Array,[,Boolean,,,343,],;,},<EOF>''',101))

    def test_3756(self):
        self.assertTrue(TestLexer.test('''Class _:j84{}Class _:F{}Class _{Constructor (Z:Int ;my4_7:_;_34:Array [Array [Boolean ,34],0x2D_7C];t,_:Array [Float ,0B1001111];_o:Array [Array [Array [String ,024],3],0B1001111];q_7:Array [Int ,0X3];_,_,_,_:Array [Boolean ,1]){}h(_:__6;S_,igj,r:Array [Float ,0x13_D4E_5];D6:Int ){} }Class N1{}''','''Class,_,:,j84,{,},Class,_,:,F,{,},Class,_,{,Constructor,(,Z,:,Int,;,my4_7,:,_,;,_34,:,Array,[,Array,[,Boolean,,,34,],,,0x2D7C,],;,t,,,_,:,Array,[,Float,,,0B1001111,],;,_o,:,Array,[,Array,[,Array,[,String,,,024,],,,3,],,,0B1001111,],;,q_7,:,Array,[,Int,,,0X3,],;,_,,,_,,,_,,,_,:,Array,[,Boolean,,,1,],),{,},h,(,_,:,__6,;,S_,,,igj,,,r,:,Array,[,Float,,,0x13D4E5,],;,D6,:,Int,),{,},},Class,N1,{,},<EOF>''',101))

    def test_3757(self):
        self.assertTrue(TestLexer.test('''Class b_{}Class _3{}Class FH1_{Val F2_,on,a_8DE:Int ;Constructor (P:Array [String ,0XD_5_F_13_2_3F];_0O,R:_z;_,_,__,Z,_l_z1_,oN7:k739_;h_,_:Boolean ){} }Class _:yF{}''','''Class,b_,{,},Class,_3,{,},Class,FH1_,{,Val,F2_,,,on,,,a_8DE,:,Int,;,Constructor,(,P,:,Array,[,String,,,0XD5F1323F,],;,_0O,,,R,:,_z,;,_,,,_,,,__,,,Z,,,_l_z1_,,,oN7,:,k739_,;,h_,,,_,:,Boolean,),{,},},Class,_,:,yF,{,},<EOF>''',101))

    def test_3758(self):
        self.assertTrue(TestLexer.test('''Class _{Var $74,$5ba_:Array [Array [Array [String ,8],33],02711];Var $__:Array [Array [Array [Array [Array [Array [Array [Int ,0B1],0b1],0b1_0_10],0x8],052_7],6],0b1];}''','''Class,_,{,Var,$74,,,$5ba_,:,Array,[,Array,[,Array,[,String,,,8,],,,33,],,,02711,],;,Var,$__,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,0b1,],,,0b1010,],,,0x8,],,,0527,],,,6,],,,0b1,],;,},<EOF>''',101))

    def test_3759(self):
        self.assertTrue(TestLexer.test('''Class L:y{$946(_8A,_,_,_X,_,N:String ;_1G,_5s70,D,__,_,_:Array [String ,0b1011111]){Break ;}Val $__,_43S,$_,mN99o2c_,$H,$22:Boolean ;_(){} }''','''Class,L,:,y,{,$946,(,_8A,,,_,,,_,,,_X,,,_,,,N,:,String,;,_1G,,,_5s70,,,D,,,__,,,_,,,_,:,Array,[,String,,,0b1011111,],),{,Break,;,},Val,$__,,,_43S,,,$_,,,mN99o2c_,,,$H,,,$22,:,Boolean,;,_,(,),{,},},<EOF>''',101))

    def test_3760(self):
        self.assertTrue(TestLexer.test('''Class _1_8{Destructor (){} }Class O{__(c:String ;_l5_:_){Val _Rc:Boolean ;}Constructor (){}Val _:Array [Float ,01];}Class e{Destructor (){} }Class y{$11(_,_72,CA_N,__:Array [String ,0x2]){}Constructor (){}Var rx_6:Int ;}''','''Class,_1_8,{,Destructor,(,),{,},},Class,O,{,__,(,c,:,String,;,_l5_,:,_,),{,Val,_Rc,:,Boolean,;,},Constructor,(,),{,},Val,_,:,Array,[,Float,,,01,],;,},Class,e,{,Destructor,(,),{,},},Class,y,{,$11,(,_,,,_72,,,CA_N,,,__,:,Array,[,String,,,0x2,],),{,},Constructor,(,),{,},Var,rx_6,:,Int,;,},<EOF>''',101))

    def test_3761(self):
        self.assertTrue(TestLexer.test('''Class j_6{}Class _{}Class __{}Class p{_(_,R:Boolean ){}Destructor (){} }Class i:G9{}Class j:_7{}Class _{_I(_:___;m_,H9_:Boolean ){} }''','''Class,j_6,{,},Class,_,{,},Class,__,{,},Class,p,{,_,(,_,,,R,:,Boolean,),{,},Destructor,(,),{,},},Class,i,:,G9,{,},Class,j,:,_7,{,},Class,_,{,_I,(,_,:,___,;,m_,,,H9_,:,Boolean,),{,},},<EOF>''',101))

    def test_3762(self):
        self.assertTrue(TestLexer.test('''Class f{Destructor (){Break ;}R(e0_:Boolean ;if2M499:Array [Float ,0121];J__,_:String ;_:Int ){ {Continue ;} }}Class txd_W{}Class L:J{}''','''Class,f,{,Destructor,(,),{,Break,;,},R,(,e0_,:,Boolean,;,if2M499,:,Array,[,Float,,,0121,],;,J__,,,_,:,String,;,_,:,Int,),{,{,Continue,;,},},},Class,txd_W,{,},Class,L,:,J,{,},<EOF>''',101))

    def test_3763(self):
        self.assertTrue(TestLexer.test('''Class v4:_{Val $94,$Yt__Ql,_:Array [Array [Array [Array [Array [Array [String ,0X30],99],0b110011],0XF],16],0126];$_(V,E:Boolean ){} }''','''Class,v4,:,_,{,Val,$94,,,$Yt__Ql,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X30,],,,99,],,,0b110011,],,,0XF,],,,16,],,,0126,],;,$_,(,V,,,E,:,Boolean,),{,},},<EOF>''',101))

    def test_3764(self):
        self.assertTrue(TestLexer.test('''Class _{}Class h:dq{}Class e{Var $_,$_f,Xh:Array [Array [Array [String ,0b1011101],0X2],024];Var _9,$n__:Array [Array [Array [Array [Int ,0B1_1],19],19],024];}''','''Class,_,{,},Class,h,:,dq,{,},Class,e,{,Var,$_,,,$_f,,,Xh,:,Array,[,Array,[,Array,[,String,,,0b1011101,],,,0X2,],,,024,],;,Var,_9,,,$n__,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B11,],,,19,],,,19,],,,024,],;,},<EOF>''',101))

    def test_3765(self):
        self.assertTrue(TestLexer.test('''Class tb3{}Class _8_:Z{Var __,X,$Pr:Array [Array [Array [Array [Array [Float ,46],0b1_0],01_7],0xD],04];Val $o_:String ;}Class __:_{Val _9C_,B_:Boolean ;}''','''Class,tb3,{,},Class,_8_,:,Z,{,Var,__,,,X,,,$Pr,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,46,],,,0b10,],,,017,],,,0xD,],,,04,],;,Val,$o_,:,String,;,},Class,__,:,_,{,Val,_9C_,,,B_,:,Boolean,;,},<EOF>''',101))

    def test_3766(self):
        self.assertTrue(TestLexer.test('''Class z_L:k0{Var W:Array [Boolean ,0b1];Var $X,V3,$305y_z:i;_(){Break ;}Constructor (_E,H,_,g:_;sj_:Boolean ;_K,K_:Int ){} }''','''Class,z_L,:,k0,{,Var,W,:,Array,[,Boolean,,,0b1,],;,Var,$X,,,V3,,,$305y_z,:,i,;,_,(,),{,Break,;,},Constructor,(,_E,,,H,,,_,,,g,:,_,;,sj_,:,Boolean,;,_K,,,K_,:,Int,),{,},},<EOF>''',101))

    def test_3767(self):
        self.assertTrue(TestLexer.test('''Class p{Val $4,$1:Int ;Var $__M3_,$___7_,$9:_V;Val $0:Array [Array [Int ,06_2_5],011];}Class h:R{Val $H_,$w,qt_l_,_,$_g:_92;}''','''Class,p,{,Val,$4,,,$1,:,Int,;,Var,$__M3_,,,$___7_,,,$9,:,_V,;,Val,$0,:,Array,[,Array,[,Int,,,0625,],,,011,],;,},Class,h,:,R,{,Val,$H_,,,$w,,,qt_l_,,,_,,,$_g,:,_92,;,},<EOF>''',101))

    def test_3768(self):
        self.assertTrue(TestLexer.test('''Class p{}Class _:_6O_{}Class _V{}Class _:_6{Val $_:Array [Array [Array [Array [Array [Array [Float ,0X51],0105],0XD_1],0B1010101],0X60],0B1010101];Var _,$_:Qm;}''','''Class,p,{,},Class,_,:,_6O_,{,},Class,_V,{,},Class,_,:,_6,{,Val,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X51,],,,0105,],,,0XD1,],,,0B1010101,],,,0X60,],,,0B1010101,],;,Var,_,,,$_,:,Qm,;,},<EOF>''',101))

    def test_3769(self):
        self.assertTrue(TestLexer.test('''Class e4__M:C6d4{}Class O:_{Val _,uk2N:_;Destructor (){ {} }Constructor (lT:_;_:String ;_:Array [Boolean ,025]){ {} }}Class z:__bb{}''','''Class,e4__M,:,C6d4,{,},Class,O,:,_,{,Val,_,,,uk2N,:,_,;,Destructor,(,),{,{,},},Constructor,(,lT,:,_,;,_,:,String,;,_,:,Array,[,Boolean,,,025,],),{,{,},},},Class,z,:,__bb,{,},<EOF>''',101))

    def test_3770(self):
        self.assertTrue(TestLexer.test('''Class o_Xb:__9_3{$Dm(_0,k:_;__,j4A:Array [Array [Array [Int ,0b111011],04],0b111011];Y2:_C6_){} }Class x:_{Val __H_:d8;}''','''Class,o_Xb,:,__9_3,{,$Dm,(,_0,,,k,:,_,;,__,,,j4A,:,Array,[,Array,[,Array,[,Int,,,0b111011,],,,04,],,,0b111011,],;,Y2,:,_C6_,),{,},},Class,x,:,_,{,Val,__H_,:,d8,;,},<EOF>''',101))

    def test_3771(self):
        self.assertTrue(TestLexer.test('''Class _{_E(){} }Class Y_8_:__{Var $H:Boolean ;$H2(__:Int ;_,K,z,i7:Array [Int ,8]){} }Class _:q5{Constructor (P_6:Boolean ;_S_6:_5_Mp6_;__,X6:_){} }Class t_Kc{}Class _{}Class _6{Constructor (){} }''','''Class,_,{,_E,(,),{,},},Class,Y_8_,:,__,{,Var,$H,:,Boolean,;,$H2,(,__,:,Int,;,_,,,K,,,z,,,i7,:,Array,[,Int,,,8,],),{,},},Class,_,:,q5,{,Constructor,(,P_6,:,Boolean,;,_S_6,:,_5_Mp6_,;,__,,,X6,:,_,),{,},},Class,t_Kc,{,},Class,_,{,},Class,_6,{,Constructor,(,),{,},},<EOF>''',101))

    def test_3772(self):
        self.assertTrue(TestLexer.test('''Class p_78X{Val $2W:Array [String ,72];Destructor (){Return ;Mj2_H::$48R92d();Break ;}Constructor (){Return ;} }''','''Class,p_78X,{,Val,$2W,:,Array,[,String,,,72,],;,Destructor,(,),{,Return,;,Mj2_H,::,$48R92d,(,),;,Break,;,},Constructor,(,),{,Return,;,},},<EOF>''',101))

    def test_3773(self):
        self.assertTrue(TestLexer.test('''Class Z_:d{Val _,s__:E0;Constructor (_:a_26_){} }Class _{}Class _{}Class _Se{Constructor (v,D_,_,D,_:_;p_7J7Z:Array [Array [Array [Float ,0B1],22],1];_w2_,_,_6,__,e,gX,_:Boolean ;B2:_18;__R___S,vo,i:Int ;__,l7_,_,K,_:W){_::$3.N.v.f();} }Class _bIzQ7:_{}''','''Class,Z_,:,d,{,Val,_,,,s__,:,E0,;,Constructor,(,_,:,a_26_,),{,},},Class,_,{,},Class,_,{,},Class,_Se,{,Constructor,(,v,,,D_,,,_,,,D,,,_,:,_,;,p_7J7Z,:,Array,[,Array,[,Array,[,Float,,,0B1,],,,22,],,,1,],;,_w2_,,,_,,,_6,,,__,,,e,,,gX,,,_,:,Boolean,;,B2,:,_18,;,__R___S,,,vo,,,i,:,Int,;,__,,,l7_,,,_,,,K,,,_,:,W,),{,_,::,$3,.,N,.,v,.,f,(,),;,},},Class,_bIzQ7,:,_,{,},<EOF>''',101))

    def test_3774(self):
        self.assertTrue(TestLexer.test('''Class jG:A0{}Class D7{Val $6,$_:Boolean ;}Class C:_d{}Class _{$_(b9:Array [Array [Array [Array [Array [Int ,0X2D60_5],0X2_0],0x5],0X41],0x5D]){}Var _:Int ;}Class vr:O{Val $i,$Ie:Array [Array [Boolean ,05_6_07],6_5];}Class ___:m{}''','''Class,jG,:,A0,{,},Class,D7,{,Val,$6,,,$_,:,Boolean,;,},Class,C,:,_d,{,},Class,_,{,$_,(,b9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0X2D605,],,,0X20,],,,0x5,],,,0X41,],,,0x5D,],),{,},Var,_,:,Int,;,},Class,vr,:,O,{,Val,$i,,,$Ie,:,Array,[,Array,[,Boolean,,,05607,],,,65,],;,},Class,___,:,m,{,},<EOF>''',101))

    def test_3775(self):
        self.assertTrue(TestLexer.test('''Class y:_5B{Destructor (){}Constructor (){} }Class o22:nn{}Class _1_{}Class _6h6:__zQ_{}Class __:_{Var _,i,$_4:Int ;}''','''Class,y,:,_5B,{,Destructor,(,),{,},Constructor,(,),{,},},Class,o22,:,nn,{,},Class,_1_,{,},Class,_6h6,:,__zQ_,{,},Class,__,:,_,{,Var,_,,,i,,,$_4,:,Int,;,},<EOF>''',101))

    def test_3776(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (o,_,__N,t_,Pt,Ih,_,k,_,G_9,i,_0,__5v5:Array [Array [Array [Array [Int ,03],32],2623],041];__7__:Array [String ,0X8_0_7];lyx:String ;_:Array [Array [Array [Float ,32],041],7]){Break ;} }''','''Class,_,{,Constructor,(,o,,,_,,,__N,,,t_,,,Pt,,,Ih,,,_,,,k,,,_,,,G_9,,,i,,,_0,,,__5v5,:,Array,[,Array,[,Array,[,Array,[,Int,,,03,],,,32,],,,2623,],,,041,],;,__7__,:,Array,[,String,,,0X807,],;,lyx,:,String,;,_,:,Array,[,Array,[,Array,[,Float,,,32,],,,041,],,,7,],),{,Break,;,},},<EOF>''',101))

    def test_3777(self):
        self.assertTrue(TestLexer.test('''Class w:M{w(R:String ;eV6_:y_Z83){}J6I(){} }Class _:Q5{}Class Y{}Class M_:_{}Class _:A0{Var e_,rW0,_3,$M:Array [Int ,4];}''','''Class,w,:,M,{,w,(,R,:,String,;,eV6_,:,y_Z83,),{,},J6I,(,),{,},},Class,_,:,Q5,{,},Class,Y,{,},Class,M_,:,_,{,},Class,_,:,A0,{,Var,e_,,,rW0,,,_3,,,$M,:,Array,[,Int,,,4,],;,},<EOF>''',101))

    def test_3778(self):
        self.assertTrue(TestLexer.test('''Class _sV{Constructor (U:Array [Array [Array [Array [Float ,0xF_501_7_4],0b10010],03],0b10010];g5:Array [Array [Array [Array [Array [Float ,27],0117],0x4],3],27]){} }''','''Class,_sV,{,Constructor,(,U,:,Array,[,Array,[,Array,[,Array,[,Float,,,0xF50174,],,,0b10010,],,,03,],,,0b10010,],;,g5,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,27,],,,0117,],,,0x4,],,,3,],,,27,],),{,},},<EOF>''',101))

    def test_3779(self):
        self.assertTrue(TestLexer.test('''Class _1:_{Destructor (){} }Class _1_Q:C{}Class p3{Constructor (H0,v:String ;N:Array [Array [Array [String ,59],0B11],0x4E];_:_){} }Class i_C:_O{}''','''Class,_1,:,_,{,Destructor,(,),{,},},Class,_1_Q,:,C,{,},Class,p3,{,Constructor,(,H0,,,v,:,String,;,N,:,Array,[,Array,[,Array,[,String,,,59,],,,0B11,],,,0x4E,],;,_,:,_,),{,},},Class,i_C,:,_O,{,},<EOF>''',101))

    def test_3780(self):
        self.assertTrue(TestLexer.test('''Class _2:a{Destructor (){}$_(){}Constructor (__,_5:E2;_BXI:Array [Array [Array [Boolean ,0XC],0x39_C],0X5F];_,V:Float ;C8:Boolean ){} }Class _:q12G_{}''','''Class,_2,:,a,{,Destructor,(,),{,},$_,(,),{,},Constructor,(,__,,,_5,:,E2,;,_BXI,:,Array,[,Array,[,Array,[,Boolean,,,0XC,],,,0x39C,],,,0X5F,],;,_,,,V,:,Float,;,C8,:,Boolean,),{,},},Class,_,:,q12G_,{,},<EOF>''',101))

    def test_3781(self):
        self.assertTrue(TestLexer.test('''Class uR_16{}Class I10_P2L8l:_3{}Class _:_3_l0{Val _,_,_,$__9,_:hD;Val $32_:Array [Array [String ,0B1_11_0],0B1];Val p,_X,$9:x;}Class h{}''','''Class,uR_16,{,},Class,I10_P2L8l,:,_3,{,},Class,_,:,_3_l0,{,Val,_,,,_,,,_,,,$__9,,,_,:,hD,;,Val,$32_,:,Array,[,Array,[,String,,,0B1110,],,,0B1,],;,Val,p,,,_X,,,$9,:,x,;,},Class,h,{,},<EOF>''',101))

    def test_3782(self):
        self.assertTrue(TestLexer.test('''Class L_:___7_67i_{Constructor (_:Float ;_,n:Float ){}Destructor (){}Var $_:String ;}Class Q{Var $5:Array [Array [Float ,0x9A_2],7];}''','''Class,L_,:,___7_67i_,{,Constructor,(,_,:,Float,;,_,,,n,:,Float,),{,},Destructor,(,),{,},Var,$_,:,String,;,},Class,Q,{,Var,$5,:,Array,[,Array,[,Float,,,0x9A2,],,,7,],;,},<EOF>''',101))

    def test_3783(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _p:G4_2{Var _4,$_40u:Array [Array [Array [Boolean ,15],0x20],04];Constructor (GA,_:Int ;o7:String ){} }''','''Class,_,{,},Class,_p,:,G4_2,{,Var,_4,,,$_40u,:,Array,[,Array,[,Array,[,Boolean,,,15,],,,0x20,],,,04,],;,Constructor,(,GA,,,_,:,Int,;,o7,:,String,),{,},},<EOF>''',101))

    def test_3784(self):
        self.assertTrue(TestLexer.test('''Class _0{Destructor (){}Val C:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,8],41],0x4B],0B1],020],41],0B111],0x4B],41],0b1001011],0b1001011];}Class R:h_{}Class _:_{}Class _:_M{}Class I15{c(){Return ;} }Class _T{}''','''Class,_0,{,Destructor,(,),{,},Val,C,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,8,],,,41,],,,0x4B,],,,0B1,],,,020,],,,41,],,,0B111,],,,0x4B,],,,41,],,,0b1001011,],,,0b1001011,],;,},Class,R,:,h_,{,},Class,_,:,_,{,},Class,_,:,_M,{,},Class,I15,{,c,(,),{,Return,;,},},Class,_T,{,},<EOF>''',101))

    def test_3785(self):
        self.assertTrue(TestLexer.test('''Class _:_8{Destructor (){Break ;} }Class A1:_dn{}Class _G{$Z(){Continue ;Var _I_,K7:Boolean ;}Var _K1e:Boolean ;Destructor (){} }''','''Class,_,:,_8,{,Destructor,(,),{,Break,;,},},Class,A1,:,_dn,{,},Class,_G,{,$Z,(,),{,Continue,;,Var,_I_,,,K7,:,Boolean,;,},Var,_K1e,:,Boolean,;,Destructor,(,),{,},},<EOF>''',101))

    def test_3786(self):
        self.assertTrue(TestLexer.test('''Class z{}Class _:d{Var $F,$9_,$3,N_,$4b_,__,$53R_,_fL:Float ;}Class P:G73e{}Class N:R1_U{$_(){}_(){} }Class Id{}''','''Class,z,{,},Class,_,:,d,{,Var,$F,,,$9_,,,$3,,,N_,,,$4b_,,,__,,,$53R_,,,_fL,:,Float,;,},Class,P,:,G73e,{,},Class,N,:,R1_U,{,$_,(,),{,},_,(,),{,},},Class,Id,{,},<EOF>''',101))

    def test_3787(self):
        self.assertTrue(TestLexer.test('''Class z:_{Constructor (I9:Array [Array [Array [Array [Array [Float ,032],032],0b1011000],0x8_3_A],02];_4,u,c,O,__8,V,T_,_:Int ){}Var _:Array [Boolean ,6_5];Destructor (){} }Class _92Yn_z__{Val $6ry,N__:String ;Constructor (_5:__d;Dy:Boolean ){}Constructor (){}$2(){}$7A(x,_0:_;_A:String ;__5:Int ;_80:Float ){Continue ;} }''','''Class,z,:,_,{,Constructor,(,I9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,032,],,,032,],,,0b1011000,],,,0x83A,],,,02,],;,_4,,,u,,,c,,,O,,,__8,,,V,,,T_,,,_,:,Int,),{,},Var,_,:,Array,[,Boolean,,,65,],;,Destructor,(,),{,},},Class,_92Yn_z__,{,Val,$6ry,,,N__,:,String,;,Constructor,(,_5,:,__d,;,Dy,:,Boolean,),{,},Constructor,(,),{,},$2,(,),{,},$7A,(,x,,,_0,:,_,;,_A,:,String,;,__5,:,Int,;,_80,:,Float,),{,Continue,;,},},<EOF>''',101))

    def test_3788(self):
        self.assertTrue(TestLexer.test('''Class __:Z_Zj{$_(X9:Array [Float ,0X92C_B];T,r3_,_,_:_315_;e7:Boolean ;W,v:Array [Array [String ,0X54],0B1000];__,E6:__;_l_C0n:d_W){Continue ;_::$_4O_L_9__()._._0();} }Class E:A_91{}''','''Class,__,:,Z_Zj,{,$_,(,X9,:,Array,[,Float,,,0X92CB,],;,T,,,r3_,,,_,,,_,:,_315_,;,e7,:,Boolean,;,W,,,v,:,Array,[,Array,[,String,,,0X54,],,,0B1000,],;,__,,,E6,:,__,;,_l_C0n,:,d_W,),{,Continue,;,_,::,$_4O_L_9__,(,),.,_,.,_0,(,),;,},},Class,E,:,A_91,{,},<EOF>''',101))

    def test_3789(self):
        self.assertTrue(TestLexer.test('''Class _6{$s(){}Destructor (){}$_(){} }Class __:_{Var $3,V__,$F_,$B,sd_:Array [Array [Boolean ,0x2A],01_6];Val J:Q_;}''','''Class,_6,{,$s,(,),{,},Destructor,(,),{,},$_,(,),{,},},Class,__,:,_,{,Var,$3,,,V__,,,$F_,,,$B,,,sd_,:,Array,[,Array,[,Boolean,,,0x2A,],,,016,],;,Val,J,:,Q_,;,},<EOF>''',101))

    def test_3790(self):
        self.assertTrue(TestLexer.test('''Class l:_Z{}Class peT02__su:W4{$L7(){} }Class _:_{}Class a:W{Var _,_N:Array [String ,0xD];Constructor (_,_7_:Array [Float ,0B1100011];P_,m,HY_W:_DM8;_7,zk:Array [String ,7]){} }''','''Class,l,:,_Z,{,},Class,peT02__su,:,W4,{,$L7,(,),{,},},Class,_,:,_,{,},Class,a,:,W,{,Var,_,,,_N,:,Array,[,String,,,0xD,],;,Constructor,(,_,,,_7_,:,Array,[,Float,,,0B1100011,],;,P_,,,m,,,HY_W,:,_DM8,;,_7,,,zk,:,Array,[,String,,,7,],),{,},},<EOF>''',101))

    def test_3791(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (__v:U){} }Class _{}Class i6{}Class u:tJ{}Class D{$kCY(lX,_:Array [Boolean ,0X8]){} }Class ___:e{_(){}Val $P:Array [Array [Float ,04],0xE8];}''','''Class,_,{,Constructor,(,__v,:,U,),{,},},Class,_,{,},Class,i6,{,},Class,u,:,tJ,{,},Class,D,{,$kCY,(,lX,,,_,:,Array,[,Boolean,,,0X8,],),{,},},Class,___,:,e,{,_,(,),{,},Val,$P,:,Array,[,Array,[,Float,,,04,],,,0xE8,],;,},<EOF>''',101))

    def test_3792(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (pc,_W:String ){Return ;}Var k:Float ;Destructor (){} }Class Mz4_:s0_{}Class _6:JL__{Var $_:Boolean ;Destructor (){Continue ;} }Class jC:_{Qd3(_,v_,_:Int ;D:v;b,_:S9;X:Array [Array [Int ,0B1010011],0B1_01_0]){}$K_(){} }''','''Class,_,{,Constructor,(,pc,,,_W,:,String,),{,Return,;,},Var,k,:,Float,;,Destructor,(,),{,},},Class,Mz4_,:,s0_,{,},Class,_6,:,JL__,{,Var,$_,:,Boolean,;,Destructor,(,),{,Continue,;,},},Class,jC,:,_,{,Qd3,(,_,,,v_,,,_,:,Int,;,D,:,v,;,b,,,_,:,S9,;,X,:,Array,[,Array,[,Int,,,0B1010011,],,,0B1010,],),{,},$K_,(,),{,},},<EOF>''',101))

    def test_3793(self):
        self.assertTrue(TestLexer.test('''Class __:r{}Class f_6{Constructor (K:String ;_,r,A,jO:String ;g,H3EQ3:Array [Boolean ,87];SZm:_;L:Array [Array [Boolean ,0106],2_8]){Continue ;{} }}Class _{Destructor (){}Val _0:_;}''','''Class,__,:,r,{,},Class,f_6,{,Constructor,(,K,:,String,;,_,,,r,,,A,,,jO,:,String,;,g,,,H3EQ3,:,Array,[,Boolean,,,87,],;,SZm,:,_,;,L,:,Array,[,Array,[,Boolean,,,0106,],,,28,],),{,Continue,;,{,},},},Class,_,{,Destructor,(,),{,},Val,_0,:,_,;,},<EOF>''',101))

    def test_3794(self):
        self.assertTrue(TestLexer.test('''Class _7J8c:U5{Var $N0P4:Array [Array [Array [Int ,0X3D],35],02];Val $2,$6_,$H6lf_r:Array [Array [Array [Int ,06],0B11],060];Destructor (){}Destructor (){} }''','''Class,_7J8c,:,U5,{,Var,$N0P4,:,Array,[,Array,[,Array,[,Int,,,0X3D,],,,35,],,,02,],;,Val,$2,,,$6_,,,$H6lf_r,:,Array,[,Array,[,Array,[,Int,,,06,],,,0B11,],,,060,],;,Destructor,(,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_3795(self):
        self.assertTrue(TestLexer.test('''Class a_:W8{Val $_,_:W5_;$_(T__,_,T:Array [Float ,0X4A]){}Constructor (y,q_:Array [String ,0x26];D:_;_:Float ;_:Y;h88,j:v){} }Class m:_87F{}Class iV{}''','''Class,a_,:,W8,{,Val,$_,,,_,:,W5_,;,$_,(,T__,,,_,,,T,:,Array,[,Float,,,0X4A,],),{,},Constructor,(,y,,,q_,:,Array,[,String,,,0x26,],;,D,:,_,;,_,:,Float,;,_,:,Y,;,h88,,,j,:,v,),{,},},Class,m,:,_87F,{,},Class,iV,{,},<EOF>''',101))

    def test_3796(self):
        self.assertTrue(TestLexer.test('''Class s:y{Constructor (P:Array [Array [Array [Float ,0x8],0b1_1],0B1_0];PR5YK,_D:Ev;Z,_,b2___,_:_ok_){} }Class _:D6S3b5{$_47(_,LH5,_,q_:r){} }''','''Class,s,:,y,{,Constructor,(,P,:,Array,[,Array,[,Array,[,Float,,,0x8,],,,0b11,],,,0B10,],;,PR5YK,,,_D,:,Ev,;,Z,,,_,,,b2___,,,_,:,_ok_,),{,},},Class,_,:,D6S3b5,{,$_47,(,_,,,LH5,,,_,,,q_,:,r,),{,},},<EOF>''',101))

    def test_3797(self):
        self.assertTrue(TestLexer.test('''Class _:_{y(__:Float ;_,_0Q_WvI_:B;_Z:_q0;__,_3,_I:l){}Val c_S26,Bs:Array [Int ,0X66];}Class _:_{}Class x{}Class q:_0_{Val k_,_9:Float ;Constructor (){} }''','''Class,_,:,_,{,y,(,__,:,Float,;,_,,,_0Q_WvI_,:,B,;,_Z,:,_q0,;,__,,,_3,,,_I,:,l,),{,},Val,c_S26,,,Bs,:,Array,[,Int,,,0X66,],;,},Class,_,:,_,{,},Class,x,{,},Class,q,:,_0_,{,Val,k_,,,_9,:,Float,;,Constructor,(,),{,},},<EOF>''',101))

    def test_3798(self):
        self.assertTrue(TestLexer.test('''Class __:_i{Var $d:Array [Array [Array [Int ,0B1],9_46],0x2D];}Class X:UX{Var $___,A5_f,_:_55_;Var Jx,$6x:Float ;}''','''Class,__,:,_i,{,Var,$d,:,Array,[,Array,[,Array,[,Int,,,0B1,],,,946,],,,0x2D,],;,},Class,X,:,UX,{,Var,$___,,,A5_f,,,_,:,_55_,;,Var,Jx,,,$6x,:,Float,;,},<EOF>''',101))

    def test_3799(self):
        self.assertTrue(TestLexer.test('''Class e:J{Val _,I,$_P8:_;$7_4(x:_B;As:Array [Array [Boolean ,78],5];w:Array [Float ,032_3];_Q,O3:Array [Array [Array [Array [String ,0B11],0x8C_7],78],0b1_0]){} }Class ss3{Val $c2:Array [Array [Int ,0x55],78];}''','''Class,e,:,J,{,Val,_,,,I,,,$_P8,:,_,;,$7_4,(,x,:,_B,;,As,:,Array,[,Array,[,Boolean,,,78,],,,5,],;,w,:,Array,[,Float,,,0323,],;,_Q,,,O3,:,Array,[,Array,[,Array,[,Array,[,String,,,0B11,],,,0x8C7,],,,78,],,,0b10,],),{,},},Class,ss3,{,Val,$c2,:,Array,[,Array,[,Int,,,0x55,],,,78,],;,},<EOF>''',101))

    def test_3800(self):
        self.assertTrue(TestLexer.test('''Class _{}Class d:__{}Class _m:gr_{}Class _8:M{}Class _Z9_5:Z_4__{Var _,$__:Boolean ;}Class Y:_131{}Class _22:N{}''','''Class,_,{,},Class,d,:,__,{,},Class,_m,:,gr_,{,},Class,_8,:,M,{,},Class,_Z9_5,:,Z_4__,{,Var,_,,,$__,:,Boolean,;,},Class,Y,:,_131,{,},Class,_22,:,N,{,},<EOF>''',101))

    def test_3801(self):
        self.assertTrue(TestLexer.test('''Class __12{}Class C{Var $__:Array [Array [Array [String ,69],01],0B1100];l(_:Array [Array [Float ,0B1100],063];i_n_C,_:_;G,_,Z2,n,_s,S:Boolean ;__:Float ){} }''','''Class,__12,{,},Class,C,{,Var,$__,:,Array,[,Array,[,Array,[,String,,,69,],,,01,],,,0B1100,],;,l,(,_,:,Array,[,Array,[,Float,,,0B1100,],,,063,],;,i_n_C,,,_,:,_,;,G,,,_,,,Z2,,,n,,,_s,,,S,:,Boolean,;,__,:,Float,),{,},},<EOF>''',101))

    def test_3802(self):
        self.assertTrue(TestLexer.test('''Class N:_{Var $4:Zb_;Val $83C5:Array [Float ,05_54];$1(_81Lo:Array [Float ,90];_5,_:Array [Array [String ,03],04];_:_6){} }Class p{}''','''Class,N,:,_,{,Var,$4,:,Zb_,;,Val,$83C5,:,Array,[,Float,,,0554,],;,$1,(,_81Lo,:,Array,[,Float,,,90,],;,_5,,,_,:,Array,[,Array,[,String,,,03,],,,04,],;,_,:,_6,),{,},},Class,p,{,},<EOF>''',101))

    def test_3803(self):
        self.assertTrue(TestLexer.test('''Class _d__{_(X,_NJ_,_Met2x:b;O:Y_PG){} }Class baH:_{Destructor (){}Constructor (){}Var _:String =!!_40J3_B::$_._.Jb;$j__22(A:String ){} }''','''Class,_d__,{,_,(,X,,,_NJ_,,,_Met2x,:,b,;,O,:,Y_PG,),{,},},Class,baH,:,_,{,Destructor,(,),{,},Constructor,(,),{,},Var,_,:,String,=,!,!,_40J3_B,::,$_,.,_,.,Jb,;,$j__22,(,A,:,String,),{,},},<EOF>''',101))

    def test_3804(self):
        self.assertTrue(TestLexer.test('''Class _{}Class Hg_WQ{}Class hi4x{Var $0ra:Array [Array [Array [Array [String ,0B1000010],0b1001100],73_1_6_5_1],026];Destructor (){} }''','''Class,_,{,},Class,Hg_WQ,{,},Class,hi4x,{,Var,$0ra,:,Array,[,Array,[,Array,[,Array,[,String,,,0B1000010,],,,0b1001100,],,,731651,],,,026,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_3805(self):
        self.assertTrue(TestLexer.test('''Class U_S:q{}Class b_{}Class y:_9p_VkC_{Var C:Boolean ;}Class W:_N7{}Class _{}Class _:j{$5jm(){}$_D(_,A:Array [Array [Boolean ,04_6_1],0b1];V,__0,B86,_,_,Z,_:Array [Array [Array [Array [Array [String ,0x64],0XD],0b1_1],0131],0b1000110]){}Val $5_h,B,C_x_:_;}''','''Class,U_S,:,q,{,},Class,b_,{,},Class,y,:,_9p_VkC_,{,Var,C,:,Boolean,;,},Class,W,:,_N7,{,},Class,_,{,},Class,_,:,j,{,$5jm,(,),{,},$_D,(,_,,,A,:,Array,[,Array,[,Boolean,,,0461,],,,0b1,],;,V,,,__0,,,B86,,,_,,,_,,,Z,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x64,],,,0XD,],,,0b11,],,,0131,],,,0b1000110,],),{,},Val,$5_h,,,B,,,C_x_,:,_,;,},<EOF>''',101))

    def test_3806(self):
        self.assertTrue(TestLexer.test('''Class _CE_{Var v,_:Int ;Constructor (t3_:String ;U:n;_2__,__6,fPW0_:String ){Continue ;}Val $_:_;}Class m{Constructor (R,yJ:Boolean ;_3_k:Boolean ;q_,u2,_,_M_:OR76__;f_00:Array [Int ,0B11110];_9H:Int ){Break ;} }''','''Class,_CE_,{,Var,v,,,_,:,Int,;,Constructor,(,t3_,:,String,;,U,:,n,;,_2__,,,__6,,,fPW0_,:,String,),{,Continue,;,},Val,$_,:,_,;,},Class,m,{,Constructor,(,R,,,yJ,:,Boolean,;,_3_k,:,Boolean,;,q_,,,u2,,,_,,,_M_,:,OR76__,;,f_00,:,Array,[,Int,,,0B11110,],;,_9H,:,Int,),{,Break,;,},},<EOF>''',101))

    def test_3807(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _{f(k_Ar_h3d_3X_:Array [Boolean ,057]){} }Class _1:___l{}Class _N{_(Hi75,_Y:Array [String ,0b111010];t:Int ;M,__:Y;_M:Array [Array [Array [Int ,35],02],99]){} }''','''Class,_,:,_,{,},Class,_,{,f,(,k_Ar_h3d_3X_,:,Array,[,Boolean,,,057,],),{,},},Class,_1,:,___l,{,},Class,_N,{,_,(,Hi75,,,_Y,:,Array,[,String,,,0b111010,],;,t,:,Int,;,M,,,__,:,Y,;,_M,:,Array,[,Array,[,Array,[,Int,,,35,],,,02,],,,99,],),{,},},<EOF>''',101))

    def test_3808(self):
        self.assertTrue(TestLexer.test('''Class X_E2:_{_13r_(____d,_:Array [String ,0XA];j6__,S9Y__,k1:__4;_,_:Int ){Return ;}Val BY_,$5,$5:Array [Float ,074];}''','''Class,X_E2,:,_,{,_13r_,(,____d,,,_,:,Array,[,String,,,0XA,],;,j6__,,,S9Y__,,,k1,:,__4,;,_,,,_,:,Int,),{,Return,;,},Val,BY_,,,$5,,,$5,:,Array,[,Float,,,074,],;,},<EOF>''',101))

    def test_3809(self):
        self.assertTrue(TestLexer.test('''Class U{Destructor (){Continue ;Break ;}Val $_9:Array [Array [Array [Array [Array [Array [Array [Array [Array [Float ,0X2D_E],05_05_7_43],0x31],9],04],1948],0B1_0_10],04],0X4];}Class _{}''','''Class,U,{,Destructor,(,),{,Continue,;,Break,;,},Val,$_9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0X2DE,],,,0505743,],,,0x31,],,,9,],,,04,],,,1948,],,,0B1010,],,,04,],,,0X4,],;,},Class,_,{,},<EOF>''',101))

    def test_3810(self):
        self.assertTrue(TestLexer.test('''Class J{Constructor (_p8,_:Array [Boolean ,0120]){}Constructor (Z,_:Int ;M__:V_;_:Array [Array [Boolean ,0XE],0120];Q1,__z,T3_:Array [Boolean ,02_62_7]){} }''','''Class,J,{,Constructor,(,_p8,,,_,:,Array,[,Boolean,,,0120,],),{,},Constructor,(,Z,,,_,:,Int,;,M__,:,V_,;,_,:,Array,[,Array,[,Boolean,,,0XE,],,,0120,],;,Q1,,,__z,,,T3_,:,Array,[,Boolean,,,02627,],),{,},},<EOF>''',101))

    def test_3811(self):
        self.assertTrue(TestLexer.test('''Class aw:___{Var _t:Array [Array [Array [Float ,077_4],0B1],0b110010];$_6_(){}Constructor (h,_,F:Int ;_,U006r:Array [Array [Array [Array [Array [Boolean ,0X20],0B111100],0b1_00_0],04],02_72]){Continue ;Return ;} }Class _Lu{Val p:Array [Boolean ,0b101];Val $_90_:Array [Array [Array [Float ,0b1],0x5E],0X20];}''','''Class,aw,:,___,{,Var,_t,:,Array,[,Array,[,Array,[,Float,,,0774,],,,0B1,],,,0b110010,],;,$_6_,(,),{,},Constructor,(,h,,,_,,,F,:,Int,;,_,,,U006r,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X20,],,,0B111100,],,,0b1000,],,,04,],,,0272,],),{,Continue,;,Return,;,},},Class,_Lu,{,Val,p,:,Array,[,Boolean,,,0b101,],;,Val,$_90_,:,Array,[,Array,[,Array,[,Float,,,0b1,],,,0x5E,],,,0X20,],;,},<EOF>''',101))

    def test_3812(self):
        self.assertTrue(TestLexer.test('''Class __8534{Val _:R;Val EZt_J_5,$_k,_9,$G8,i,e_065:Array [Array [Array [Array [Array [Boolean ,2577_0],0xE],3],0B10],0B1_0_0_1_00_0];}Class a9{}Class _Y7JFY5_{}''','''Class,__8534,{,Val,_,:,R,;,Val,EZt_J_5,,,$_k,,,_9,,,$G8,,,i,,,e_065,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,25770,],,,0xE,],,,3,],,,0B10,],,,0B1001000,],;,},Class,a9,{,},Class,_Y7JFY5_,{,},<EOF>''',101))

    def test_3813(self):
        self.assertTrue(TestLexer.test('''Class NK_{Val $_:Array [Float ,0132];Destructor (){Var __10_W,_:Array [Float ,0B10001];} }Class _:k{}Class G:_{}Class _99{}Class _7F_:_H9{}Class _W:E_9{}''','''Class,NK_,{,Val,$_,:,Array,[,Float,,,0132,],;,Destructor,(,),{,Var,__10_W,,,_,:,Array,[,Float,,,0B10001,],;,},},Class,_,:,k,{,},Class,G,:,_,{,},Class,_99,{,},Class,_7F_,:,_H9,{,},Class,_W,:,E_9,{,},<EOF>''',101))

    def test_3814(self):
        self.assertTrue(TestLexer.test('''Class u4{Constructor (xO_:Int ;_:YUV;Q__:Boolean ){}Constructor (__,c,_bq_,_,__,x,_X_L:Float ){ {} }}Class _{O(){ {} }}Class e7_:Ja{}Class h__{K(_,D_,Av,i_:Array [Boolean ,70];L:_;_I,_:Array [Int ,0b1000000];T,a_:__o){}Destructor (){}Constructor (){} }''','''Class,u4,{,Constructor,(,xO_,:,Int,;,_,:,YUV,;,Q__,:,Boolean,),{,},Constructor,(,__,,,c,,,_bq_,,,_,,,__,,,x,,,_X_L,:,Float,),{,{,},},},Class,_,{,O,(,),{,{,},},},Class,e7_,:,Ja,{,},Class,h__,{,K,(,_,,,D_,,,Av,,,i_,:,Array,[,Boolean,,,70,],;,L,:,_,;,_I,,,_,:,Array,[,Int,,,0b1000000,],;,T,,,a_,:,__o,),{,},Destructor,(,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_3815(self):
        self.assertTrue(TestLexer.test('''Class PS8__6:p1__{}Class d:E{Val $_:Array [Array [Array [Array [Array [Array [String ,78],073_5],0XF_D_7],0x1],0b1],02];}''','''Class,PS8__6,:,p1__,{,},Class,d,:,E,{,Val,$_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,78,],,,0735,],,,0XFD7,],,,0x1,],,,0b1,],,,02,],;,},<EOF>''',101))

    def test_3816(self):
        self.assertTrue(TestLexer.test('''Class U_z:T{Constructor (_J,_:Array [Array [Array [Array [Boolean ,0125],04],0125],9_7]){Continue ;}Var b,$t3,m:Array [Array [Float ,0b11000],0b1];Var $W:Array [Float ,0b110_1];}Class _:_{Constructor (_,_:Array [Int ,0b11000];J0,_,a,Wk:_juK){} }''','''Class,U_z,:,T,{,Constructor,(,_J,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0125,],,,04,],,,0125,],,,97,],),{,Continue,;,},Var,b,,,$t3,,,m,:,Array,[,Array,[,Float,,,0b11000,],,,0b1,],;,Var,$W,:,Array,[,Float,,,0b1101,],;,},Class,_,:,_,{,Constructor,(,_,,,_,:,Array,[,Int,,,0b11000,],;,J0,,,_,,,a,,,Wk,:,_juK,),{,},},<EOF>''',101))

    def test_3817(self):
        self.assertTrue(TestLexer.test('''Class __{$9(){Val s,z_,P:_l_;} }Class _:U{Val $Gv8:Float ;Val q,$_,_r,$747:Boolean ;Val s9,$x,_88,$__,$A,$__,$ic0:_;}''','''Class,__,{,$9,(,),{,Val,s,,,z_,,,P,:,_l_,;,},},Class,_,:,U,{,Val,$Gv8,:,Float,;,Val,q,,,$_,,,_r,,,$747,:,Boolean,;,Val,s9,,,$x,,,_88,,,$__,,,$A,,,$__,,,$ic0,:,_,;,},<EOF>''',101))

    def test_3818(self):
        self.assertTrue(TestLexer.test('''Class _:E{}Class __O:u_3g{Constructor (m__:Float ;_:_;_O:_y;_8i,_9,o,_n__9,__:_){}n(_9_,H,d:Boolean ){} }Class _B:_i_t{}Class p:_{}Class _{}Class Y{}Class D{}''','''Class,_,:,E,{,},Class,__O,:,u_3g,{,Constructor,(,m__,:,Float,;,_,:,_,;,_O,:,_y,;,_8i,,,_9,,,o,,,_n__9,,,__,:,_,),{,},n,(,_9_,,,H,,,d,:,Boolean,),{,},},Class,_B,:,_i_t,{,},Class,p,:,_,{,},Class,_,{,},Class,Y,{,},Class,D,{,},<EOF>''',101))

    def test_3819(self):
        self.assertTrue(TestLexer.test('''Class _:j_{Val $_M,_,$f,$_7,$_,$3_,HF24,$7:String ;}Class _{Val _Er__,_n,$2:String ;Constructor (f6,aG,_:__){b::$_();} }''','''Class,_,:,j_,{,Val,$_M,,,_,,,$f,,,$_7,,,$_,,,$3_,,,HF24,,,$7,:,String,;,},Class,_,{,Val,_Er__,,,_n,,,$2,:,String,;,Constructor,(,f6,,,aG,,,_,:,__,),{,b,::,$_,(,),;,},},<EOF>''',101))

    def test_3820(self):
        self.assertTrue(TestLexer.test('''Class __I_74{Val $___72_9y,$d,$P:Y6;Var n_:Array [Array [Array [Array [Array [Array [String ,4],0X10],0X10],0144],0b1_1],0144];}''','''Class,__I_74,{,Val,$___72_9y,,,$d,,,$P,:,Y6,;,Var,n_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,4,],,,0X10,],,,0X10,],,,0144,],,,0b11,],,,0144,],;,},<EOF>''',101))

    def test_3821(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (H,_,g_:String ;E,_,_,__5_,r9:Float ;G,D,_4:D;V_:Array [String ,0XBC];_,r__y1:Array [Boolean ,59]){} }''','''Class,_,{,Constructor,(,H,,,_,,,g_,:,String,;,E,,,_,,,_,,,__5_,,,r9,:,Float,;,G,,,D,,,_4,:,D,;,V_,:,Array,[,String,,,0XBC,],;,_,,,r__y1,:,Array,[,Boolean,,,59,],),{,},},<EOF>''',101))

    def test_3822(self):
        self.assertTrue(TestLexer.test('''Class u{}Class _7{Val J,O8:Array [Array [Array [Array [Array [Array [String ,0X8F4],0XC],86],1],0X41],0b1010110];}Class w{}''','''Class,u,{,},Class,_7,{,Val,J,,,O8,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0X8F4,],,,0XC,],,,86,],,,1,],,,0X41,],,,0b1010110,],;,},Class,w,{,},<EOF>''',101))

    def test_3823(self):
        self.assertTrue(TestLexer.test('''Class _5_{Constructor (_,Z_:_;_:Array [Boolean ,0X6]){Var _l8r,Cb00:Int ;Continue ;}Destructor (){}Var q_:Array [Float ,0X12];}''','''Class,_5_,{,Constructor,(,_,,,Z_,:,_,;,_,:,Array,[,Boolean,,,0X6,],),{,Var,_l8r,,,Cb00,:,Int,;,Continue,;,},Destructor,(,),{,},Var,q_,:,Array,[,Float,,,0X12,],;,},<EOF>''',101))

    def test_3824(self):
        self.assertTrue(TestLexer.test('''Class __4_{p(){} }Class V{}Class _:__{}Class _{Constructor (d:_34_Z;_,W,g:v;M7v4H:_;_,_:Array [Array [Int ,0xA_A],0b1];G,p:u;R:WK8p36_;v_D:Array [Array [Array [Array [Boolean ,66],04],0B101],0B101]){Break ;}Var N,n6,$_,JD,g_1,_:Array [Int ,0b1_1];Destructor (){} }''','''Class,__4_,{,p,(,),{,},},Class,V,{,},Class,_,:,__,{,},Class,_,{,Constructor,(,d,:,_34_Z,;,_,,,W,,,g,:,v,;,M7v4H,:,_,;,_,,,_,:,Array,[,Array,[,Int,,,0xAA,],,,0b1,],;,G,,,p,:,u,;,R,:,WK8p36_,;,v_D,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,66,],,,04,],,,0B101,],,,0B101,],),{,Break,;,},Var,N,,,n6,,,$_,,,JD,,,g_1,,,_,:,Array,[,Int,,,0b11,],;,Destructor,(,),{,},},<EOF>''',101))

    def test_3825(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class __{Destructor (){Var _:Array [Array [Array [Array [Float ,0123],0xD748],76],0X7_3];s::$0();}Constructor (_,_,A_h:Array [Array [Array [Boolean ,0x2C],76],07_31]){} }Class _{Destructor (){} }''','''Class,_,:,_,{,},Class,__,{,Destructor,(,),{,Var,_,:,Array,[,Array,[,Array,[,Array,[,Float,,,0123,],,,0xD748,],,,76,],,,0X73,],;,s,::,$0,(,),;,},Constructor,(,_,,,_,,,A_h,:,Array,[,Array,[,Array,[,Boolean,,,0x2C,],,,76,],,,0731,],),{,},},Class,_,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3826(self):
        self.assertTrue(TestLexer.test('''Class V{}Class xr6{$e(_3_D,_,Z:Float ;_5,_:_dx65x_1;B,R_,_:Array [Array [Float ,2],0XCA8];_:Int ;_,F,_:Array [Int ,0b1011001]){} }''','''Class,V,{,},Class,xr6,{,$e,(,_3_D,,,_,,,Z,:,Float,;,_5,,,_,:,_dx65x_1,;,B,,,R_,,,_,:,Array,[,Array,[,Float,,,2,],,,0XCA8,],;,_,:,Int,;,_,,,F,,,_,:,Array,[,Int,,,0b1011001,],),{,},},<EOF>''',101))

    def test_3827(self):
        self.assertTrue(TestLexer.test('''Class F{Var z,$0,$28558h,_:__;}Class m:_{$_(KY_,_,_:Float ;_8_:d_){Return ;}Var $6,$_:Array [Array [Int ,0B1001110],27];}''','''Class,F,{,Var,z,,,$0,,,$28558h,,,_,:,__,;,},Class,m,:,_,{,$_,(,KY_,,,_,,,_,:,Float,;,_8_,:,d_,),{,Return,;,},Var,$6,,,$_,:,Array,[,Array,[,Int,,,0B1001110,],,,27,],;,},<EOF>''',101))

    def test_3828(self):
        self.assertTrue(TestLexer.test('''Class _:_of{Constructor (){}$2_(){Break ;}Constructor (){} }Class _x:_{Var $_8:Array [Array [Float ,0XA6],0b1000101];}''','''Class,_,:,_of,{,Constructor,(,),{,},$2_,(,),{,Break,;,},Constructor,(,),{,},},Class,_x,:,_,{,Var,$_8,:,Array,[,Array,[,Float,,,0XA6,],,,0b1000101,],;,},<EOF>''',101))

    def test_3829(self):
        self.assertTrue(TestLexer.test('''Class ___{Val y_k,J9,_,$3,$1s,$56:Int ;}Class e:__{Constructor (_,WH:Int ;__:Array [Array [Array [Int ,19],0X49_4],016];c1g:String ;_i:Array [Array [Array [Array [Array [Float ,19],05],0b1],0B101100],0x8];_s:Float ){}Destructor (){New b().f_n_3().J_jZ._._().Y().k.Ax6();} }''','''Class,___,{,Val,y_k,,,J9,,,_,,,$3,,,$1s,,,$56,:,Int,;,},Class,e,:,__,{,Constructor,(,_,,,WH,:,Int,;,__,:,Array,[,Array,[,Array,[,Int,,,19,],,,0X494,],,,016,],;,c1g,:,String,;,_i,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,19,],,,05,],,,0b1,],,,0B101100,],,,0x8,],;,_s,:,Float,),{,},Destructor,(,),{,New,b,(,),.,f_n_3,(,),.,J_jZ,.,_,.,_,(,),.,Y,(,),.,k,.,Ax6,(,),;,},},<EOF>''',101))

    def test_3830(self):
        self.assertTrue(TestLexer.test('''Class _{Val c,$3,__l:Array [Array [Array [Array [Array [Boolean ,0X1],0b1010_10_0_0],0x6],94],0111];$26_IN3(gK,_:Array [Boolean ,0X2]){Continue ;} }''','''Class,_,{,Val,c,,,$3,,,__l,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X1,],,,0b10101000,],,,0x6,],,,94,],,,0111,],;,$26_IN3,(,gK,,,_,:,Array,[,Boolean,,,0X2,],),{,Continue,;,},},<EOF>''',101))

    def test_3831(self):
        self.assertTrue(TestLexer.test('''Class tC03_{}Class Y{_Y_(X:Array [Array [Array [Array [Array [String ,0xA_16],0XEC3_6_F3],1],0b1100010],0x4];t:Array [Array [Array [Int ,9],04],0X56]){}$_(){} }''','''Class,tC03_,{,},Class,Y,{,_Y_,(,X,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0xA16,],,,0XEC36F3,],,,1,],,,0b1100010,],,,0x4,],;,t,:,Array,[,Array,[,Array,[,Int,,,9,],,,04,],,,0X56,],),{,},$_,(,),{,},},<EOF>''',101))

    def test_3832(self):
        self.assertTrue(TestLexer.test('''Class u_7_{Val $0:Boolean ;Constructor (_,_,U,_:Array [Array [Array [Int ,0b1_0],0B1_10_0],0B111000]){}Val $_1,$0L,__A,$w_i_,$k:Int ;}Class V:h_tq{}''','''Class,u_7_,{,Val,$0,:,Boolean,;,Constructor,(,_,,,_,,,U,,,_,:,Array,[,Array,[,Array,[,Int,,,0b10,],,,0B1100,],,,0B111000,],),{,},Val,$_1,,,$0L,,,__A,,,$w_i_,,,$k,:,Int,;,},Class,V,:,h_tq,{,},<EOF>''',101))

    def test_3833(self):
        self.assertTrue(TestLexer.test('''Class C_:yc4{_(_:k){} }Class __:T8{}Class _A12{Destructor (){}Destructor (){}_4_(){}Destructor (){ {}{Return ;}_::$8();} }Class E{}Class z__:_2{}Class H:b{}''','''Class,C_,:,yc4,{,_,(,_,:,k,),{,},},Class,__,:,T8,{,},Class,_A12,{,Destructor,(,),{,},Destructor,(,),{,},_4_,(,),{,},Destructor,(,),{,{,},{,Return,;,},_,::,$8,(,),;,},},Class,E,{,},Class,z__,:,_2,{,},Class,H,:,b,{,},<EOF>''',101))

    def test_3834(self):
        self.assertTrue(TestLexer.test('''Class O{Var $_6:Boolean ;$3_(J:Array [Boolean ,0136];s,F:String ;d:Int ;_L:Array [Array [Array [Int ,0B111101],0136],0B1]){ {} }}''','''Class,O,{,Var,$_6,:,Boolean,;,$3_,(,J,:,Array,[,Boolean,,,0136,],;,s,,,F,:,String,;,d,:,Int,;,_L,:,Array,[,Array,[,Array,[,Int,,,0B111101,],,,0136,],,,0B1,],),{,{,},},},<EOF>''',101))

    def test_3835(self):
        self.assertTrue(TestLexer.test('''Class _6j3{}Class GfT8A:Ocj{Constructor (){Break ;Continue ;} }Class _{}Class Z:D{Constructor (a,i_:Int ;_5,g:String ){} }''','''Class,_6j3,{,},Class,GfT8A,:,Ocj,{,Constructor,(,),{,Break,;,Continue,;,},},Class,_,{,},Class,Z,:,D,{,Constructor,(,a,,,i_,:,Int,;,_5,,,g,:,String,),{,},},<EOF>''',101))

    def test_3836(self):
        self.assertTrue(TestLexer.test('''Class FmVe{}Class x8c:bnz_{$_3(){} }Class _s2n:f{Destructor (){Break ;Var B:Int ;Return ;} }Class tj{Destructor (){} }Class _:Gl{}Class ____:_N07{}Class _:t5{Var $__,l:_d;}''','''Class,FmVe,{,},Class,x8c,:,bnz_,{,$_3,(,),{,},},Class,_s2n,:,f,{,Destructor,(,),{,Break,;,Var,B,:,Int,;,Return,;,},},Class,tj,{,Destructor,(,),{,},},Class,_,:,Gl,{,},Class,____,:,_N07,{,},Class,_,:,t5,{,Var,$__,,,l,:,_d,;,},<EOF>''',101))

    def test_3837(self):
        self.assertTrue(TestLexer.test('''Class q:_{}Class _:__{}Class _{}Class r_7:S60{Constructor (_,v:Int ){}$k(e:Boolean ;sV:Boolean ;_,Y:Array [Int ,0x6]){} }''','''Class,q,:,_,{,},Class,_,:,__,{,},Class,_,{,},Class,r_7,:,S60,{,Constructor,(,_,,,v,:,Int,),{,},$k,(,e,:,Boolean,;,sV,:,Boolean,;,_,,,Y,:,Array,[,Int,,,0x6,],),{,},},<EOF>''',101))

    def test_3838(self):
        self.assertTrue(TestLexer.test('''Class _:_9__7{}Class h{Constructor (){}$R4_2(lqY6:Array [Array [String ,0572],0X5];V_,_5,tb_,_:Array [Array [Int ,0x6],02];n:String ){} }Class _{}''','''Class,_,:,_9__7,{,},Class,h,{,Constructor,(,),{,},$R4_2,(,lqY6,:,Array,[,Array,[,String,,,0572,],,,0X5,],;,V_,,,_5,,,tb_,,,_,:,Array,[,Array,[,Int,,,0x6,],,,02,],;,n,:,String,),{,},},Class,_,{,},<EOF>''',101))

    def test_3839(self):
        self.assertTrue(TestLexer.test('''Class sE{Val K,$2,Vx0:Array [Array [Int ,0b10],0b10];$_(){}Var h7,_,x,_:h6b;}Class _O5R:__w1{Constructor (){Break ;}Destructor (){Break ;} }Class _:_{}''','''Class,sE,{,Val,K,,,$2,,,Vx0,:,Array,[,Array,[,Int,,,0b10,],,,0b10,],;,$_,(,),{,},Var,h7,,,_,,,x,,,_,:,h6b,;,},Class,_O5R,:,__w1,{,Constructor,(,),{,Break,;,},Destructor,(,),{,Break,;,},},Class,_,:,_,{,},<EOF>''',101))

    def test_3840(self):
        self.assertTrue(TestLexer.test('''Class q:d{}Class u:___{}Class _8___{Val $s,$_,_6,_1f,$T9d,$b,e,S2,__6P8,_,$9h7,_,_g:Boolean ;Constructor (){Continue ;} }''','''Class,q,:,d,{,},Class,u,:,___,{,},Class,_8___,{,Val,$s,,,$_,,,_6,,,_1f,,,$T9d,,,$b,,,e,,,S2,,,__6P8,,,_,,,$9h7,,,_,,,_g,:,Boolean,;,Constructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_3841(self):
        self.assertTrue(TestLexer.test('''Class _{$_wC_(_a_:Array [Array [Array [Array [Array [Array [Int ,59],0b11],59],0b1001011],39],026]){}Val I:Array [Int ,0B1];}''','''Class,_,{,$_wC_,(,_a_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,59,],,,0b11,],,,59,],,,0b1001011,],,,39,],,,026,],),{,},Val,I,:,Array,[,Int,,,0B1,],;,},<EOF>''',101))

    def test_3842(self):
        self.assertTrue(TestLexer.test('''Class _{Destructor (){}Val _:Array [Array [Array [Array [Array [Array [Boolean ,0X3_1_3_4],41],41],012],41],183];}''','''Class,_,{,Destructor,(,),{,},Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X3134,],,,41,],,,41,],,,012,],,,41,],,,183,],;,},<EOF>''',101))

    def test_3843(self):
        self.assertTrue(TestLexer.test('''Class _{Val __v:Array [Array [Array [Array [Boolean ,0X2B],6749],8],022];Var _2,V:Array [Array [Float ,100],07];Var $Pgv:Float ;}''','''Class,_,{,Val,__v,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X2B,],,,6749,],,,8,],,,022,],;,Var,_2,,,V,:,Array,[,Array,[,Float,,,100,],,,07,],;,Var,$Pgv,:,Float,;,},<EOF>''',101))

    def test_3844(self):
        self.assertTrue(TestLexer.test('''Class _:__{}Class m{}Class Is8g_:_0{}Class _{$2(_:Boolean ;_:Array [Int ,0XB];P,_y7:__K){Continue ;} }Class e{}Class Y{Var $Y_f3____,$2_,$S:Float ;}''','''Class,_,:,__,{,},Class,m,{,},Class,Is8g_,:,_0,{,},Class,_,{,$2,(,_,:,Boolean,;,_,:,Array,[,Int,,,0XB,],;,P,,,_y7,:,__K,),{,Continue,;,},},Class,e,{,},Class,Y,{,Var,$Y_f3____,,,$2_,,,$S,:,Float,;,},<EOF>''',101))

    def test_3845(self):
        self.assertTrue(TestLexer.test('''Class _:_j_0{}Class x{Constructor (){}Val r,a,_:Array [Array [Array [Array [Array [Array [Array [Int ,0B1],0B1_0011],0B10000],42],0x3_EA],0b100],06];}Class _6{}''','''Class,_,:,_j_0,{,},Class,x,{,Constructor,(,),{,},Val,r,,,a,,,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,0B1,],,,0B10011,],,,0B10000,],,,42,],,,0x3EA,],,,0b100,],,,06,],;,},Class,_6,{,},<EOF>''',101))

    def test_3846(self):
        self.assertTrue(TestLexer.test('''Class M{Constructor (d,_1:Array [Float ,056_1];JG0:Int ){Continue ;}Var _:Array [Array [Array [Array [Array [Int ,2_1],0x6_7],0b111110],011],03];Constructor (){} }Class _{Val b:String ;}''','''Class,M,{,Constructor,(,d,,,_1,:,Array,[,Float,,,0561,],;,JG0,:,Int,),{,Continue,;,},Var,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,21,],,,0x67,],,,0b111110,],,,011,],,,03,],;,Constructor,(,),{,},},Class,_,{,Val,b,:,String,;,},<EOF>''',101))

    def test_3847(self):
        self.assertTrue(TestLexer.test('''Class L:_0{Destructor (){v_z_4h_j::$_();} }Class I1:__{Var $383:B;Val _X,$F,$r__D7,$__:Array [Array [Float ,0x3F],14];Var $_:Array [String ,1];Constructor (h,Q_1_V:_){}Destructor (){_::$25._();} }''','''Class,L,:,_0,{,Destructor,(,),{,v_z_4h_j,::,$_,(,),;,},},Class,I1,:,__,{,Var,$383,:,B,;,Val,_X,,,$F,,,$r__D7,,,$__,:,Array,[,Array,[,Float,,,0x3F,],,,14,],;,Var,$_,:,Array,[,String,,,1,],;,Constructor,(,h,,,Q_1_V,:,_,),{,},Destructor,(,),{,_,::,$25,.,_,(,),;,},},<EOF>''',101))

    def test_3848(self):
        self.assertTrue(TestLexer.test('''Class N{}Class _Q1g2{}Class m:_55{}Class _b0:_{Constructor (){}Var $2v:Int ;}Class _:_{Var _Op_:Int ;}Class _{Val U8,$m_:Array [Array [Array [Array [String ,0b1],48],0X28],3_49_7];Var $_,_,$5,Y:Array [Array [Boolean ,0B1],011];}''','''Class,N,{,},Class,_Q1g2,{,},Class,m,:,_55,{,},Class,_b0,:,_,{,Constructor,(,),{,},Var,$2v,:,Int,;,},Class,_,:,_,{,Var,_Op_,:,Int,;,},Class,_,{,Val,U8,,,$m_,:,Array,[,Array,[,Array,[,Array,[,String,,,0b1,],,,48,],,,0X28,],,,3497,],;,Var,$_,,,_,,,$5,,,Y,:,Array,[,Array,[,Boolean,,,0B1,],,,011,],;,},<EOF>''',101))

    def test_3849(self):
        self.assertTrue(TestLexer.test('''Class b2a:_{Constructor (_,_8,_,u:_7;Q2n1W1316:Boolean ;_2_2:_2;h_6_:Boolean ;_,v6_:Array [Int ,0b1];_,B:Boolean ;Ox_3,RS_8__,_,_S_,p5:Array [Array [Array [Float ,0X41],0X41],05];P02:Boolean ;o_,E:Boolean ){}Var $f43___r_K,$_,$7,mN6,$_:_;}''','''Class,b2a,:,_,{,Constructor,(,_,,,_8,,,_,,,u,:,_7,;,Q2n1W1316,:,Boolean,;,_2_2,:,_2,;,h_6_,:,Boolean,;,_,,,v6_,:,Array,[,Int,,,0b1,],;,_,,,B,:,Boolean,;,Ox_3,,,RS_8__,,,_,,,_S_,,,p5,:,Array,[,Array,[,Array,[,Float,,,0X41,],,,0X41,],,,05,],;,P02,:,Boolean,;,o_,,,E,:,Boolean,),{,},Var,$f43___r_K,,,$_,,,$7,,,mN6,,,$_,:,_,;,},<EOF>''',101))

    def test_3850(self):
        self.assertTrue(TestLexer.test('''Class __6:L_s5D{__(_:_;Mp,G9,_0,_5,_4M8,_:k;_:Array [String ,0xD];__:Boolean ){}Constructor (){} }Class _:w_{}''','''Class,__6,:,L_s5D,{,__,(,_,:,_,;,Mp,,,G9,,,_0,,,_5,,,_4M8,,,_,:,k,;,_,:,Array,[,String,,,0xD,],;,__,:,Boolean,),{,},Constructor,(,),{,},},Class,_,:,w_,{,},<EOF>''',101))

    def test_3851(self):
        self.assertTrue(TestLexer.test('''Class _{}Class B_{Constructor (_:Array [Array [Int ,06],0X11];_s0_f:Array [String ,074];m:Array [Array [Array [Float ,5],074],0xC8_3]){} }''','''Class,_,{,},Class,B_,{,Constructor,(,_,:,Array,[,Array,[,Int,,,06,],,,0X11,],;,_s0_f,:,Array,[,String,,,074,],;,m,:,Array,[,Array,[,Array,[,Float,,,5,],,,074,],,,0xC83,],),{,},},<EOF>''',101))

    def test_3852(self):
        self.assertTrue(TestLexer.test('''Class b{Var MD,$H,$yp,_Z6:Float ;}Class _5:__N6_{Val $Y7,$5de_O:Array [Boolean ,1];_L(){}$5(_,st,c:String ){} }''','''Class,b,{,Var,MD,,,$H,,,$yp,,,_Z6,:,Float,;,},Class,_5,:,__N6_,{,Val,$Y7,,,$5de_O,:,Array,[,Boolean,,,1,],;,_L,(,),{,},$5,(,_,,,st,,,c,:,String,),{,},},<EOF>''',101))

    def test_3853(self):
        self.assertTrue(TestLexer.test('''Class _{}Class _:o_{Val $4,$m_,T99,_0_:Array [Array [Array [Array [String ,0133],1_066],0xB_4_E],78];$q__(){} }Class _:_0k1_Q3{$_9SO_k_(){} }''','''Class,_,{,},Class,_,:,o_,{,Val,$4,,,$m_,,,T99,,,_0_,:,Array,[,Array,[,Array,[,Array,[,String,,,0133,],,,1066,],,,0xB4E,],,,78,],;,$q__,(,),{,},},Class,_,:,_0k1_Q3,{,$_9SO_k_,(,),{,},},<EOF>''',101))

    def test_3854(self):
        self.assertTrue(TestLexer.test('''Class A{Destructor (){ {Var Cp,B:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Boolean ,0b1001001],044],0b1001001],0x3D],24],0x3D],24],044],0x6_A9_D],0X36];} }}''','''Class,A,{,Destructor,(,),{,{,Var,Cp,,,B,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0b1001001,],,,044,],,,0b1001001,],,,0x3D,],,,24,],,,0x3D,],,,24,],,,044,],,,0x6A9D,],,,0X36,],;,},},},<EOF>''',101))

    def test_3855(self):
        self.assertTrue(TestLexer.test('''Class __:u49_{}Class _8_{Var $_T9:Array [Array [Array [Boolean ,0xD],0XD],05];}Class _B{}Class Ft:_X9{}Class __r{}''','''Class,__,:,u49_,{,},Class,_8_,{,Var,$_T9,:,Array,[,Array,[,Array,[,Boolean,,,0xD,],,,0XD,],,,05,],;,},Class,_B,{,},Class,Ft,:,_X9,{,},Class,__r,{,},<EOF>''',101))

    def test_3856(self):
        self.assertTrue(TestLexer.test('''Class X5:X{$c(_:Array [Array [Int ,0b111_11],1];_Fm_6:Int ;__,_5_,_:Int ;G,_S3B8:String ;S_,A:Array [Float ,0X29];J:Int ){} }Class _:_9{$_(){} }Class W:L_{}Class m_:_f3{$_(v:Array [Array [Array [Array [Int ,0b110110],9],0b1],45];uf:_Q;uM_,_:Array [Int ,45];A:Boolean ){}Val MZ4,Q:_1;}''','''Class,X5,:,X,{,$c,(,_,:,Array,[,Array,[,Int,,,0b11111,],,,1,],;,_Fm_6,:,Int,;,__,,,_5_,,,_,:,Int,;,G,,,_S3B8,:,String,;,S_,,,A,:,Array,[,Float,,,0X29,],;,J,:,Int,),{,},},Class,_,:,_9,{,$_,(,),{,},},Class,W,:,L_,{,},Class,m_,:,_f3,{,$_,(,v,:,Array,[,Array,[,Array,[,Array,[,Int,,,0b110110,],,,9,],,,0b1,],,,45,],;,uf,:,_Q,;,uM_,,,_,:,Array,[,Int,,,45,],;,A,:,Boolean,),{,},Val,MZ4,,,Q,:,_1,;,},<EOF>''',101))

    def test_3857(self):
        self.assertTrue(TestLexer.test('''Class ____{Constructor (){}Val L_,M,MO,___q,$_h__:Array [Array [Array [Array [Float ,0b10_0],0136],0x6],83_4_97_1];}''','''Class,____,{,Constructor,(,),{,},Val,L_,,,M,,,MO,,,___q,,,$_h__,:,Array,[,Array,[,Array,[,Array,[,Float,,,0b100,],,,0136,],,,0x6,],,,834971,],;,},<EOF>''',101))

    def test_3858(self):
        self.assertTrue(TestLexer.test('''Class _z_{Constructor (){ {{} }} }Class _:_GX{Constructor (_R7,p1:Array [String ,0X6]){ {} }Var $_U6r_,T,I5_N,$e:m8_;}Class k6_6__:__f{}''','''Class,_z_,{,Constructor,(,),{,{,{,},},},},Class,_,:,_GX,{,Constructor,(,_R7,,,p1,:,Array,[,String,,,0X6,],),{,{,},},Var,$_U6r_,,,T,,,I5_N,,,$e,:,m8_,;,},Class,k6_6__,:,__f,{,},<EOF>''',101))

    def test_3859(self):
        self.assertTrue(TestLexer.test('''Class Bm_{g(_:Boolean ;k,J_9,_:String ;_,_,__0:Array [String ,74];x4Z,_B:_q;S8:Array [Array [Float ,0b111],05]){} }''','''Class,Bm_,{,g,(,_,:,Boolean,;,k,,,J_9,,,_,:,String,;,_,,,_,,,__0,:,Array,[,String,,,74,],;,x4Z,,,_B,:,_q,;,S8,:,Array,[,Array,[,Float,,,0b111,],,,05,],),{,},},<EOF>''',101))

    def test_3860(self):
        self.assertTrue(TestLexer.test('''Class _3{Constructor (l873,uk:_0w_;X3O_,G565:Int ;V0G4Y:Array [Array [Array [String ,0X1D],0110],0B1011111]){}Var $_7_,$h,m:Array [Boolean ,065_2];_k3(_,_:Array [Float ,0x25]){}Constructor (_:_;l1:a){} }Class K9U:__{$5u_P_(_:o;K,_,K_4,r,_:Boolean ;c,t:Array [Int ,59]){} }Class _V9uV:_{}''','''Class,_3,{,Constructor,(,l873,,,uk,:,_0w_,;,X3O_,,,G565,:,Int,;,V0G4Y,:,Array,[,Array,[,Array,[,String,,,0X1D,],,,0110,],,,0B1011111,],),{,},Var,$_7_,,,$h,,,m,:,Array,[,Boolean,,,0652,],;,_k3,(,_,,,_,:,Array,[,Float,,,0x25,],),{,},Constructor,(,_,:,_,;,l1,:,a,),{,},},Class,K9U,:,__,{,$5u_P_,(,_,:,o,;,K,,,_,,,K_4,,,r,,,_,:,Boolean,;,c,,,t,:,Array,[,Int,,,59,],),{,},},Class,_V9uV,:,_,{,},<EOF>''',101))

    def test_3861(self):
        self.assertTrue(TestLexer.test('''Class o{Destructor (){}Constructor (k3:Array [Array [String ,0B1],0b1];R:Array [Array [Array [Array [Int ,0x8],0X3],1],77_1]){} }''','''Class,o,{,Destructor,(,),{,},Constructor,(,k3,:,Array,[,Array,[,String,,,0B1,],,,0b1,],;,R,:,Array,[,Array,[,Array,[,Array,[,Int,,,0x8,],,,0X3,],,,1,],,,771,],),{,},},<EOF>''',101))

    def test_3862(self):
        self.assertTrue(TestLexer.test('''Class O:__nKR{}Class I{Val B_:Array [Array [String ,84],0XD];Val $_:L4;Var $_S,$9m,$E:Array [Array [Array [Array [Array [String ,0x4],84],0x6],063],0XD];$45(){} }''','''Class,O,:,__nKR,{,},Class,I,{,Val,B_,:,Array,[,Array,[,String,,,84,],,,0XD,],;,Val,$_,:,L4,;,Var,$_S,,,$9m,,,$E,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x4,],,,84,],,,0x6,],,,063,],,,0XD,],;,$45,(,),{,},},<EOF>''',101))

    def test_3863(self):
        self.assertTrue(TestLexer.test('''Class K9:_oP{Var $3,__:Int ;Var $4,_,$401,$_,_,$0m:Boolean ;Val _:Array [Array [Array [String ,0X1_D],0X32],0B1];Constructor (){}_1_(){}Constructor (){} }''','''Class,K9,:,_oP,{,Var,$3,,,__,:,Int,;,Var,$4,,,_,,,$401,,,$_,,,_,,,$0m,:,Boolean,;,Val,_,:,Array,[,Array,[,Array,[,String,,,0X1D,],,,0X32,],,,0B1,],;,Constructor,(,),{,},_1_,(,),{,},Constructor,(,),{,},},<EOF>''',101))

    def test_3864(self):
        self.assertTrue(TestLexer.test('''Class C_{Val $_,_,$_,$3:Boolean ;Destructor (){}Constructor (){} }Class h59:__{Constructor (_,k__,l:Float ){}Q(__,F,e:Int ;___5p_Y:Array [Array [Float ,0B1001101],4];F:_;_:String ;A05:Y1_;A,v:Int ;_A,_6q3i3:Array [Array [Int ,0X8],0B1]){} }''','''Class,C_,{,Val,$_,,,_,,,$_,,,$3,:,Boolean,;,Destructor,(,),{,},Constructor,(,),{,},},Class,h59,:,__,{,Constructor,(,_,,,k__,,,l,:,Float,),{,},Q,(,__,,,F,,,e,:,Int,;,___5p_Y,:,Array,[,Array,[,Float,,,0B1001101,],,,4,],;,F,:,_,;,_,:,String,;,A05,:,Y1_,;,A,,,v,:,Int,;,_A,,,_6q3i3,:,Array,[,Array,[,Int,,,0X8,],,,0B1,],),{,},},<EOF>''',101))

    def test_3865(self):
        self.assertTrue(TestLexer.test('''Class M:i_{}Class __{Constructor (_:Array [String ,0132];_r,b_:_90){Var _:Array [Int ,50];}Destructor (){} }Class l{$_(C_:u){}Val X:Array [Array [Float ,0132],0X50];}''','''Class,M,:,i_,{,},Class,__,{,Constructor,(,_,:,Array,[,String,,,0132,],;,_r,,,b_,:,_90,),{,Var,_,:,Array,[,Int,,,50,],;,},Destructor,(,),{,},},Class,l,{,$_,(,C_,:,u,),{,},Val,X,:,Array,[,Array,[,Float,,,0132,],,,0X50,],;,},<EOF>''',101))

    def test_3866(self):
        self.assertTrue(TestLexer.test('''Class f6:_j_{Destructor (){}Var $_,$8,w__A_19,$0,$_:w1_55_r6D93Cg_2A;$R_1(U:String ){Continue ;}Constructor (){}Destructor (){Val x,_,_5:_;} }''','''Class,f6,:,_j_,{,Destructor,(,),{,},Var,$_,,,$8,,,w__A_19,,,$0,,,$_,:,w1_55_r6D93Cg_2A,;,$R_1,(,U,:,String,),{,Continue,;,},Constructor,(,),{,},Destructor,(,),{,Val,x,,,_,,,_5,:,_,;,},},<EOF>''',101))

    def test_3867(self):
        self.assertTrue(TestLexer.test('''Class _l_:wX1_{Var _,$p,$__,J,$_G8_:Array [Array [Array [Array [String ,0x4],0120],6_0_5],99];}Class _x__:_{x(_:Array [Array [Array [Float ,99],0b1000011],0X47];__,d3:Array [Int ,0120];_,M47_,S,_4:Int ;m_K5_A:Array [Int ,94];Z:String ;St_2_,_,s3,__7_O,_:Array [Int ,0X47]){}Var $4_6,$5,$U,$u:String ;}''','''Class,_l_,:,wX1_,{,Var,_,,,$p,,,$__,,,J,,,$_G8_,:,Array,[,Array,[,Array,[,Array,[,String,,,0x4,],,,0120,],,,605,],,,99,],;,},Class,_x__,:,_,{,x,(,_,:,Array,[,Array,[,Array,[,Float,,,99,],,,0b1000011,],,,0X47,],;,__,,,d3,:,Array,[,Int,,,0120,],;,_,,,M47_,,,S,,,_4,:,Int,;,m_K5_A,:,Array,[,Int,,,94,],;,Z,:,String,;,St_2_,,,_,,,s3,,,__7_O,,,_,:,Array,[,Int,,,0X47,],),{,},Var,$4_6,,,$5,,,$U,,,$u,:,String,;,},<EOF>''',101))

    def test_3868(self):
        self.assertTrue(TestLexer.test('''Class _{$v(){Val _,J:Array [Array [Array [Array [Array [Array [Array [Boolean ,042],07],05],042],0B1_1],042],042];}Var $l:Array [Int ,0b1];}Class __:_{}''','''Class,_,{,$v,(,),{,Val,_,,,J,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,042,],,,07,],,,05,],,,042,],,,0B11,],,,042,],,,042,],;,},Var,$l,:,Array,[,Int,,,0b1,],;,},Class,__,:,_,{,},<EOF>''',101))

    def test_3869(self):
        self.assertTrue(TestLexer.test('''Class L{}Class _x_2:__{}Class _:_{}Class _:_5{}Class mp1r:_4{Constructor (){} }Class __:_{Val _:y;Val _h4:V;Constructor (){} }Class f__:__{}''','''Class,L,{,},Class,_x_2,:,__,{,},Class,_,:,_,{,},Class,_,:,_5,{,},Class,mp1r,:,_4,{,Constructor,(,),{,},},Class,__,:,_,{,Val,_,:,y,;,Val,_h4,:,V,;,Constructor,(,),{,},},Class,f__,:,__,{,},<EOF>''',101))

    def test_3870(self):
        self.assertTrue(TestLexer.test('''Class g{Val y,$_,$_R__5z:Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [Array [String ,0x1B],2],05],0b1],93],0B1011000],3_0],30_7],0b1],067],2];Var $_g_B__,$8_,X_:Array [Boolean ,0B1];}''','''Class,g,{,Val,y,,,$_,,,$_R__5z,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x1B,],,,2,],,,05,],,,0b1,],,,93,],,,0B1011000,],,,30,],,,307,],,,0b1,],,,067,],,,2,],;,Var,$_g_B__,,,$8_,,,X_,:,Array,[,Boolean,,,0B1,],;,},<EOF>''',101))

    def test_3871(self):
        self.assertTrue(TestLexer.test('''Class K:___0{Val _s_7,_,$3_,$S_,$D_:Array [Float ,0x1BF];Constructor (_:Array [Array [Float ,05_5_3_1],06];__:X_g_g_P_;_7,_,z_,hO:_T;_,NB_:e8;__:Array [Array [String ,68],053]){ {} }}''','''Class,K,:,___0,{,Val,_s_7,,,_,,,$3_,,,$S_,,,$D_,:,Array,[,Float,,,0x1BF,],;,Constructor,(,_,:,Array,[,Array,[,Float,,,05531,],,,06,],;,__,:,X_g_g_P_,;,_7,,,_,,,z_,,,hO,:,_T,;,_,,,NB_,:,e8,;,__,:,Array,[,Array,[,String,,,68,],,,053,],),{,{,},},},<EOF>''',101))

    def test_3872(self):
        self.assertTrue(TestLexer.test('''Class __S32:___{M(){}Var $7,s:_;}Class ___C:_{}Class _2y4e_{}Class x_:V{Var $p1t,$__:Array [Boolean ,0B1010011];}Class _:_{Constructor (){}Val $Q,$P_9:Boolean ;}''','''Class,__S32,:,___,{,M,(,),{,},Var,$7,,,s,:,_,;,},Class,___C,:,_,{,},Class,_2y4e_,{,},Class,x_,:,V,{,Var,$p1t,,,$__,:,Array,[,Boolean,,,0B1010011,],;,},Class,_,:,_,{,Constructor,(,),{,},Val,$Q,,,$P_9,:,Boolean,;,},<EOF>''',101))

    def test_3873(self):
        self.assertTrue(TestLexer.test('''Class D{Var _,$R:Array [Array [Array [Array [Int ,96],85],0b11],0B1001011];}Class _{Val $Z,_,$_:_;Constructor (e,s:_2){} }''','''Class,D,{,Var,_,,,$R,:,Array,[,Array,[,Array,[,Array,[,Int,,,96,],,,85,],,,0b11,],,,0B1001011,],;,},Class,_,{,Val,$Z,,,_,,,$_,:,_,;,Constructor,(,e,,,s,:,_2,),{,},},<EOF>''',101))

    def test_3874(self):
        self.assertTrue(TestLexer.test('''Class P6_{}Class _3_{Destructor (){}$0(KfB:Array [Array [Array [String ,0X7],0xB],03];J,Y9,o5,_,__,I:Array [Array [Array [Float ,02],0x55],5]){} }Class _:_{}Class _{}''','''Class,P6_,{,},Class,_3_,{,Destructor,(,),{,},$0,(,KfB,:,Array,[,Array,[,Array,[,String,,,0X7,],,,0xB,],,,03,],;,J,,,Y9,,,o5,,,_,,,__,,,I,:,Array,[,Array,[,Array,[,Float,,,02,],,,0x55,],,,5,],),{,},},Class,_,:,_,{,},Class,_,{,},<EOF>''',101))

    def test_3875(self):
        self.assertTrue(TestLexer.test('''Class M5:L{Constructor (_,o8,lvej,p:Array [Boolean ,0X50]){}Constructor (y7,i:_Y12_;q_8,_,a,_:Boolean ;T:String ){}Destructor (){} }''','''Class,M5,:,L,{,Constructor,(,_,,,o8,,,lvej,,,p,:,Array,[,Boolean,,,0X50,],),{,},Constructor,(,y7,,,i,:,_Y12_,;,q_8,,,_,,,a,,,_,:,Boolean,;,T,:,String,),{,},Destructor,(,),{,},},<EOF>''',101))

    def test_3876(self):
        self.assertTrue(TestLexer.test('''Class _E:ZT6____{Constructor (){} }Class __q_5{}Class _Gq_2{Var $2,$z,_g,__5f:__;Var _1k_:k;}Class e:_{Var _:Array [Int ,0B1];}''','''Class,_E,:,ZT6____,{,Constructor,(,),{,},},Class,__q_5,{,},Class,_Gq_2,{,Var,$2,,,$z,,,_g,,,__5f,:,__,;,Var,_1k_,:,k,;,},Class,e,:,_,{,Var,_,:,Array,[,Int,,,0B1,],;,},<EOF>''',101))

    def test_3877(self):
        self.assertTrue(TestLexer.test('''Class S6:_{Val $_Y:Array [Array [Array [Array [Array [Float ,0B1011000],9_2_82_6_0],0x13],0XA],85];Val B4,__a89,$_a,$Tg:Array [Array [Float ,0X3B],9];}''','''Class,S6,:,_,{,Val,$_Y,:,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,0B1011000,],,,928260,],,,0x13,],,,0XA,],,,85,],;,Val,B4,,,__a89,,,$_a,,,$Tg,:,Array,[,Array,[,Float,,,0X3B,],,,9,],;,},<EOF>''',101))

    def test_3878(self):
        self.assertTrue(TestLexer.test('''Class s:__20_{$t(_,i9:Int ){}Constructor (){Var __O,d:Array [Float ,0X2F];z::$50__();Return ;} }Class _6{}Class _z:r{}''','''Class,s,:,__20_,{,$t,(,_,,,i9,:,Int,),{,},Constructor,(,),{,Var,__O,,,d,:,Array,[,Float,,,0X2F,],;,z,::,$50__,(,),;,Return,;,},},Class,_6,{,},Class,_z,:,r,{,},<EOF>''',101))

    def test_3879(self):
        self.assertTrue(TestLexer.test('''Class p47{Constructor (Z,___:Array [Array [Array [Int ,61],02],61];_q:Int ){}Var J:Y;Val $k_,$_3S,_D5,_,$F11,$b:Array [String ,0x77_6];}Class W:__b_{}Class _{}''','''Class,p47,{,Constructor,(,Z,,,___,:,Array,[,Array,[,Array,[,Int,,,61,],,,02,],,,61,],;,_q,:,Int,),{,},Var,J,:,Y,;,Val,$k_,,,$_3S,,,_D5,,,_,,,$F11,,,$b,:,Array,[,String,,,0x776,],;,},Class,W,:,__b_,{,},Class,_,{,},<EOF>''',101))

    def test_3880(self):
        self.assertTrue(TestLexer.test('''Class _58{Destructor (){}$556_(C,_,_,_D:Array [Array [Array [Array [Boolean ,58],0xB],58],0B111];_,s6:Array [Float ,0X2A]){New _().J();} }''','''Class,_58,{,Destructor,(,),{,},$556_,(,C,,,_,,,_,,,_D,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,58,],,,0xB,],,,58,],,,0B111,],;,_,,,s6,:,Array,[,Float,,,0X2A,],),{,New,_,(,),.,J,(,),;,},},<EOF>''',101))

    def test_3881(self):
        self.assertTrue(TestLexer.test('''Class V{Constructor (_,s_:Array [Array [String ,0b11],0x22];_v:Array [Array [Int ,070],0X1F];t,j,_:Array [String ,99]){Break ;}$6qC(){} }''','''Class,V,{,Constructor,(,_,,,s_,:,Array,[,Array,[,String,,,0b11,],,,0x22,],;,_v,:,Array,[,Array,[,Int,,,070,],,,0X1F,],;,t,,,j,,,_,:,Array,[,String,,,99,],),{,Break,;,},$6qC,(,),{,},},<EOF>''',101))

    def test_3882(self):
        self.assertTrue(TestLexer.test('''Class I5:_Q10{_(_:_N;Z_,P:Array [Array [Float ,0x19],052];_,_G,M__:String ;__h:Array [Array [String ,0x19],052];J898:Int ;_I:w;gT:_;nF:String ;_,h24:String ){} }''','''Class,I5,:,_Q10,{,_,(,_,:,_N,;,Z_,,,P,:,Array,[,Array,[,Float,,,0x19,],,,052,],;,_,,,_G,,,M__,:,String,;,__h,:,Array,[,Array,[,String,,,0x19,],,,052,],;,J898,:,Int,;,_I,:,w,;,gT,:,_,;,nF,:,String,;,_,,,h24,:,String,),{,},},<EOF>''',101))

    def test_3883(self):
        self.assertTrue(TestLexer.test('''Class _{}Class g4{Constructor (_6_1,S:Float ;L_M7,F7,_,_,_:Array [Array [Array [Array [Boolean ,0X5A],0X5A],021],021]){Continue ;} }''','''Class,_,{,},Class,g4,{,Constructor,(,_6_1,,,S,:,Float,;,L_M7,,,F7,,,_,,,_,,,_,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X5A,],,,0X5A,],,,021,],,,021,],),{,Continue,;,},},<EOF>''',101))

    def test_3884(self):
        self.assertTrue(TestLexer.test('''Class q{Val $0:Array [Array [Array [Array [Array [Array [Float ,027],7],0x58],027],0B1_0_1_0_0],0b1];}Class _zia1:_{}''','''Class,q,{,Val,$0,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,027,],,,7,],,,0x58,],,,027,],,,0B10100,],,,0b1,],;,},Class,_zia1,:,_,{,},<EOF>''',101))

    def test_3885(self):
        self.assertTrue(TestLexer.test('''Class gp2_P__:P{Constructor (Mp,_6fL:_24s){}Constructor (C,_9Gid,nd:Array [String ,052]){}Constructor (_L:Boolean ;t:Array [Array [String ,02],3_66_1]){} }''','''Class,gp2_P__,:,P,{,Constructor,(,Mp,,,_6fL,:,_24s,),{,},Constructor,(,C,,,_9Gid,,,nd,:,Array,[,String,,,052,],),{,},Constructor,(,_L,:,Boolean,;,t,:,Array,[,Array,[,String,,,02,],,,3661,],),{,},},<EOF>''',101))

    def test_3886(self):
        self.assertTrue(TestLexer.test('''Class _0k1{$Gf(W,_,_46:String ;b:Boolean ;_875__2z,_,M_u_,a87_3,C,_48M17:M;_Q,_:Float ;db,__,_O_:Float ){} }''','''Class,_0k1,{,$Gf,(,W,,,_,,,_46,:,String,;,b,:,Boolean,;,_875__2z,,,_,,,M_u_,,,a87_3,,,C,,,_48M17,:,M,;,_Q,,,_,:,Float,;,db,,,__,,,_O_,:,Float,),{,},},<EOF>''',101))

    def test_3887(self):
        self.assertTrue(TestLexer.test('''Class __{Val $f_L_:Array [Int ,0x41];}Class G{Val _,$3:Array [Int ,0x5];}Class I:D{Val b__G_,mM:_;}Class _:_40O{}''','''Class,__,{,Val,$f_L_,:,Array,[,Int,,,0x41,],;,},Class,G,{,Val,_,,,$3,:,Array,[,Int,,,0x5,],;,},Class,I,:,D,{,Val,b__G_,,,mM,:,_,;,},Class,_,:,_40O,{,},<EOF>''',101))

    def test_3888(self):
        self.assertTrue(TestLexer.test('''Class _:__P{Val $e_,$E:Array [Array [Boolean ,39],0X9_5A];Constructor (D:Array [String ,0b1_01_0_11]){Continue ;} }''','''Class,_,:,__P,{,Val,$e_,,,$E,:,Array,[,Array,[,Boolean,,,39,],,,0X95A,],;,Constructor,(,D,:,Array,[,String,,,0b101011,],),{,Continue,;,},},<EOF>''',101))

    def test_3889(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (_,_,W58__i_:Int ;__,r4_,_10:Array [String ,0123]){Break ;Break ;}$830_(W___,_:Boolean ){} }''','''Class,_,{,Constructor,(,_,,,_,,,W58__i_,:,Int,;,__,,,r4_,,,_10,:,Array,[,String,,,0123,],),{,Break,;,Break,;,},$830_,(,W___,,,_,:,Boolean,),{,},},<EOF>''',101))

    def test_3890(self):
        self.assertTrue(TestLexer.test('''Class _:_{}Class _4{Val $R:Int ;Val $2,$v,aT_:Array [Array [Array [Boolean ,57],0b1],0b1000];Destructor (){Continue ;} }''','''Class,_,:,_,{,},Class,_4,{,Val,$R,:,Int,;,Val,$2,,,$v,,,aT_,:,Array,[,Array,[,Array,[,Boolean,,,57,],,,0b1,],,,0b1000,],;,Destructor,(,),{,Continue,;,},},<EOF>''',101))

    def test_3891(self):
        self.assertTrue(TestLexer.test('''Class Z0_:s4_74{$_(SZ:Array [String ,0x2_36E];_,v6_BoP:Array [Int ,0b110101]){Var _4,___61_,__k,d:Array [Int ,5];} }''','''Class,Z0_,:,s4_74,{,$_,(,SZ,:,Array,[,String,,,0x236E,],;,_,,,v6_BoP,:,Array,[,Int,,,0b110101,],),{,Var,_4,,,___61_,,,__k,,,d,:,Array,[,Int,,,5,],;,},},<EOF>''',101))

    def test_3892(self):
        self.assertTrue(TestLexer.test('''Class __2F26{}Class oh:_{}Class P:_{Destructor (){Continue ;}Var O,z,v4:Boolean ;Destructor (){Break ;} }Class _{Var H:Boolean ;}''','''Class,__2F26,{,},Class,oh,:,_,{,},Class,P,:,_,{,Destructor,(,),{,Continue,;,},Var,O,,,z,,,v4,:,Boolean,;,Destructor,(,),{,Break,;,},},Class,_,{,Var,H,:,Boolean,;,},<EOF>''',101))

    def test_3893(self):
        self.assertTrue(TestLexer.test('''Class w{$s(C:Boolean ;__4M,T,Xo__1,_4:String ;__x1:Array [Boolean ,0b11];DV_,_:Float ;_,_k,Q6_:Array [Boolean ,0134];_:Array [String ,0X5E];_T_,_,N:Array [Int ,0B1011010]){ {} }}Class _{}Class _:_{}''','''Class,w,{,$s,(,C,:,Boolean,;,__4M,,,T,,,Xo__1,,,_4,:,String,;,__x1,:,Array,[,Boolean,,,0b11,],;,DV_,,,_,:,Float,;,_,,,_k,,,Q6_,:,Array,[,Boolean,,,0134,],;,_,:,Array,[,String,,,0X5E,],;,_T_,,,_,,,N,:,Array,[,Int,,,0B1011010,],),{,{,},},},Class,_,{,},Class,_,:,_,{,},<EOF>''',101))

    def test_3894(self):
        self.assertTrue(TestLexer.test('''Class _l:A_{Destructor (){}Constructor (p:D_;__:Array [Array [Array [Boolean ,0b1100100],0X3B],0X58_C_8]){F::$N();}_3T_(VnQ7,hG:Float ;e8,__9__,O,M:N){} }''','''Class,_l,:,A_,{,Destructor,(,),{,},Constructor,(,p,:,D_,;,__,:,Array,[,Array,[,Array,[,Boolean,,,0b1100100,],,,0X3B,],,,0X58C8,],),{,F,::,$N,(,),;,},_3T_,(,VnQ7,,,hG,:,Float,;,e8,,,__9__,,,O,,,M,:,N,),{,},},<EOF>''',101))

    def test_3895(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (a,_:FI;A:Float ;y:Float ){}Constructor (_,o:_;_:__3){Break ;} }Class _6:_yY_l{}Class P_{}''','''Class,_,{,Constructor,(,a,,,_,:,FI,;,A,:,Float,;,y,:,Float,),{,},Constructor,(,_,,,o,:,_,;,_,:,__3,),{,Break,;,},},Class,_6,:,_yY_l,{,},Class,P_,{,},<EOF>''',101))

    def test_3896(self):
        self.assertTrue(TestLexer.test('''Class Z3_6_3_:f_{}Class V{$X(){} }Class A:_{Constructor (uz_623o5__:Array [Array [Int ,02],6];N_d_,__:Int ;_W,a:Array [Boolean ,0b111010];_,_:Array [Float ,6_6]){}P_z(_Z,_,_4y,So,_bk7__Nho_:String ){} }''','''Class,Z3_6_3_,:,f_,{,},Class,V,{,$X,(,),{,},},Class,A,:,_,{,Constructor,(,uz_623o5__,:,Array,[,Array,[,Int,,,02,],,,6,],;,N_d_,,,__,:,Int,;,_W,,,a,:,Array,[,Boolean,,,0b111010,],;,_,,,_,:,Array,[,Float,,,66,],),{,},P_z,(,_Z,,,_,,,_4y,,,So,,,_bk7__Nho_,:,String,),{,},},<EOF>''',101))

    def test_3897(self):
        self.assertTrue(TestLexer.test('''Class ___4R3:_{$76(h,u:i;F:Array [Array [Array [String ,0X1D_6],067],0x7]){_::$3();}Val $nm_5,FhM2_2w,__:p__;}''','''Class,___4R3,:,_,{,$76,(,h,,,u,:,i,;,F,:,Array,[,Array,[,Array,[,String,,,0X1D6,],,,067,],,,0x7,],),{,_,::,$3,(,),;,},Val,$nm_5,,,FhM2_2w,,,__,:,p__,;,},<EOF>''',101))

    def test_3898(self):
        self.assertTrue(TestLexer.test('''Class _:__{}Class Vi:_{$6(_6,M,E,G,_9x,_A,B_7__oB5:Array [Array [Boolean ,0X1_2],0X4]){} }Class _{}Class _4__8{Destructor (){} }''','''Class,_,:,__,{,},Class,Vi,:,_,{,$6,(,_6,,,M,,,E,,,G,,,_9x,,,_A,,,B_7__oB5,:,Array,[,Array,[,Boolean,,,0X12,],,,0X4,],),{,},},Class,_,{,},Class,_4__8,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3899(self):
        self.assertTrue(TestLexer.test('''Class r4_{$3_10n_(){} }Class w1{Var $_4G:Int ;$H(){} }Class _3{Val M,W,$18:Array [Array [Array [Array [Int ,025],8],99],99];}Class r:D_{}''','''Class,r4_,{,$3_10n_,(,),{,},},Class,w1,{,Var,$_4G,:,Int,;,$H,(,),{,},},Class,_3,{,Val,M,,,W,,,$18,:,Array,[,Array,[,Array,[,Array,[,Int,,,025,],,,8,],,,99,],,,99,],;,},Class,r,:,D_,{,},<EOF>''',101))

    def test_3900(self):
        self.assertTrue(TestLexer.test('''Class X_8n6R{Destructor (){}Constructor (_:Array [Array [Array [Float ,2],0b11010],0x2];_:Float ;Mo,B_:Array [Boolean ,0x1]){} }''','''Class,X_8n6R,{,Destructor,(,),{,},Constructor,(,_,:,Array,[,Array,[,Array,[,Float,,,2,],,,0b11010,],,,0x2,],;,_,:,Float,;,Mo,,,B_,:,Array,[,Boolean,,,0x1,],),{,},},<EOF>''',101))

    def test_3901(self):
        self.assertTrue(TestLexer.test('''Class k1_r{Constructor (_,I9F_,T_,x_,v_,J,k_84,l,_:_0;_Nd_b:Float ;_:Array [Array [Int ,0X9],072]){}Constructor (){} }Class __3:_{}Class S{Constructor (y_:_;_,TJO5D_:Array [Int ,0X9];M,_:Array [Array [Float ,05],0X9]){} }''','''Class,k1_r,{,Constructor,(,_,,,I9F_,,,T_,,,x_,,,v_,,,J,,,k_84,,,l,,,_,:,_0,;,_Nd_b,:,Float,;,_,:,Array,[,Array,[,Int,,,0X9,],,,072,],),{,},Constructor,(,),{,},},Class,__3,:,_,{,},Class,S,{,Constructor,(,y_,:,_,;,_,,,TJO5D_,:,Array,[,Int,,,0X9,],;,M,,,_,:,Array,[,Array,[,Float,,,05,],,,0X9,],),{,},},<EOF>''',101))

    def test_3902(self):
        self.assertTrue(TestLexer.test('''Class _20yw4CPH:C{}Class f53_{Var y,V,W3t,$V_5:m;}Class B{}Class eg_:_{Val $__:Array [Array [Boolean ,0B1011],016];}''','''Class,_20yw4CPH,:,C,{,},Class,f53_,{,Var,y,,,V,,,W3t,,,$V_5,:,m,;,},Class,B,{,},Class,eg_,:,_,{,Val,$__,:,Array,[,Array,[,Boolean,,,0B1011,],,,016,],;,},<EOF>''',101))

    def test_3903(self):
        self.assertTrue(TestLexer.test('''Class _:_041{Constructor (G,U7_:_;_6_G4X:Array [Boolean ,0b1_1];oD,_:_;__9I:String ){}Destructor (){} }Class __:q{}''','''Class,_,:,_041,{,Constructor,(,G,,,U7_,:,_,;,_6_G4X,:,Array,[,Boolean,,,0b11,],;,oD,,,_,:,_,;,__9I,:,String,),{,},Destructor,(,),{,},},Class,__,:,q,{,},<EOF>''',101))

    def test_3904(self):
        self.assertTrue(TestLexer.test('''Class G:__{Constructor (){} }Class _:__{Val $67_,$69,n_:Array [Array [Array [Array [Int ,0B11],53],0x44],0b1];Var $9:Float ;}''','''Class,G,:,__,{,Constructor,(,),{,},},Class,_,:,__,{,Val,$67_,,,$69,,,n_,:,Array,[,Array,[,Array,[,Array,[,Int,,,0B11,],,,53,],,,0x44,],,,0b1,],;,Var,$9,:,Float,;,},<EOF>''',101))

    def test_3905(self):
        self.assertTrue(TestLexer.test('''Class fu:__{$7(_:Float ;_,q:Int ;_L_,y8,K5,_,_9__:Float ;_w4h:Int ;_4,H_,_tfdA_8:N){}Destructor (){} }Class m:_{}''','''Class,fu,:,__,{,$7,(,_,:,Float,;,_,,,q,:,Int,;,_L_,,,y8,,,K5,,,_,,,_9__,:,Float,;,_w4h,:,Int,;,_4,,,H_,,,_tfdA_8,:,N,),{,},Destructor,(,),{,},},Class,m,:,_,{,},<EOF>''',101))

    def test_3906(self):
        self.assertTrue(TestLexer.test('''Class g:h_1{Var $3n,$7:Int ;_(_,p__g,x:q;K,_3:Array [Boolean ,057];Z:Array [Boolean ,02_16_3]){Return ;}Destructor (){} }''','''Class,g,:,h_1,{,Var,$3n,,,$7,:,Int,;,_,(,_,,,p__g,,,x,:,q,;,K,,,_3,:,Array,[,Boolean,,,057,],;,Z,:,Array,[,Boolean,,,02163,],),{,Return,;,},Destructor,(,),{,},},<EOF>''',101))

    def test_3907(self):
        self.assertTrue(TestLexer.test('''Class C:_4a{}Class gM:_8{Q2(){}Constructor (){}i(j,_:Array [Boolean ,0B101]){ {} }}Class b:_{}Class _{Val $k5:S;Destructor (){} }Class iB_{}Class w_:oV{}''','''Class,C,:,_4a,{,},Class,gM,:,_8,{,Q2,(,),{,},Constructor,(,),{,},i,(,j,,,_,:,Array,[,Boolean,,,0B101,],),{,{,},},},Class,b,:,_,{,},Class,_,{,Val,$k5,:,S,;,Destructor,(,),{,},},Class,iB_,{,},Class,w_,:,oV,{,},<EOF>''',101))

    def test_3908(self):
        self.assertTrue(TestLexer.test('''Class _{Constructor (w_2,Q_A,h,_2:Float ;_:Array [Array [String ,0B1],0xC];_:Float ;__:Float ){Return ;Return ;} }''','''Class,_,{,Constructor,(,w_2,,,Q_A,,,h,,,_2,:,Float,;,_,:,Array,[,Array,[,String,,,0B1,],,,0xC,],;,_,:,Float,;,__,:,Float,),{,Return,;,Return,;,},},<EOF>''',101))

    def test_3909(self):
        self.assertTrue(TestLexer.test('''Class _D:____{Val $66,z,$_,$__s1:Array [Float ,48];Var zX5Ku_5,_,$7:Array [Array [Array [Float ,0X52],0X39],0x8];Val u_,$_,$__,$2,_,_:Int ;}Class _:_8{}''','''Class,_D,:,____,{,Val,$66,,,z,,,$_,,,$__s1,:,Array,[,Float,,,48,],;,Var,zX5Ku_5,,,_,,,$7,:,Array,[,Array,[,Array,[,Float,,,0X52,],,,0X39,],,,0x8,],;,Val,u_,,,$_,,,$__,,,$2,,,_,,,_,:,Int,;,},Class,_,:,_8,{,},<EOF>''',101))

    def test_3910(self):
        self.assertTrue(TestLexer.test('''Class __:__WT{}Class P_y_{Destructor (){} }Class A{Val p,$_,$8:Array [Array [Array [String ,0B1001001],0x6_7F_0],03_722];}''','''Class,__,:,__WT,{,},Class,P_y_,{,Destructor,(,),{,},},Class,A,{,Val,p,,,$_,,,$8,:,Array,[,Array,[,Array,[,String,,,0B1001001,],,,0x67F0,],,,03722,],;,},<EOF>''',101))

    def test_3911(self):
        self.assertTrue(TestLexer.test('''Class k8:y{Constructor (_:String ){}Constructor (_:Array [Array [Array [Array [Int ,04],0XD],0x28],79]){} }Class _{N__(_,_p,_da:Float ;_:Array [Array [Array [Array [Array [Boolean ,0X1_6],050],663],18_7],1];_t_9:Array [Array [Array [Array [Array [Array [Float ,79],050],0X50],0X38],1],48];_z,m:Array [Array [Array [Array [Float ,3],0B1_11],0b1_10],79];VJ,N:_;_X:Array [Array [Array [Array [Array [Array [Array [Boolean ,0B1],79],8_1],0b11_1],0X50],060_77_4],0x28];_7_97,_:Y){} }''','''Class,k8,:,y,{,Constructor,(,_,:,String,),{,},Constructor,(,_,:,Array,[,Array,[,Array,[,Array,[,Int,,,04,],,,0XD,],,,0x28,],,,79,],),{,},},Class,_,{,N__,(,_,,,_p,,,_da,:,Float,;,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0X16,],,,050,],,,663,],,,187,],,,1,],;,_t_9,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Float,,,79,],,,050,],,,0X50,],,,0X38,],,,1,],,,48,],;,_z,,,m,:,Array,[,Array,[,Array,[,Array,[,Float,,,3,],,,0B111,],,,0b110,],,,79,],;,VJ,,,N,:,_,;,_X,:,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1,],,,79,],,,81,],,,0b111,],,,0X50,],,,060774,],,,0x28,],;,_7_97,,,_,:,Y,),{,},},<EOF>''',101))

    def test_3912(self):
        self.assertTrue(TestLexer.test('''Class _Z:wM_1{}Class xY:g88_{_W9_G(_p7:Array [Array [Array [Array [Boolean ,0B1111],0x5],0x8_1],0b1_0]){}Var $q5,B_:D_;}Class C_:_0{_(_:Array [String ,79];_,a:Array [Array [Int ,0115],0b1001000];_9:String ;_,__:Array [Array [Array [Boolean ,79],7_1],0b1];G_,S:k){ {} }}Class _:__{Var $L:Float ;Var f_B,_5,$14,_,___:Boolean ;}Class _{}''','''Class,_Z,:,wM_1,{,},Class,xY,:,g88_,{,_W9_G,(,_p7,:,Array,[,Array,[,Array,[,Array,[,Boolean,,,0B1111,],,,0x5,],,,0x81,],,,0b10,],),{,},Var,$q5,,,B_,:,D_,;,},Class,C_,:,_0,{,_,(,_,:,Array,[,String,,,79,],;,_,,,a,:,Array,[,Array,[,Int,,,0115,],,,0b1001000,],;,_9,:,String,;,_,,,__,:,Array,[,Array,[,Array,[,Boolean,,,79,],,,71,],,,0b1,],;,G_,,,S,:,k,),{,{,},},},Class,_,:,__,{,Var,$L,:,Float,;,Var,f_B,,,_5,,,$14,,,_,,,___,:,Boolean,;,},Class,_,{,},<EOF>''',101))

    def test_3913(self):
        self.assertTrue(TestLexer.test('''Class O:S_{$9(L:Z;_2:Int ;P_,_,_d_,Ib,_0i,_9:Boolean ;Y,E,_a48,l,l5:Array [String ,0B1_1]){} }Class M_O_:m1{Var _oV80:Array [Int ,45];}''','''Class,O,:,S_,{,$9,(,L,:,Z,;,_2,:,Int,;,P_,,,_,,,_d_,,,Ib,,,_0i,,,_9,:,Boolean,;,Y,,,E,,,_a48,,,l,,,l5,:,Array,[,String,,,0B11,],),{,},},Class,M_O_,:,m1,{,Var,_oV80,:,Array,[,Int,,,45,],;,},<EOF>''',101))

    def test_3914(self):
        self.assertTrue(TestLexer.test('''Class LpOc_:_{Constructor (c8_,_5,P,_:Array [Float ,073];_,_:Float ;c2,___,_6_:Array [Array [Array [Array [Array [Int ,03_2],01],0x1E7_1_9D7],0b1],744]){} }''','''Class,LpOc_,:,_,{,Constructor,(,c8_,,,_5,,,P,,,_,:,Array,[,Float,,,073,],;,_,,,_,:,Float,;,c2,,,___,,,_6_,:,Array,[,Array,[,Array,[,Array,[,Array,[,Int,,,032,],,,01,],,,0x1E719D7,],,,0b1,],,,744,],),{,},},<EOF>''',101))

    def test_3915(self):
        self.assertTrue(TestLexer.test('''Class _o:m{}Class a:c{Var $2:Array [Float ,73];}Class u:M1{}Class e:_{}Class _t8:_{}Class w{Destructor (){} }Class _:_39{Destructor (){} }''','''Class,_o,:,m,{,},Class,a,:,c,{,Var,$2,:,Array,[,Float,,,73,],;,},Class,u,:,M1,{,},Class,e,:,_,{,},Class,_t8,:,_,{,},Class,w,{,Destructor,(,),{,},},Class,_,:,_39,{,Destructor,(,),{,},},<EOF>''',101))

    def test_3916(self):
        self.assertTrue(TestLexer.test('''Class _J_9{Var NEg_,_:Float ;Val _:Array [Array [Array [Array [Array [String ,0x3D_0_2_F_B_F95],70],0x9],0B1_1_1],076];}Class A__A{}''','''Class,_J_9,{,Var,NEg_,,,_,:,Float,;,Val,_,:,Array,[,Array,[,Array,[,Array,[,Array,[,String,,,0x3D02FBF95,],,,70,],,,0x9,],,,0B111,],,,076,],;,},Class,A__A,{,},<EOF>''',101))


